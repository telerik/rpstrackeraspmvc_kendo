@model RPS.Web.Models.ViewModels.PtDashboardVm



<div class="dashboard">

    <div class="d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-3">

        <div class="col-md order-md-first text-center text-md-left">
            <h2>
                <span class="small text-uppercase text-muted d-block">Statistics</span>
                @if (Model.DateStart.HasValue && Model.DateEnd.HasValue)
                {
                    <span id="spanFilteredDateRange">
                        @Model.DateStart.Value.ToString("MMM d, yyyy") - @Model.DateEnd.Value.ToString("MMM d, yyyy")
                    </span>
                }

            </h2>
        </div>

        <div class="btn-toolbar mb-2 mb-md-0">

            <div class="btn-group mr-2">

                @(Html.Kendo().ComboBoxFor(model => model.SelectedAssigneeId)
                                            .BindTo(Model.Assignees)
                                            .DataTextField("FullName")
                                            .DataValueField("Id")
                                            .Placeholder("Select assignee...")
                                            .Events(events =>
                                            {
                                                events.Change("onAssigneeChange");
                                            })
                                            .HtmlAttributes(new { style = "width:260px;" })
                                            .Template("<div class'row' style='margin-left: 5px;'>" +
                                                        "<img src='" + Url.Content("~/Content/#:data.Avatar#") + "' class='li-avatar rounded mx-auto' />" +
                                                        "<span style='margin-left: 5px;'>#:data.FullName#</span></div>"
                                            )

            )

        </div>


            <div class="btn-group mr-2">
                @(Html.Kendo().Button()
                                            .Name("btnFilterMonths3").Content("3 Months").Icon("calendar")
                                            .HtmlAttributes(new { @class = ViewBag.months == 3 ? "k-state-active" : "" })
                                            .Events(events =>
                                            {
                                                events.Click("function() { onFilterItemClick(3); }");
                                            })
                )

                @(Html.Kendo().Button().Name("btnFilterMonths6").Content("6 Months").Icon("calendar")
                                            .HtmlAttributes(new
                                            {
                                                @class = ViewBag.months == 6 ? "k-state-active" : "",
                                                onclick = "location.href = '" + Html.Raw(Url.Action("Index", "Dashboard", new { months = 6, userId = ViewBag.userId })) + "';"
                                            })
                )

                @(Html.Kendo().Button().Name("btnFilterMonths12").Content("1 Year").Icon("calendar")
                                           .HtmlAttributes(new
                                           {
                                               @class = ViewBag.months == 12 ? "k-state-active" : "",
                                               onclick = "location.href = '" + Html.Raw(Url.Action("Index", "Dashboard", new { months = 12, userId = ViewBag.userId })) + "';"
                                           })
                )


            </div>
        </div>
    </div>


    <div class="card">
        <h3 class="card-header">Active Issues</h3>
        <div class="card-block">

            <div class="row">

                <div class="col-12 col-lg-6 col-xl pb-4 active-issues">
                    <span class="comp-label">
                        <strong>@Model.IssueCountActive</strong>
                        <small>Active issues</small>
                    </span>
                </div>

                <div class="col-12 col-lg-6 col-xl pb-4 text-success closed-issues">
                    <span class="comp-label">
                        <strong>@Model.IssueCountClosed</strong>
                        <small>Closed issues</small>
                    </span>
                </div>

                <div class="col-12 col-lg-6 col-xl pb-4 text-danger open-issues">
                    <span class="comp-label">
                        <strong>@Model.IssueCountOpen</strong>
                        <small>Open issues</small>
                    </span>
                </div>

                <div class="col-12 col-lg-6 col-xl pb-4 close-rate">
                    <span class="comp-label">
                        <strong>@Model.IssueCloseRate</strong>
                        <small>Close rate</small>
                    </span>
                    <p class="m-0 small text-uppercase text-muted">
                        Highest:
                        100%
                        on Oct 11, 2024
                    </p>
                    <p class="m-0 small text-uppercase text-muted">
                        Lowest:
                        20%
                        on Oct 9, 2024
                    </p>

                </div>

            </div>

            <div class="row">
                <div class="col-sm-12">
                    <h3>All issues</h3>

                    @(Html.Kendo().Chart().Name("chart")
                        .Title("All Issue")
                        .CategoryAxis(config =>
                        {
                            config.Categories(Model.Categories)
                                    .Date()
                                    .BaseUnit(ChartAxisBaseUnit.Months)
                                  .MajorGridLines(gl =>
                                  {
                                      gl.Visible(false);
                                  });
                            config.Labels(lbl =>
                            {
                                lbl.Rotation("auto");
                            });
                        })
                        .SeriesDefaults(config =>
                        {
                            config.Column().Gap(0.06).Opacity(0.7).Stack(true);
                        })
                        .Series(config =>
                        {
                            config.Column(Model.ItemsOpenByMonth).Name("Open").Color("#CC3458");
                            config.Column(Model.ItemsClosedByMonth).Name("Closed").Color("#35C473");
                        })
                        .Legend(leg =>
                        {
                            leg.Position(ChartLegendPosition.Bottom);
                        })
                        .Theme("sass")
                     )
                </div>
            </div>

        </div>
    </div>

</div>

@section styles {
    @Styles.Render("~/Content/dashboardcss")
}

@section scripts {


    <script>

        @{
            var userIdParam = "";
            var monthsParam = "";
            if (ViewBag.userId != null)
            {
                userIdParam = "&userId=" + ViewBag.userId;
            }
            if (ViewBag.months != null)
            {
                monthsParam = "months=" + ViewBag.months;
            }
        }


        function onAssigneeChange(e) {
            var userId = e.sender.value();
            if (userId) {
                location.href = `/?userId=${userId}&@Html.Raw(monthsParam)`;
            } else {
                location.href = `/?@Html.Raw(monthsParam)`;
            }
        }



        function onFilterItemClick(months) {
              location.href = `/?months=${months}@Html.Raw(userIdParam)`; 
        }
            
    </script>
}

