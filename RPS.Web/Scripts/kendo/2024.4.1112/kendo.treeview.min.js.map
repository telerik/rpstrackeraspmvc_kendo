{"version":3,"file":"kendo.treeview.min.js","names":["global","factory","exports","module","require","define","amd","globalThis","self","kendo","_globals","Treeview","this","$","undefined$1","TreeView","subGroup","nodeContents","nodeIcon","spriteRe","window","ui","data","encode","htmlEncode","extend","template","isArray","Array","Widget","HierarchicalDataSource","keys","NS","TEMP_NS","SELECT","CHECK","NAVIGATE","CHANGE","ERROR","CHECKED","INDETERMINATE","DRAGSTART","PROGRESS","DRAG","DROP","DRAGEND","DATABOUND","ITEMSLOADED","LOADCOMPLETED","REQUESTEND","CLICK","UNDEFINED","KSTATEHOVER","KTREEVIEW","NODE","ICON","TOGGLE_ICON_ELM","STRING","ARIA_CHECKED","ARIA_SELECTED","ARIA_DISABLED","ARIA_EXPANDED","ARIA_ACTIVEDESCENDANT","ARIA_BUSY","DISABLED","bindings","text","url","spriteCssClass","imageUrl","attr","imageAttr","contentAttr","linkAttr","isDomElement","o","HTMLElement","nodeType","nodeName","treeViewItemDefaultClasses","contentChild","filter","node","result","children","length","checkboxes","find","insertAction","indexOffset","nodeData","referenceNode","parentNode","group","closest","parent","is","_dataSourceMove","dataSource","model","referenceItem","dataItem","referenceNodeIndex","indexOf","index","_insert","updateNodeHtml","wrapper","toggleButton","checkbox","innerWrapper","hasClass","prependTo","remove","removeAttr","appendTo","append","eq","addClass","container","tmp","toLowerCase","nextSibling","nodeValue","trim","test","className","insertBefore","firstChild","appendChild","moveContents","DataBoundWidget","init","element","options","inferred","list","that","hasDataSource","loadOnDemand","prototype","call","_dataSourceUids","_animation","_accessors","_templates","root","_wrapper","_group","_applyCssClasses","_tabindex","_dataSource","_attachEvents","_dragging","_syncHtmlAndDataSource","autoBind","_progress","fetch","_attemptLoadCompleted","bind","_progressHandler","_requestStart","checkChildren","updateIndeterminate","id","_ariaId","format","guid","notify","clickableItems","MOUSEENTER","_clickHandler","_click","on","e","preventDefault","removeClass","_toggleButtonClick","_keydown","_keypress","_focus","_blur","_mousedown","_checkboxChange","_retryRequest","target","focus","i","item","uid","itemCheckbox","view","uidAttr","expandedAttr","checkboxesEnabled","items","expanded","hasChildren","checked","prop","next","animationOptions","animation","hasCollapseAnimation","collapse","expand","reverse","effects","hide","enabled","dragAndDrop","dragging","widget","HierarchicalDragAndDrop","reorderable","autoScroll","allowedContainers","itemSelector","hintText","_hintText","clickMoveClick","contains","source","destination","dropHintContainer","itemFromTarget","content","first","last","dropPositionFrom","dropHint","prevAll","dragstart","trigger","sourceNode","drag","originalEvent","dropTarget","pageY","pageX","statusClass","status","setStatusClass","setStatus","drop","navigationTarget","_tempPreventNavigation","destinationNode","valid","setValid","state","dropPosition","position","dragend","triggerDragEnd","current","insertAfter","destroy","ev","off","templates","dragClue","treeview","fieldAccessor","_fieldAccessor","contentAttributes","encoded","contentCssAttributes","_checkboxes","setAttributes","setDefaultClasses","cssClass","groupLength","firstLevel","textClass","isLink","selected","checkboxClass","toggleButtonClass","toggleIcon","icon","support","isRtl","groupAttributes","attributes","groupCssClass","r","renderItems","itemContent","imgAttributes","imageCssAttributes","itemElement","tag","textAttr","linkCssAttributes","toJSON","loading","messages","retry","requestFailed","defaultClasses","stringifyAttributes","hasOwnProperty","setDataSource","one","_bindDataSource","_refreshHandler","refresh","_errorHandler","_error","_loadCompletedHandler","_loadCompleted","_requestEndHandler","_dsRequestEnd","_loadedNodes","setTimeout","type","_loadCompletedFired","concat","nodes","_unbindDataSource","unbind","silentRead","fields","field","create","recursiveRead","_initChildren","events","name","duration","dataTextField","size","textField","fieldName","fieldBindings","count","getter","map","x","d","Math","min","level","setOptions","fn","_trigger","eventName","_setChecked","datasource","value","isFunction","_setCheckedValue","_setIndeterminate","siblings","all","indeterminate","subnodes","_bubbleIndeterminate","skipDownward","_skip","set","isChecked","_preventChange","currentTarget","toggle","browser","msie","edge","_clickTarget","_focusable","select","clickTarget","touch","_nextVisible","scrollContainer","containers","offsets","documentElement","document","scrollHeight","clientHeight","push","scrollTop","focusElement","_enabled","skipSelf","wrapperRe","itemRe","_expanded","nextParent","_previousVisible","lastChild","prev","scrollTo","scrollIntoView","block","key","keyCode","focused","rtl","RIGHT","LEFT","DOWN","UP","HOME","END","ENTER","SPACEBAR","matchToFocus","focusedNode","get","_match","clearTimeout","_matchTimer","_matchNextByText","startIndex","contents","href","wrap","_getSelectedNode","groupElement","css","_nodes","groupData","each","_updateNodeClasses","defaultTemplate","html","renderCheckBox","rounded","replace","textWrap","_processNodes","callback","getByUid","_dataItem","_insertNode","insertCallback","collapsed","childrenData","updatedGroupLength","nodeHtml","_renderItem","_renderGroup","applyStylesFromKendoAttributes","_updateNodes","nodeWrapper","isCollapsed","context","render","setCheckedState","findByUid","toggleClass","end","elements","_toggle","ns","_appendItems","dataItems","viewItems","rootItems","_refreshChildren","child","empty","_refreshRoot","groupHtml","parentElement","action","bubble","_remove","_loaded","load","retryHtml","replaceWith","loaded","enable","arguments","_current","_updateActiveDescendant","direction","height","kendoStop","kendoAnimate","reset","complete","force","showProgress","loadingText","_objectOrSelf","referenceDataItem","destTreeview","destDataSource","loadPromise","Deferred","resolve","promise","_toObservableData","obj","jQuery","ObservableArray","splice","apply","success","loadModel","inserted","done","max","add","noop","keepData","prevSibling","detach","findByText","getAttribute","expandPath","path","nodeIds","slice","nodeElement","then","proceed","shift","_parentIds","parents","unshift","expandTo","Node","len","cssProperties","registerPrefix","plugin","kendo$1","__meta__","category","description","depends","features","default","Object","defineProperty"],"sources":["kendo.treeview.js"],"mappings":"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","ignoreList":[],"sourcesContent":["(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('kendo.data.js'), require('kendo.treeview.draganddrop.js'), require('kendo.html.input.js'), require('kendo.icons.js')) :\n    typeof define === 'function' && define.amd ? define(['exports', 'kendo.data', 'kendo.treeview.draganddrop', 'kendo.html.input', 'kendo.icons'], factory) :\n    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory((global.kendo = global.kendo || {}, global.kendo._globals = global.kendo._globals || {}, global.kendo._globals.Treeview = {})));\n})(this, (function (exports) {\n    const __meta__ = {\n        id: \"treeview\",\n        name: \"TreeView\",\n        category: \"web\",\n        description: \"The TreeView widget displays hierarchical data in a traditional tree structure,with support for interactive drag-and-drop operations.\",\n        depends: [ \"data\", \"html.input\", \"icons\" ],\n        features: [{\n            id: \"treeview-dragging\",\n            name: \"Drag & Drop\",\n            description: \"Support for drag & drop\",\n            depends: [ \"treeview.draganddrop\" ]\n        }]\n    };\n\n    (function($, undefined$1) {\n        var kendo = window.kendo,\n            ui = kendo.ui,\n            data = kendo.data,\n            encode = kendo.htmlEncode,\n            extend = $.extend,\n            template = kendo.template,\n            isArray = Array.isArray,\n            Widget = ui.Widget,\n            HierarchicalDataSource = data.HierarchicalDataSource,\n            keys = kendo.keys,\n            NS = \".kendoTreeView\",\n            TEMP_NS = \".kendoTreeViewTemp\",\n            SELECT = \"select\",\n            CHECK = \"check\",\n            NAVIGATE = \"navigate\",\n            EXPAND = \"expand\",\n            CHANGE = \"change\",\n            ERROR = \"error\",\n            CHECKED = \"checked\",\n            INDETERMINATE = \"indeterminate\",\n            COLLAPSE = \"collapse\",\n            DRAGSTART = \"dragstart\",\n            PROGRESS = \"progress\",\n            DRAG = \"drag\",\n            DROP = \"drop\",\n            DRAGEND = \"dragend\",\n            DATABOUND = \"dataBound\",\n            ITEMSLOADED = \"itemsLoaded\",\n            LOADCOMPLETED = \"loadCompleted\",\n            REQUESTEND = \"requestEnd\",\n            CLICK = \"click\",\n            KENDOKEYDOWN = \"kendoKeydown\",\n            UNDEFINED = \"undefined\",\n            KSTATEHOVER = \"k-hover\",\n            KTREEVIEW = \"k-treeview\",\n            VISIBLE = \":visible\",\n            NODE = \".k-treeview-item\",\n            ICON = \"k-icon\",\n            TOGGLE_ICON_ELM = `<span></span>`,\n            STRING = \"string\",\n            ARIA_CHECKED = \"aria-checked\",\n            ARIA_SELECTED = \"aria-selected\",\n            ARIA_DISABLED = \"aria-disabled\",\n            ARIA_EXPANDED = \"aria-expanded\",\n            ARIA_ACTIVEDESCENDANT = \"aria-activedescendant\",\n            ARIA_BUSY = \"aria-busy\",\n            DISABLED = \"k-disabled\",\n            TreeView,\n            subGroup, nodeContents, nodeIcon,\n            spriteRe,\n            bindings = {\n                text: \"dataTextField\",\n                url: \"dataUrlField\",\n                spriteCssClass: \"dataSpriteCssClassField\",\n                imageUrl: \"dataImageUrlField\",\n                attr: \"dataAttrField\",\n                imageAttr: \"dataImageAttrField\",\n                contentAttr: \"dataContentAttrField\",\n                linkAttr: \"dataLinkAttrField\",\n            },\n            isJQueryInstance = function(obj) {\n                return (obj instanceof kendo.jQuery) || (window.jQuery && obj instanceof window.jQuery);\n            },\n            isDomElement = function(o) {\n                return (\n                    typeof HTMLElement === \"object\" ? o instanceof HTMLElement : //DOM2\n                    o && typeof o === \"object\" && o.nodeType === 1 && typeof o.nodeName === STRING\n                );\n            };\n\n        const treeViewItemDefaultClasses = {\n            item: \"k-treeview-item\",\n            image: \"k-image\",\n            contentText: \"k-treeview-leaf-text\"\n        };\n\n        function contentChild(filter) {\n            return function(node) {\n                var result = node.children(\".k-animation-container\");\n\n                if (!result.length) {\n                    result = node;\n                }\n\n                return result.children(filter);\n            };\n        }\n\n        function templateNoWith(code) {\n            return kendo.template(code, { useWithBlock: false });\n        }\n\n        subGroup = contentChild(\".k-treeview-group\");\n        nodeContents = contentChild(\".k-treeview-group,.k-content\");\n        nodeIcon = function(node) {\n            return node.children(\"div\").find(`.k-treeview-toggle > span:first`);\n        };\n\n        function checkboxes(node) {\n             return node.find(\".k-checkbox-wrap:first input[type=checkbox]\");\n        }\n\n        function insertAction(indexOffset) {\n            return function(nodeData, referenceNode) {\n                referenceNode = referenceNode.closest(NODE);\n\n                var group = referenceNode.parent(),\n                    parentNode;\n\n                if (group.parent().is(\"li\")) {\n                    parentNode = group.parent();\n                }\n\n                return this._dataSourceMove(nodeData, group, parentNode, function(dataSource, model) {\n                    var referenceItem = this.dataItem(referenceNode);\n                    var referenceNodeIndex = referenceItem && referenceNode.parent().children().length !== referenceItem.parent().length ? referenceItem.parent().indexOf(referenceItem) : referenceNode.index();\n\n                    return this._insert(dataSource.data(), model, referenceNodeIndex + indexOffset);\n                });\n            };\n        }\n\n        spriteRe = /k-sprite/;\n\n        function moveContents(node, container) {\n            var tmp;\n\n            while (node && node.nodeName.toLowerCase() != \"ul\") {\n                tmp = node;\n                node = node.nextSibling;\n\n                if (tmp.nodeType == 3) {\n                    tmp.nodeValue = kendo.trim(tmp.nodeValue);\n                }\n\n                if (spriteRe.test(tmp.className)) {\n                    container.insertBefore(tmp, container.firstChild);\n                } else {\n                    container.appendChild(tmp);\n                }\n            }\n        }\n\n        function updateNodeHtml(node) {\n            var wrapper = node.children(\"div\"),\n                group = node.children(\"ul\"),\n                toggleButton = wrapper.find(`.k-treeview-toggle > span`),\n                checkbox = node.children(\"input[type=checkbox]\"),\n                innerWrapper = wrapper.children(\".k-treeview-leaf\");\n\n            if (node.hasClass(\"k-treeview\")) {\n                return;\n            }\n\n            if (!wrapper.length) {\n                wrapper = $(\"<div />\").prependTo(node);\n            }\n\n            if (!toggleButton.length && group.length) {\n                toggleButton = $(`<span class='k-treeview-toggle'>${TOGGLE_ICON_ELM}</span>`).prependTo(wrapper);\n            } else if (!group.length || !group.children().length) {\n                toggleButton.parent().remove();\n                group.remove();\n                node.removeAttr(ARIA_EXPANDED);\n            }\n\n            if (checkbox.length) {\n                $(\"<span class='k-checkbox-wrap' />\").appendTo(wrapper).append(checkbox);\n            }\n\n            if (!innerWrapper.length) {\n                innerWrapper = node.children(\"a\").eq(0).addClass(\"k-treeview-leaf k-link\");\n\n                if (!innerWrapper.length) {\n                    innerWrapper = $(\"<span class='k-treeview-leaf' />\");\n                }\n\n                innerWrapper.appendTo(wrapper);\n\n                if (wrapper.length) {\n                    moveContents(wrapper[0].nextSibling, innerWrapper[0]);\n                }\n            }\n        }\n        TreeView = kendo.ui.DataBoundWidget.extend({\n            init: function(element, options) {\n                var that = this,\n                    inferred = false,\n                    hasDataSource = options && !!options.dataSource,\n                    list;\n\n                if (isArray(options)) {\n                    options = { dataSource: options };\n                }\n\n                if (options && typeof options.loadOnDemand == UNDEFINED && isArray(options.dataSource)) {\n                    options.loadOnDemand = false;\n                }\n\n                Widget.prototype.init.call(that, element, options);\n\n                element = that.element;\n                options = that.options;\n\n                that._dataSourceUids = {};\n\n                list = (element.is(\"ul\") && element) ||\n                       (element.hasClass(KTREEVIEW) && element.children(\"ul\"));\n\n                inferred = !hasDataSource && list.length;\n\n                if (inferred) {\n                    options.dataSource.list = list;\n                }\n\n                that._animation();\n\n                that._accessors();\n\n                that._templates();\n\n                // render treeview if it's not already rendered\n                if (!element.hasClass(KTREEVIEW)) {\n                    that._wrapper();\n\n                    if (list) {\n                        that.root = element;\n                        that._group(that.wrapper);\n                    }\n                } else {\n                    // otherwise just initialize properties\n                    that.wrapper = element;\n                    that.root = element.children(\"ul\").eq(0);\n                }\n\n                that._applyCssClasses();\n                that._tabindex();\n\n                that.wrapper.find(\">ul\").attr(\"role\", \"tree\");\n\n                that._dataSource(inferred);\n\n                that._attachEvents();\n\n                that._dragging();\n\n                if (!inferred) {\n                    if (options.autoBind) {\n                        that._progress(true);\n                        that.dataSource.fetch(this._attemptLoadCompleted.bind(this));\n                    }\n                    else {\n                        that._progressHandler = that._requestStart.bind(that);\n                        that.dataSource.bind(PROGRESS, that._progressHandler);\n                    }\n                } else {\n                    that._syncHtmlAndDataSource();\n                }\n\n                if (options.checkboxes && options.checkboxes.checkChildren) {\n                    that.updateIndeterminate();\n                }\n\n                if (that.element[0].id) {\n                    that._ariaId = kendo.format(\"{0}_tv_active\", that.element[0].id);\n                } else {\n                    that._ariaId = kendo.guid() + \"_tv_active\";\n                }\n\n                kendo.notify(that);\n            },\n\n            _attachEvents: function() {\n                var that = this,\n                    clickableItems = \".k-treeview-leaf:not(.k-selected,.k-disabled)\",\n                    MOUSEENTER = \"mouseenter\";\n\n                that._clickHandler = that._click.bind(that);\n\n                that.wrapper\n                    .on(MOUSEENTER + NS, \".k-treeview-leaf.k-selected\", function(e) { e.preventDefault(); })\n                    .on(MOUSEENTER + NS, clickableItems, function() { $(this).addClass(KSTATEHOVER); })\n                    .on(\"mouseleave\" + NS, clickableItems, function() { $(this).removeClass(KSTATEHOVER); })\n                    .on(CLICK + NS, clickableItems, that._clickHandler)\n                    .on(\"dblclick\" + NS, \".k-treeview-leaf:not(.k-disabled)\", that._toggleButtonClick.bind(that))\n                    .on(CLICK + NS, `.k-treeview-toggle .${ICON}`, that._toggleButtonClick.bind(that))\n                    .on(\"keydown\" + NS, that, that._keydown.bind(that))\n                    .on(\"keypress\" + NS, that._keypress.bind(that))\n                    .on(\"focus\" + NS, that._focus.bind(that))\n                    .on(\"blur\" + NS, that._blur.bind(that))\n                    .on(\"mousedown\" + NS, `.k-treeview-leaf,.k-checkbox-wrap :checkbox,.k-treeview-toggle .${ICON}`, that._mousedown.bind(that))\n                    .on(\"change\" + NS, \".k-checkbox-wrap :checkbox\", that._checkboxChange.bind(that))\n                    .on(\"click\" + NS, \".k-request-retry\", that._retryRequest.bind(that))\n                    .on(\"click\" + NS, \".k-link.k-disabled\", function(e) { e.preventDefault(); })\n                    .on(\"click\" + NS, function(e) {\n                        var target = $(e.target);\n\n                        if (!target.is(\":kendoFocusable\") && !target.find(\"input,select,textarea,button,object\").is(\":kendoFocusable\")) {\n                            that.focus();\n                        }\n                    });\n            },\n\n            _requestStart: function() {\n                this._progress(true);\n            },\n\n            _syncHtmlAndDataSource: function(root, dataSource) {\n                root = root || this.root;\n                dataSource = dataSource || this.dataSource;\n                var data = dataSource.view(),\n                    uidAttr = kendo.attr(\"uid\"),\n                    expandedAttr = kendo.attr(\"expanded\"),\n                    checkboxesEnabled = this.options.checkboxes,\n                    items = root.children(\"li\"),\n                    i,\n                    item,\n                    dataItem,\n                    uid,\n                    itemCheckbox;\n\n                for (i = 0; i < items.length; i++) {\n                    dataItem = data[i];\n                    uid = dataItem.uid;\n                    item = items.eq(i);\n                    item.attr(\"role\", \"treeitem\")\n                        .attr(uidAttr, uid)\n                        .attr(ARIA_SELECTED, item.hasClass(\"k-selected\"));\n\n                    dataItem.expanded = item.attr(expandedAttr) === \"true\";\n\n                    if (dataItem.hasChildren) {\n                        item.attr(ARIA_EXPANDED, dataItem.expanded);\n                    }\n\n                    if (checkboxesEnabled) {\n                        itemCheckbox = checkboxes(item);\n                        dataItem.checked = itemCheckbox.prop(CHECKED);\n                        itemCheckbox.attr(\"id\", \"_\" + uid);\n                        itemCheckbox.next(\".k-checkbox-label\").attr(\"for\", \"_\" + uid);\n\n                        item.attr(ARIA_CHECKED, item.checked);\n                    }\n\n                    this._syncHtmlAndDataSource(item.children(\"ul\"), dataItem.children);\n                }\n            },\n\n            _animation: function() {\n                var options = this.options,\n                    animationOptions = options.animation,\n                    hasCollapseAnimation = animationOptions.collapse && \"effects\" in animationOptions.collapse,\n                    collapse = extend({}, animationOptions.expand, animationOptions.collapse);\n\n                if (!hasCollapseAnimation) {\n                    collapse = extend(collapse, { reverse: true });\n                }\n\n                if (animationOptions === false) {\n                    animationOptions = {\n                        expand: { effects: {} },\n                        collapse: { hide: true, effects: {} }\n                    };\n                }\n\n                animationOptions.collapse = extend(collapse, { hide: true });\n                options.animation = animationOptions;\n            },\n\n            _dragging: function() {\n                var enabled = this.options.dragAndDrop;\n                var dragging = this.dragging;\n\n                if (enabled && !dragging) {\n                    var widget = this;\n\n                    this.dragging = new ui.HierarchicalDragAndDrop(this.element, {\n                        reorderable: true,\n                        autoScroll: this.options.autoScroll,\n                        filter: \"div:not(.k-disabled) .k-treeview-leaf\",\n                        allowedContainers: \".k-treeview\",\n                        itemSelector: \".k-treeview .k-treeview-item\",\n                        hintText: this._hintText.bind(this),\n                        clickMoveClick: this.options.dragAndDrop.clickMoveClick === true ? true : false,\n                        contains: function(source, destination) {\n                            return $.contains(source, destination);\n                        },\n                        dropHintContainer: function(item) {\n                            return item;\n                        },\n                        itemFromTarget: function(target) {\n                            var item = target.closest(\".k-treeview-top,.k-treeview-mid,.k-treeview-bot\");\n                            return {\n                                item: item,\n                                content: target.closest(\".k-treeview-leaf\"),\n                                first: item.hasClass(\"k-treeview-top\"),\n                                last: item.hasClass(\"k-treeview-bot\")\n                            };\n                        },\n                        dropPositionFrom: function(dropHint) {\n                            return dropHint.prevAll(\".k-treeview-leaf\").length > 0 ? \"after\" : \"before\";\n                        },\n                        dragstart: function(source) {\n                            widget.wrapper.attr(kendo.attr(\"scrollable\"), false);\n                            return widget.trigger(DRAGSTART, { sourceNode: source[0] });\n                        },\n                        drag: function(options) {\n                            widget.trigger(DRAG, {\n                                originalEvent: options.originalEvent,\n                                sourceNode: options.source[0],\n                                dropTarget: options.target[0],\n                                pageY: options.pageY,\n                                pageX: options.pageX,\n                                statusClass: options.status,\n                                setStatusClass: options.setStatus\n                            });\n                        },\n                        drop: function(options) {\n                            var dropTarget = $(options.dropTarget);\n                            var navigationTarget = dropTarget.closest(\"a\");\n\n                            if (navigationTarget && navigationTarget.attr(\"href\")) {\n                                widget._tempPreventNavigation(navigationTarget);\n                            }\n\n                            return widget.trigger(DROP, {\n                                originalEvent: options.originalEvent,\n                                sourceNode: options.source,\n                                destinationNode: options.destination,\n                                valid: options.valid,\n                                setValid: function(state) {\n                                    this.valid = state;\n                                    options.setValid(state);\n                                },\n                                dropTarget: options.dropTarget,\n                                dropPosition: options.position\n                            });\n                        },\n                        dragend: function(options) {\n                            var source = options.source;\n                            var destination = options.destination;\n                            var position = options.position;\n\n                            widget.wrapper.removeAttr(kendo.attr(\"scrollable\"));\n\n                            function triggerDragEnd(source) {\n                                if (widget.options.checkboxes && widget.options.checkboxes.checkChildren) {\n                                    widget.updateIndeterminate();\n                                }\n\n                                widget.current(source);\n                                widget.element.focus();\n\n                                widget.trigger(DRAGEND, {\n                                    originalEvent: options.originalEvent,\n                                    sourceNode: source && source[0],\n                                    destinationNode: destination[0],\n                                    dropPosition: position\n                                });\n                            }\n\n                            // perform reorder / move\n                            // different handling is necessary because append might be async in remote bound tree\n                            if (position == \"over\") {\n                                widget.append(source, destination, triggerDragEnd);\n                            } else {\n                                if (position == \"before\") {\n                                    source = widget.insertBefore(source, destination);\n                                } else if (position == \"after\") {\n                                    source = widget.insertAfter(source, destination);\n                                }\n\n                                triggerDragEnd(source);\n                            }\n                        }\n                    });\n                } else if (!enabled && dragging) {\n                    dragging.destroy();\n                    this.dragging = null;\n                }\n            },\n\n            _tempPreventNavigation: function(node) {\n                node.on(CLICK + NS + TEMP_NS, function(ev) {\n                    ev.preventDefault();\n                    node.off(CLICK + NS + TEMP_NS);\n                });\n            },\n\n            _hintText: function(node) {\n                return this.templates.dragClue({\n                    item: this.dataItem(node),\n                    treeview: this.options\n                });\n            },\n\n            _templates: function() {\n                let that = this,\n                    options = that.options,\n                    fieldAccessor = that._fieldAccessor.bind(that);\n\n                if (options.template && typeof options.template == STRING) {\n                    options.template = template(options.template);\n                } else if (!options.template) {\n                    options.template = ({ item }) => {\n                        let text = fieldAccessor(\"text\")(item);\n                        let contentAttributes = fieldAccessor(\"contentAttr\")(item);\n\n                        if (typeof item.encoded != 'undefined' && item.encoded === false) {\n                            return `<span ${that.templates.contentCssAttributes(contentAttributes)}>${text}</span>`;\n                        }\n\n                        return `<span ${that.templates.contentCssAttributes(contentAttributes)}>${encode(text)}</span>`;\n                    };\n                }\n\n                that._checkboxes();\n\n                that.templates = {\n                    setAttributes: function(item) {\n                        return that.templates.setDefaultClasses(treeViewItemDefaultClasses.item, item.attr);\n                    },\n                    cssClass: function(group, item) {\n                        var result = \"\",\n                            index = item.index,\n                            groupLength = group.length - 1;\n\n                        if (group.firstLevel && index === 0) {\n                            result += \"k-treeview-top \";\n                        }\n\n                        if (index === 0 && index != groupLength) {\n                            result += (result.indexOf(\"k-treeview-top\") != -1) ? \"\" : \"k-treeview-top\";\n                        } else if (index == groupLength) {\n                            result += \"k-treeview-bot\";\n                        } else {\n                            result += \"k-treeview-mid\";\n                        }\n\n                        return result;\n                    },\n                    textClass: function(item, isLink) {\n                        var result = \"k-treeview-leaf\";\n\n                        if (isLink) {\n                            result += \" k-link\";\n                        }\n\n                        if (item.enabled === false) {\n                            result += \" k-disabled\";\n                        }\n\n                        if (item.selected === true) {\n                            result += \" k-selected\";\n                        }\n\n                        return result;\n                    },\n                    checkboxClass: function(item) {\n                        var result = \"k-checkbox\";\n\n                        if (item.enabled === false) {\n                            result += \" k-disabled\";\n                        }\n\n                        return result;\n                    },\n                    toggleButtonClass: function(item) {\n                        var result = \"k-treeview-toggle\";\n\n                        if (item.enabled === false) {\n                            result += \" k-disabled\";\n                        }\n\n                        return result;\n                    },\n                    toggleIcon: function(icon, item) {\n                        if (item.expanded !== true) {\n                            return ui.icon(icon, { icon: `caret-alt-${kendo.support.isRtl(that.element) ? 'left' : 'right'}` });\n                        } else {\n                            return ui.icon(icon, { icon: 'caret-alt-down' });\n                        }\n                    },\n                    groupAttributes: function(group) {\n                        var attributes = \"\";\n\n                        if (!group.firstLevel) {\n                            attributes = \"role='group'\";\n                        }\n\n                        return attributes + (group.expanded !== true ? ` ${kendo.attr(\"style-display\")}=\"none\"` : \"\");\n                    },\n                    groupCssClass: function(group) {\n                        var cssClass = \"k-treeview-group\";\n\n                        if (group.firstLevel) {\n                            cssClass += \" k-treeview-lines\";\n                        }\n\n                        return cssClass;\n                    },\n                    dragClue: (data) => data.treeview.template(data),\n                    group: (data) =>\n                    `<ul class='${data.r.groupCssClass(data.group)}'${data.r.groupAttributes(data.group)}>` +\n                        data.renderItems(data) +\n                    `</ul>`,\n                    itemContent: (data) => {\n                        let imageUrl = fieldAccessor(\"imageUrl\")(data.item);\n                        let imgAttributes = fieldAccessor(\"imageAttr\")(data.item);\n                        let spriteCssClass = fieldAccessor(\"spriteCssClass\")(data.item);\n                        let result = \"\";\n\n                        if (imageUrl) {\n                            result += `<img ${that.templates.imageCssAttributes(imgAttributes)} alt='' src='${imageUrl}'>`;\n                        }\n\n                        if (spriteCssClass) {\n                            result += `<span class='k-sprite ${spriteCssClass}'></span>`;\n                        }\n\n                        result += data.treeview.template(data);\n\n                        return result;\n                    },\n                    itemElement: (data) => {\n                        let item = data.item,\n                            r = data.r;\n                        let url = fieldAccessor(\"url\")(item),\n                            tag = url ? 'a' : 'span',\n                            textAttr = url ? ' href=\"' + url + '\"' : '';\n                        let result = `<div class=\"${r.cssClass(data.group, item)}\">`;\n\n                        if (item.hasChildren) {\n                            result += `<span class='${r.toggleButtonClass(item)}'>` +\n                                        r.toggleIcon($(TOGGLE_ICON_ELM), item) +\n                                      `</span>`;\n                        }\n\n                        if (data.treeview.checkboxes) {\n                            result += `<span class='k-checkbox-wrap' role='presentation'>` +\n                                        data.treeview.checkboxes.template(data) +\n                                      `</span>`;\n                        }\n\n                        result += `<${tag} ${r.linkCssAttributes(item, !!url)} ${textAttr}>` +\n                                     r.itemContent(data) +\n                                  `</${tag}>`;\n\n                        result += \"</div>\";\n\n                        return result;\n                    },\n                    item: (data) => {\n                        var item = data.item,\n                            r = data.r;\n                        var result =\n                            `<li role='treeitem'` +\n                            `${kendo.attr(\"uid\")}=\"${item.uid}\"` +\n                            `${r.setAttributes(item.toJSON ? item.toJSON() : item)} `;\n\n                        if (data.treeview.checkboxes) {\n                            result +=\n                                `aria-checked=\"${item.checked ? 'true' : 'false'}\" `;\n                        }\n\n                        result +=\n                            `aria-selected=\"${item.selected ? 'true' : 'false'}\" ` +\n                                `${item.enabled === false ? 'aria-disabled=\"true\"' : ''}`;\n\n                        if (item.hasChildren) {\n                            result += `aria-expanded=\"${item.expanded ? \"true\" : \"false\"}\" `;\n                        }\n\n                        result +=\n                            `data-expanded=\"${item.expanded ? \"true\" : \"false\"}\" >` +\n                            r.itemElement(data) +\n                            `</li>`;\n\n                        return result;\n                    },\n                    loading: ({ messages }) =>\n                        `<div class='k-icon k-i-loading'></div> ${encode(messages.loading)}`,\n                    retry: ({ messages }) =>\n                        `${encode(messages.requestFailed)} ` +\n                        `<button class='k-button k-button-md k-rounded-md k-button-solid k-button-solid-base k-request-retry'><span class='k-button-text'>${encode(messages.retry)}</span></button>`,\n                    imageCssAttributes: function(imgAttributes) {\n                        return that.templates.setDefaultClasses(treeViewItemDefaultClasses.image, imgAttributes);\n                    },\n                    contentCssAttributes: function(contentAttributes) {\n                        return that.templates.setDefaultClasses(treeViewItemDefaultClasses.contentText, contentAttributes);\n                    },\n                    linkCssAttributes: function(item, isLink) {\n                        return that.templates.setDefaultClasses(this.textClass(item, isLink), fieldAccessor(\"linkAttr\")(item));\n                    },\n                    setDefaultClasses: function(defaultClasses, attributes) {\n                        attributes = attributes && attributes.toJSON ? attributes.toJSON() : attributes || {};\n                        if (!attributes['class']) {\n                            attributes['class'] = defaultClasses;\n                        } else {\n                            attributes['class'] += \" \" + defaultClasses;\n                        }\n\n                        return that.templates.stringifyAttributes(attributes);\n\n                    },\n                    stringifyAttributes: function(attributes) {\n                        let result = \"\";\n                        for (let attr in attributes) {\n                            if (attributes.hasOwnProperty(attr)) {\n                                result += attr + \"=\\\"\" + attributes[attr] + \"\\\" \";\n                            }\n                        }\n                        return result;\n                    }\n\n                };\n            },\n\n            items: function() {\n                return this.element.find(\".k-treeview-item > div:first-child\");\n            },\n\n            setDataSource: function(dataSource) {\n                var options = this.options;\n\n                options.dataSource = dataSource;\n\n                this._dataSourceUids = {};\n\n                this._dataSource();\n\n                if (options.checkboxes && options.checkboxes.checkChildren) {\n                    this.dataSource.one(\"change\", this.updateIndeterminate.bind(this, null));\n                }\n\n                if (this.options.autoBind) {\n                    this.dataSource.fetch(this._attemptLoadCompleted.bind(this));\n                }\n            },\n\n            _bindDataSource: function() {\n                var that = this;\n\n                that._refreshHandler = that.refresh.bind(that);\n                that._errorHandler = that._error.bind(that);\n                that._loadCompletedHandler = that._loadCompleted.bind(that);\n                that._requestEndHandler = that._dsRequestEnd.bind(that);\n                that._loadedNodes = [];\n\n                that.dataSource.bind(CHANGE, that._refreshHandler);\n                that.dataSource.bind(ERROR, that._errorHandler);\n\n                that.dataSource.bind(ITEMSLOADED, that._loadCompletedHandler);\n                that.dataSource.bind(REQUESTEND, that._requestEndHandler);\n            },\n\n            _dsRequestEnd: function(e) {\n                var that = this;\n\n                setTimeout(function() {\n                    if (e.type === \"read\" && !that._loadCompletedFired) {\n                        that._attemptLoadCompleted();\n                    }\n                });\n            },\n\n            _loadCompleted: function(e) {\n                var that = this;\n                that._loadedNodes = that._loadedNodes.concat(e.nodes);\n\n                if (!that.dataSource.loading() && that.options.loadOnDemand === false) {\n                    that.trigger(LOADCOMPLETED, { nodes: that._loadedNodes });\n                    that._loadedNodes = [];\n                }\n            },\n\n            _attemptLoadCompleted: function() { // If there are no items to be loaded ensure event is triggered on dataBound\n                var that = this,\n                    items = that.dataSource.view(),\n                    current, i;\n\n                if (that.options.loadOnDemand === false) {\n                    for (i = 0; i < items.length; i++) {\n                        current = items[i];\n                        if (current.hasChildren && (!current.children || !current.children.data() || current.children.data().length === 0)) {\n                            return;\n                        }\n                    }\n\n                    that._loadCompletedFired = true;\n                    that.trigger(LOADCOMPLETED, { nodes: [] });\n                }\n            },\n\n            _unbindDataSource: function() {\n                var dataSource = this.dataSource;\n\n                if (dataSource) {\n                    dataSource.unbind(CHANGE, this._refreshHandler);\n                    dataSource.unbind(PROGRESS, this._progressHandler);\n                    dataSource.unbind(ERROR, this._errorHandler);\n                    dataSource.unbind(ITEMSLOADED, this._loadCompletedHandler);\n                    dataSource.unbind(REQUESTEND, this._requestEndHandler);\n                }\n            },\n\n            _dataSource: function(silentRead) {\n                var that = this,\n                    options = that.options,\n                    dataSource = options.dataSource;\n\n                function recursiveRead(data) {\n                    for (var i = 0; i < data.length; i++) {\n                        data[i]._initChildren();\n\n                        data[i].children.fetch();\n\n                        recursiveRead(data[i].children.view());\n                    }\n                }\n\n                dataSource = isArray(dataSource) ? { data: dataSource } : dataSource;\n\n                that._unbindDataSource();\n\n                if (!dataSource.fields) {\n                    dataSource.fields = [\n                        { field: \"text\" },\n                        { field: \"url\" },\n                        { field: \"spriteCssClass\" },\n                        { field: \"imageUrl\" }\n                    ];\n                }\n\n                that.dataSource = dataSource = HierarchicalDataSource.create(dataSource);\n\n                if (silentRead) {\n                    dataSource.fetch();\n\n                    recursiveRead(dataSource.view());\n                }\n\n                that._bindDataSource();\n            },\n\n            events: [\n                DRAGSTART,\n                DRAG,\n                DROP,\n                DRAGEND,\n\n                DATABOUND,\n                LOADCOMPLETED,\n\n                EXPAND,\n                COLLAPSE,\n                SELECT,\n                CHANGE,\n                NAVIGATE,\n                CHECK,\n                KENDOKEYDOWN\n            ],\n\n            options: {\n                name: \"TreeView\",\n                dataSource: {},\n                animation: {\n                    expand: {\n                        effects: \"expand:vertical\",\n                        duration: 200\n                    }, collapse: {\n                        duration: 100\n                    }\n                },\n                messages: {\n                    loading: \"Loading...\",\n                    requestFailed: \"Request failed.\",\n                    retry: \"Retry\"\n                },\n                dragAndDrop: false,\n                checkboxes: false,\n                autoBind: true,\n                autoScroll: false,\n                loadOnDemand: true,\n                template: \"\",\n                dataTextField: null,\n                size: \"medium\"\n            },\n\n            _accessors: function() {\n                var that = this,\n                    options = that.options,\n                    i, field, textField,\n                    element = that.element;\n\n                for (i in bindings) {\n                    field = options[bindings[i]];\n                    textField = element.attr(kendo.attr(i + \"-field\"));\n\n                    if (!field && textField) {\n                        field = textField;\n                    }\n\n                    if (!field) {\n                        field = i;\n                    }\n\n                    if (!isArray(field)) {\n                        field = [field];\n                    }\n\n                    options[bindings[i]] = field;\n                }\n            },\n\n            // generates accessor function for a given field name, honoring the data*Field arrays\n            _fieldAccessor: function(fieldName) {\n                var fieldBindings = this.options[bindings[fieldName]],\n                    count = fieldBindings.length;\n\n                return (function(item) {\n                    if (count === 0) {\n                        return kendo.getter(fieldName)(item);\n                    }\n\n                    return $.map(fieldBindings, function(x) {\n                        return function(d) { return kendo.getter(x)(d); };\n                    })[Math.min(item.level(), count - 1)](item);\n                });\n            },\n\n            setOptions: function(options) {\n                Widget.fn.setOptions.call(this, options);\n\n                this._animation();\n\n                this._dragging();\n\n                this._accessors();\n\n                this._templates();\n            },\n\n            _trigger: function(eventName, node) {\n                return this.trigger(eventName, {\n                    node: node.closest(NODE)[0]\n                });\n            },\n\n            _setChecked: function(datasource, value) {\n                if (!datasource || !kendo.isFunction(datasource.view)) {\n                    return;\n                }\n\n                for (var i = 0, nodes = datasource.view(); i < nodes.length; i++) {\n                    if (nodes[i].enabled !== false) {\n                        this._setCheckedValue(nodes[i], value);\n                    }\n\n                    if (nodes[i].children) {\n                        this._setChecked(nodes[i].children, value);\n                    }\n                }\n            },\n\n            _setCheckedValue: function(node, value) {\n                node[CHECKED] = value;\n            },\n\n            _setIndeterminate: function(node) {\n                var group = subGroup(node),\n                    siblings, length,\n                    all = true,\n                    i;\n\n                if (!group.length) {\n                    return;\n                }\n\n                siblings = checkboxes(group.children());\n\n                length = siblings.length;\n\n                if (!length) {\n                    return;\n                } else if (length > 1) {\n                    for (i = 1; i < length; i++) {\n                        if (siblings[i].checked != siblings[i - 1].checked ||\n                            siblings[i].indeterminate || siblings[i - 1].indeterminate) {\n                            all = false;\n                            break;\n                        }\n                    }\n                } else {\n                    all = !siblings[0].indeterminate;\n                }\n\n                node.attr(ARIA_CHECKED, all ? siblings[0].checked : \"mixed\");\n\n                return checkboxes(node)\n                    .data(INDETERMINATE, !all)\n                    .prop(INDETERMINATE, !all)\n                    .prop(CHECKED, all && siblings[0].checked);\n            },\n\n            updateIndeterminate: function(node) {\n                // top-down update of inital indeterminate state for all nodes\n                node = node || this.wrapper;\n\n                var subnodes = subGroup(node).children();\n                var i;\n                var checkbox;\n                var dataItem;\n\n                if (subnodes.length) {\n                    for (i = 0; i < subnodes.length; i++) {\n                        this.updateIndeterminate(subnodes.eq(i));\n                    }\n\n                    if (node.is(\".k-treeview\")) {\n                        return;\n                    }\n\n                    checkbox = this._setIndeterminate(node);\n\n                    dataItem = this.dataItem(node);\n\n                    if (checkbox && checkbox.prop(CHECKED)) {\n                        dataItem.checked = true;\n                    } else {\n                        if (dataItem) {\n                            delete dataItem.checked;\n                        }\n                    }\n                }\n            },\n\n            _bubbleIndeterminate: function(node, skipDownward) {\n                // bottom-up setting of indeterminate state of parent nodes\n                if (!node.length) {\n                    return;\n                }\n\n                if (!skipDownward) {\n                    //update the indeterminate state of the node itself\n                    this.updateIndeterminate(node);\n                }\n\n                var parentNode = this.parent(node),\n                    checkbox;\n\n                if (parentNode.length) {\n                    this._setIndeterminate(parentNode);\n\n                    checkbox = parentNode.children(\"div\").find(\".k-checkbox-wrap input[type=checkbox]\");\n\n                    this._skip = true;\n                    if (checkbox.prop(INDETERMINATE) === false) {\n                        this.dataItem(parentNode).set(CHECKED, checkbox.prop(CHECKED));\n                    } else {\n                        // delete this.dataItem(parentNode).checked;\n                        this.dataItem(parentNode).set(CHECKED, false);\n                    }\n\n                    this._skip = false;\n\n                    this._bubbleIndeterminate(parentNode, true);\n                }\n            },\n\n            _checkboxChange: function(e) {\n                var that = this;\n                var checkbox = $(e.target);\n                var isChecked = checkbox.prop(CHECKED);\n                var node = checkbox.closest(NODE);\n                var dataItem = this.dataItem(node);\n\n                if (this._preventChange) {\n                    return;\n                }\n\n                if (dataItem.checked != isChecked) {\n                    dataItem.set(CHECKED, isChecked);\n                    node.attr(ARIA_CHECKED, isChecked);\n                    this._trigger(CHECK, node);\n                }\n\n                if (checkbox.is(\":focus\")) {\n                    that._trigger(NAVIGATE, node);\n                    that.focus();\n                }\n            },\n\n            _toggleButtonClick: function(e) {\n                var node = $(e.currentTarget).closest(NODE);\n\n                if (node.is(\"[aria-disabled='true']\")) {\n                    return;\n                }\n\n                this.toggle(node);\n            },\n\n            _mousedown: function(e) {\n                var that = this;\n                var currentTarget = $(e.currentTarget);\n                var node = $(e.currentTarget).closest(NODE);\n                var browser = kendo.support.browser;\n\n                if (node.is(\"[aria-disabled='true']\")) {\n                    return;\n                }\n\n                //IE does not trigger change for indeterminate checkboxes\n                if ((browser.msie || browser.edge) && currentTarget.is(\":checkbox\")) {\n                    if (currentTarget.prop(INDETERMINATE)) {\n                        that._preventChange = false;\n\n                        currentTarget.prop(CHECKED, !currentTarget.prop(CHECKED));\n                        currentTarget.trigger(CHANGE);\n\n                        currentTarget.on(CLICK + NS, function(e) {\n                            e.preventDefault();\n                        });\n\n                        that._preventChange = true;\n                    } else {\n                        currentTarget.off(CLICK + NS);\n                        that._preventChange = false;\n                    }\n                }\n\n                that._clickTarget = node;\n                that.current(node);\n            },\n\n            _focusable: function(node) {\n                return node && node.length && node.is(\":visible\") && !node.find(\".k-treeview-leaf\").first().hasClass(DISABLED);\n            },\n\n            _focus: function() {\n                var current = this.select(),\n                    clickTarget = this._clickTarget;\n\n                // suppress initial focus state on touch devices (until keyboard is used)\n                if (kendo.support.touch) {\n                    return;\n                }\n\n                if (clickTarget && clickTarget.length) {\n                    current = clickTarget;\n                }\n\n                if (!this._focusable(current)) {\n                    current = this.current();\n                }\n\n                if (!this._focusable(current)) {\n                    current = this._nextVisible($());\n                }\n\n                this.current(current);\n            },\n\n            focus: function() {\n                var wrapper = this.wrapper,\n                    scrollContainer = wrapper[0],\n                    containers = [],\n                    offsets = [],\n                    documentElement = document.documentElement,\n                    i;\n\n                do {\n                    scrollContainer = scrollContainer.parentNode;\n\n                    if (scrollContainer.scrollHeight > scrollContainer.clientHeight) {\n                        containers.push(scrollContainer);\n                        offsets.push(scrollContainer.scrollTop);\n                    }\n                } while (scrollContainer != documentElement);\n\n                kendo.focusElement(wrapper);\n\n                for (i = 0; i < containers.length; i++) {\n                    containers[i].scrollTop = offsets[i];\n                }\n            },\n\n            _blur: function() {\n                this.current().find(\".k-treeview-leaf\").first().removeClass(\"k-focus\");\n            },\n\n            _enabled: function(node) {\n                return !node.children(\"div\").children(\".k-treeview-leaf\").hasClass(DISABLED);\n            },\n\n            parent: function(node) {\n                var wrapperRe = /\\bk-treeview\\b(?!-)/,\n                    itemRe = /\\bk-treeview-item\\b/,\n                    result,\n                    skipSelf;\n\n                if (typeof node == STRING) {\n                    node = this.element.find(node);\n                }\n\n                if (!isDomElement(node)) {\n                    node = node[0];\n                }\n\n                skipSelf = itemRe.test(node.className);\n\n                do {\n                    node = node.parentNode;\n\n                    if (itemRe.test(node.className)) {\n                        if (skipSelf) {\n                            result = node;\n                        } else {\n                            skipSelf = true;\n                        }\n                    }\n                } while (!wrapperRe.test(node.className) && !result);\n\n                return $(result);\n            },\n\n            _nextVisible: function(node) {\n                var that = this,\n                    expanded = that._expanded(node),\n                    result;\n\n                function nextParent(node) {\n                    while (node.length && !node.next().length) {\n                        node = that.parent(node);\n                    }\n\n                    if (node.next().length) {\n                        return node.next();\n                    } else {\n                        return node;\n                    }\n                }\n\n                if (!node.length || !node.is(\":visible\")) {\n                    result = that.root.children().eq(0);\n                } else if (expanded) {\n                    result = subGroup(node).children().first();\n\n                    // expanded node with no children\n                    if (!result.length) {\n                        result = nextParent(node);\n                    }\n                } else {\n                    result = nextParent(node);\n                }\n\n                return result;\n            },\n\n            _previousVisible: function(node) {\n                var that = this,\n                    lastChild,\n                    result;\n\n                if (!node.length || node.prev().length) {\n                    if (node.length) {\n                        result = node.prev();\n                    } else {\n                        result = that.root.children().last();\n                    }\n\n                    while (that._expanded(result)) {\n                        lastChild = subGroup(result).children().last();\n\n                        if (!lastChild.length) {\n                            break;\n                        }\n\n                        result = lastChild;\n                    }\n                } else {\n                    result = that.parent(node) || node;\n                }\n\n                return result;\n            },\n\n            scrollTo: function(item) {\n                if (item && item.length > 0) {\n                    item[0].scrollIntoView({ block: \"nearest\" });\n                }\n            },\n\n            _keydown: function(e) {\n                var that = this,\n                    key = e.keyCode,\n                    target,\n                    focused = that.current(),\n                    expanded = that._expanded(focused),\n                    checkbox = focused.find(\".k-checkbox-wrap\").first().find(\":checkbox\"),\n                    rtl = kendo.support.isRtl(that.element);\n\n                if (e.target != e.currentTarget) {\n                    return;\n                }\n\n                if ((!rtl && key == keys.RIGHT) || (rtl && key == keys.LEFT)) {\n                    if (expanded) {\n                        target = that._nextVisible(focused);\n                    } else if (!focused.find(\".k-treeview-leaf\").first().hasClass(DISABLED)) {\n                        that.expand(focused);\n                    }\n                } else if ((!rtl && key == keys.LEFT) || (rtl && key == keys.RIGHT)) {\n                    if (expanded && !focused.find(\".k-treeview-leaf\").first().hasClass(DISABLED)) {\n                        that.collapse(focused);\n                    } else {\n                        target = that.parent(focused);\n\n                        if (!that._enabled(target)) {\n                            target = undefined$1;\n                        }\n                    }\n                } else if (key == keys.DOWN) {\n                    target = that._nextVisible(focused);\n                } else if (key == keys.UP) {\n                    target = that._previousVisible(focused);\n                } else if (key == keys.HOME) {\n                    target = that._nextVisible($());\n                } else if (key == keys.END) {\n                    target = that._previousVisible($());\n                } else if (key == keys.ENTER && !focused.find(\".k-treeview-leaf\").first().hasClass(DISABLED)) {\n                    if (!focused.find(\".k-treeview-leaf\").first().hasClass(\"k-selected\")) {\n                        if (!that._trigger(SELECT, focused)) {\n                            that.select(focused);\n                        }\n                    }\n                } else if (key == keys.SPACEBAR && checkbox.length) {\n                    if (!focused.find(\".k-treeview-leaf\").first().hasClass(DISABLED)) {\n                        checkbox.prop(CHECKED, !checkbox.prop(CHECKED))\n                            .data(INDETERMINATE, false)\n                            .prop(INDETERMINATE, false);\n\n                        that._checkboxChange({ target: checkbox });\n                    }\n                    target = focused;\n                }\n\n                if (target) {\n                    e.preventDefault();\n\n                    if (focused[0] != target[0]) {\n                        that._trigger(NAVIGATE, target);\n                        that.current(target);\n                        that.scrollTo(target);\n                    }\n                }\n            },\n\n            _keypress: function(e) {\n                var that = this;\n                var delay = 300;\n                var focusedNode = that.current().get(0);\n                var matchToFocus;\n                var key = e.key;\n                var isPrintable = key.length === 1;\n\n                if (!isPrintable) {\n                    return;\n                }\n\n                if (!that._match) {\n                    that._match = \"\";\n                }\n\n                that._match += key;\n                clearTimeout(that._matchTimer);\n                that._matchTimer = setTimeout(function() {\n                    that._match = \"\";\n                }, delay);\n\n                matchToFocus = focusedNode &&\n                                that._matchNextByText(\n                                    Array.prototype.indexOf.call(that.element.find(\".k-treeview-item\"),\n                                    focusedNode), that._match\n                                );\n\n                if (!matchToFocus.length) {\n                    matchToFocus = that._matchNextByText(-1, that._match);\n                }\n\n                if (matchToFocus.get(0) && matchToFocus.get(0) !== focusedNode) {\n                    that._trigger(NAVIGATE, matchToFocus);\n                    that.current(matchToFocus);\n                }\n            },\n\n            _matchNextByText: function(startIndex, text) {\n                var element = this.element;\n                var textNodes = element.find(\".k-treeview-leaf\").filter(function(i, element) {\n                    return (i > startIndex &&\n                            $(element).is(\":visible\") &&\n                            $(element).text().toLowerCase().indexOf(text) === 0);\n                });\n\n                return textNodes.eq(0).closest(NODE);\n            },\n\n            _click: function(e) {\n                var that = this,\n                    node = $(e.currentTarget),\n                    contents = nodeContents(node.closest(NODE)),\n                    href = node.attr(\"href\"),\n                    shouldNavigate;\n\n                if (href) {\n                    shouldNavigate = href == \"#\" || href.indexOf(\"#\" + this.element.id + \"-\") >= 0;\n                } else {\n                    shouldNavigate = contents.length && !contents.children().length;\n                }\n\n                if (shouldNavigate) {\n                    e.preventDefault();\n                }\n\n                if (!node.hasClass(\".k-selected\") && !that._trigger(SELECT, node)) {\n                    that.select(node);\n                }\n            },\n\n            _wrapper: function() {\n                var that = this,\n                    element = that.element,\n                    wrapper, root,\n                    wrapperClasses = \"k-treeview\";\n\n                if (element.is(\"ul\")) {\n                    wrapper = element.wrap('<div />').parent();\n                    root = element;\n                } else {\n                    wrapper = element;\n                    root = wrapper.children(\"ul\").eq(0);\n                }\n\n                that.wrapper = wrapper.addClass(wrapperClasses);\n                that.root = root;\n            },\n\n            _getSelectedNode: function() {\n                return this.element.find(\".k-selected\").closest(NODE);\n            },\n\n            _group: function(item) {\n                var that = this,\n                    firstLevel = item.hasClass(KTREEVIEW),\n                    group = {\n                        firstLevel: firstLevel,\n                        expanded: firstLevel || that._expanded(item)\n                    },\n                    groupElement = item.children(\"ul\");\n\n                groupElement\n                    .addClass(that.templates.groupCssClass(group))\n                    .css(\"display\", group.expanded ? \"\" : \"none\");\n\n                if (!firstLevel) {\n                    groupElement.attr(\"role\", \"group\");\n                }\n\n                that._nodes(groupElement, group);\n            },\n\n            _nodes: function(groupElement, groupData) {\n                var that = this,\n                    nodes = groupElement.children(\"li\"),\n                    nodeData;\n\n                groupData = extend({ length: nodes.length }, groupData);\n\n                nodes.each(function(i, node) {\n                    node = $(node);\n\n                    nodeData = { index: i, expanded: that._expanded(node) };\n\n                    updateNodeHtml(node);\n\n                    that._updateNodeClasses(node, groupData, nodeData);\n\n                    // iterate over child nodes\n                    that._group(node);\n                });\n            },\n\n            _checkboxes: function() {\n                var options = this.options;\n                var checkboxes = options.checkboxes;\n                var defaultTemplate, checkbox;\n\n                if (checkboxes) {\n                    defaultTemplate = kendo.html.renderCheckBox($(\"<input/>\"), $.extend({}, options, {\n                        rounded: \"medium\"\n                    }));\n\n                    defaultTemplate = defaultTemplate.replace(\">\", \"\");\n\n                    checkbox = ({ item }) =>\n                    defaultTemplate +\n                    ` id=\"_${item.uid}\" aria-hidden=\"true\" type=\"checkbox\" tabindex=\"-1\"` +\n                    `${checkboxes.name ? 'name=\"' + checkboxes.name + '\"' : ''} ` +\n                    `${(item.enabled === false) ? 'disabled' : ''} ` +\n                    `${item.checked ? 'checked' : ''}/>`;\n\n                    checkboxes = extend({\n                        template: checkbox\n                    }, options.checkboxes);\n\n                    if (typeof checkboxes.template == STRING) {\n                        checkboxes.template = template(checkboxes.template);\n                    }\n\n                    options.checkboxes = checkboxes;\n                }\n            },\n\n            _updateNodeClasses: function(node, groupData, nodeData) {\n                var wrapper = node.children(\"div\"),\n                    group = node.children(\"ul\"),\n                    templates = this.templates;\n\n                if (node.hasClass(\"k-treeview\")) {\n                    return;\n                }\n\n                nodeData = nodeData || {};\n                nodeData.expanded = typeof nodeData.expanded != UNDEFINED ? nodeData.expanded : this._expanded(node);\n                nodeData.index = typeof nodeData.index != UNDEFINED ? nodeData.index : node.index();\n                nodeData.enabled = typeof nodeData.enabled != UNDEFINED ? nodeData.enabled : !wrapper.children(\".k-treeview-leaf\").hasClass(\"k-disabled\");\n\n                groupData = groupData || {};\n                groupData.firstLevel = typeof groupData.firstLevel != UNDEFINED ? groupData.firstLevel : node.parent().parent().hasClass(KTREEVIEW);\n                groupData.length = typeof groupData.length != UNDEFINED ? groupData.length : node.parent().children().length;\n\n                // li\n                node.addClass(\"k-treeview-item\");\n\n                // div\n                wrapper.removeClass(\"k-treeview-top k-treeview-mid k-treeview-bot\")\n                       .addClass(templates.cssClass(groupData, nodeData));\n\n                // chekbox\n                var checkbox = wrapper.find(\".k-checkbox\");\n                checkbox.removeClass(\"k-checkbox k-disabled\").addClass(templates.checkboxClass(nodeData));\n\n                // span / a\n                var textWrap = wrapper.children(\".k-treeview-leaf\");\n                var isLink = textWrap[0] && textWrap[0].nodeName.toLowerCase() == \"a\";\n                textWrap.removeClass(\"k-treeview-leaf k-link k-disabled\")\n                    .addClass(templates.textClass(nodeData, isLink));\n\n                // toggle button\n                if (group.length || node.attr(\"data-hasChildren\") == \"true\") {\n                    var toggleButton = wrapper.find(\".k-treeview-toggle\");\n                    var toggleIcon = toggleButton.children(`span`);\n                    toggleButton.removeClass(\"k-treeview-toggle k-disabled\").addClass(templates.toggleButtonClass(nodeData));\n\n                    // renderv icon\n                    templates.toggleIcon(toggleIcon, nodeData);\n\n\n                    group.addClass(\"k-treeview-group\");\n                }\n            },\n\n\n            _processNodes: function(nodes, callback) {\n                var that = this;\n                var items = that.element.find(nodes);\n                for (var i = 0; i < items.length; i++) {\n                    callback.call(that, i, $(items[i]).closest(NODE));\n                }\n            },\n\n            dataItem: function(node) {\n                var uid = $(node).closest(NODE).attr(kendo.attr(\"uid\")),\n                    dataSource = this.dataSource;\n\n                return dataSource && dataSource.getByUid(uid);\n            },\n\n            _dataItem: function(node) {\n                var uid = $(node).closest(NODE).attr(kendo.attr(\"uid\")),\n                    dataSource = this.dataSource;\n\n                return dataSource && this._dataSourceUids[uid];\n            },\n\n            _insertNode: function(nodeData, index, parentNode, insertCallback, collapsed) {\n                var that = this,\n                    group = subGroup(parentNode),\n                    updatedGroupLength = group.children().length + 1,\n                    childrenData,\n                    groupData = {\n                        firstLevel: parentNode.hasClass(KTREEVIEW),\n                        expanded: !collapsed,\n                        length: updatedGroupLength\n                    }, node, i, item, nodeHtml = \"\", firstChild, lastChild,\n                    append = function(item, group) {\n                        item.appendTo(group);\n                    };\n\n                for (i = 0; i < nodeData.length; i++) {\n                    item = nodeData[i];\n\n                    item.index = index + i;\n\n                    nodeHtml += that._renderItem({\n                        group: groupData,\n                        item: item\n                    });\n                }\n\n                node = $(nodeHtml);\n\n                if (!node.length) {\n                    return;\n                }\n\n                if (!group.length) {\n                    group = $(that._renderGroup({\n                        group: groupData\n                    }));\n\n                    kendo.applyStylesFromKendoAttributes(group, [\"display\"]);\n                    group.appendTo(parentNode);\n\n                    parentNode.attr(ARIA_EXPANDED, true);\n                }\n\n                insertCallback(node, group);\n\n                if (parentNode.hasClass(\"k-treeview-item\")) {\n                    updateNodeHtml(parentNode);\n                    that._updateNodeClasses(parentNode, groupData, { expanded: !collapsed });\n                }\n\n                firstChild = node.prev().first();\n                lastChild = node.next().last();\n\n                that._updateNodeClasses(firstChild, {}, { expanded: firstChild.attr(kendo.attr(\"expanded\")) == \"true\" });\n                that._updateNodeClasses(lastChild, {}, { expanded: lastChild.attr(kendo.attr(\"expanded\")) == \"true\" });\n\n                // render sub-nodes\n                for (i = 0; i < nodeData.length; i++) {\n                    item = nodeData[i];\n\n                    if (item.hasChildren) {\n                        childrenData = item.children.data();\n\n                        if (childrenData.length) {\n                            that._insertNode(childrenData, item.index, node.eq(i), append, !item.expanded);\n                        }\n                    }\n                }\n\n                return node;\n            },\n\n            _updateNodes: function(items, field) {\n                var that = this;\n                var i, node, nodeWrapper, item, isChecked, isCollapsed, kin;\n                var context = { treeview: that.options, item: item };\n                var render = field != \"expanded\" && field != \"checked\";\n\n                function setCheckedState(root, state) {\n                    if (root.is(\".k-treeview-group\")) {\n                        root.find(\".k-treeview-item:not([aria-disabled])\").attr(ARIA_CHECKED, state);\n                    }\n\n                    root.find(\".k-checkbox-wrap input[type=checkbox]:not([disabled])\")\n                        .prop(CHECKED, state)\n                        .data(INDETERMINATE, false)\n                        .prop(INDETERMINATE, false);\n                }\n\n                if (field == \"selected\") {\n                    item = items[0];\n\n                    node = that.findByUid(item.uid);\n                    kin = node.find(\".k-treeview-leaf\").first();\n\n                    kin.removeClass(\"k-hover\")\n                        .toggleClass(\"k-selected\", item[field])\n                        .end();\n\n                    if (item[field]) {\n                        that.current(node);\n                    }\n\n                    node.attr(ARIA_SELECTED, !!item[field]);\n                } else {\n                    var elements = $.map(items, function(item) {\n                        return that.findByUid(item.uid).children(\"div\");\n                    });\n\n                    for (i = 0; i < items.length; i++) {\n                        context.item = item = items[i];\n                        nodeWrapper = elements[i];\n                        node = nodeWrapper.parent();\n\n                        if (render) {\n                            if (kendo.unbind) {\n                                kendo.unbind(nodeWrapper);\n                            }\n                            nodeWrapper.children(\".k-treeview-leaf\")\n                                .html(that.templates.itemContent(context));\n                        }\n\n                        if (field == CHECKED) {\n                            isChecked = item[field];\n\n                            setCheckedState(nodeWrapper, isChecked);\n\n                            node.attr(ARIA_CHECKED, isChecked);\n\n                            if (that.options.checkboxes.checkChildren) {\n                                setCheckedState(node.children(\".k-treeview-group\"), isChecked);\n\n                                that._setChecked(item.children, isChecked);\n\n                                that._bubbleIndeterminate(node);\n                            }\n                        } else if (field == \"expanded\") {\n                            that._toggle(node, item, item[field]);\n                        } else if (field == \"enabled\") {\n                            node.find(\".k-checkbox-wrap input[type=checkbox]\").prop(\"disabled\", !item[field]);\n\n                            isCollapsed = !nodeContents(node).is(VISIBLE);\n\n                            node.removeAttr(ARIA_DISABLED);\n\n                            if (!item[field]) {\n                                if (item.selected) {\n                                    item.set(\"selected\", false);\n                                }\n\n                                if (item.expanded) {\n                                    item.set(\"expanded\", false);\n                                }\n\n                                isCollapsed = true;\n                                node.attr(ARIA_SELECTED, false)\n                                    .attr(ARIA_DISABLED, true);\n                            }\n\n                            that._updateNodeClasses(node, {}, { enabled: item[field], expanded: !isCollapsed });\n                        }\n\n                        if (nodeWrapper.length) {\n                            this.trigger(\"itemChange\", { item: nodeWrapper, data: item, ns: ui });\n                        }\n                    }\n                }\n            },\n\n            _appendItems: function(index, items, parentNode) {\n                var group = subGroup(parentNode);\n                var children = group.children();\n                var collapsed = !this._expanded(parentNode);\n\n                if (this.element === parentNode) {\n                    var dataItems = this.dataSource.data();\n                    var viewItems = this.dataSource.view();\n                    var rootItems = viewItems.length < dataItems.length ? viewItems : dataItems;\n                    index = rootItems.indexOf(items[0]);\n                } else if (items.length) {\n                    index = items[0].parent().indexOf(items[0]);\n                }\n\n                if (typeof index == UNDEFINED) {\n                    index = children.length;\n                }\n\n                this._insertNode(items, index, parentNode, function(item, group) {\n                    // insert node into DOM\n                    if (index >= children.length) {\n                        item.appendTo(group);\n                    } else {\n                        item.insertBefore(children.eq(index));\n                    }\n                }, collapsed);\n\n                this._updateNodeClasses(parentNode, {}, { expanded: !collapsed });\n\n                if (!collapsed) {\n                    subGroup(parentNode).css(\"display\", \"block\");\n                }\n            },\n\n            _refreshChildren: function(parentNode, items, index) {\n                var i, children, child;\n                var options = this.options;\n                var loadOnDemand = options.loadOnDemand;\n                var checkChildren = options.checkboxes && options.checkboxes.checkChildren;\n\n                subGroup(parentNode).empty();\n\n                if (!items.length) {\n                    updateNodeHtml(parentNode);\n                } else {\n                    this._appendItems(index, items, parentNode);\n\n                    children = subGroup(parentNode).children();\n\n                    if (loadOnDemand && checkChildren) {\n                        this._bubbleIndeterminate(children.last());\n                    }\n\n                    for (i = 0; i < children.length; i++) {\n                        child = children.eq(i);\n                        this.trigger(\"itemChange\", {\n                            item: child.children(\"div\"),\n                            data: items[i],\n                            ns: ui\n                        });\n                    }\n                }\n            },\n\n            _refreshRoot: function(items) {\n                var groupHtml = this._renderGroup({\n                        items: items,\n                        group: {\n                            firstLevel: true,\n                            expanded: true\n                        }\n                    });\n\n                if (this.root.length && this.root[0].parentElement) {\n                    var group = $(groupHtml);\n\n                    this.root\n                        .attr(\"class\", group.attr(\"class\"))\n                        .html(group.html());\n                } else {\n                    this.root = this.wrapper.html(groupHtml).children(\"ul\");\n                }\n\n                var elements = this.root.children(\".k-treeview-item\");\n                for (var i = 0; i < items.length; i++) {\n                    this.trigger(\"itemChange\", {\n                        item: elements.eq(i),\n                        data: items[i],\n                        ns: ui\n                    });\n                }\n            },\n\n            refresh: function(e) {\n                var node = e.node;\n                var action = e.action;\n                var items = e.items;\n                var parentNode = this.wrapper;\n                var options = this.options;\n                var loadOnDemand = options.loadOnDemand;\n                var checkChildren = options.checkboxes && options.checkboxes.checkChildren;\n                var i;\n\n                if (this._skip) {\n                    return;\n                }\n\n                for (i = 0; i < items.length; i++) {\n                    this._dataSourceUids[items[i].uid] = items[i];\n                }\n\n                if (e.field) {\n                    if (!items[0] || !items[0].level) {\n                        return;\n                    }\n\n                    return this._updateNodes(items, e.field);\n                }\n\n                if (node) {\n                    parentNode = this.findByUid(node.uid);\n                    this._progress(parentNode, false);\n                }\n\n                if (checkChildren && action != \"remove\") {\n                    var bubble = false;\n\n                    for (i = 0; i < items.length; i++) {\n                        if (\"checked\" in items[i]) {\n                            bubble = true;\n                            break;\n                        }\n                    }\n\n                    if (!bubble && node && node.checked) {\n                        for (i = 0; i < items.length; i++) {\n                            items[i].checked = true;\n                        }\n                    }\n                }\n\n                if (action == \"add\") {\n                    this._appendItems(e.index, items, parentNode);\n                } else if (action == \"remove\") {\n                    this._remove(this.findByUid(items[0].uid), false);\n                } else if (action == \"itemchange\") {\n                    this._updateNodes(items);\n                } else if (action == \"itemloaded\") {\n                    this._refreshChildren(parentNode, items, e.index);\n                } else {\n                    this._refreshRoot(items);\n                    this.element.attr(ARIA_BUSY, false);\n                }\n\n                if (action != \"remove\") {\n                    for (i = 0; i < items.length; i++) {\n                        if (!loadOnDemand || items[i].expanded || items[i]._loaded) {\n                            items[i].load();\n                        }\n                    }\n                }\n\n                this.wrapper.find(\">ul\").attr(\"role\", \"tree\");\n\n\n                this.trigger(DATABOUND, { node: node ? parentNode : undefined$1 });\n                if (this.dataSource.filter() && this.options.checkboxes.checkChildren) {\n                    this.updateIndeterminate(parentNode);\n                }\n            },\n\n            _error: function(e) {\n                var node = e.node && this.findByUid(e.node.uid);\n                var retryHtml = this.templates.retry({ messages: this.options.messages });\n\n                if (node) {\n                    this._progress(node, false);\n                    this._expanded(node, false);\n                    nodeIcon(node).replaceWith(ui.icon($(TOGGLE_ICON_ELM), { icon: \"arrow-rotate-cw\" }));\n                    e.node.loaded(false);\n                } else {\n                    this._progress(false);\n                    this.dataSource.data([]);\n                    this.element.html(retryHtml);\n                }\n            },\n\n            _retryRequest: function(e) {\n                e.preventDefault();\n\n                this.dataSource.fetch(this._attemptLoadCompleted.bind(this));\n            },\n\n            expand: function(nodes) {\n                this._processNodes(nodes, function(index, item) {\n                    this.toggle(item, true);\n                });\n            },\n\n            collapse: function(nodes) {\n                this._processNodes(nodes, function(index, item) {\n                    this.toggle(item, false);\n                });\n            },\n\n            enable: function(nodes, enable) {\n                if (typeof nodes === \"boolean\") {\n                    enable = nodes;\n                    nodes = this.items();\n                } else {\n                    enable = arguments.length == 2 ? !!enable : true;\n                }\n\n                this._processNodes(nodes, function(index, item) {\n                    this.dataItem(item).set(\"enabled\", enable);\n                });\n            },\n\n            current: function(node) {\n                var that = this,\n                    current = that._current,\n                    element = that.element;\n\n                if (arguments.length > 0 && node && node.length) {\n                    if (current) {\n                        current.find(\".k-treeview-leaf\").first().removeClass(\"k-focus\");\n                    }\n\n                    current = that._current = $(node, element).closest(NODE);\n                    current.find(\".k-treeview-leaf\").first().addClass(\"k-focus\");\n                    that._updateActiveDescendant();\n\n                    return;\n                }\n\n                if (!current) {\n                    current = that._nextVisible($());\n                }\n\n                return current;\n            },\n\n            _updateActiveDescendant: function() {\n                var current = this._current,\n                    id = current[0].id || this._ariaId,\n                    prev = this.element.find(\"#\" + this._ariaId);\n\n                if (prev.length > 0) {\n                    prev.removeAttr(\"id\");\n                }\n\n                this.root.removeAttr(ARIA_ACTIVEDESCENDANT);\n                current.attr(\"id\", id);\n                this.root.attr(ARIA_ACTIVEDESCENDANT, id);\n            },\n\n            select: function(node) {\n                var that = this,\n                    element = that.element;\n\n                if (!arguments.length) {\n                    return element.find(\".k-selected\").closest(NODE);\n                }\n\n                node = $(node, element).closest(NODE);\n\n                element.find(\".k-selected\").each(function() {\n                    var dataItem = that.dataItem(this);\n                    if (dataItem) {\n                        dataItem.set(\"selected\", false);\n                        delete dataItem.selected;\n                    } else {\n                        $(this).removeClass(\"k-selected\");\n                    }\n                });\n\n                if (node.length) {\n                    that.dataItem(node).set(\"selected\", true);\n                    that._clickTarget = node;\n                }\n\n                that.trigger(CHANGE);\n            },\n\n            _toggle: function(node, dataItem, expand) {\n                var options = this.options;\n                var contents = nodeContents(node);\n                var direction = expand ? \"expand\" : \"collapse\";\n                var loaded;\n\n                if (contents.data(\"animating\")) {\n                    return;\n                }\n\n                loaded = dataItem && dataItem.loaded();\n\n                if (expand && !loaded) {\n                    if (options.loadOnDemand) {\n                        this._progress(node, true);\n                    }\n\n                    contents.remove();\n                    dataItem.load();\n                } else {\n                    this._updateNodeClasses(node, {}, { expanded: expand });\n\n                    if (!expand) {\n                        contents.css(\"height\", contents.height()).css(\"height\");\n                    }\n\n                    contents\n                        .kendoStop(true, true)\n                        .kendoAnimate(extend(\n                            { reset: true },\n                            options.animation[direction],\n                            { complete: function() {\n                                if (expand) {\n                                    contents.css(\"height\", \"\");\n                                }\n                            } }\n                        ));\n                }\n\n            },\n\n            toggle: function(node, expand) {\n                node = $(node);\n\n                if (!nodeIcon(node)) {\n                    return;\n                }\n\n                if (arguments.length == 1) {\n                    expand = !this._expanded(node);\n                }\n\n                this._expanded(node, expand);\n            },\n\n            destroy: function() {\n                var that = this;\n\n                Widget.fn.destroy.call(that);\n\n                that.wrapper.off(NS);\n                that.wrapper.find(\".k-checkbox-wrap :checkbox\").off(NS);\n                that._clickHandler = null;\n\n                that._unbindDataSource();\n\n                if (that.dragging) {\n                    that.dragging.destroy();\n                }\n\n                that._dataSourceUids = {};\n\n                kendo.destroy(that.element);\n\n                that.root = that.wrapper = that.element = null;\n            },\n\n            _expanded: function(node, value, force) {\n                var expandedAttr = kendo.attr(\"expanded\");\n                var dataItem;\n                var expanded = value;\n                var direction = expanded ? \"expand\" : \"collapse\";\n\n                if (node.children().hasClass(\"k-hidden\")) {\n                    node.children().removeClass(\"k-hidden\");\n                }\n\n                if (arguments.length == 1) {\n                    dataItem = this._dataItem(node);\n                    return node.attr(expandedAttr) === \"true\" || (dataItem && dataItem.expanded);\n                }\n\n                dataItem = this.dataItem(node);\n\n                if (nodeContents(node).data(\"animating\")) {\n                    return;\n                }\n\n                if (force || !this._trigger(direction, node)) {\n                    if (expanded) {\n                        node.attr(expandedAttr, \"true\");\n                        node.attr(ARIA_EXPANDED, \"true\");\n                    } else {\n                        node.removeAttr(expandedAttr);\n                        node.attr(ARIA_EXPANDED, \"false\");\n                    }\n\n                    if (dataItem) {\n                        dataItem.set(\"expanded\", expanded);\n                        // necessary when expanding an item yields an error and the item is not expanded as a result\n                        expanded = dataItem.expanded;\n                    }\n                }\n            },\n\n            _progress: function(node, showProgress) {\n                var element = this.element;\n                var loadingText = this.templates.loading({ messages: this.options.messages });\n\n                if (arguments.length == 1) {\n                    showProgress = node;\n\n                    if (showProgress) {\n                        element.html(loadingText);\n                    } else {\n                        element.empty();\n                    }\n\n                    this.element.attr(ARIA_BUSY, showProgress);\n                } else {\n                    nodeIcon(node).replaceWith(\n                        $(TOGGLE_ICON_ELM)\n                            .toggleClass('k-i-loading', showProgress)\n                            .toggleClass('k-icon', showProgress));\n                    node.attr(ARIA_BUSY, showProgress);\n                }\n            },\n\n            text: function(node, text) {\n                var dataItem = this.dataItem(node),\n                    fieldBindings = this.options[bindings.text],\n                    level = dataItem.level(),\n                    length = fieldBindings.length,\n                    field = fieldBindings[Math.min(level, length - 1)];\n\n                if (text) {\n                    dataItem.set(field, text);\n                } else {\n                    return dataItem[field];\n                }\n            },\n\n            _objectOrSelf: function(node) {\n                return $(node).closest(\"[data-role=treeview]\").data(\"kendoTreeView\") || this;\n            },\n\n            _dataSourceMove: function(nodeData, group, parentNode, callback) {\n                var referenceDataItem,\n                    destTreeview = this._objectOrSelf(parentNode || group),\n                    destDataSource = destTreeview.dataSource;\n                var loadPromise = $.Deferred().resolve().promise();\n\n                if (parentNode && parentNode[0] != destTreeview.element[0]) {\n                    referenceDataItem = destTreeview.dataItem(parentNode);\n\n                    if (!referenceDataItem.loaded()) {\n                        destTreeview._progress(parentNode, true);\n                        loadPromise = referenceDataItem.load();\n                    }\n\n                    if (parentNode != this.root) {\n                        destDataSource = referenceDataItem.children;\n\n                        if (!destDataSource || !(destDataSource instanceof HierarchicalDataSource)) {\n                            referenceDataItem._initChildren();\n                            referenceDataItem.loaded(true);\n                            destDataSource = referenceDataItem.children;\n                        }\n                    }\n                }\n\n                nodeData = this._toObservableData(nodeData);\n\n                return callback.call(destTreeview, destDataSource, nodeData, loadPromise);\n            },\n\n            _toObservableData: function(node) {\n                var dataItem = node, dataSource, uid;\n\n                if (isJQueryInstance(node) || isDomElement(node)) {\n                    dataSource = this._objectOrSelf(node).dataSource;\n                    uid = $(node).attr(kendo.attr(\"uid\"));\n                    dataItem = dataSource.getByUid(uid);\n\n                    if (dataItem) {\n                        dataItem = dataSource.remove(dataItem);\n                    }\n                }\n\n                return dataItem;\n            },\n\n            _insert: function(data, model, index) {\n                if (!(model instanceof kendo.data.ObservableArray)) {\n                    if (!isArray(model)) {\n                        model = [model];\n                    }\n                } else {\n                    // items will be converted to new Node instances\n                    model = model.toJSON();\n                }\n\n                var parentNode = data.parent();\n\n                if (parentNode && parentNode._initChildren) {\n                    parentNode.hasChildren = true;\n                    parentNode._initChildren();\n                }\n\n                data.splice.apply(data, [ index, 0 ].concat(model));\n\n                return this.findByUid(data[index].uid);\n            },\n\n            insertAfter: insertAction(1),\n\n            insertBefore: insertAction(0),\n\n            append: function(nodeData, parentNode, success) {\n                var group = this.root;\n\n                if (parentNode && nodeData instanceof jQuery && parentNode[0] === nodeData[0]) {\n                    return;\n                }\n\n                parentNode = parentNode && parentNode.length ? parentNode : null;\n\n                if (parentNode) {\n                    group = subGroup(parentNode);\n                }\n\n                return this._dataSourceMove(nodeData, group, parentNode, function(dataSource, model, loadModel) {\n                    var inserted;\n                    var that = this;\n\n                    function add() {\n                        if (parentNode) {\n                            that._expanded(parentNode, true, true);\n                        }\n\n                        var data = dataSource.data(),\n                            index = Math.max(data.length, 0);\n\n                        return that._insert(data, model, index);\n                    }\n\n                    loadModel.done(function() {\n                        inserted = add();\n                        success = success || $.noop;\n                        success(inserted);\n                    });\n\n                    return inserted || null;\n                });\n            },\n\n            _remove: function(node, keepData) {\n                var that = this,\n                    parentNode,\n                    prevSibling, nextSibling;\n\n                node = $(node, that.element);\n\n                if (node.attr(\"id\") === that.root.attr(ARIA_ACTIVEDESCENDANT)) {\n                    that.root.removeAttr(ARIA_ACTIVEDESCENDANT);\n                }\n\n                parentNode = node.parent().parent();\n                prevSibling = node.prev();\n                nextSibling = node.next();\n\n                node[keepData ? \"detach\" : \"remove\"]();\n\n                if (parentNode.hasClass(\"k-treeview-item\")) {\n                    updateNodeHtml(parentNode);\n                    that._updateNodeClasses(parentNode);\n                }\n\n                that._updateNodeClasses(prevSibling);\n                that._updateNodeClasses(nextSibling);\n\n                return node;\n            },\n\n            remove: function(node) {\n                var dataItem = this.dataItem(node);\n                if (dataItem) {\n                    this.dataSource.remove(dataItem);\n                }\n            },\n\n            detach: function(node) {\n                return this._remove(node, true);\n            },\n\n            findByText: function(text) {\n                return $(this.element).find(\".k-treeview-leaf\").filter(function(i, element) {\n                    return $(element).text() == text;\n                }).closest(NODE);\n            },\n\n            findByUid: function(uid) {\n                var items = this.element.find(\".k-treeview-item\");\n                var uidAttr = kendo.attr(\"uid\");\n                var result;\n\n                for (var i = 0; i < items.length; i++) {\n                    if (items[i].getAttribute(uidAttr) == uid) {\n                        result = items[i];\n                        break;\n                    }\n                }\n\n                return $(result);\n            },\n\n            expandPath: function(path, complete) {\n                var treeview = this;\n                var nodeIds = path.slice(0);\n                var callback = complete || $.noop;\n\n                function proceed() {\n                    nodeIds.shift();\n\n                    if (nodeIds.length) {\n                        expand(nodeIds[0]).then(proceed);\n                    } else {\n                        callback.call(treeview);\n                    }\n                }\n\n                function expand(id) {\n                    var result = $.Deferred();\n                    var node = treeview.dataSource.get(id);\n                    var expandedAttr = kendo.attr(\"expanded\");\n                    var nodeElement;\n\n                    if (node) {\n                        nodeElement = treeview.findByUid(node.uid);\n\n                        if (node.loaded()) {\n                            node.set(\"expanded\", true);\n                            nodeElement.attr(expandedAttr, true);\n                            nodeElement.attr(ARIA_EXPANDED, true);\n                            result.resolve();\n                        } else {\n                            // manually show progress of the node\n                            // should be moved to `refresh`\n                            // if the datasource starts triggering a `requestStart` event for nodes\n                            treeview._progress(nodeElement, true);\n\n                            node.load().then(function() {\n                                node.set(\"expanded\", true);\n                                nodeElement.attr(expandedAttr, true);\n                                nodeElement.attr(ARIA_EXPANDED, true);\n                                result.resolve();\n                            });\n                        }\n                    } else {\n                        result.resolve();\n                    }\n\n                    return result.promise();\n                }\n\n                // expand async nodes\n                expand(nodeIds[0]).then(proceed);\n            },\n\n            _parentIds: function(node) {\n                var parent = node && node.parentNode();\n                var parents = [];\n                while (parent && parent.parentNode) {\n                    parents.unshift(parent.id);\n                    parent = parent.parentNode();\n                }\n\n                return parents;\n            },\n\n            expandTo: function(node) {\n                if (!(node instanceof kendo.data.Node)) {\n                    node = this.dataSource.get(node);\n                }\n\n                var parents = this._parentIds(node);\n\n                this.expandPath(parents);\n            },\n\n            _renderItem: function(options) {\n                if (!options.group) {\n                    options.group = {};\n                }\n\n                options.treeview = this.options;\n\n                options.r = this.templates;\n\n                return this.templates.item(options);\n            },\n\n            _renderGroup: function(options) {\n                var that = this;\n\n                options.renderItems = function(options) {\n                        var html = \"\",\n                            i = 0,\n                            items = options.items,\n                            len = items ? items.length : 0,\n                            group = options.group;\n\n                        group.length = len;\n\n                        for (; i < len; i++) {\n                            options.group = group;\n                            options.item = items[i];\n                            options.item.index = i;\n                            html += that._renderItem(options);\n                        }\n\n                        return html;\n                    };\n\n                options.r = that.templates;\n\n                return that.templates.group(options);\n            }\n        });\n\n        kendo.cssProperties.registerPrefix(\"TreeView\", \"k-treeview-\");\n\n        ui.plugin(TreeView);\n    })(window.kendo.jQuery);\n    var kendo$1 = kendo;\n\n    exports.__meta__ = __meta__;\n    exports.default = kendo$1;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n\n}));\n"]}