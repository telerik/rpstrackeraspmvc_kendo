{"version":3,"file":"kendo.draggable.cmn.chunk.min.js","names":["global","factory","exports","module","define","amd","globalThis","self","kendo","_globals","DraggableCmnChunk","this","proxy","a","b","e","bind","el","event","callback","addEventListener","unbind","removeEventListener","noop","preventDefault","touchRegExp","normalizeEvent","type","match","pageX","changedTouches","pageY","clientX","clientY","originalEvent","isTouch","offsetX","offsetY","ctrlKey","shiftKey","altKey","Draggable","ref","this$1$1","press","drag","release","mouseOnly","_pressHandler","_dragHandler","_releaseHandler","_ignoreMouse","_mouseOnly","_touchstart","touches","length","_touchmove","_touchend","setTimeout","_restoreMouse","_mousedown","which","document","_mousemove","_mouseup","_pointerdown","isPrimary","button","_pointermove","_pointerup","prototypeAccessors","configurable","supportPointerEvent","window","PointerEvent","get","_element","ownerDocument","prototype","cancelDrag","bindTo","element","_unbindFromCurrent","_bindToCurrent","_usePointers","update","destroy","Object","defineProperties","default","D","__meta__","id","name","category","description","depends","hidden","chunk"],"sources":["kendo.draggable.cmn.chunk.js"],"mappings":"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","ignoreList":[],"sourcesContent":["(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n    typeof define === 'function' && define.amd ? define(['exports'], factory) :\n    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory((global.kendo = global.kendo || {}, global.kendo._globals = global.kendo._globals || {}, global.kendo._globals.DraggableCmnChunk = {})));\n})(this, (function (exports) {\n    const __meta__ = {\n        id: \"draggable.cmn.chunk\",\n        name: \"DraggableCmnChunk\",\n        category: \"web\",\n        description: \"A reusable outputed chunk of code\",\n        depends: [],\n        hidden: true,\n        chunk: true\n    };\n\n    var proxy = function (a, b) { return function (e) { return b(a(e)); }; };\n\n    var bind = function (el, event, callback) { return el.addEventListener && el.addEventListener(event, callback); };\n\n    var unbind = function (el, event, callback) { return el && el.removeEventListener && el.removeEventListener(event, callback); };\n\n    var noop = function () { /* empty */ };\n\n    var preventDefault = function (e) { return e.preventDefault(); };\n\n    var touchRegExp = /touch/;\n\n    // 300ms is the usual mouse interval;\n    // // However, an underpowered mobile device under a heavy load may queue mouse events for a longer period.\n    var IGNORE_MOUSE_TIMEOUT = 2000;\n\n    function normalizeEvent(e) {\n        if (e.type.match(touchRegExp)) {\n            return {\n                pageX: e.changedTouches[0].pageX,\n                pageY: e.changedTouches[0].pageY,\n                clientX: e.changedTouches[0].clientX,\n                clientY: e.changedTouches[0].clientY,\n                type: e.type,\n                originalEvent: e,\n                isTouch: true\n            };\n        }\n\n        return {\n            pageX: e.pageX,\n            pageY: e.pageY,\n            clientX: e.clientX,\n            clientY: e.clientY,\n            offsetX: e.offsetX,\n            offsetY: e.offsetY,\n            type: e.type,\n            ctrlKey: e.ctrlKey,\n            shiftKey: e.shiftKey,\n            altKey: e.altKey,\n            originalEvent: e\n        };\n    }\n\n    var Draggable = function Draggable(ref) {\n        var this$1$1 = this;\n        var press = ref.press; if ( press === void 0 ) press = noop;\n        var drag = ref.drag; if ( drag === void 0 ) drag = noop;\n        var release = ref.release; if ( release === void 0 ) release = noop;\n        var mouseOnly = ref.mouseOnly; if ( mouseOnly === void 0 ) mouseOnly = false;\n\n        this._pressHandler = proxy(normalizeEvent, press);\n        this._dragHandler = proxy(normalizeEvent, drag);\n        this._releaseHandler = proxy(normalizeEvent, release);\n        this._ignoreMouse = false;\n        this._mouseOnly = mouseOnly;\n\n        this._touchstart = function (e) {\n            if (e.touches.length === 1) {\n                this$1$1._pressHandler(e);\n            }\n        };\n\n        this._touchmove = function (e) {\n            if (e.touches.length === 1) {\n                this$1$1._dragHandler(e);\n            }\n        };\n\n        this._touchend = function (e) {\n            // the last finger has been lifted, and the user is not doing gesture.\n            // there might be a better way to handle this.\n            if (e.touches.length === 0 && e.changedTouches.length === 1) {\n                this$1$1._releaseHandler(e);\n                this$1$1._ignoreMouse = true;\n                setTimeout(this$1$1._restoreMouse, IGNORE_MOUSE_TIMEOUT);\n            }\n        };\n\n        this._restoreMouse = function () {\n            this$1$1._ignoreMouse = false;\n        };\n\n        this._mousedown = function (e) {\n            var which = e.which;\n\n            if ((which && which > 1) || this$1$1._ignoreMouse) {\n                return;\n            }\n\n            bind(this$1$1.document, \"mousemove\", this$1$1._mousemove);\n            bind(this$1$1.document, \"mouseup\", this$1$1._mouseup);\n            this$1$1._pressHandler(e);\n        };\n\n        this._mousemove = function (e) {\n            this$1$1._dragHandler(e);\n        };\n\n        this._mouseup = function (e) {\n            unbind(this$1$1.document, \"mousemove\", this$1$1._mousemove);\n            unbind(this$1$1.document, \"mouseup\", this$1$1._mouseup);\n            this$1$1._releaseHandler(e);\n        };\n\n        this._pointerdown = function (e) {\n            if (e.isPrimary && e.button === 0) {\n                bind(this$1$1.document, \"pointermove\", this$1$1._pointermove);\n                bind(this$1$1.document, \"pointerup\", this$1$1._pointerup);\n                bind(this$1$1.document, \"pointercancel\", this$1$1._pointerup);\n                bind(this$1$1.document, \"contextmenu\", preventDefault);\n\n                this$1$1._pressHandler(e);\n            }\n        };\n\n        this._pointermove = function (e) {\n            if (e.isPrimary) {\n                this$1$1._dragHandler(e);\n            }\n        };\n\n        this._pointerup = function (e) {\n            if (e.isPrimary) {\n                unbind(this$1$1.document, \"pointermove\", this$1$1._pointermove);\n                unbind(this$1$1.document, \"pointerup\", this$1$1._pointerup);\n                unbind(this$1$1.document, \"pointercancel\", this$1$1._pointerup);\n                unbind(this$1$1.document, \"contextmenu\", preventDefault);\n\n                this$1$1._releaseHandler(e);\n            }\n        };\n    };\n\n    var prototypeAccessors = { document: { configurable: true } };\n\n    Draggable.supportPointerEvent = function supportPointerEvent () {\n        return (typeof window !== 'undefined') && window.PointerEvent;\n    };\n\n    prototypeAccessors.document.get = function () {\n        return this._element\n        ? this._element.ownerDocument\n        : document;\n    };\n\n    Draggable.prototype.cancelDrag = function cancelDrag () {\n        unbind(this.document, \"pointermove\", this._pointermove);\n        unbind(this.document, \"pointerup\", this._pointerup);\n        unbind(this.document, \"pointercancel\", this._pointerup);\n    };\n\n    Draggable.prototype.bindTo = function bindTo (element) {\n        if (element === this._element) {\n            return;\n        }\n\n        if (this._element) {\n            this._unbindFromCurrent();\n        }\n\n        this._element = element;\n        this._bindToCurrent();\n    };\n\n    Draggable.prototype._bindToCurrent = function _bindToCurrent () {\n        var element = this._element;\n\n        if (this._usePointers()) {\n            bind(element, \"pointerdown\", this._pointerdown);\n            return;\n        }\n\n        bind(element, \"mousedown\", this._mousedown);\n\n        if (!this._mouseOnly) {\n            bind(element, \"touchstart\", this._touchstart);\n            bind(element, \"touchmove\", this._touchmove);\n            bind(element, \"touchend\", this._touchend);\n        }\n    };\n\n    Draggable.prototype._unbindFromCurrent = function _unbindFromCurrent () {\n        var element = this._element;\n\n        if (this._usePointers()) {\n            unbind(element, \"pointerdown\", this._pointerdown);\n            unbind(this.document, \"pointermove\", this._pointermove);\n            unbind(this.document, \"pointerup\", this._pointerup);\n            unbind(this.document, \"contextmenu\", preventDefault);\n            unbind(this.document, \"pointercancel\", this._pointerup);\n            return;\n        }\n\n        unbind(element, \"mousedown\", this._mousedown);\n\n        if (!this._mouseOnly) {\n            unbind(element, \"touchstart\", this._touchstart);\n            unbind(element, \"touchmove\", this._touchmove);\n            unbind(element, \"touchend\", this._touchend);\n        }\n    };\n\n    Draggable.prototype._usePointers = function _usePointers () {\n        return !this._mouseOnly && Draggable.supportPointerEvent();\n    };\n\n    Draggable.prototype.update = function update (ref) {\n            var press = ref.press; if ( press === void 0 ) press = noop;\n            var drag = ref.drag; if ( drag === void 0 ) drag = noop;\n            var release = ref.release; if ( release === void 0 ) release = noop;\n            var mouseOnly = ref.mouseOnly; if ( mouseOnly === void 0 ) mouseOnly = false;\n\n        this._pressHandler = proxy(normalizeEvent, press);\n        this._dragHandler = proxy(normalizeEvent, drag);\n        this._releaseHandler = proxy(normalizeEvent, release);\n        this._mouseOnly = mouseOnly;\n    };\n\n    Draggable.prototype.destroy = function destroy () {\n        this._unbindFromCurrent();\n        this._element = null;\n    };\n\n    Object.defineProperties( Draggable.prototype, prototypeAccessors );\n\n    // Re-export as \"default\" field to address a bug\n    // where the ES Module is imported by CommonJS code.\n    //\n    // See https://github.com/telerik/kendo-angular/issues/1314\n    Draggable.default = Draggable;\n\n    exports.D = Draggable;\n    exports.__meta__ = __meta__;\n\n}));\n"]}