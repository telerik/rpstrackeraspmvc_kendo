{"version":3,"file":"kendo.signature.min.js","names":["global","factory","exports","module","require","define","amd","globalThis","self","kendo","_globals","Signature","this","window","inputs","kendoDrawing","_a","util","elementOffset","limitValue","Point","geometry","Rect","transform","noop","SignaturePad","element","options","lastMoveTime","Object","assign","scale","precision","samplingRate","smooth","color","backgroundColor","strokeWidth","onChange","onDraw","onDrawEnd","pathOptions","stroke","width","lineCap","lineJoin","initSurface","attachEvents","prototype","destroy","detachEvents","clear","rootGroup","path","defineProperty","get","Boolean","points","enumerable","configurable","toString","set","value","MultiPath","parse","append","loadImage","data","size","height","contentWidth","contentHeight","importWidth","importHeight","scaleX","scaleY","Math","min","img","Image","exportImage","_b","exportWidth","exportHeight","exportRect","exportGroup","Group","clip","Path","fromRect","contentGroup","frame","fill","children","push","apply","resize","surface","setOptions","background","Surface","create","type","style","touchAction","offsetWidth","offsetHeight","draw","onPointerDown","bind","onPointerMove","onPointerUp","addEventListener","removeEventListener","touchPoint","e","offset","pageX","pageY","left","top","readonly","isPrimary","button","isMainButton","setPointerCapture","pointerId","point","moveTo","now","Date","getTime","lastPoint","length","minDelta","distanceTo","lineTo","segments","curveFromPoints","paths","splice","pathData","common","drawing","$","Widget","ui","Dialog","html","outerWidth","_outerWidth","outerHeight","_outerHeight","Pad","ns","CHANGE","OPEN","CLOSE","CLICK","extend","init","that","fn","call","_createElements","maximizable","_createInput","wrapper","getComputedStyle","_createPad","_createDialogPad","_attachHandlers","_assignLabel","_pad","_dialogPad","enable","name","fillMode","hideLine","label","popupScale","rounded","exportScale","events","currentOptions","oldBtnClass","getValidCssClass","btns","add","_dialogPadEl","find","targets","removeClass","_clearCssClasses","deepExtend","_destroyPad","_destroyDialog","pad","i","copyPath","_hideLine","_applyCssClasses","toggle","addClass","removeAttr","close","_dialog","open","off","empty","toggleClass","renderButton","icon","insertAfter","_dialogEl","_value","_input","val","reset","attr","_ariaLabel","on","trigger","autocomplete","required","appendTo","remove","line","maximize","padOptions","then","hide","show","canvas","title","closable","keyCode","keys","ESC","cssProperties","registerPrefix","plugin","jQuery","kendo$1","__meta__","id","category","description","depends","default"],"sources":["kendo.signature.js"],"mappings":"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","ignoreList":[],"sourcesContent":["(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('kendo.core.js'), require('kendo.drawing.js'), require('kendo.dialog.js'), require('kendo.html.button.js')) :\n    typeof define === 'function' && define.amd ? define(['exports', 'kendo.core', 'kendo.drawing', 'kendo.dialog', 'kendo.html.button'], factory) :\n    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory((global.kendo = global.kendo || {}, global.kendo._globals = global.kendo._globals || {}, global.kendo._globals.Signature = {})));\n})(this, (function (exports) {\n    (function () {\n\n    window.kendo = window.kendo || {};\n    window.kendo.inputs = window.kendo.inputs || {};\n    (function (exports, kendoDrawing) {\n\n        var _a = kendoDrawing.util, elementOffset = _a.elementOffset, limitValue = _a.limitValue;\n\n        var Point = kendo.geometry.Point, Rect = kendo.geometry.Rect, transform = kendo.geometry.transform;\n        var noop = function () { };\n        var DECIMAL_DIGITS = 3;\n        var DEFAULT_COLOR = '#000';\n        var DEFAULT_BACKGROUND_COLOR = '#fff';\n        var DEFAULT_PRECISION = 1;\n        var DEFAULT_SAMPLING_RATE = 200; // Updates per second\n        var DEFAULT_STROKE_WIDTH = 1;\n        var DEFAULT_WIDTH = 750;\n        var DEFAULT_HEIGHT = 250;\n        var DEFAULT_SCALE = 1;\n        // Export images at maximized scale (3x) and 2x pixel density to cover HiDPI screens.\n        var DEFAULT_EXPORT_SCALE = 6;\n        var SignaturePad = /** @class */ (function () {\n            function SignaturePad(element, options) {\n                if (options === void 0) { options = {}; }\n                this.element = element;\n                this.lastMoveTime = 0;\n                this.options = Object.assign({\n                    scale: DEFAULT_SCALE,\n                    precision: DEFAULT_PRECISION,\n                    samplingRate: DEFAULT_SAMPLING_RATE,\n                    smooth: options.smooth !== false,\n                    color: options.color || DEFAULT_COLOR,\n                    backgroundColor: options.backgroundColor || DEFAULT_BACKGROUND_COLOR,\n                    strokeWidth: DEFAULT_STROKE_WIDTH,\n                    onChange: noop,\n                    onDraw: noop,\n                    onDrawEnd: noop\n                }, options);\n                this.pathOptions = {\n                    stroke: {\n                        color: this.options.color,\n                        width: this.options.strokeWidth,\n                        lineCap: 'round',\n                        lineJoin: 'round'\n                    }\n                };\n                this.initSurface();\n                this.attachEvents();\n            }\n            SignaturePad.prototype.destroy = function () {\n                this.detachEvents();\n            };\n            SignaturePad.prototype.clear = function () {\n                this.rootGroup.clear();\n                this.path = null;\n            };\n            Object.defineProperty(SignaturePad.prototype, \"isDrawing\", {\n                get: function () {\n                    return Boolean(this.points);\n                },\n                enumerable: false,\n                configurable: true\n            });\n            Object.defineProperty(SignaturePad.prototype, \"pathData\", {\n                get: function () {\n                    var _a;\n                    return (_a = this.path) === null || _a === void 0 ? void 0 : _a.toString(DECIMAL_DIGITS);\n                },\n                set: function (value) {\n                    this.clear();\n                    this.path = kendoDrawing.MultiPath.parse(value, this.pathOptions);\n                    this.rootGroup.append(this.path);\n                },\n                enumerable: false,\n                configurable: true\n            });\n            SignaturePad.prototype.loadImage = function (data, size) {\n                if (size === void 0) { size = []; }\n                if (!data) {\n                    this.clear();\n                    return;\n                }\n                var _a = this.size, width = _a[0], height = _a[1];\n                var contentWidth = width / this.options.scale;\n                var contentHeight = height / this.options.scale;\n                var importWidth = size[0] || contentWidth * DEFAULT_EXPORT_SCALE;\n                var importHeight = size[1] || contentHeight * DEFAULT_EXPORT_SCALE;\n                var scaleX = contentWidth / importWidth;\n                var scaleY = contentHeight / importHeight;\n                var scale = Math.min(scaleX, scaleY);\n                var img = new kendoDrawing.Image(data, new kendo.geometry.Rect([0, 0], [importWidth, importHeight]));\n                img.transform(transform().scale(scale, scale));\n                this.clear();\n                this.rootGroup.append(img);\n            };\n            SignaturePad.prototype.exportImage = function (options) {\n                var _a;\n                var _b = this.size, width = _b[0], height = _b[1];\n                var contentWidth = width / this.options.scale;\n                var contentHeight = height / this.options.scale;\n                var exportWidth = (options === null || options === void 0 ? void 0 : options.width) || contentWidth * DEFAULT_EXPORT_SCALE;\n                var exportHeight = (options === null || options === void 0 ? void 0 : options.height) || contentHeight * DEFAULT_EXPORT_SCALE;\n                var scaleX = exportWidth / contentWidth;\n                var scaleY = exportHeight / contentHeight;\n                var scale = Math.min(scaleX, scaleY);\n                var exportRect = new Rect([0, 0], [exportWidth, exportHeight]);\n                var exportGroup = new kendoDrawing.Group({\n                    clip: kendoDrawing.Path.fromRect(exportRect)\n                });\n                var contentGroup = new kendoDrawing.Group({\n                    transform: transform().scale(scale, scale)\n                });\n                var frame = kendoDrawing.Path.fromRect(exportRect, {\n                    fill: {\n                        color: this.options.backgroundColor\n                    }\n                });\n                exportGroup.append(frame);\n                exportGroup.append(contentGroup);\n                (_a = contentGroup.children).push.apply(_a, this.rootGroup.children);\n                return kendoDrawing.exportImage(exportGroup, Object.assign({\n                    width: exportWidth,\n                    height: exportHeight\n                }, options));\n            };\n            SignaturePad.prototype.resize = function () {\n                this.surface.resize(true);\n            };\n            SignaturePad.prototype.setOptions = function (options) {\n                Object.assign(this.options, options);\n                this.pathOptions.stroke.color = this.options.color;\n                this.pathOptions.stroke.width = this.options.strokeWidth;\n                if (this.path) {\n                    this.path.options.set('stroke.color', this.options.color);\n                    this.path.options.set('stroke.width', this.options.strokeWidth);\n                }\n                this.background.options.set('fill.color', this.options.backgroundColor);\n            };\n            SignaturePad.prototype.initSurface = function () {\n                this.surface = kendoDrawing.Surface.create(this.element, { type: 'canvas' });\n                this.element.style.touchAction = 'none';\n                var scale = this.options.scale;\n                this.rootGroup = new kendoDrawing.Group({\n                    transform: transform().scale(scale, scale)\n                });\n                // The signature is not resizable, store initial dimensions.\n                var width = this.element.offsetWidth || DEFAULT_WIDTH;\n                var height = this.element.offsetHeight || DEFAULT_HEIGHT;\n                this.size = [width, height];\n                this.background = kendoDrawing.Path.fromRect(new Rect([0, 0], this.size), {\n                    fill: {\n                        color: this.options.backgroundColor\n                    }\n                });\n                this.surface.draw(this.background);\n                this.surface.draw(this.rootGroup);\n            };\n            SignaturePad.prototype.attachEvents = function () {\n                this.onPointerDown = this.onPointerDown.bind(this);\n                this.onPointerMove = this.onPointerMove.bind(this);\n                this.onPointerUp = this.onPointerUp.bind(this);\n                this.element.addEventListener('pointerdown', this.onPointerDown);\n                this.element.addEventListener('pointermove', this.onPointerMove);\n                this.element.addEventListener('pointerup', this.onPointerUp);\n            };\n            SignaturePad.prototype.detachEvents = function () {\n                this.element.removeEventListener('pointerdown', this.onPointerDown);\n                this.element.removeEventListener('pointermove', this.onPointerMove);\n                this.element.removeEventListener('pointerup', this.onPointerUp);\n            };\n            SignaturePad.prototype.touchPoint = function (e) {\n                var offset = elementOffset(this.element);\n                var pageX = e.pageX;\n                var pageY = e.pageY;\n                var scale = 1 / this.options.scale;\n                return new Point(pageX - offset.left, pageY - offset.top).scale(scale, scale);\n            };\n            SignaturePad.prototype.onPointerDown = function (e) {\n                if (this.options.readonly || !e.isPrimary || !isMainButton(e)) {\n                    return;\n                }\n                if (!this.path) {\n                    this.path = new kendoDrawing.MultiPath(this.pathOptions);\n                    this.rootGroup.append(this.path);\n                }\n                this.options.onDraw();\n                this.element.setPointerCapture(e.pointerId);\n                var point = this.touchPoint(e);\n                this.points = [point];\n                this.path.moveTo(point);\n            };\n            SignaturePad.prototype.onPointerMove = function (e) {\n                if (!this.points || !e.isPrimary) {\n                    return;\n                }\n                var now = (new Date()).getTime();\n                var elapsed = now - this.lastMoveTime;\n                var minTimeDelta = 1000 / limitValue(this.options.samplingRate, 1, 10000);\n                if (elapsed < minTimeDelta) {\n                    return;\n                }\n                else {\n                    this.lastMoveTime = now;\n                }\n                var point = this.touchPoint(e);\n                var lastPoint = this.points[this.points.length - 1];\n                var minDelta = 1 / limitValue(this.options.precision, 0.01, 100);\n                if (point.distanceTo(lastPoint) < minDelta) {\n                    return;\n                }\n                this.points.push(point);\n                this.path.lineTo(point);\n            };\n            SignaturePad.prototype.onPointerUp = function (e) {\n                if (!e.isPrimary || !this.path || !this.points || this.options.readonly) {\n                    return;\n                }\n                if (this.options.smooth) {\n                    var segments = kendoDrawing.Path.curveFromPoints(this.points);\n                    this.path.paths.splice(this.path.paths.length - 1, 1, segments);\n                }\n                this.points = null;\n                this.options.onDrawEnd();\n                this.options.onChange(this.pathData);\n            };\n            return SignaturePad;\n        }());\n        function isMainButton(e) {\n            return typeof (e.button) !== 'number' || e.button === 0;\n        }\n\n        exports.SignaturePad = SignaturePad;\n\n    })(window.kendo.inputs.common = window.kendo.inputs.common || {}, window.kendo.drawing);\n\n\n    })();\n\n    const __meta__ = {\n        id: \"signature\",\n        name: \"Signature\",\n        category: \"web\",\n        description: \"The Signature component ...\",\n        depends: [ \"core\", \"dialog\", \"html.button\", \"drawing\" ]\n    };\n\n    (function($, undefined$1) {\n        var kendo = window.kendo,\n            Widget = kendo.ui.Widget,\n            Dialog = kendo.ui.Dialog,\n            html = kendo.html,\n            outerWidth = kendo._outerWidth,\n            outerHeight = kendo._outerHeight,\n            Pad = kendo.inputs.common.SignaturePad,\n            ns = \".kendoSignature\",\n            DEFAULT_BACKGROUND_COLOR = '#ffffff',\n            CHANGE = \"change\",\n            OPEN = \"open\",\n            CLOSE = \"close\",\n            CLICK = \"click\",\n            TABINDEX = \"tabindex\",\n            ARIA_LABEL = \"aria-label\",\n            ARIA_LABELLEDBY = \"aria-labelledby\";\n\n        var Signature = Widget.extend({\n            init: function(element, options) {\n                var that = this;\n\n                options = options || {};\n\n                Widget.fn.init.call(that, element, options);\n\n                that._createElements(that.element, that.options.maximizable ? \"maxi\" : \"\", false, 1);\n                that._createInput();\n                that.wrapper = that.element;\n                if (!that.options.backgroundColor) {\n                    that.options.backgroundColor = getComputedStyle(that.element[0]).backgroundColor || DEFAULT_BACKGROUND_COLOR;\n                }\n\n                that._createPad();\n                that._createDialogPad();\n                that._attachHandlers();\n                that._assignLabel();\n\n                if (that.options.value) {\n                    that._pad.loadImage(that.options.value);\n                    that._dialogPad.loadImage(that.options.value);\n                }\n\n                if (that.options.readonly) {\n                    that.readonly();\n                }\n\n                if (!that.options.enable) {\n                    that.enable(false);\n                }\n            },\n\n            options: {\n                name: \"Signature\",\n                color: \"#000000\",\n                enable: true,\n                fillMode: \"solid\",\n                hideLine: false,\n                label: \"\",\n                maximizable: true,\n                popupScale: 3,\n                readonly: false,\n                rounded: \"medium\",\n                size: \"medium\",\n                smooth: false,\n                strokeWidth: 1,\n                exportScale: 2,\n                value: \"\"\n            },\n\n            events: [ CHANGE, OPEN, CLOSE],\n\n            setOptions: function(options) {\n                var currentOptions = this.options;\n                var path;\n                var oldBtnClass = kendo.getValidCssClass(\"k-button-\", \"size\", currentOptions.size);\n                var btns = this.element.add(this._dialogPadEl).find(\".\" + oldBtnClass);\n                var targets = $(this._pad.element).add(this._dialogPad.element);\n\n                btns.removeClass(oldBtnClass);\n                this._clearCssClasses(currentOptions);\n                this.element.removeClass(kendo.getValidCssClass(\"k-signature-\", \"size\", currentOptions.size));\n                kendo.deepExtend(currentOptions, options);\n                this.options = currentOptions;\n                this.element.width(currentOptions.width);\n                this.element.height(currentOptions.height);\n                this._dialogPadEl.width(currentOptions.width * currentOptions.popupScale);\n                this._dialogPadEl.height(currentOptions.height * currentOptions.popupScale);\n                path = this._pad.path;\n                this._destroyPad();\n                this._destroyDialog();\n                this._createPad();\n                this._createDialogPad();\n                copyPath(this._pad, path);\n                this.enable(currentOptions.enable);\n                this.readonly(currentOptions.readonly);\n                this._hideLine(this.element);\n                this._hideLine(this._dialogPadEl);\n                this._applyCssClasses(this.element);\n                this.element.find(\".k-signature-maximize\").toggle(currentOptions.maximizable);\n                this.element.removeClass(kendo.getValidCssClass(\"k-input-\", \"size\", this.options.size));\n                this.element.addClass(kendo.getValidCssClass(\"k-signature-\", \"size\", this.options.size));\n                btns.addClass(kendo.getValidCssClass(\"k-button-\", \"size\", currentOptions.size));\n\n                targets.removeAttr(\"aria-label\");\n                this._assignLabel();\n            },\n\n            close: function() {\n                if (!this._dialog) {\n                    return;\n                }\n                this._dialog.close();\n            },\n\n            open: function() {\n                if (!this.options.maximizable || !this._dialog) {\n                    return;\n                }\n                this._dialog.open();\n            },\n\n            destroy: function() {\n                var that = this;\n                that._destroyPad();\n\n                that._destroyDialog();\n\n                that.element.off(ns);\n                that.element.empty();\n                Widget.fn.destroy.call(that);\n            },\n\n            enable: function(enable) {\n                var enable = enable !== false;\n                if (!enable) {\n                    this._dialog.close();\n                }\n\n                this.element.find(\".k-button\").toggle(enable);\n                this.element.toggleClass(\"k-disabled\", !enable);\n                this._pad.options.readonly = !enable;\n                this._dialogPad.options.readonly = !enable;\n            },\n\n            readonly: function(toggle) {\n                var that = this;\n                var toggle = toggle !== false;\n\n                that._pad.options.readonly = toggle;\n                that._dialogPad.options.readonly = toggle;\n\n                var clearButton = that.element.find(\".k-signature-clear\");\n\n                if (!clearButton.length && !toggle) {\n                    $(html.renderButton('<button class=\"k-signature-action k-signature-clear\"></button>', {\n                        icon: \"x\",\n                        size: this.options.size,\n                        fillMode: \"flat\"\n                    })).insertAfter(that.element.find(\".k-signature-actions-bottom\"));\n\n                    $(html.renderButton('<button class=\"k-signature-action k-signature-clear\"></button>', {\n                        icon: \"x\",\n                        size: this.options.size,\n                        fillMode: \"flat\"\n                    })).insertAfter(that._dialogEl.find(\".k-signature-actions-bottom\"));\n                }\n\n                that.element.find(\".k-signature-clear\").toggle(!toggle);\n                that._dialogEl.find(\".k-signature-clear\").toggle(!toggle);\n            },\n\n            value: function(value) {\n                if (value !== undefined$1) {\n                    this._value = value;\n                    this._input.val(value);\n                    this._pad.loadImage(value);\n                }\n\n                return this._value;\n            },\n\n            reset: function() {\n                this._dialogPad.clear();\n                this._pad.clear();\n                this._value = \"\";\n            },\n\n            _assignLabel: function() {\n                var targets = $(this._pad.element).add(this._dialogPad.element);\n\n                if (this.options.label) {\n                    targets.attr(ARIA_LABEL, this.options.label);\n                } else {\n                    this._ariaLabel(targets);\n                }\n\n                this.element.removeAttr(ARIA_LABELLEDBY);\n            },\n\n            _attachHandlers: function() {\n                var that = this;\n                that.element\n                    .on(CLICK + ns, \".k-signature-clear\", function() {\n                        that.reset();\n                    })\n                    .on(CLICK + ns, \".k-signature-maximize\", function() {\n                        that._dialog.open();\n                        that._dialog.wrapper.find(\".k-signature-minimize\").trigger(\"focus\");\n                    });\n            },\n\n            _createInput: function() {\n                var that = this;\n                var name = that.element.attr(\"name\");\n                var autocomplete = that.element.attr(\"autocomplete\");\n                var required = that.element.attr(\"required\");\n\n                that._input = $(\"<input class='k-hidden' aria-hidden='true'/>\").appendTo(that.element);\n\n                if (name) {\n                    that._input.attr(\"name\", name);\n                    that.element.removeAttr(\"name\");\n                }\n\n                if (autocomplete) {\n                    that._input.attr(\"autocomplete\", autocomplete);\n                    that.element.removeAttr(\"autocomplete\");\n                }\n\n                if (required) {\n                    that._input.attr(\"required\", required);\n                    that.element.removeAttr(\"required\");\n                }\n            },\n\n            _destroyPad: function() {\n                if (this._pad) {\n                    kendo.destroy(this.element.find(\".k-signature-canvas\"));\n                    this._pad = null;\n                    this.element.find(\".k-signature-canvas\").empty();\n                }\n            },\n\n            _destroyDialog: function() {\n                if (this._dialogPad) {\n                    this._dialogPad.destroy();\n                    this._dialogPad = null;\n                    this._dialogEl.off(ns);\n                    this._dialog.destroy();\n                    this._dialog = null;\n                    this._dialogEl.remove();\n                    this._dialogEl = null;\n                }\n            },\n\n            _hideLine: function(wrapper) {\n                var line = wrapper.find(\".k-signature-line\");\n                if (!this.options.hideLine && !line.length) {\n                    $(\"<div class='k-signature-line'>\").appendTo(wrapper);\n                }\n\n                if (this.options.hideLine) {\n                    line.remove();\n                }\n            },\n\n            _createElements: function(wrapper, button, maximize, scale) {\n                $(\"<div class='k-signature-canvas' role='img' tabindex='0'>\").appendTo(wrapper);\n\n                this._hideLine(wrapper);\n\n                $(\"<div class='k-signature-actions k-signature-actions-top'></div>\").appendTo(wrapper);\n\n                if (button == \"mini\") {\n                    $(html.renderButton('<button class=\"k-signature-action k-signature-minimize k-rotate-180\" aria-label=\"Minimize signature\"></button>', {\n                        icon: \"hyperlink-open\",\n                        size: this.options.size,\n                        fillMode: \"flat\"\n                    })).appendTo(wrapper.find(\".k-signature-actions-top\"));\n                }\n\n                if (button == \"maxi\") {\n                    $(html.renderButton('<button class=\"k-signature-action k-signature-maximize\" aria-label=\"Maximize signature\"></button>', {\n                        icon: \"hyperlink-open\",\n                        size: this.options.size,\n                        fillMode: \"flat\"\n                    })).appendTo(wrapper.find(\".k-signature-actions-top\"));\n                }\n\n                $(\"<div class='k-signature-actions k-signature-actions-bottom'></div>\").appendTo(wrapper);\n\n                if (!this.options.readonly) {\n                    $(html.renderButton('<button class=\"k-signature-action k-signature-clear\"  aria-label=\"Clear signature\"></button>', {\n                        icon: \"x\",\n                        size: this.options.size,\n                        fillMode: \"flat\"\n                    })).appendTo(wrapper.find(\".k-signature-actions-bottom\"));\n                }\n\n                wrapper.addClass(\"k-input k-signature\");\n\n                wrapper.width(this.options.width * scale);\n                wrapper.height(this.options.height * scale);\n\n                if (maximize) {\n                    wrapper.addClass(\"k-signature-maximized\");\n                }\n\n                this._applyCssClasses(wrapper);\n                //workaround as the sizings are added to -signature- but roundings to -input-\n                wrapper.removeClass(kendo.getValidCssClass(\"k-input-\", \"size\", this.options.size));\n                wrapper.addClass(kendo.getValidCssClass(\"k-signature-\", \"size\", this.options.size));\n            },\n\n            _createPad: function() {\n                var that = this;\n                var padOptions = $.extend(true, {}, that.options, {\n                    onChange: function() {\n                        var width = outerWidth(that.element, false);\n                        var height = outerHeight(that.element, false);\n                        that._pad.exportImage({\n                            width: width * that.options.exportScale,\n                            height: height * that.options.exportScale\n                        }).then(function(val) {\n                            that._value = val;\n                            that._input.val(val);\n                            that.trigger(CHANGE);\n                        });\n\n                        that._pad.exportImage({\n                            width: width * that.options.exportScale * that.options.popupScale,\n                            height: height * that.options.exportScale * that.options.popupScale\n                        }).then(function(val) {\n                            that._dialogPad.loadImage(val);\n                        });\n                    },\n                    onDraw: function() {\n                        that.element.find(\".k-button\").hide();\n                    },\n                    onDrawEnd: function() {\n                        that.element.find(\".k-button\").show();\n                    }\n                });\n\n                that._pad = new Pad(that.element.find(\".k-signature-canvas\")[0], padOptions);\n            },\n\n            _createDialogPad: function() {\n                var that = this;\n                var canvas = null;\n\n                that._dialogEl = $(\"<div>\").appendTo(that.element);\n                that._dialog = new Dialog(that._dialogEl, {\n                    title: false,\n                    closable: false,\n                    open: function() {\n                        that.trigger(OPEN);\n                    },\n                    close: function() {\n                        that.trigger(CLOSE);\n                    }\n                });\n\n                that._dialogEl\n                    .removeAttr(TABINDEX)\n                    .on(\"keydown\", function(e) {\n                        if (e.keyCode === kendo.keys.ESC) {\n                            that._dialog.close();\n                        }\n                    });\n\n                that._dialogPadEl = $(\"<div>\").appendTo(that._dialog.element);\n                that._createElements(that._dialogPadEl, \"mini\", true, this.options.popupScale);\n                canvas = that._dialogPadEl.find(\".k-signature-canvas\")[0];\n\n                that._dialogPad = new Pad(canvas, $.extend(true, {}, that.options, {\n                    scale: that.options.popupScale,\n                    onChange: function() {\n                        var width = outerWidth(that.element, false);\n                        var height = outerHeight(that.element, false);\n                        that._dialogPad.exportImage({\n                            width: width * that.options.exportScale,\n                            height: height * that.options.exportScale\n                        }).then(function(val) {\n                            that._pad.loadImage(val);\n                            that._value = val;\n                            that._input.val(val);\n                            that.trigger(CHANGE);\n                        });\n                    },\n                    onDraw: function() {\n                        that._dialogEl.find(\".k-button\").hide();\n                    },\n                    onDrawEnd: function() {\n                        that._dialogEl.find(\".k-button\").show();\n                    }\n                }));\n\n                // Dialog should be opened at first for drawing to work\n                that._dialog.close();\n                that._dialogEl\n                    .on(CLICK + ns, \".k-signature-clear\", function() {\n                        that.reset();\n                    })\n                    .on(CLICK + ns, \".k-signature-minimize\", function() {\n                        that._dialog.close();\n                    });\n            }\n        });\n\n        function copyPath(pad, path) {\n            if (!path || !path.paths || !path.paths.length) {\n                return;\n            }\n            pad.path = new kendo.drawing.MultiPath(pad.pathOptions);\n            pad.rootGroup.append(pad.path);\n\n            for (var i = 0; i < path.paths.length; i++) {\n                pad.path.paths.push(path.paths[i]);\n            }\n            pad.options.onChange();\n        }\n\n        kendo.cssProperties.registerPrefix(\"Signature\", \"k-input-\");\n\n        kendo.ui.plugin(Signature);\n\n    })(window.kendo.jQuery);\n    var kendo$1 = kendo;\n\n    exports.__meta__ = __meta__;\n    exports.default = kendo$1;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n\n}));\n"]}