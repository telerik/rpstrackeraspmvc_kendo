{"version":3,"file":"kendo.validator.min.js","names":["global","factory","exports","module","require","define","amd","globalThis","self","kendo","_globals","Validator","this","$","window","Widget","ui","NS","INVALIDMSG","invalidMsgRegExp","RegExp","INVALIDINPUT","VALIDINPUT","VALIDATIONSUMMARY","INVALIDLABEL","MESSAGEBOX","ARIAINVALID","emailRegExp","ALLOWED_URL_PROTOCOLS","INPUTSELECTOR","CHECKBOXSELECTOR","NUMBERINPUTSELECTOR","BLUR","NAME","FORM","NOVALIDATE","VALIDATE","CHANGE","VALIDATE_INPUT","patternMatcher","value","pattern","test","hasAttribute","input","name","length","attributes","parseHtml","text","parseHTML","searchForMessageContainer","elements","fieldName","element","containers","idx","className","getAttribute","attr","add","isLabelFor","label","nodeName","validator","rules","messages","allowSubmit","noop","validateOnInit","SUMMARYTEMPLATE","errors","result","i","field","message","extend","init","options","that","resolved","resolvers","ruleResolvers","resolve","resolveRules","validateAttributeSelector","fn","call","_errorTemplate","template","errorTemplate","_summaryTemplate","validationSummary","is","_inputSelector","_checkboxSelector","_errors","_attachEvents","_isValidated","_validateOnInit","validate","events","required","min","max","step","email","url","date","dateCompare","captcha","noNameCheckbox","quote","indexOf","namedCheckbox","find","checkbox","filter","radio","val","parseFloat","raise","decimals","split","Math","pow","floor","selector","matcher","URL","includes","protocol","parseDate","widgetInstance","isValidated","isValid","data","getCaptchaId","_validating","done","_checkElement","fail","error","console","warn","removeData","validateOnBlur","_allowSubmit","destroy","off","_submit","e","stopPropagation","stopImmediatePropagation","preventDefault","state","validateInput","trigger","on","bind","inputs","invalid","eq","showValidationSummary","valid","_checkValidity","lbl","_findMessageContainer","next","addClass","messageText","_extractMessage","key","messageLabel","replace","wasValid","isInputInner","inputWrapper","parent","removeAttr","hasClass","closest","lblId","_decorateMessageContainer","replaceWith","parentElement","get","nextElement","prevElement","prev","wrapper","insertAfter","removeClass","_inputWrapper","toggleClass","inputWrap","inputLabel","_inputLabel","errorId","_associateMessageContainer","hideMessages","_disassociateMessageContainers","reset","labels","hideValidationSummary","locators","messageLocators","getElementsByTagName","locate","container","decorate","ruleKey","nonDefaultMessage","customMessage","prototype","isFunction","format","rule","results","push","setOptions","deepExtend","_setEvents","_getInputNames","sorted","nextFocusable","getWidgetFocusableElement","toggleAttribute","addBack","_errorsByName","inputNames","_renderSummary","insertBefore","join","_summaryClick","link","target","errorsList","summary","html","plugin","jQuery","kendo$1","__meta__","id","category","description","depends","default","Object","defineProperty"],"sources":["kendo.validator.js"],"mappings":"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","ignoreList":[],"sourcesContent":["(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('kendo.core.js')) :\n    typeof define === 'function' && define.amd ? define(['exports', 'kendo.core'], factory) :\n    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory((global.kendo = global.kendo || {}, global.kendo._globals = global.kendo._globals || {}, global.kendo._globals.Validator = {})));\n})(this, (function (exports) {\n    const __meta__ = {\n        id: \"validator\",\n        name: \"Validator\",\n        category: \"web\",\n        description: \"The Validator offers an easy way to do a client-side form validation.\",\n        depends: [ \"core\" ]\n    };\n\n\n    (function($, undefined$1) {\n        let kendo = window.kendo,\n            Widget = kendo.ui.Widget,\n            NS = \".kendoValidator\",\n            INVALIDMSG = \"k-invalid-msg\",\n            invalidMsgRegExp = new RegExp(INVALIDMSG,'i'),\n            INVALIDINPUT = \"k-invalid\",\n            VALIDINPUT = \"k-valid\",\n            VALIDATIONSUMMARY = \"k-validation-summary\",\n            INVALIDLABEL = \"k-text-error\",\n            MESSAGEBOX = \"k-messagebox k-messagebox-error\",\n            INPUTINNER = \".k-input-inner\",\n            INPUTWRAPPER = \".k-input\",\n            ARIAINVALID = \"aria-invalid\",\n            ARIADESCRIBEDBY = \"aria-describedby\",\n            emailRegExp = /^[a-zA-Z0-9.!#$%&'*+\\/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$/i,\n            ALLOWED_URL_PROTOCOLS = [\"http:\", \"https:\", \"ftp:\", \"ftps:\"],\n            INPUTSELECTOR = \":input:not(:button,[type=submit],[type=reset],[disabled],[readonly])\",\n            CHECKBOXSELECTOR = \":checkbox:not([disabled],[readonly])\",\n            NUMBERINPUTSELECTOR = \"[type=number],[type=range]\",\n            BLUR = \"blur\",\n            NAME = \"name\",\n            FORM = \"form\",\n            NOVALIDATE = \"novalidate\",\n            //events\n            VALIDATE = \"validate\",\n            CHANGE = \"change\",\n            VALIDATE_INPUT = \"validateInput\",\n\n            patternMatcher = function(value, pattern) {\n                if (typeof pattern === \"string\") {\n                    pattern = new RegExp('^(?:' + pattern + ')$');\n                }\n                return pattern.test(value);\n            },\n            matcher = function(input, selector, pattern) {\n                var value = input.val();\n\n                if (input.filter(selector).length && value !== \"\") {\n                    return patternMatcher(value, pattern);\n                }\n                return true;\n            },\n            hasAttribute = function(input, name) {\n                if (input.length) {\n                    return input[0].attributes[name] != null;\n                }\n                return false;\n            };\n\n        if (!kendo.ui.validator) {\n            kendo.ui.validator = { rules: {}, messages: {}, allowSubmit: $.noop, validateOnInit: $.noop };\n        }\n\n        function resolveRules(element) {\n            var resolvers = kendo.ui.validator.ruleResolvers || {},\n                rules = {},\n                name;\n\n            for (name in resolvers) {\n                $.extend(true, rules, resolvers[name].resolve(element));\n            }\n            return rules;\n        }\n\n        function decode(value) {\n            return value.replace(/&amp/g, '&amp;')\n                .replace(/&quot;/g, '\"')\n                .replace(/&#39;/g, \"'\")\n                .replace(/&lt;/g, '<')\n                .replace(/&gt;/g, '>');\n        }\n\n        function numberOfDecimalDigits(value) {\n            value = (value + \"\").split('.');\n            if (value.length > 1) {\n                return value[1].length;\n            }\n            return 0;\n        }\n\n        function parseHtml(text) {\n            if ($.parseHTML) {\n                return $($.parseHTML(text));\n            }\n            return $(text);\n        }\n\n        function searchForMessageContainer(elements, fieldName) {\n            var containers = $(),\n                element,\n                attr;\n\n            for (var idx = 0, length = elements.length; idx < length; idx++) {\n                element = elements[idx];\n                if (invalidMsgRegExp.test(element.className)) {\n                    attr = element.getAttribute(kendo.attr(\"for\"));\n                    if (attr === fieldName) {\n                        containers = containers.add(element);\n                    }\n                }\n            }\n            return containers;\n        }\n\n        function isLabelFor(label, element) {\n            if (!label) {\n                return false;\n            }\n            if (typeof label.nodeName !== 'string' || label.nodeName !== 'LABEL') {\n                return false;\n            }\n            if (typeof label.getAttribute('for') !== 'string' || typeof element.getAttribute('id') !== 'string') {\n                return false;\n            }\n            if (label.getAttribute('for') !== element.getAttribute('id')) {\n                return false;\n            }\n\n            return true;\n        }\n\n        var SUMMARYTEMPLATE = ({ errors }) => {\n            let result = '<ul>';\n            for (var i = 0; i < errors.length; i += 1) {\n                result += `<li><a data-field=\"${errors[i].field}\" href=\"#\">${errors[i].message}</a></li>`;\n            }\n\n            result += '</ul>';\n            return result;\n        };\n\n        var Validator = Widget.extend({\n            init: function(element, options) {\n                var that = this,\n                    resolved = resolveRules(element),\n                    validateAttributeSelector = \"[\" + kendo.attr(\"validate\") + \"!=false]\";\n\n                options = options || {};\n\n                options.rules = $.extend({}, kendo.ui.validator.rules, resolved.rules, options.rules);\n                options.messages = $.extend({}, kendo.ui.validator.messages, resolved.messages, options.messages);\n\n                Widget.fn.init.call(that, element, options);\n\n                that._errorTemplate = kendo.template(that.options.errorTemplate);\n                that._summaryTemplate = kendo.template(that.options.validationSummary.template || SUMMARYTEMPLATE);\n\n                if (that.element.is(FORM)) {\n                    that.element.attr(NOVALIDATE, NOVALIDATE);\n                }\n\n                that._inputSelector = INPUTSELECTOR + validateAttributeSelector;\n                that._checkboxSelector = CHECKBOXSELECTOR + validateAttributeSelector;\n\n                that._errors = {};\n                that._attachEvents();\n                that._isValidated = false;\n\n                if (that._validateOnInit()) {\n                    that.validate();\n                }\n            },\n\n            events: [ VALIDATE, CHANGE, VALIDATE_INPUT ],\n\n            options: {\n                name: \"Validator\",\n                errorTemplate: ({ message }) => `<span class=\"k-form-error\">${message}</span>`,\n                messages: {\n                    required: \"{0} is required\",\n                    pattern: \"{0} is not valid\",\n                    min: \"{0} should be greater than or equal to {1}\",\n                    max: \"{0} should be smaller than or equal to {1}\",\n                    step: \"{0} is not valid\",\n                    email: \"{0} is not valid email\",\n                    url: \"{0} is not valid URL\",\n                    date: \"{0} is not valid date\",\n                    dateCompare: \"End date should be greater than or equal to the start date\",\n                    captcha: \"The text you entered doesn't match the image.\"\n                },\n                rules: {\n                    required: function(input) {\n                        var noNameCheckbox = !input.attr(\"name\") && !input.is(\":checked\"),\n                            name = input.attr(\"name\"),\n                            quote = !!name && name.indexOf(\"'\") > -1 ? '\\\"' : \"'\",\n                            namedCheckbox = input.attr(\"name\") && !this.element.find(\"input[name=\" + quote + input.attr(\"name\") + quote + \"]:checked\").length,\n                            checkbox = input.filter(\"[type=checkbox]\").length && (noNameCheckbox || namedCheckbox),\n                            radio = input.filter(\"[type=radio]\").length && !this.element.find(\"input[name=\" + quote + input.attr(\"name\") + quote + \"]:checked\").length,\n                            value = input.val();\n\n                        return !(hasAttribute(input, \"required\") && (!value || value === \"\" || value.length === 0 || checkbox || radio));\n                    },\n                    pattern: function(input) {\n                        if (input.filter(\"[type=text],[type=email],[type=url],[type=tel],[type=search],[type=password]\").filter(\"[pattern]\").length && input.val() !== \"\") {\n                            return patternMatcher(input.val(), input.attr(\"pattern\"));\n                        }\n                        return true;\n                    },\n                    min: function(input) {\n                        if (input.filter(NUMBERINPUTSELECTOR + \",[\" + kendo.attr(\"type\") + \"=number]\").filter(\"[min]\").length && input.val() !== \"\") {\n                            var min = parseFloat(input.attr(\"min\")) || 0,\n                                val = kendo.parseFloat(input.val());\n\n                            return min <= val;\n                        }\n                        return true;\n                    },\n                    max: function(input) {\n                        if (input.filter(NUMBERINPUTSELECTOR + \",[\" + kendo.attr(\"type\") + \"=number]\").filter(\"[max]\").length && input.val() !== \"\") {\n                            var max = parseFloat(input.attr(\"max\")) || 0,\n                                val = kendo.parseFloat(input.val());\n\n                            return max >= val;\n                        }\n                        return true;\n                    },\n                    step: function(input) {\n                        if (input.filter(NUMBERINPUTSELECTOR + \",[\" + kendo.attr(\"type\") + \"=number]\").filter(\"[step]\").length && input.val() !== \"\") {\n                            var min = parseFloat(input.attr(\"min\")) || 0,\n                                step = kendo.parseFloat(input.attr(\"step\")) || 1,\n                                val = parseFloat(input.val()),\n                                decimals = numberOfDecimalDigits(step),\n                                raise;\n\n                            if (decimals) {\n                                raise = Math.pow(10, decimals);\n                                return ((Math.floor((val - min) * raise)) % (step * raise)) / Math.pow(100, decimals) === 0;\n                            }\n                            return ((val - min) % step) === 0;\n                        }\n                        return true;\n                    },\n                    email: function(input) {\n                        return matcher(input, \"[type=email],[\" + kendo.attr(\"type\") + \"=email]\", emailRegExp);\n                    },\n                    url: function(input) {\n                        if (input.filter(\"[type=url],[\" + kendo.attr(\"type\") + \"=url]\").length && input.val() !== \"\") {\n                            try {\n                                const url = new URL(input.val());\n                                return ALLOWED_URL_PROTOCOLS.includes(url.protocol);\n                            } catch {\n                                return false;\n                            }\n                        }\n                        return true;\n                    },\n                    date: function(input) {\n                        if (input.filter(\"[type^=date],[\" + kendo.attr(\"type\") + \"=date]\").length && input.val() !== \"\") {\n                            return kendo.parseDate(input.val(), input.attr(kendo.attr(\"format\"))) !== null;\n                        }\n                        return true;\n                    },\n                    captcha: function(input) {\n                        if (input.filter(\"[\" + kendo.attr(\"role\") + \"=captcha]\").length) {\n                            var that = this,\n                                captcha = kendo.widgetInstance(input),\n                                isValidated = function(isValid) {\n                                    return typeof(isValid) !== 'undefined' && isValid !== null;\n                                };\n\n                            if (!input.data(\"captcha_validating\") && !isValidated(captcha.isValid()) && !!captcha.getCaptchaId()) {\n                                input.data(\"captcha_validating\", true);\n                                that._validating = true;\n                                captcha.validate().done(function() {\n                                    that._validating = false;\n                                    that._checkElement(input);\n                                }).fail(function(data) {\n                                    that._validating = false;\n                                    if (data.error && data.error === \"handler_not_defined\") {\n                                        window.console.warn(\"Captcha's validationHandler is not defined! You should either define a proper validation endpoint or declare a callback function to ensure the required behavior.\");\n                                    }\n                                });\n                            }\n\n                            if (isValidated(captcha.isValid())) {\n                                input.removeData(\"captcha_validating\");\n                                return captcha.isValid();\n                            }\n                        }\n                        return true;\n                    }\n                },\n                validateOnBlur: true,\n                validationSummary: false\n            },\n\n            _allowSubmit: function() {\n                return kendo.ui.validator.allowSubmit(this.element, this.errors());\n            },\n\n            _validateOnInit: function() {\n                return kendo.ui.validator.validateOnInit(this.element);\n            },\n\n            destroy: function() {\n                Widget.fn.destroy.call(this);\n\n                this.element.off(NS);\n\n                if (this.validationSummary) {\n                    this.validationSummary.off(NS);\n                    this.validationSummary = null;\n                }\n            },\n\n            value: function() {\n                if (!this._isValidated) {\n                    return false;\n                }\n\n                return this.errors().length === 0;\n            },\n\n            _submit: function(e) {\n                if ((!this.validate() && !this._allowSubmit()) || this._validating) {\n                    e.stopPropagation();\n                    e.stopImmediatePropagation();\n                    e.preventDefault();\n                    return false;\n                }\n                return true;\n            },\n\n            _checkElement: function(element) {\n                var state = this.value();\n\n                this.validateInput(element);\n\n                if (this.value() !== state) {\n                    this.trigger(CHANGE);\n                }\n            },\n\n            _attachEvents: function() {\n                var that = this;\n\n                if (that.element.is(FORM)) {\n                    that.element.on(\"submit\" + NS, that._submit.bind(that));\n                }\n\n                if (that.options.validateOnBlur) {\n                    if (!that.element.is(INPUTSELECTOR)) {\n                        that.element.on(BLUR + NS, that._inputSelector, function() {\n                            that._checkElement($(this));\n                        });\n\n                        that.element.on(\"click\" + NS, that._checkboxSelector, function() {\n                            that._checkElement($(this));\n                        });\n                    } else {\n                        that.element.on(BLUR + NS, function() {\n                            that._checkElement(that.element);\n                        });\n\n                        if (that.element.is(CHECKBOXSELECTOR)) {\n                            that.element.on(\"click\" + NS, function() {\n                                that._checkElement(that.element);\n                            });\n                        }\n                    }\n                }\n            },\n\n            validate: function() {\n                var inputs;\n                var idx;\n                var result = false;\n                var length;\n\n                var isValid = this.value();\n\n                this._errors = {};\n\n                if (!this.element.is(INPUTSELECTOR)) {\n                    var invalid = false;\n\n                    inputs = this.element.find(this._inputSelector);\n\n                    for (idx = 0, length = inputs.length; idx < length; idx++) {\n                        if (!this.validateInput(inputs.eq(idx))) {\n                            invalid = true;\n                        }\n                    }\n\n                    result = !invalid;\n                } else {\n                    result = this.validateInput(this.element);\n                }\n\n                if (this.options.validationSummary && !isValid) {\n                    this.showValidationSummary();\n                }\n\n                this.trigger(VALIDATE, { valid: result, errors: this.errors() });\n\n                if (isValid !== result) {\n                    this.trigger(CHANGE);\n                }\n\n                return result;\n            },\n\n            validateInput: function(input) {\n                input = $(input);\n\n\n                this._isValidated = true;\n\n                var that = this,\n                    template = that._errorTemplate,\n                    result = that._checkValidity(input),\n                    valid = result.valid,\n                    widgetInstance,\n                    className = \".\" + INVALIDMSG,\n                    fieldName = (input.attr(NAME) || \"\"),\n                    lbl = that._findMessageContainer(fieldName).add(input.next(className).filter(function() {\n                        var element = $(this);\n                        if (element.filter(\"[\" + kendo.attr(\"for\") + \"]\").length) {\n                            return element.attr(kendo.attr(\"for\")) === fieldName;\n                        }\n\n                        return true;\n\n                    })).addClass(\"k-hidden\"),\n                    messageText = !valid ? that._extractMessage(input, result.key) : \"\",\n                    messageLabel = !valid ? parseHtml(template({ message: decode(messageText), field: fieldName })) : \"\",\n                    wasValid = !input.attr(ARIAINVALID),\n                    isInputInner = input.is(INPUTINNER),\n                    inputWrapper = input.parent(INPUTWRAPPER);\n\n                input.removeAttr(ARIAINVALID);\n\n                if (input.hasClass(\"k-hidden\")) {\n                    widgetInstance = kendo.widgetInstance(input.closest(\".k-signature\"));\n                }\n\n                if (input.is(\"[type=radio]\")) {\n                    widgetInstance = kendo.widgetInstance(input.closest(\".k-radio-list\"));\n                }\n\n                if (input.is(\"[type=checkbox]\")) {\n                    widgetInstance = kendo.widgetInstance(input.closest(\".k-checkbox-list\"));\n                }\n\n                if (!valid && !input.data(\"captcha_validating\")) {\n                    that._errors[fieldName] = messageText;\n                    var lblId = lbl.attr('id');\n\n                    that._decorateMessageContainer(messageLabel, fieldName);\n\n\n                    if (lblId) {\n                        messageLabel.attr('id', lblId);\n                    }\n\n                    if (lbl.length !== 0) {\n                        lbl.replaceWith(messageLabel);\n                    } else {\n                        widgetInstance = widgetInstance || kendo.widgetInstance(input);\n                        var parentElement = input.parent().get(0);\n                        var nextElement = input.next().get(0);\n                        var prevElement = input.prev().get(0);\n\n                        // Get the instance of the RadioGroup which is not initialized on the input element\n                        if (!widgetInstance && input.is(\"[type=radio]\")) {\n                            widgetInstance = kendo.widgetInstance(input.closest(\".k-radio-list\"));\n                        }\n\n                        // Get the instance of the CheckBoxGroup which is not initialized on the input element\n                        if (!widgetInstance && input.is(\"[type=checkbox]\")) {\n                            widgetInstance = kendo.widgetInstance(input.closest(\".k-checkbox-list\"));\n                        }\n\n                        if (widgetInstance && widgetInstance.wrapper && (widgetInstance.element !== widgetInstance.wrapper || [\"Signature\", \"RadioGroup\", \"CheckBoxGroup\"].indexOf(widgetInstance.options.name) > -1)) {\n                            messageLabel.insertAfter(widgetInstance.wrapper);\n                        } else if (parentElement && parentElement.nodeName === \"LABEL\") {\n                            // Input inside label\n                            messageLabel.insertAfter(parentElement);\n                        } else if (nextElement && isLabelFor(nextElement, input[0])) {\n                            // Input before label\n                            messageLabel.insertAfter(nextElement);\n                        } else if (prevElement && isLabelFor(prevElement, input[0])) {\n                            // Input after label\n                            messageLabel.insertAfter(input);\n                        } else if (isInputInner && inputWrapper.length) {\n                            // Input after input wrapper\n                            messageLabel.insertAfter(inputWrapper);\n                        } else {\n                            messageLabel.insertAfter(input);\n                        }\n                    }\n\n                    messageLabel.removeClass(\"k-hidden\");\n\n                    input.attr(ARIAINVALID, true);\n                } else {\n                    delete that._errors[fieldName];\n                }\n\n                if (wasValid !== valid) {\n                    this.trigger(VALIDATE_INPUT, { valid: valid, input: input, error: messageText, field: fieldName });\n                }\n\n                widgetInstance = (widgetInstance && widgetInstance.options.name == \"Signature\") ? widgetInstance : kendo.widgetInstance(input);\n                if (!widgetInstance || !(widgetInstance._inputWrapper || widgetInstance.wrapper) || (input.is(\"[type=checkbox]\") || input.is(\"[type=radio]\"))) {\n                    input.toggleClass(INVALIDINPUT, !valid);\n                    input.toggleClass(VALIDINPUT, valid);\n                }\n\n                if (widgetInstance) {\n                    var inputWrap = widgetInstance._inputWrapper || widgetInstance.wrapper;\n                    var inputLabel = widgetInstance._inputLabel;\n\n                    if (inputWrap && !(input.is(\"[type=checkbox]\") || input.is(\"[type=radio]\"))) {\n                        inputWrap.toggleClass(INVALIDINPUT, !valid);\n                        inputWrap.toggleClass(VALIDINPUT, valid);\n                    }\n                    if (inputLabel) {\n                        inputLabel.toggleClass(INVALIDLABEL, !valid);\n                    }\n                }\n\n                if (wasValid !== valid) {\n                    var errorId = messageLabel ? messageLabel.attr(\"id\") : lbl.attr(\"id\");\n\n                    that._associateMessageContainer(input, errorId);\n\n                    if (this.options.validationSummary && this.options.validateOnBlur) {\n                        this.showValidationSummary();\n                    }\n                }\n\n                return valid;\n            },\n\n            hideMessages: function() {\n                var that = this,\n                    className = \".\" + INVALIDMSG,\n                    element = that.element;\n\n                that._disassociateMessageContainers();\n\n                if (!element.is(INPUTSELECTOR)) {\n                    element.find(className).addClass(\"k-hidden\");\n                } else {\n                    element.next(className).addClass(\"k-hidden\");\n                }\n            },\n\n            reset: function() {\n                var that = this,\n                    inputs = that.element.find(\".\" + INVALIDINPUT),\n                    labels = that.element.find(\".\" + INVALIDLABEL);\n\n                that._errors = [];\n\n                that.hideMessages();\n\n                that.hideValidationSummary();\n\n                inputs.removeAttr(ARIAINVALID);\n                inputs.removeClass(INVALIDINPUT);\n                labels.removeClass(INVALIDLABEL);\n            },\n\n            _findMessageContainer: function(fieldName) {\n                var locators = kendo.ui.validator.messageLocators,\n                    name,\n                    containers = $();\n\n                for (var idx = 0, length = this.element.length; idx < length; idx++) {\n                    containers = containers.add(searchForMessageContainer(this.element[idx].getElementsByTagName(\"*\"), fieldName));\n                }\n\n                for (name in locators) {\n                    containers = containers.add(locators[name].locate(this.element, fieldName));\n                }\n\n                return containers;\n            },\n\n            _decorateMessageContainer: function(container, fieldName) {\n                var locators = kendo.ui.validator.messageLocators,\n                    name;\n\n                container.addClass(INVALIDMSG)\n                    .attr(kendo.attr(\"for\"), fieldName || \"\");\n\n                if (!container.attr(\"id\")) {\n                    container.attr(\"id\", fieldName + \"-error\");\n                }\n\n                for (name in locators) {\n                    locators[name].decorate(container, fieldName);\n                }\n            },\n\n            _extractMessage: function(input, ruleKey) {\n                var that = this,\n                    customMessage = that.options.messages[ruleKey],\n                    fieldName = input.attr(NAME),\n                    nonDefaultMessage;\n\n                if (!kendo.ui.Validator.prototype.options.messages[ruleKey]) {\n                     nonDefaultMessage = kendo.isFunction(customMessage) ? customMessage(input) : customMessage;\n                }\n\n                customMessage = kendo.isFunction(customMessage) ? customMessage(input) : customMessage;\n\n                return kendo.format(input.attr(kendo.attr(ruleKey + \"-msg\")) || input.attr(\"validationMessage\") || nonDefaultMessage || customMessage || input.attr(\"title\") || \"\",\n                    fieldName,\n                    input.attr(ruleKey) || input.attr(kendo.attr(ruleKey)));\n            },\n\n            _checkValidity: function(input) {\n                var rules = this.options.rules,\n                    rule;\n\n                for (rule in rules) {\n                    if (!rules[rule].call(this, input)) {\n                        return { valid: false, key: rule };\n                    }\n                }\n\n                return { valid: true };\n            },\n\n            errors: function() {\n                var results = [],\n                    errors = this._errors,\n                    error;\n\n                for (error in errors) {\n                    results.push(errors[error]);\n                }\n                return results;\n            },\n\n            setOptions: function(options) {\n                if (options.validationSummary) {\n                    this.hideValidationSummary();\n                }\n\n                kendo.deepExtend(this.options, options);\n\n                this.destroy();\n\n                this.init(this.element, this.options);\n\n                this._setEvents(this.options);\n            },\n\n            _getInputNames: function() {\n                var that = this,\n                    inputs = that.element.find(that._inputSelector),\n                    sorted = [];\n\n                for (var idx = 0, length = inputs.length; idx < length; idx++) {\n                    var input = $(inputs[idx]);\n\n                    if (hasAttribute(input, NAME)) {\n                        // Add current name if:\n                        // - not present so far;\n                        // - present but not part of CheckBoxGroup or RadioGroup.\n                        if (sorted.indexOf(input.attr(NAME)) === -1 ||\n                            (input.closest(\".k-checkbox-list\").length === 0 &&\n                            input.closest(\".k-radio-list\").length === 0)) {\n                                sorted.push(input.attr(NAME));\n                        }\n                    }\n                }\n\n                return sorted;\n            },\n\n            _associateMessageContainer: function(input, errorId) {\n                var nextFocusable = kendo.getWidgetFocusableElement(input);\n\n                if (!nextFocusable || !errorId) {\n                    return;\n                }\n\n                kendo.toggleAttribute(nextFocusable, ARIADESCRIBEDBY, errorId);\n            },\n\n            _disassociateMessageContainers: function() {\n                var that = this,\n                    inputs = that.element.find(\".\" + INVALIDINPUT).addBack(),\n                    input, errorId;\n\n                for (var i = 0; i < inputs.length; i += 1) {\n                    input = $(inputs[i]);\n\n                    if (input.is(\"input\")) {\n                        errorId = that._findMessageContainer(input.attr(NAME))\n                            .add(input.next(\".\" + INVALIDMSG))\n                            .attr(\"id\");\n\n                        that._associateMessageContainer(input, errorId);\n                    }\n                }\n            },\n\n            _errorsByName: function() {\n                var that = this,\n                    inputNames = that._getInputNames(),\n                    sorted = [];\n\n                for (var i = 0; i < inputNames.length; i += 1) {\n                    var name = inputNames[i];\n\n                    if (that._errors[name]) {\n                        sorted.push({\n                            field: name,\n                            message: that._errors[name]\n                        });\n                    }\n                }\n\n                return sorted;\n            },\n\n            _renderSummary: function() {\n                var that = this,\n                    options = this.options.validationSummary,\n                    element = this.element,\n                    prevElement = element.prev(),\n                    container;\n\n                if (options.container) {\n                    container = $(options.container);\n                } else if (prevElement && prevElement.hasClass(VALIDATIONSUMMARY)) {\n                    container = prevElement;\n                } else {\n                    container = $(\"<div />\").insertBefore(that.element);\n                }\n\n                container.addClass([VALIDATIONSUMMARY, MESSAGEBOX].join(\" \"));\n                container.attr(\"role\", \"alert\");\n\n                container.on(\"click\" + NS, that._summaryClick.bind(that));\n\n                return container;\n            },\n\n            _summaryClick: function(e) {\n                e.preventDefault();\n\n                var that = this,\n                    link = $(e.target),\n                    target = that.element.find(\"[name='\" + link.data(\"field\") + \"']\"),\n                    nextFocusable;\n\n                if (!target.length) {\n                    return;\n                }\n\n                nextFocusable = kendo.getWidgetFocusableElement(target);\n\n                if (nextFocusable) {\n                    nextFocusable.trigger(\"focus\");\n                }\n            },\n\n            showValidationSummary: function() {\n                var that = this,\n                    summary = that.validationSummary,\n                    errors = that._errorsByName(),\n                    errorsList;\n\n                if (!summary) {\n                    summary = that.validationSummary = that._renderSummary();\n                }\n\n                errorsList = parseHtml(that._summaryTemplate({\n                    errors: errors\n                }));\n\n                summary.html(errorsList);\n\n                summary.toggleClass(\"k-hidden\", !errors.length);\n            },\n\n            hideValidationSummary: function() {\n                var that = this,\n                    summary = that.validationSummary;\n\n                if (!summary) {\n                    return;\n                }\n\n                summary.addClass(\"k-hidden\");\n            }\n        });\n\n        kendo.ui.plugin(Validator);\n    })(window.kendo.jQuery);\n    var kendo$1 = kendo;\n\n    exports.__meta__ = __meta__;\n    exports.default = kendo$1;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n\n}));\n"]}