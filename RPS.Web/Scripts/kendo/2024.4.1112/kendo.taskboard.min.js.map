{"version":3,"file":"kendo.taskboard.min.js","names":["global","factory","exports","module","require","define","amd","globalThis","self","kendo","_globals","Taskboard","this","$","window","ui","Observable","encode","htmlEncode","extend","DOT","NS","CLICK","ACTION","preventDefault","ev","TaskBoardColumn","init","options","dataItem","that","_dataItem","sortableUniqueClass","sortableIdentifier","styles","sortableSuffix","_render","_attachEvents","states","isReorderable","_initSortable","fn","call","empty","container","addCard","cardHtml","append","edit","element","addClass","editColumn","_renderEditHeader","getDataItem","cards","children","template","data","headerText","ellipsis","getter","dataTextField","spacer","buttons","editTemplate","textbox","input","messages","newColumn","attr","actionButton","icon","spriteCssClass","text","command","html","renderButton","iconClass","fillMode","builtinButtons","name","rules","deleteColumn","defaultButtons","headerLabelId","guid","uid","css","width","header","cardsContainer","columnCards","appendTo","_renderHeader","_buildActionsHtml","setTimeout","find","trigger","actions","disabled","i","length","button","isPlainObject","Object","keys","_validateRules","tool","split","_actionClick","target","closest","value","_textboxBlur","on","bind","keyCode","ENTER","card","cardTitle","dirClass","isRtl","sortable","Sortable","ignore","ignoreDrag","connectWith","filter","hint","clone","dragHint","grabbingCursor","offsetWidth","height","offsetHeight","placeholder","dragPlaceholder","move","_move","start","_start","end","_end","change","_change","draggable","userEvents","unbind","_select","ignoreDragSelectors","event","is","columnElement","sender","parents","action","newIndex","oldIndex","destroy","off","TaskBoardNewColumn","taskboard","Column","NewColumn","jQuery","TaskBoardCard","resources","contentTemplate","hbox","title","link","selectable","dataTitleField","cardMenuButton","body","dataDescriptionField","cardMenuButtonTemplate","headerActions","flatButton","actionsIcon","categoryColor","moveCursor","cardMenu","_resources","borderDir","isDisabled","toggleClass","dataCategoryField","color","get","categoryBorder","isSelectable","key","resource","field","cardResources","multiple","dataSource","view","resourceIndex","cardResource","valuePrimitive","dataValueField","dataIndex","resourceColor","dataColorField","result","push","_buildTemplate","format","headerTemplate","bodyTemplate","Card","ContextMenu","TaskBoardCardMenu","_overrideTemplates","_extendItems","_onSelect","_onOpen","_focus","templates","sprite","defaultItems","editCard","deleteCard","events","concat","item","items","_append","_extendItem","isEmptyObject","args","CardMenu","TaskBoardCommand","Class","_confirm","content","okText","cancel","confirm","taskboardOptions","editable","confirmation","fakePromise","Deferred","resolve","kendoConfirm","buttonLayout","open","AddColumnCommand","exec","column","columns","each","index","enableByColumn","addColumn","EditColumnCommand","DeleteColumnCommand","columnDS","columnsDataSource","deleteColumnConfirm","done","cancelChanges","remove","sync","SaveColumnCommand","columnSettings","val","set","CancelEditColumnCommand","MoveFocusCommand","columnIndex","cardElement","currentColumnIndex","direction","Math","max","min","_getColumnByElement","eq","_moveFromCardFocus","focusCard","currentIndex","seekFocusableCard","_getFocusableCard","focus","lastIndex","focusable","TaskBoardBaseCardCommand","_updateOrder","nextCard","dataOrderField","currentCard","cardIndex","map","idx","prevCard","SelectCardCommand","SaveChangesCommand","taskBoardOptions","receivedStatus","dataStatusField","targetColumn","_getColumn","activeElm","document","activeElement","pane","form","validate","then","DeleteCardCommand","deleteCardConfirm","fail","MoveCardCommand","EditCardCommand","_openPane","AddCardCommand","OpenPaneCommand","ClosePaneCommand","_closePane","SearchCommand","filters","searchOptions","search","operator","fields","_buildFilters","logic","Command","commands","Form","TaskBoardPane","_commandClick","fieldFormat","close","buttonTemplate","themeColor","delete","saveChanges","create","buttonsContainer","footerActions","footerActionButtons","_renderContent","_buildButtonsHtml","_buildHeaderTemplate","primary","TaskBoardPreviewPane","previewPane","preview","TaskBoardEditPane","formSettings","label","buttonsTemplate","formLabelId","focusFirst","formData","TaskBoardCreatePane","columnStatusField","firstColumn","at","status","add","createNewCard","Pane","panes","Preview","Edit","Create","baseButton","primaryButton","Keyboard","register","registerShortcut","selector","shortcut","isNaN","toUpperCase","charCodeAt","ctrlKey","shiftKey","altKey","handler","_handler","shortcuts","_getAction","_trigger","_compareShortcut","_getShortcutModifier","navigator","platform","indexOf","metaKey","KeyboardManager","TaskBoardStyles","wrapper","toolbar","columnsContainer","selected","undefined$1","Widget","DataSource","isArray","Array","GENERIC","MOVE","MOVE_START","MOVE_END","SELECT","EXECUTE","CHANGE","ERROR","DATABINDING","DATABOUND","COLUMNSDATABINDING","COLUMNSDATABOUND","TaskBoard","_sortableIdentifier","_wrapper","_columnsDataSource","_initResources","_dataSource","_initToolbar","_initCardMenu","_initKeyboard","autoBind","load","notify","reorderable","previewCard","description","defaultTools","type","overflow","component","componentOptions","commandOn","_columns","merge","itemsByStatus","itemsByColumn","columnElm","fetchPromises","_progress","fetch","when","apply","read","cardElm","getByUid","columnDataItem","columnByStatus","select","toggle","removeClass","_extendExecArgs","saveCard","model","_buildStates","_createNewModel","insert","before","executeCommand","saveColumn","keyboardManager","enable","readOnly","readOnlyByColumn","setDataSource","setColumnsDataSource","_renderCards","after","outerWidth","parseInt","ESC","headerElm","contentElm","colsContainer","tools","toolbarElm","toolbarOptions","_processTools","parentMessages","ToolBar","_toolbarClick","isDefaultTool","forEach","t","temp","hidden","_isToolEnabled","toolName","found","isEditable","_isEditable","_isReorderable","_isSelectable","isReadOnly","isSearchable","_isSearchable","notLocalColumns","transport","LocalTransport","support","commandName","commandOptions","console","warn","cardDataItem","draggableEvent","elm","ns","sort","dir","schema","defaultValue","_columnsChangeHandler","_columnsErrorHandler","_columnsDataSourceChange","_error","statusField","_moveEnd","_moveStart","_changeOrder","_tabindex","_changeHandler","_errorHandler","_clearColumns","_renderCard","cardMenuOptions","showOn","alignToAnchor","_addResource","_resourceDataSource","resourceDS","progress","_registerShortcuts","DELETE","UP","DOWN","LEFT","RIGHT","plugin","kendo$1","__meta__","id","category","depends","default","defineProperty"],"sources":["kendo.taskboard.js"],"mappings":"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","ignoreList":[],"sourcesContent":["(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('kendo.sortable.js'), require('kendo.html.button.js'), require('kendo.core.js'), require('kendo.icons.js'), require('kendo.menu.js'), require('kendo.dialog.js'), require('kendo.form.js'), require('kendo.data.js'), require('kendo.toolbar.js'), require('kendo.textbox.js')) :\n    typeof define === 'function' && define.amd ? define(['exports', 'kendo.sortable', 'kendo.html.button', 'kendo.core', 'kendo.icons', 'kendo.menu', 'kendo.dialog', 'kendo.form', 'kendo.data', 'kendo.toolbar', 'kendo.textbox'], factory) :\n    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory((global.kendo = global.kendo || {}, global.kendo._globals = global.kendo._globals || {}, global.kendo._globals.Taskboard = {})));\n})(this, (function (exports) {\n    (function($, undefined$1) {\n        var kendo = window.kendo,\n            ui = kendo.ui,\n            Observable = kendo.Observable,\n            encode = kendo.htmlEncode,\n            extend = $.extend,\n\n            DOT = \".\",\n            NS = DOT + \"kendoTaskBoardColumn\",\n\n            CLICK = \"click\",\n            BLUR = \"blur\",\n\n            MOVE = \"move\",\n            MOVE_START = \"moveStart\",\n            MOVE_END = \"moveEnd\",\n            CHANGE = \"change\",\n            ACTION = \"action\";\n\n        var TaskBoardColumnStyles = {\n            element: \"k-taskboard-column\",\n            header: \"k-taskboard-column-header\",\n            headerText: \"k-taskboard-column-header-text\",\n            ellipsis: \"k-text-ellipsis\",\n            spacer: \"k-spacer\",\n            actions: \"k-taskboard-column-header-actions\",\n            cardsContainer: \"k-taskboard-column-cards-container\",\n            columnCards: \"k-taskboard-column-cards\",\n            actionButton: \"k-taskboard-column-action-button\",\n            card: \"k-taskboard-card\",\n            cardTitle: \"k-card-title\",\n            sortableSuffix: \"-kendosortable\",\n            textbox: \"k-textbox k-input k-input-md k-rounded-md k-input-solid\",\n            input: \"k-input-inner\",\n            newColumn: \"k-taskboard-column-new\",\n            editColumn: \"k-taskboard-column-edit\",\n            disabled: \"k-disabled\",\n            dragPlaceholder: \"k-taskboard-drag-placeholder\",\n            dragHint: \"k-taskboard-drag-hint\",\n            ignoreDrag: \"k-taskboard-drag-ignore\",\n            grabbingCursor: \"k-cursor-grabbing\"\n        };\n\n        function preventDefault(ev) { ev.preventDefault(); }\n\n        var TaskBoardColumn = Observable.extend({\n            init: function(options, dataItem) {\n                var that = this;\n\n                that._dataItem = dataItem;\n                that.options = extend(true, {}, options);\n\n                that.sortableUniqueClass = that.options.sortableIdentifier + TaskBoardColumn.styles.sortableSuffix;\n                that._render();\n                that._attachEvents();\n\n                if (options.states.isReorderable) {\n                    that._initSortable();\n                }\n\n                Observable.fn.init.call(that);\n            },\n\n            empty: function() {\n                var that = this;\n                that.container.empty();\n            },\n\n            addCard: function(cardHtml) {\n                var that = this;\n                that.container.append(cardHtml);\n            },\n\n            edit: function() {\n                var that = this,\n                    styles = TaskBoardColumn.styles;\n\n                that.element.addClass(styles.editColumn);\n                that._renderEditHeader();\n            },\n\n            getDataItem: function() {\n                return this._dataItem;\n            },\n\n            cards: function() {\n                var that = this;\n\n                return that.container.children();\n            },\n\n            template: (data) => `<div class=\"${encode(data.styles.headerText)} ${encode(data.styles.ellipsis)}\">${kendo.getter(data.dataTextField)(data)}</div>` +\n                      `<span class=\"${encode(data.styles.spacer)}\"></span>` +\n                      `${data.buttons}`,\n\n            editTemplate: (data) => `<div class=\"${encode(data.styles.headerText)} ${encode(data.styles.ellipsis)}\">` +\n                            `<span class=\"${encode(data.styles.textbox)}\">` +\n                                `<input class=\"${encode(data.styles.input)}\" placeholder=\"${encode(kendo.getter(data.dataTextField)(data) ? data.messages.editColumn : data.messages.newColumn)}\" ${encode(kendo.attr(\"command\"))}=\"SaveColumnCommand\" value=\"${encode(kendo.getter(data.dataTextField)(data))}\" />` +\n                            '</span>' +\n                            '</div>' +\n                            `<span class=\"${encode(data.styles.spacer)}\"></span>` +\n                            `${data.buttons}`,\n\n            actionButton: ({ styles, icon, spriteCssClass, text, command, options }) =>\n                        kendo.html.renderButton(`<button class=\"${encode(styles.actionButton)}\" title=\"${encode(text)}\" ${encode(kendo.attr(\"command\"))}=\"${encode(command)}\" ${options ? encode(kendo.attr('options')) + \"=\" + encode(options) : \"\"}></button>`, {\n                            icon: encode(icon),\n                            iconClass: `k-button-icon ${encode(spriteCssClass)}`,\n                            fillMode: \"flat\"\n                        }),\n\n            builtinButtons: {\n                \"editColumn\": { name: \"editColumn\", icon: \"pencil\", text: \"Edit Column\", command: \"EditColumnCommand\", rules: \"isEditable\" },\n                \"addCard\": { name: \"addCard\", icon: \"plus\", text: \"Add Card\", command: \"AddCardCommand\", rules: \"isEditable\" },\n                \"deleteColumn\": { name: \"deleteColumn\", icon: \"x\", text: \"Delete Column\", command: \"DeleteColumnCommand\", rules: \"isEditable\" }\n            },\n\n            defaultButtons: [ \"editColumn\", \"addCard\", \"deleteColumn\" ],\n\n            _render: function() {\n                var that = this,\n                    styles = TaskBoardColumn.styles,\n                    headerLabelId = kendo.guid(),\n                    element = $(\"<div class='\" + styles.element + \"'></div>\")\n                        .attr(kendo.attr(\"uid\"), that._dataItem.uid)\n                        .css({\n                            width: that.options.width\n                        })\n                        .attr(\"role\", \"list\").attr(\"aria-labelledby\", headerLabelId),\n                    header = $(\"<div class='\" + styles.header + \"'></div>\"),\n                    cardsContainer = $(\"<div class='\" + styles.cardsContainer + \"'></div>\"),\n                    columnCards = $(\"<div class='\" + styles.columnCards + \"'></div>\");\n\n                that.header = header.appendTo(element).attr(\"id\", headerLabelId);\n\n                that._renderHeader();\n\n                cardsContainer.appendTo(element);\n                that.container = columnCards\n                                    .appendTo(cardsContainer)\n                                    .addClass(that.sortableUniqueClass);\n\n                that.element = element;\n            },\n\n            _renderHeader: function() {\n                var that = this,\n                    styles = TaskBoardColumn.styles,\n                    options = that.options,\n                    template = options.template ? options.template : that.template;\n\n                that.header.append(kendo.template(template)(extend(true, {}, {\n                    styles: styles,\n                    buttons: that._buildActionsHtml(),\n                    dataTextField: options.dataTextField\n                }, that._dataItem)));\n            },\n\n            _renderEditHeader: function() {\n                var that = this,\n                    styles = TaskBoardColumn.styles,\n                    options = that.options,\n                    template = options.editTemplate ? options.editTemplate : that.editTemplate;\n\n                that.header.html(\"\");\n\n                that.header.append(kendo.template(template)(extend(true, {}, {\n                    styles: styles,\n                    messages: options.messages,\n                    buttons: that._buildActionsHtml(),\n                    dataTextField: options.dataTextField\n                }, that._dataItem)));\n\n                setTimeout(function() {\n                    that.header.find(\"input\").trigger(\"focus\");\n                }, 0);\n\n                that.header.find(DOT + styles.actions).addClass(styles.disabled);\n            },\n\n            _buildActionsHtml: function() {\n                var that = this,\n                    options = that.options,\n                    messages = options.messages,\n                    buttons = options.buttons || that.defaultButtons,\n                    styles = TaskBoardColumn.styles,\n                    html = \"<div class='\" + styles.actions + \"'>\";\n\n                for (var i = 0; i < buttons.length; i++) {\n                    var button = buttons[i];\n                    button = ($.isPlainObject(button) && Object.keys(button).length === 1 && button.name) ? button.name : button;\n\n                    if (typeof button === \"string\") {\n                        button = extend(true, {},\n                            that.builtinButtons[button] || { spriteCssClass: button, command: button + \"Command\" },\n                            { text: messages[button] || button }\n                        );\n                    } else if ($.isPlainObject(button) && button.name) {\n                        button = extend(true, button,\n                            { text: messages[button.name] }\n                        );\n                    }\n\n                    if (!that._validateRules(button)) {\n                        continue;\n                    }\n\n                    button.spriteCssClass = button.spriteCssClass || \"\";\n\n                    html += kendo.template(that.actionButton)(extend(true, {}, {\n                        styles: styles,\n                        options: false\n                    }, button));\n                }\n\n                html += \"</div>\";\n\n                return html;\n            },\n\n            _validateRules: function(tool) {\n                var that = this,\n                    states = that.options.states,\n                    rules = tool.rules ? tool.rules.split(\";\") : [];\n\n                if (!rules.length) {\n                    return true;\n                }\n\n                for (var i = 0; i < rules.length; i++) {\n                    if (!states[rules[i]]) {\n                        return false;\n                    }\n                }\n\n                return true;\n            },\n\n            _actionClick: function(ev) {\n                var that = this,\n                    target = $(ev.target).closest(\"[\" + kendo.attr(\"command\") + \"]\"),\n                    command = target.attr(kendo.attr(\"command\")),\n                    options = target.attr(kendo.attr(\"options\"));\n\n                options = typeof(options) === \"string\" ? { value: options } : options;\n\n                if (!command) {\n                    return;\n                }\n\n                that.trigger(ACTION, {\n                    command: command,\n                    options: extend({ target: target }, options)\n                });\n            },\n\n            _textboxBlur: function(ev) {\n                var that = this,\n                    target = $(ev.target).closest(\"[\" + kendo.attr(\"command\") + \"]\"),\n                    command = target.attr(kendo.attr(\"command\")),\n                    options = target.attr(kendo.attr(\"options\"));\n\n                options = typeof(options) === \"string\" ? { value: options } : options;\n\n                if (!command) {\n                    return;\n                }\n\n                that.trigger(ACTION, {\n                    command: command,\n                    options: extend({ target: target }, options)\n                });\n            },\n\n            _attachEvents: function() {\n                var that = this;\n\n                that.header.on(CLICK + NS,\n                    DOT + TaskBoardColumn.styles.actionButton,\n                    that._actionClick.bind(that));\n\n                that.header.on(BLUR + NS,\n                    DOT + TaskBoardColumn.styles.input,\n                    that._textboxBlur.bind(that));\n\n                that.header.on(\"keyup\" + NS,\n                    DOT + TaskBoardColumn.styles.input,\n                    function(ev) {\n                        if (ev.keyCode === kendo.keys.ENTER) {\n                            that._textboxBlur(ev);\n                        }\n                    }\n                );\n\n                if (that.container) {\n                    that.container.on(CLICK + NS,\n                        DOT + TaskBoardColumn.styles.card + \" [\" + kendo.attr(\"command\") + \"]\",\n                        that._actionClick.bind(that));\n\n                    that.container.on(CLICK + NS,\n                        DOT + TaskBoardColumn.styles.card + \" a.\" + TaskBoardColumn.styles.cardTitle,\n                        preventDefault);\n\n                }\n            },\n\n            _initSortable: function() {\n                var that = this,\n                    isRtl = that.options.states.isRtl,\n                    dirClass = isRtl ? \" k-rtl\" : \"\",\n                    container = that.container;\n\n                if (!that.container) {\n                    return;\n                }\n\n                that.sortable = new ui.Sortable(container, {\n                    ignore: DOT + TaskBoardColumn.styles.ignoreDrag + \" *\",\n                    connectWith: DOT + that.sortableUniqueClass,\n                    filter: DOT + TaskBoardColumn.styles.card,\n                    hint: function(element) {\n                        return element.clone()\n                            .addClass(TaskBoardColumn.styles.dragHint + \" \" + TaskBoardColumn.styles.grabbingCursor + dirClass)\n                            .css({\n                            width: element[0].offsetWidth,\n                            height: element[0].offsetHeight\n                        });\n                    },\n                    placeholder: function(element) {\n                        return $(\"<div></div>\")\n                            .addClass(TaskBoardColumn.styles.dragPlaceholder)\n                            .css({\n                                height: element[0].offsetHeight\n                            });\n                    },\n                    move: that._move.bind(that),\n                    start: that._start.bind(that),\n                    end: that._end.bind(that),\n                    change: that._change.bind(that)\n                });\n\n                that.sortable.draggable.userEvents.unbind(\"select\");\n                that.sortable.draggable.userEvents.bind(\"select\", that._select.bind(that));\n            },\n\n            _select: function(ev) {\n                var ignoreDragSelectors = TaskBoardColumn.ignoreDragSelectors;\n                var target = $(ev.event.target);\n\n                for (var i = 0; i < ignoreDragSelectors.length; i++) {\n                    if (target.is(ignoreDragSelectors[i])) {\n                        ev.preventDefault();\n                        break;\n                    }\n                }\n            },\n\n            _move: function(ev) {\n                extend(ev, {\n                    columnElement: ev.sender.element.parents(DOT + TaskBoardColumn.styles.element)\n                });\n                this.trigger(MOVE, ev);\n            },\n\n            _start: function(ev) {\n                extend(ev, {\n                    columnElement: ev.sender.element.parents(DOT + TaskBoardColumn.styles.element)\n                });\n                this.trigger(MOVE_START, ev);\n            },\n\n            _end: function(ev) {\n                extend(ev, {\n                    columnElement: ev.sender.element.parents(DOT + TaskBoardColumn.styles.element)\n                });\n                this.trigger(MOVE_END, ev);\n            },\n\n            _change: function(ev) {\n                var that = this;\n\n                extend(ev, {\n                    columnElement: ev.sender.element.parents(DOT + TaskBoardColumn.styles.element)\n                });\n\n                that.trigger(CHANGE, ev);\n\n                if ((ev.action === \"receive\" && ev.newIndex >= 0) || (ev.action === \"sort\" && ev.newIndex !== ev.oldIndex)) {\n                    that.trigger(ACTION, {\n                        command: \"MoveCardCommand\",\n                        options: ev\n                    });\n                }\n            },\n\n            destroy: function() {\n                var that = this;\n\n                that.header.off(NS);\n                that.container.off(NS);\n\n                if (that.sortable) {\n                    that.sortable.destroy();\n                }\n            }\n        });\n\n        var TaskBoardNewColumn = TaskBoardColumn.extend({\n            _render: function() {\n                var that = this,\n                    styles = TaskBoardColumn.styles,\n                    element = $(\"<div class='\" + styles.element + \"'></div>\").addClass(styles.newColumn).attr(kendo.attr(\"uid\"), that._dataItem.uid),\n                    header = $(\"<div class='\" + styles.header + \"'></div>\");\n\n                that.header = header.appendTo(element);\n\n                that._renderEditHeader();\n\n                that.element = element;\n            }\n        });\n\n        extend(kendo.ui, {\n            taskboard: {\n                Column: TaskBoardColumn,\n                NewColumn: TaskBoardNewColumn\n            }\n        });\n\n        extend(true, kendo.ui.taskboard.Column, {\n            styles: TaskBoardColumnStyles,\n            ignoreDragSelectors: [\"img\"]\n        });\n\n    })(window.kendo.jQuery);\n\n    (function($, undefined$1) {\n        var kendo = window.kendo,\n            Observable = kendo.Observable,\n            encode = kendo.htmlEncode,\n            extend = $.extend;\n\n        var TaskBoardCardStyles = {\n            element: \"k-taskboard-card\",\n            card: \"k-card\",\n            header: \"k-card-header\",\n            hbox: \"k-hbox\",\n            title: \"k-card-title\",\n            link: \"k-link\",\n            spacer: \"k-spacer\",\n            button: \"k-button\",\n            cardMenuButton: \"k-taskboard-card-menu-button k-icon-button\",\n            flatButton: \"k-button-md k-rounded-md k-button-flat k-button-flat-base\",\n            body: \"k-card-body\",\n            actionsIcon: \"more-vertical\",\n            moveCursor: \"k-cursor-move\",\n            categoryBorder: \"k-taskboard-card-category\",\n            headerActions: \"k-card-header-actions\",\n            disabled: \"k-disabled\"\n        };\n\n        var TaskBoardCard = Observable.extend({\n            init: function(options, dataItem, resources) {\n                var that = this;\n\n                that._dataItem = dataItem;\n                that.resources = resources;\n\n                that.options = extend(true, {}, options);\n\n                that._render();\n\n                Observable.fn.init.call(that);\n            },\n\n            contentTemplate: (data) => `<div class=\"${encode(data.styles.header)} ${encode(data.styles.hbox)}\">` +\n                `<a class=\"${encode(data.styles.title)} ${encode(data.styles.link)}\" href=\"#\" ${data.selectable ? kendo.attr(\"command\") + '=SelectCardCommand' : ''}>${encode(kendo.getter(data.dataTitleField)(data))}</a>` +\n                `<span class=\"${encode(data.styles.spacer)}\"></span>` +\n                `${data.cardMenuButton}` +\n            '</div>' +\n            `<div class=\"${encode(data.styles.body)}\"><p>${encode(kendo.getter(data.dataDescriptionField)(data))}</p></div>`,\n\n            cardMenuButtonTemplate: ({ styles }) => `<div class=\"${encode(styles.headerActions)}\"><button aria-label=\"menu\" class=\"${encode(styles.button)} ${encode(styles.flatButton)} ${encode(styles.cardMenuButton)}\">` +\n                                        kendo.ui.icon({ icon: encode(styles.actionsIcon), iconClass: \"k-button-icon\" }) +\n                                    '</button></div>',\n\n            _render: function() {\n                var that = this,\n                    options = that.options,\n                    styles = TaskBoardCard.styles,\n                    template = options.template || that.contentTemplate,\n                    element = $(\"<div class='\" + styles.element + \" \" + styles.card + \" \" + styles.moveCursor + \"'></div>\"),\n                    cardMenuButtonTemplate = options.cardMenu ? that.cardMenuButtonTemplate : \"\",\n                    resources = that._resources(that._dataItem),\n                    borderDir = options.states.isRtl ? \"borderRightColor\" : \"borderLeftColor\",\n                    categoryColor;\n\n                element\n                    .attr(kendo.attr(\"uid\"), that._dataItem.uid)\n                    .attr(\"aria-disabled\", !options.states.isDisabled)\n                    .attr(\"role\", \"listitem\")\n                    .toggleClass(styles.disabled, options.states.isDisabled);\n\n                categoryColor = (resources[options.dataCategoryField] && resources[options.dataCategoryField].color) ||\n                                    that._dataItem.get(options.dataCategoryField);\n\n                if (categoryColor) {\n                    element.addClass(styles.categoryBorder).css(borderDir, categoryColor);\n                }\n\n                element.append(kendo.template(template)(extend(true, {}, {\n                    styles: styles,\n                    cardMenuButton: kendo.template(cardMenuButtonTemplate)({ styles: styles }),\n                    selectable: options.states.isSelectable,\n                    resources: resources,\n                    dataTitleField: options.dataTitleField,\n                    dataDescriptionField: options.dataDescriptionField\n                }, that._dataItem)));\n\n                that.element = element;\n            },\n\n            _resources: function(card) {\n                var that = this,\n                    resources = {};\n\n                if (!that.resources) {\n                    return resources;\n                }\n\n                for (var key in that.resources) {\n                    var resource = that.resources[key];\n                    var field = resource.field;\n                    var cardResources = kendo.getter(field)(card);\n\n                    if (!cardResources) {\n                        continue;\n                    }\n\n                    if (!resource.multiple) {\n                        cardResources = [cardResources];\n                    }\n\n                    var data = resource.dataSource.view();\n\n                    for (var resourceIndex = 0; resourceIndex < cardResources.length; resourceIndex++) {\n                        var cardResource = null;\n\n                        var value = cardResources[resourceIndex];\n\n                        if (!resource.valuePrimitive) {\n                            value = kendo.getter(resource.dataValueField)(value);\n                        }\n\n                        for (var dataIndex = 0; dataIndex < data.length; dataIndex++) {\n                            if (data[dataIndex].get(resource.dataValueField) == value) {\n                                cardResource = data[dataIndex];\n                                break;\n                            }\n                        }\n\n                        if (cardResource !== null) {\n                            var resourceColor = kendo.getter(resource.dataColorField)(cardResource);\n                            var result = {\n                                field: resource.field,\n                                title: resource.title,\n                                name: resource.name,\n                                text: kendo.getter(resource.dataTextField)(cardResource),\n                                value: value,\n                                color: resourceColor\n                            };\n\n                            if (resource.multiple) {\n                                if (resources[resource.field]) {\n                                    resources[resource.field].push(result);\n                                } else {\n                                    resources[resource.field] = [result];\n                                }\n                            } else {\n                                resources[resource.field] = result;\n                            }\n                        }\n                    }\n                }\n                return resources;\n            },\n\n            _buildTemplate: function() {\n                var that = this,\n                    options = that.options,\n                    headerTemplate = kendo.format(that.headerTemplate, options.dataTitleField),\n                    bodyTemplate = kendo.format(that.bodyTemplate, options.dataDescriptionField);\n\n                return headerTemplate + bodyTemplate;\n            }\n        });\n\n        extend(kendo.ui.taskboard, {\n            Card: TaskBoardCard\n        });\n\n        extend(true, kendo.ui.taskboard.Card, { styles: TaskBoardCardStyles });\n\n    })(window.kendo.jQuery);\n\n    (function($, undefined$1) {\n        var kendo = window.kendo,\n            extend = $.extend,\n            template = kendo.template,\n            ContextMenu = kendo.ui.ContextMenu,\n            encode = kendo.htmlEncode,\n\n            ACTION = \"action\";\n\n        var TaskBoardCardMenu = ContextMenu.extend({\n            init: function(element, options) {\n                var that = this;\n\n                ContextMenu.fn.init.call(that, element, options);\n\n                that._overrideTemplates();\n                that._extendItems();\n\n                that.bind(\"select\", that._onSelect.bind(that));\n                that.bind(\"open\", that._onOpen.bind(that));\n                that.bind(\"activate\", that._focus.bind(that));\n            },\n\n            _overrideTemplates: function() {\n                this.templates.sprite = ({ icon, spriteCssClass }) => `${(icon || spriteCssClass) ? kendo.ui.icon({ icon: encode(icon || \"\"), iconClass: encode(spriteCssClass || \"\") }) : ''}`;\n            },\n\n            defaultItems: {\n                \"editCard\": { name: \"editCard\", text: \"Edit card\", icon: \"pencil\", command: \"EditCardCommand\", rules: \"isEditable\" },\n                \"deleteCard\": { name: \"deleteCard\", text: \"Delete card\", icon: \"trash\", command: \"DeleteCardCommand\", rules: \"isEditable\" }\n            },\n\n            events: ContextMenu.fn.events.concat([\n                ACTION\n            ]),\n\n            _extendItems: function() {\n                var that = this,\n                    items = that.options.items,\n                    item, isBuiltInTool;\n\n                if (items && items.length) {\n                    for (var i = 0; i < items.length; i++) {\n                        item = items[i];\n                        isBuiltInTool = $.isPlainObject(item) && Object.keys(item).length === 1 && item.name;\n\n                        if (isBuiltInTool) {\n                            item = item.name;\n                        }\n\n                        if ($.isPlainObject(item)) {\n                            that._append(item);\n                        } else if (that.defaultItems[item]) {\n                            item = that.defaultItems[item];\n                            that._append(item);\n                        } else if (typeof(item) === \"string\") {\n                            item = { name: item, text: item, spriteCssClass: item, command: item + \"Command\" };\n                            that._append(item);\n                        }\n                    }\n                } else {\n                    for (var key in that.defaultItems) {\n                        item = that.defaultItems[key];\n                        that._append(item);\n                    }\n                }\n            },\n\n            _append: function(item) {\n                var that = this;\n\n                that._extendItem(item);\n\n                if (that._validateRules(item)) {\n                    that.append(item);\n                }\n            },\n\n            _extendItem: function(item) {\n                var that = this,\n                    messages = that.options.messages,\n                    attr = {};\n\n                attr[kendo.attr(\"command\")] = item.command;\n\n                if (item.options) {\n                    attr[kendo.attr(\"options\")] = item.options;\n                }\n\n                extend(item, {\n                    text: messages[item.name],\n                    icon: item.icon || \"\",\n                    spriteCssClass: item.spriteCssClass || \"\",\n                    attr: attr,\n                    uid: kendo.guid()\n                });\n            },\n\n            _validateRules: function(tool) {\n                var that = this,\n                    states = that.options.states,\n                    rules = tool.rules ? tool.rules.split(\";\") : [];\n\n                if (!rules.length) {\n                    return true;\n                }\n\n                for (var i = 0; i < rules.length; i++) {\n                    if (!states[rules[i]]) {\n                        return false;\n                    }\n                }\n\n                return true;\n            },\n\n            _onSelect: function(ev) {\n                var command = $(ev.item).attr(kendo.attr(\"command\")),\n                    options = $(ev.item).attr(kendo.attr(\"options\")),\n                    target = $(ev.target);\n\n                options = typeof(options) === \"string\" ? { value: options } : options;\n\n                if (!command) {\n                    return;\n                }\n\n                this.action({\n                    command: command,\n                    options: extend({ target: target }, options)\n                });\n            },\n\n            _onOpen: function(ev) {\n                var menu = ev.sender,\n                    items = menu.options.items;\n\n                if (!items && $.isEmptyObject(this.defaultItems)) {\n                    ev.preventDefault();\n                }\n            },\n\n            _focus: function(ev) {\n                if (ev.sender) {\n                    ev.sender.element.trigger(\"focus\");\n                }\n            },\n\n            action: function(args) {\n                this.trigger(ACTION, args);\n            }\n        });\n\n        extend(kendo.ui.taskboard, {\n            CardMenu: TaskBoardCardMenu\n        });\n\n        })(window.kendo.jQuery);\n\n    (function($, undefined$1) {\n            var kendo = window.kendo,\n                extend = $.extend,\n                isPlainObject = $.isPlainObject,\n                Class = kendo.Class;\n\n            var TaskBoardCommand = Class.extend({\n                init: function(options) {\n                    this.options = options;\n                    this.taskboard = options.taskboard;\n                },\n                _confirm: function(title, content, okText, cancel) {\n                    var that = this,\n                        taskboard = that.taskboard,\n                        taskboardOptions = taskboard.options,\n                        confirm;\n\n                    if (isPlainObject(taskboardOptions.editable) && taskboardOptions.editable.confirmation === false ) {\n                        var fakePromise = $.Deferred();\n                        fakePromise.resolve();\n                        return fakePromise;\n                    }\n\n                    confirm = $(\"<div></div>\").kendoConfirm(extend({}, {\n                        title: title,\n                        content: content,\n                        messages: {\n                            okText: okText,\n                            cancel: cancel\n                        },\n                        buttonLayout: \"normal\"\n                    })).data(\"kendoConfirm\");\n\n                    confirm.open();\n\n                    setTimeout(function() {\n                        confirm.element.trigger(\"focus\");\n                    });\n\n                    return confirm.result;\n                }\n            });\n\n            // Column commands\n            var AddColumnCommand = TaskBoardCommand.extend({\n                exec: function() {\n                    var that = this,\n                        taskboard = that.taskboard;\n\n                    if (taskboard.trigger(\"editColumn\", { column: null })) {\n                        return;\n                    }\n\n                    taskboard.columns().each(function(index, column) {\n                        taskboard.enableByColumn(column, false);\n                    });\n                    taskboard.addColumn();\n                }\n            });\n\n            var EditColumnCommand = TaskBoardCommand.extend({\n                exec: function() {\n                    var that = this,\n                        options = that.options,\n                        taskboard = that.taskboard;\n\n                    if (taskboard.trigger(\"editColumn\", { column: options.column })) {\n                        return;\n                    }\n\n                    taskboard.columns().each(function(index, column) {\n                        taskboard.enableByColumn(column, false);\n                    });\n                    taskboard.editColumn(options.columnElement);\n                }\n            });\n\n            var DeleteColumnCommand = TaskBoardCommand.extend({\n                exec: function() {\n                    var that = this,\n                        options = that.options,\n                        taskboard = that.taskboard,\n                        taskboardOptions = taskboard.options,\n                        messages = taskboardOptions.messages,\n                        columnDS = taskboard.columnsDataSource;\n\n                    var result = that._confirm(messages.deleteColumn, messages.deleteColumnConfirm, messages[\"delete\"], messages.cancel);\n\n                    result.done(function() {\n                        if (taskboard.trigger(\"deleteColumn\", { column: options.column })) {\n                            taskboard.dataSource.cancelChanges();\n                            return;\n                        }\n\n                        columnDS.remove(options.column);\n                        columnDS.sync();\n                    });\n                }\n            });\n\n            var SaveColumnCommand = TaskBoardCommand.extend({\n                exec: function() {\n                    var that = this,\n                        options = that.options,\n                        taskboard = that.taskboard,\n                        columnSettings = taskboard.options.columnSettings,\n                        columnDS = taskboard.columnsDataSource,\n                        column = options.column,\n                        text = options.target.val();\n\n                    if (taskboard.trigger(\"saveColumn\", { column: options.column })) {\n                        taskboard.dataSource.cancelChanges();\n                        return;\n                    }\n\n                    column.set(columnSettings.dataTextField, text);\n                    columnDS.sync();\n                }\n            });\n\n            var CancelEditColumnCommand = TaskBoardCommand.extend({\n                exec: function() {\n                    var that = this,\n                        taskboard = that.taskboard,\n                        columnDS = taskboard.columnsDataSource;\n\n                    columnDS.cancelChanges();\n                }\n            });\n\n            //Move focus command\n            var MoveFocusCommand = TaskBoardCommand.extend({\n                exec: function() {\n                    var that = this,\n                        taskboard = that.taskboard,\n                        options = that.options,\n                        cardElement = options.cardElement,\n                        columnElement = options.columnElement,\n                        columns = taskboard.columns(),\n                        currentColumnIndex = columnElement.index(),\n                        direction = options.value,\n                        columnIndex, column;\n\n                    switch (direction) {\n                        case \"left\":\n                            columnIndex = Math.max(0, currentColumnIndex - 1);\n                            break;\n                        case \"right\":\n                            columnIndex = Math.min(columns.length - 1, currentColumnIndex + 1);\n                            break;\n                        default:\n                            columnIndex = currentColumnIndex;\n                            break;\n                    }\n\n                    that.columns = columns;\n                    that.columnIndex = columnIndex;\n                    that.column = column = taskboard._getColumnByElement(columns.eq(columnIndex));\n                    that.cards = column.cards();\n\n                    if (cardElement) {\n                        that._moveFromCardFocus(direction, cardElement);\n                    } else if (columnElement && direction === \"down\") {\n                        that.cards.eq(0).trigger(\"focus\");\n                    } else {\n                        columns.eq(columnIndex).trigger(\"focus\");\n                    }\n                },\n                _moveFromCardFocus: function(direction, cardElement) {\n                    var that = this,\n                        currentIndex = cardElement.index(),\n                        focusCard, index, seekFocusableCard = false;\n\n                    switch (direction) {\n                        case \"up\":\n                            index = currentIndex - 1;\n                            break;\n                        case \"down\":\n                            index = currentIndex + 1;\n                            break;\n                        default:\n                            seekFocusableCard = true;\n                            index = currentIndex;\n                            break;\n                    }\n\n                    focusCard = that.cards.eq(index);\n\n                    if (!focusCard.length && seekFocusableCard) {\n                        focusCard = that._getFocusableCard(index, direction);\n                    }\n\n                    if (index >= 0) {\n                        focusCard.trigger(\"focus\");\n                    } else {\n                        that.options.columnElement.focus();\n                    }\n                },\n                _getFocusableCard: function(index, direction) {\n                    var that = this,\n                        lastIndex = that.cards.length - 1,\n                        focusable = that.cards.eq(Math.min(index, lastIndex));\n\n                    if (focusable.length) {\n                        return focusable;\n                    }\n\n                    if (that.columnIndex <= 0 || that.columnIndex >= that.columns.length - 1) {\n                        return;\n                    }\n\n                    switch (direction) {\n                        case \"left\":\n                            that.columnIndex = Math.max(0, that.columnIndex - 1);\n                            break;\n                        case \"right\":\n                            that.columnIndex = Math.min(that.columns.length - 1, that.columnIndex + 1);\n                            break;\n                    }\n\n                    that.column = that.taskboard._getColumnByElement(that.columns.eq(that.columnIndex));\n                    that.cards = that.column.cards();\n\n                    return that._getFocusableCard(index, direction);\n\n                }\n            });\n\n            // Card commands\n            var TaskBoardBaseCardCommand = TaskBoardCommand.extend({\n                _updateOrder: function(column, currentIndex) {\n                    var that = this,\n                        taskboard = that.taskboard,\n                        taskBoardOptions = taskboard.options,\n                        dataOrderField = taskBoardOptions.dataOrderField,\n                        options = that.options,\n                        currentCard = options.card,\n                        cardIndex = options.cardElement ? options.cardElement.index() : column.cards().length,\n                        newIndex = currentIndex,\n                        cards = column.cards().map(function(idx, card) {\n                            return taskboard.dataItem(card);\n                        }),\n                        prevCard = cards[cardIndex - 1],\n                        nextCard;\n\n                        currentCard.set(dataOrderField, newIndex);\n\n                        if (prevCard && prevCard.get(dataOrderField) >= currentCard.get(dataOrderField)) {\n                            currentCard.set(dataOrderField, prevCard.get(dataOrderField) + 1);\n                        }\n\n                        for (var i = newIndex + 1; i < cards.length; i++) {\n                            nextCard = cards[i];\n\n                            if (nextCard.get(dataOrderField) <= currentCard.get(dataOrderField)) {\n                                nextCard.set(dataOrderField, currentCard.get(dataOrderField) + 1);\n                                currentCard = nextCard;\n                            } else {\n                                break;\n                            }\n                        }\n                }\n            });\n\n            var SelectCardCommand = TaskBoardCommand.extend({\n                exec: function() {\n                    var that = this,\n                        taskboard = that.taskboard,\n                        options = that.options,\n                        cardElement = options.cardElement;\n\n                    taskboard._select(cardElement, true);\n                    cardElement.focus();\n                }\n            });\n\n            var SaveChangesCommand = TaskBoardBaseCardCommand.extend({\n                exec: function() {\n                    var that = this,\n                        taskboard = that.taskboard,\n                        taskBoardOptions = taskboard.options,\n                        options = that.options,\n                        receivedStatus = options.card.get(taskBoardOptions.dataStatusField),\n                        targetColumn = taskboard._getColumn(receivedStatus),\n                        activeElm = $(document.activeElement);\n\n                    if (activeElm.length) {\n                        activeElm.trigger(\"change\");\n                    }\n\n                    if (taskboard.pane && taskboard.pane.form && !taskboard.pane.form.validate()) {\n                        return;\n                    }\n\n                    if (taskboard.trigger(\"saveCard\", { card: options.card })) {\n                        taskboard.dataSource.cancelChanges();\n                        return;\n                    }\n\n                    if (targetColumn && taskBoardOptions.dataOrderField) {\n                        that._updateOrder(targetColumn, options.card.get(taskBoardOptions.dataOrderField));\n                    }\n\n                    taskboard.dataSource.sync().then(function() {\n                        taskboard.columns().eq(0).trigger(\"focus\");\n                    });\n                }\n            });\n\n            var DeleteCardCommand = TaskBoardCommand.extend({\n                exec: function() {\n                    var that = this,\n                        taskboard = that.taskboard,\n                        messages = taskboard.options.messages,\n                        options = that.options;\n\n                    var result = that._confirm(messages.deleteCard, messages.deleteCardConfirm, messages[\"delete\"], messages.cancel);\n\n                    result\n                        .done(function() {\n                            if (taskboard.trigger(\"deleteCard\", { card: options.card })) {\n                                taskboard.dataSource.cancelChanges();\n                                return;\n                            }\n\n                            taskboard.dataSource.remove(options.card);\n                            taskboard.dataSource.sync().then(function() {\n                                taskboard.columns().eq(0).trigger(\"focus\");\n                            });\n                        })\n                        .fail(function() {\n                            options.cardElement.trigger(\"focus\");\n                        });\n                }\n            });\n\n            var MoveCardCommand = TaskBoardBaseCardCommand.extend({\n                exec: function() {\n                    var that = this,\n                        taskboard = that.taskboard,\n                        taskBoardOptions = taskboard.options,\n                        columnSettings = taskBoardOptions.columnSettings,\n                        options = that.options,\n                        receivedStatus = options.column.get(columnSettings.dataStatusField);\n\n                    options.card.set(taskBoardOptions.dataStatusField, receivedStatus);\n\n                    if (taskBoardOptions.dataOrderField) {\n                        that._updateOrder(taskboard._getColumn(receivedStatus), options.newIndex);\n                    }\n\n                    taskboard.dataSource.sync();\n                }\n            });\n\n            var EditCardCommand = TaskBoardCommand.extend({\n                exec: function() {\n                    var that = this,\n                        taskboard = that.taskboard,\n                        options = that.options;\n\n                    if (taskboard.trigger(\"editCard\", { card: options.card })) {\n                        return;\n                    }\n\n                    taskboard._openPane(extend({\n                        pane: \"Edit\"\n                    }, options));\n                }\n            });\n\n            var AddCardCommand = TaskBoardCommand.extend({\n                exec: function() {\n                    var that = this,\n                        taskboard = that.taskboard,\n                        options = that.options;\n\n                    if (taskboard.trigger(\"editCard\", { card: null })) {\n                        return;\n                    }\n                    taskboard.dataSource.cancelChanges();\n                    taskboard._openPane(extend({\n                        pane: \"Create\"\n                    }, options));\n                }\n            });\n\n            // Pane commands\n            var OpenPaneCommand = TaskBoardCommand.extend({\n                exec: function() {\n                    var that = this,\n                        options = that.options,\n                        taskboard = that.taskboard;\n\n                    taskboard._openPane({\n                        pane: options.value,\n                        card: options.card,\n                        cardElement: options.cardElement,\n                        column: options.column,\n                        columnElement: options.columnElement\n                    });\n                }\n            });\n\n            var ClosePaneCommand = TaskBoardCommand.extend({\n                exec: function() {\n                    var that = this,\n                        taskboard = that.taskboard;\n\n                    taskboard._closePane();\n                    taskboard.dataSource.cancelChanges();\n                }\n            });\n\n            // Search command\n\n            var SearchCommand = TaskBoardCommand.extend({\n                exec: function() {\n                    var that = this,\n                        value = that.options.value,\n                        taskboard = that.taskboard,\n                        taskboardOptions = taskboard.options,\n                        searchOptions = taskboardOptions.search,\n                        operator = searchOptions.operator,\n                        fields = (searchOptions && searchOptions.fields) || [ taskboardOptions.dataTitleField, taskboardOptions.dataDescriptionField ],\n                        filters;\n\n                    filters = that._buildFilters(fields, operator, value);\n\n                    taskboard.dataSource.filter(filters);\n                },\n                _buildFilters: function(fields, operator, value) {\n                    var filters = fields.map(function(field) {\n                        return { field: field, operator: operator, value: value };\n                    });\n\n                    return { logic: \"or\", filters: filters };\n                }\n            });\n\n            extend(kendo.ui.taskboard, {\n                Command: TaskBoardCommand,\n                commands: {\n                    AddColumnCommand: AddColumnCommand,\n                    EditColumnCommand: EditColumnCommand,\n                    DeleteColumnCommand: DeleteColumnCommand,\n                    SaveColumnCommand: SaveColumnCommand,\n                    CancelEditColumnCommand: CancelEditColumnCommand,\n                    OpenPaneCommand: OpenPaneCommand,\n                    ClosePaneCommand: ClosePaneCommand,\n                    SelectCardCommand: SelectCardCommand,\n                    MoveFocusCommand: MoveFocusCommand,\n                    SaveChangesCommand: SaveChangesCommand,\n                    DeleteCardCommand: DeleteCardCommand,\n                    MoveCardCommand: MoveCardCommand,\n                    EditCardCommand: EditCardCommand,\n                    AddCardCommand: AddCardCommand,\n                    SearchCommand: SearchCommand\n                }\n            });\n\n        })(window.kendo.jQuery);\n\n    (function($, undefined$1) {\n        var kendo = window.kendo,\n            extend = $.extend,\n            Observable = kendo.Observable,\n            encode = kendo.htmlEncode,\n\n            Form = kendo.ui.Form,\n\n            DOT = \".\",\n            NS = DOT + \"kendoTaskBoardPane\",\n\n            ACTION = \"action\",\n            CLICK = \"click\";\n\n        var TaskBoardPaneStyles = {\n            element: \"k-taskboard-pane\",\n            edit: \"k-taskboard-edit-pane\",\n            preview: \"k-taskboard-preview-pane\",\n            header: \"k-taskboard-pane-header\",\n            headerText: \"k-taskboard-pane-header-text\",\n            spacer: \"k-spacer\",\n            headerActions: \"k-taskboard-pane-header-actions\",\n            content: \"k-taskboard-pane-content\",\n            footerActions: \"k-taskboard-pane-actions\",\n            footerActionButtons: \"k-actions k-hstack k-justify-content-start\",\n            baseButton: \"k-button-solid-base\",\n            primaryButton: \"k-button-solid-primary\"\n        };\n\n        var TaskBoardPane = Observable.extend({\n            init: function(taskboard, options, dataItem, resources) {\n                var that = this;\n\n                that.taskboard = taskboard;\n                that._dataItem = dataItem;\n                that.resources = resources;\n                that.options = extend(true, {}, options);\n\n                that._render();\n\n                that.element.on(CLICK + NS,\n                    \"[\" + kendo.attr(\"command\") + \"]\",\n                    that._commandClick.bind(that));\n\n                Observable.fn.init.call(that);\n            },\n            headerTemplate: ({ styles, messages, fieldFormat }) => `<div class=\"${encode(styles.headerText)}\">${fieldFormat}</div>` +\n                            `<span class=\"${encode(styles.spacer)}\"></span>` +\n                            `<div class=\"${encode(styles.headerActions)}\">` +\n                                kendo.html.renderButton(`<button title=\"${encode(messages.close)}\" ${encode(kendo.attr(\"command\"))}=\"ClosePaneCommand\"></button>`, {\n                                    icon: \"x\",\n                                    iconClass: 'k-button-icon',\n                                    fillMode: \"flat\",\n                                }) +\n                            '</div>',\n            buttonTemplate: ({ styles, icon, spriteCssClass, text, fillMode, themeColor, command, options }) =>\n                kendo.html.renderButton(`<button title=\"${encode(text)}\" ${encode(kendo.attr(\"command\"))}=\"${encode(command)}\" ${encode(kendo.attr(\"options\"))}=\"${encode(options)}\">` +\n                    `${encode(text)}` +\n                '</button>', {\n                    icon: encode(icon),\n                    iconClass: `k-button-icon ${encode(spriteCssClass)}`,\n                    fillMode: fillMode,\n                    themeColor: themeColor\n                }),\n            contentTemplate: () => ``,\n            builtinButtons: {\n                \"edit\": { name: \"edit\", icon: \"pencil\", text: \"Edit\", themeColor: \"primary\", command: \"EditCardCommand\", rules: \"isEditable\" },\n                \"delete\": { name: \"delete\", icon: \"trash\", text: \"Delete\", command: \"DeleteCardCommand\", rules: \"isEditable\", fillMode: \"flat\", themeColor: \"primary\" },\n                \"cancel\": { name: \"cancel\", icon: \"cancel-outline\", text: \"Cancel\", command: \"ClosePaneCommand\" },\n                \"saveChanges\": { name: \"saveChanges\", icon: \"save\", text: \"Save\", command: \"SaveChangesCommand\", themeColor: \"primary\", rules: \"isEditable\" },\n                \"create\": { name: \"create\", icon: \"save\", text: \"Create\", command: \"SaveChangesCommand\", themeColor: \"primary\", rules: \"isEditable\" }\n            },\n            defaultButtons: [],\n            _render: function() {\n                var that = this,\n                    styles = TaskBoardPane.styles,\n                    element = $(\"<div class='\" + styles.element + \"'></div>\"),\n                    header = $(\"<div class='\" + styles.header + \"'></div>\"),\n                    content = $(\"<div class='\" + styles.content + \"'></div>\"),\n                    buttonsContainer = $(\"<div class='\" + styles.footerActions + \" \" + styles.footerActionButtons + \"'></div>\");\n\n                that.header = header.appendTo(element);\n                that._renderHeader();\n                that.content = content.appendTo(element);\n                that._renderContent();\n                that.buttonsContainer = buttonsContainer.appendTo(element);\n                that.buttonsContainer.append(that._buildButtonsHtml());\n                that.element = element;\n            },\n            _renderHeader: function() {\n                var that = this,\n                    styles = TaskBoardPane.styles,\n                    options = that.options,\n                    messages = options.messages,\n                    headerTemplate = options.headerTemplate ? options.headerTemplate : that.headerTemplate,\n                    resources = that._resources(that._dataItem);\n\n                that.header.append(kendo.template(headerTemplate)(extend(true, {}, {\n                    styles: styles,\n                    messages: messages,\n                    resources: resources,\n                    fieldFormat: that._buildHeaderTemplate(that._dataItem)\n                }, that._dataItem)));\n            },\n            _buildHeaderTemplate: function(dataItem) {\n                var that = this;\n                return encode(kendo.getter(that.options.dataTitleField)(dataItem));\n            },\n            _renderContent: function() {\n                var that = this,\n                    styles = TaskBoardPane.styles,\n                    options = that.options,\n                    messages = options.messages,\n                    contentTemplate = options.template || that.contentTemplate,\n                    resources = that._resources(that._dataItem);\n\n                that.content.append(kendo.template(contentTemplate)(extend(true, {}, {\n                    styles: styles,\n                    messages: messages,\n                    resources: resources\n                }, that._dataItem)));\n            },\n            _resources: function(card) {\n                var that = this,\n                    resources = {};\n\n                if (!that.resources) {\n                    return resources;\n                }\n\n                for (var key in that.resources) {\n                    var resource = that.resources[key];\n                    var field = resource.field;\n                    var cardResources = kendo.getter(field)(card);\n\n                    if (!cardResources) {\n                        continue;\n                    }\n\n                    if (!resource.multiple) {\n                        cardResources = [cardResources];\n                    }\n\n                    var data = resource.dataSource.view();\n\n                    for (var resourceIndex = 0; resourceIndex < cardResources.length; resourceIndex++) {\n                        var cardResource = null;\n\n                        var value = cardResources[resourceIndex];\n\n                        if (!resource.valuePrimitive) {\n                            value = kendo.getter(resource.dataValueField)(value);\n                        }\n\n                        for (var dataIndex = 0; dataIndex < data.length; dataIndex++) {\n                            if (data[dataIndex].get(resource.dataValueField) == value) {\n                                cardResource = data[dataIndex];\n                                break;\n                            }\n                        }\n\n                        if (cardResource !== null) {\n                            var resourceColor = kendo.getter(resource.dataColorField)(cardResource);\n                            var result = {\n                                field: resource.field,\n                                title: resource.title,\n                                name: resource.name,\n                                text: kendo.getter(resource.dataTextField)(cardResource),\n                                value: value,\n                                color: resourceColor\n                            };\n\n                            if (resource.multiple) {\n                                if (resources[resource.field]) {\n                                    resources[resource.field].push(result);\n                                } else {\n                                    resources[resource.field] = [result];\n                                }\n                            } else {\n                                resources[resource.field] = result;\n                            }\n                        }\n                    }\n                }\n                return resources;\n            },\n            _buildButtonsHtml: function() {\n                var that = this,\n                    options = that.options,\n                    messages = options.messages,\n                    buttons = options.buttons || that.defaultButtons,\n                    styles = TaskBoardPane.styles,\n                    html = \"\";\n\n                for (var i = 0; i < buttons.length; i++) {\n                    var button = buttons[i];\n                    button = ($.isPlainObject(button) && Object.keys(button).length === 1 && button.name) ? button.name : button;\n\n                    if (typeof button === \"string\") {\n                        if (button === \"spacer\") {\n                            html += '<span class=\"k-spacer\"></span>';\n                            continue;\n                        }\n\n                        button = extend(true, {},\n                            that.builtinButtons[button] || { spriteCssClass: button, command: button + \"Command\" },\n                            { text: messages[button] || button }\n                        );\n                    } else if ($.isPlainObject(button) && button.name) {\n                        button = extend(true, button,\n                            { text: messages[button.name] }\n                        );\n                    }\n\n                    if (!that._validateRules(button)) {\n                        continue;\n                    }\n\n                    button.spriteCssClass = button.spriteCssClass || \"\";\n\n                    html += kendo.template(that.buttonTemplate)(extend(true, {}, {\n                        styles: styles,\n                        messages: messages,\n                        primary: false,\n                        options: null\n                    }, button));\n                }\n\n                return html;\n            },\n            _commandClick: function(ev) {\n                var that = this,\n                    target = $(ev.target).closest(\"[\" + kendo.attr(\"command\") + \"]\"),\n                    command = target.attr(kendo.attr(\"command\")),\n                    options = target.attr(kendo.attr(\"options\")),\n                    card = that._dataItem;\n\n                options = typeof(options) === \"string\" ? { value: options } : options;\n\n                if (!command) {\n                    return;\n                }\n\n                that.trigger(ACTION, {\n                    command: command,\n                    options: extend({ card: card }, options)\n                });\n            },\n            _validateRules: function(tool) {\n                var that = this,\n                    states = that.options.states,\n                    rules = tool.rules ? tool.rules.split(\";\") : [];\n\n                if (!rules.length) {\n                    return true;\n                }\n\n                for (var i = 0; i < rules.length; i++) {\n                    if (!states[rules[i]]) {\n                        return false;\n                    }\n                }\n\n                return true;\n            },\n            destroy: function() {\n                var that = this;\n\n                that.element.off(NS);\n                that.element.remove();\n            }\n        });\n\n        var TaskBoardPreviewPane = TaskBoardPane.extend({\n            init: function(taskboard, options, dataItem, resources) {\n                var that = this;\n\n                options = extend({}, options.previewPane, {\n                    dataTitleField: options.dataTitleField,\n                    dataDescriptionField: options.dataDescriptionField,\n                    messages: options.messages,\n                    states: options.states\n                });\n\n                that.contentTemplate = (data) => encode(kendo.getter(options.dataDescriptionField)(data));\n\n                TaskBoardPane.fn.init.call(that, taskboard, options, dataItem, resources);\n\n                that.element.addClass(TaskBoardPane.styles.preview);\n            },\n            defaultButtons: [ \"edit\", \"spacer\", \"delete\" ]\n        });\n\n        var TaskBoardEditPane = TaskBoardPane.extend({\n            init: function(taskboard, options, dataItem) {\n                var that = this;\n\n                options = extend({}, options.editable, {\n                    dataTitleField: options.dataTitleField,\n                    dataDescriptionField: options.dataDescriptionField,\n                    messages: options.messages,\n                    states: options.states\n                });\n\n                that.formSettings = extend(that.formSettings, {\n                    items: [\n                        { field: options.dataTitleField, label: options.messages[options.dataTitleField] },\n                        { field: options.dataDescriptionField, label: options.messages[options.dataDescriptionField] }\n                    ]\n                }, options.form);\n\n                TaskBoardPane.fn.init.call(that, taskboard, options, dataItem);\n\n                that.element.addClass(TaskBoardPane.styles.edit);\n            },\n            defaultButtons: [ \"saveChanges\", \"cancel\" ],\n            formSettings: {\n                buttonsTemplate: () => \"\"\n            },\n            _buildHeaderTemplate: function(dataItem) {\n                var that = this;\n                return `${that.options.messages.edit} ${encode(kendo.getter(that.options.dataTitleField)(dataItem))}`;\n            },\n            _renderContent: function() {\n                var that = this,\n                    options = that.options,\n                    styles = TaskBoardPane.styles,\n                    formSettings = options.form || that.formSettings,\n                    formLabelId = kendo.guid(),\n                    element = $(\"<div></div>\")\n                        .attr(\"role\", \"form\")\n                        .attr(\"aria-labelledby\", formLabelId),\n                    focusFirst = (options.form && options.form.focusFirst !== undefined$1) ? options.form.focusFirst : true;\n\n                that.header.find(DOT + styles.headerText).attr(\"id\", formLabelId);\n\n                that.content.append(element);\n\n                that.form = new Form(element, extend({}, formSettings, {\n                    formData: that._dataItem,\n                    focusFirst: focusFirst\n                }));\n            }\n        });\n\n        var TaskBoardCreatePane = TaskBoardEditPane.extend({\n            init: function(taskboard, options, dataItem, resources, column) {\n                var that = this,\n                    columnStatusField = options.columnSettings.dataStatusField,\n                    firstColumn = taskboard.columnsDataSource.view().at(0),\n                    status = column ? column[columnStatusField] : firstColumn[columnStatusField],\n                    clone = extend({}, dataItem);\n\n                dataItem = taskboard.dataSource.add();\n                dataItem.set(options.dataStatusField, status);\n\n                for (var key in clone) {\n                    dataItem.set(key, clone[key]);\n                }\n\n                TaskBoardEditPane.fn.init.call(that, taskboard, options, dataItem, resources);\n            },\n            _buildHeaderTemplate: function(dataItem) {\n                var that = this;\n                return that.options.messages.createNewCard;\n            },\n            defaultButtons: [ \"create\", \"cancel\"]\n        });\n\n        extend(kendo.ui.taskboard, {\n            Pane: TaskBoardPane,\n            panes: {\n                Preview: TaskBoardPreviewPane,\n                Edit: TaskBoardEditPane,\n                Create: TaskBoardCreatePane\n            }\n        });\n\n        extend(true, kendo.ui.taskboard.Pane, { styles: TaskBoardPaneStyles });\n\n    })(window.kendo.jQuery);\n\n    (function($, undefined$1) {\n        var kendo = window.kendo,\n            Observable = kendo.Observable,\n\n            extend = $.extend,\n\n            DOT = \".\",\n            NS = DOT + \"kendoKeyboardManager\",\n            KEYDOWN = \"keydown\",\n            ACTION = \"action\";\n\n\n        var Keyboard = Observable.extend({\n            init: function(element) {\n                var that = this;\n\n                that.register = {};\n                that.element = element;\n\n                that._attachEvents();\n\n                Observable.fn.init.call(that);\n            },\n\n            registerShortcut: function(selector, shortcut, options) {\n                var that = this;\n\n                if (!that.register[selector]) {\n                    that.register[selector] = [];\n                }\n\n                if (shortcut.keyCode && isNaN(shortcut.keyCode) && shortcut.keyCode.toUpperCase) {\n                    shortcut.keyCode = shortcut.keyCode.toUpperCase().charCodeAt(0);\n                }\n\n                that.register[selector].push({\n                    shortcut: extend({\n                        keyCode: null,\n                        ctrlKey: false,\n                        shiftKey: false,\n                        altKey: false\n                    }, shortcut),\n                    options: options\n                });\n\n            },\n\n            _attachEvents: function() {\n                var that = this,\n                    handler = that._handler.bind(that);\n\n                that.element.on(KEYDOWN + NS, handler);\n            },\n\n            _handler: function(ev) {\n                var that = this,\n                    target = $(ev.target),\n                    shortcuts, action;\n\n                for (var selector in that.register) {\n                    if (target.is(selector)) {\n                        shortcuts = that.register[selector];\n                        action = that._getAction(shortcuts, ev);\n\n                        if (action) {\n                            that._trigger(action, ev);\n                            break;\n                        }\n                    }\n                }\n            },\n\n            _trigger: function(action, ev) {\n                var that = this,\n                    target = $(ev.target);\n\n                if (action.command) {\n                    that.trigger(ACTION, extend({}, ev, {\n                        command: action.command,\n                        options: extend({}, {\n                            target: target\n                        }, action.options)\n                    }));\n                }\n\n                if (action.handler) {\n                    action.handler(ev);\n                }\n            },\n\n            _getAction: function(shortcuts, ev) {\n                var that = this;\n\n                for (var i = 0; i < shortcuts.length; i++) {\n                    if (that._compareShortcut(shortcuts[i].shortcut, ev)) {\n                        return shortcuts[i].options;\n                    }\n                }\n            },\n\n            _compareShortcut: function(shortcut, ev) {\n                var that = this;\n\n                for (var key in shortcut) {\n                    var result = false;\n\n                    switch (key) {\n                        case \"ctrlKey\":\n                            result = shortcut[key] !== that._getShortcutModifier(ev);\n                            break;\n                        default:\n                            result = shortcut[key] !== ev[key];\n                            break;\n                    }\n\n                    if (result) {\n                        return false;\n                    }\n                }\n\n                return true;\n            },\n\n            _getShortcutModifier: function(ev) {\n                var mac = navigator.platform.toUpperCase().indexOf('MAC') >= 0;\n                return mac ? ev.metaKey : ev.ctrlKey;\n            },\n\n            destroy: function() {\n                var that = this;\n\n                that.element.off(NS);\n            }\n        });\n\n        extend(kendo.ui.taskboard, {\n            KeyboardManager: Keyboard\n        });\n\n    })(window.kendo.jQuery);\n\n    const __meta__ = {\n            id: \"taskboard\",\n            name: \"TaskBoard\",\n            category: \"web\",\n            description: \"The TaskBoard widget displays cards.\",\n            depends: [\"data\", \"sortable\", \"dialog\", \"form\", \"menu\", \"toolbar\", \"textbox\"]\n        };\n\n        var TaskBoardStyles = {\n            wrapper: \"k-taskboard\",\n            header: \"k-taskboard-header\",\n            content: \"k-taskboard-content\",\n            toolbar: \"k-taskboard-toolbar\",\n            columnsContainer: \"k-taskboard-columns-container\",\n            card: \"k-taskboard-card\",\n            column: \"k-taskboard-column\",\n            selected: \"k-selected\",\n            disabled: \"k-disabled\",\n            ignoreDrag: \"k-taskboard-drag-ignore\"\n        };\n\n        var preventDefault = function(ev) { ev.preventDefault(); };\n\n        (function($, undefined$1) {\n            var kendo = window.kendo,\n                Widget = kendo.ui.Widget,\n                DataSource = kendo.data.DataSource,\n                extend = $.extend,\n                ui = kendo.ui,\n                isArray = Array.isArray,\n                isPlainObject = $.isPlainObject,\n\n                GENERIC = \"_generic\",\n\n                DOT = \".\",\n\n                MOVE = \"move\",\n                MOVE_START = \"moveStart\",\n                MOVE_END = \"moveEnd\",\n                SELECT = \"select\",\n                EXECUTE = \"execute\",\n                ACTION = \"action\",\n                CHANGE = \"change\",\n                CLICK = \"click\",\n                TOGGLE = \"toggle\",\n                ERROR = \"change\",\n                DATABINDING = \"dataBinding\",\n                DATABOUND = \"dataBound\",\n                EDIT_CARD = \"editCard\",\n                SAVE_CARD = \"saveCard\",\n                DELETE_CARD = \"deleteCard\",\n                EDIT_COLUMN = \"editColumn\",\n                SAVE_COLUMN = \"saveColumn\",\n                DELETE_COLUMN = \"deleteColumn\",\n\n                COLUMNSDATABINDING = \"columnsDataBinding\",\n                COLUMNSDATABOUND = \"columnsDataBound\";\n\n            var TaskBoard = Widget.extend({\n                init: function(element, options) {\n                    var that = this;\n\n                    Widget.fn.init.call(that, element, options);\n\n                    element = that.wrapper = that.element;\n\n                    that._sortableIdentifier = that.element.attr(\"id\") || kendo.guid();\n\n                    that._wrapper();\n                    that._columnsDataSource();\n                    that._initResources();\n                    that._dataSource();\n                    that._initToolbar();\n                    that._initCardMenu();\n                    that._initKeyboard();\n\n                    if (that.options.autoBind) {\n                        that.load();\n                    }\n\n                    kendo.notify(that);\n                },\n\n                events: [\n                    MOVE,\n                    MOVE_START,\n                    MOVE_END,\n                    CHANGE,\n                    EXECUTE,\n                    SELECT,\n                    DATABINDING,\n                    DATABOUND,\n                    COLUMNSDATABINDING,\n                    COLUMNSDATABOUND,\n                    EDIT_CARD,\n                    SAVE_CARD,\n                    DELETE_CARD,\n                    EDIT_COLUMN,\n                    SAVE_COLUMN,\n                    DELETE_COLUMN\n                ],\n\n                options: {\n                    name: \"TaskBoard\",\n                    autoBind: true,\n                    height: 600,\n                    width: \"100%\",\n                    toolbar: true,\n                    dataStatusField: \"status\",\n                    dataTitleField: \"title\",\n                    dataDescriptionField: \"description\",\n                    dataCategoryField: \"category\",\n                    dataOrderField: null,\n                    cardMenu: true,\n                    editable: true,\n                    selectable: true,\n                    reorderable: true,\n                    previewPane: true,\n                    search: {\n                        operator: \"contains\"\n                    },\n                    dataSource: [],\n                    columns: [],\n                    columnSettings: {\n                        dataStatusField: \"status\",\n                        dataTextField: \"text\",\n                        dataOrderField: null\n                    },\n                    resources: [],\n                    messages: {\n                        edit: \"Edit\",\n                        createNewCard: \"Create new card\",\n                        create: \"Create\",\n                        search: \"Search\",\n                        previewCard: \"Preview card\",\n                        addCard: \"Add card\",\n                        editCard: \"Edit card\",\n                        deleteCard: \"Delete Card\",\n                        addColumn: \"Add column\",\n                        editColumn: \"Edit column\",\n                        deleteColumn: \"Delete column\",\n                        close: \"Close\",\n                        cancel: \"Cancel\",\n                        \"delete\": \"Delete\",\n                        saveChanges: \"Save changes\",\n                        title: \"Title:\",\n                        description: \"Description:\",\n                        newColumn: \"New column\",\n                        deleteColumnConfirm: \"Are you sure you want to delete this column?\",\n                        deleteCardConfirm: \"Are you sure you want to delete this card?\"\n                    }\n                },\n\n                defaultTools: {\n                    addColumn: { type: \"button\", name: \"addColumn\", command: \"AddColumnCommand\", icon: \"plus\", rules: \"isEditable\" },\n                    spacer: { type: \"spacer\" },\n                    search: {\n                        type: \"component\",\n                        name: \"search\",\n                        command: \"SearchCommand\",\n                        options: \"{ \\\"field\\\": \\\"name\\\", \\\"operator\\\": \\\"startswith\\\" }\",\n                        rules: \"isSearchable\",\n                        overflow: \"never\",\n                        component: \"TextBox\",\n                        componentOptions: {\n                            placeholder: \"search\",\n                            icon: \"search\",\n                            commandOn: \"input\"\n                        }\n                    }\n                },\n\n                items: function() {\n                    var that = this,\n                        result = $([]);\n\n                    for (var key in that._columns) {\n                        $.merge(result, that._columns[key].cards());\n                    }\n\n                    return result;\n                },\n\n                itemsByStatus: function(status) {\n                    var that = this,\n                        result = that._getColumn(status).cards();\n\n                    return result;\n                },\n\n                itemsByColumn: function(columnElm) {\n                    var that = this,\n                        column = that._getColumnByElement(columnElm);\n\n                    if (column) {\n                        return column.cards();\n                    }\n                },\n\n                load: function() {\n                    var that = this,\n                        fetchPromises = [];\n\n                    that._progress(true);\n\n                    fetchPromises.push(that.columnsDataSource.fetch());\n\n                    for (var key in that.resources) {\n                        fetchPromises.push(that.resources[key].dataSource.fetch());\n                    }\n\n                    $.when.apply(null, fetchPromises)\n                        .then(that.dataSource.read.bind(that.dataSource));\n                },\n\n                dataItem: function(cardElm) {\n                    var that = this,\n                        dataSource = that.dataSource,\n                        uid;\n\n                    cardElm = $(cardElm);\n                    uid = cardElm.attr(kendo.attr(\"uid\"));\n\n                    return dataSource.getByUid(uid);\n                },\n\n                columnDataItem: function(columnElm) {\n                    var that = this,\n                        columnsDataSource = that.columnsDataSource,\n                        uid;\n\n                    columnElm = $(columnElm);\n                    uid = columnElm.attr(kendo.attr(\"uid\"));\n\n                    return columnsDataSource.getByUid(uid);\n                },\n\n                columns: function() {\n                    var that = this,\n                        result = $([]);\n\n                    for (var key in that._columns) {\n                        $.merge(result, that._columns[key].element);\n                    }\n\n                    return result;\n                },\n\n                columnByStatus: function(status) {\n                    return this._getColumn(status).element;\n                },\n\n                select: function(card, toggle) {\n                    var that = this;\n\n                    if (!card) {\n                        return that.element\n                            .find(DOT + TaskBoard.styles.card + DOT + TaskBoard.styles.selected).eq(0);\n                    }\n\n                    card = $(card);\n                    toggle = toggle !== false;\n\n                    if (toggle) {\n                        that.element\n                            .find(DOT + TaskBoard.styles.card + DOT + TaskBoard.styles.selected)\n                            .removeClass(TaskBoard.styles.selected);\n                    }\n\n                    card.toggleClass(TaskBoard.styles.selected, toggle);\n                },\n\n                previewCard: function(cardElement) {\n                    var that = this,\n                        options = that.options,\n                        args = that._extendExecArgs({ target: cardElement });\n\n                    if (options.previewPane) {\n                        that._openPane(extend({\n                            pane: \"Preview\"\n                        }, args));\n                    }\n                },\n\n                editCard: function(cardElement) {\n                    var that = this,\n                        options = that.options,\n                        args;\n\n                    cardElement = $(cardElement);\n                    args = that._extendExecArgs({ target: cardElement });\n\n                    if (options.editable) {\n                        that._openPane(extend({\n                            pane: \"Edit\"\n                        }, args));\n                    }\n                },\n\n                saveCard: function() {\n                    var that = this;\n\n                    that.dataSource.sync();\n                },\n\n                deleteCard: function(cardElement) {\n                    var that = this,\n                        card = that.dataItem(cardElement);\n\n                    that.dataSource.remove(card);\n                    that.dataSource.sync();\n                },\n\n                addCard: function(dataItem) {\n                    var that = this,\n                        options = that.options,\n                        args = { card: dataItem };\n\n                    if (options.editable) {\n                        that._openPane(extend({\n                            pane: \"Create\"\n                        }, args));\n                    }\n                },\n\n                addColumn: function(index, data) {\n                    var that = this,\n                        columnSettings = extend(true, {}, that.options.columnSettings, {\n                            messages: that.options.messages,\n                            states: that._buildStates(),\n                            sortableIdentifier: that._sortableIdentifier\n                        }),\n                        newColumn, model, column;\n\n                    if (isNaN(index) && !data) {\n                        data = index;\n                        index = null;\n                    }\n\n                    model = that.columnsDataSource._createNewModel(data);\n                    index = isNaN(index) || index === null ? that.columnsDataSource.data().length : index;\n                    column = that.columns().eq(index);\n                    that.columnsDataSource.insert(index, model);\n\n                    newColumn = new ui.taskboard.NewColumn(columnSettings, model);\n\n                    if (isNaN(index) || !column.length) {\n                        that.columnsContainer.append(newColumn.element);\n                    } else {\n                        column.before(newColumn.element);\n                    }\n\n                    newColumn.bind(ACTION, that.executeCommand.bind(that));\n                },\n\n                editColumn: function(columnElement) {\n                    var that = this;\n\n                    columnElement = $(columnElement);\n\n                    that._getColumnByElement(columnElement).edit();\n                },\n\n                saveColumn: function() {\n                    var that = this;\n\n                    that.columnsDataSource.sync();\n                },\n\n                deleteColumn: function(columnElement) {\n                    var that = this,\n                        column = that.columnDataItem(columnElement);\n\n                    that.columnsDataSource.remove(column);\n                    that.columnsDataSource.sync();\n                },\n\n                registerShortcut: function(selector, shortcut, options) {\n                    var that = this;\n\n                    that.keyboardManager.registerShortcut(selector, shortcut, options);\n                },\n\n                enable: function(cardElement, toggle) {\n                    cardElement = $(cardElement);\n\n                    cardElement.toggleClass(TaskBoard.styles.disabled, toggle === false);\n                    cardElement.attr(\"aria-disabled\", toggle === false);\n                },\n\n                enableByColumn: function(columnElement, toggle) {\n                    var that = this;\n\n                    columnElement = $(columnElement);\n\n                    that.itemsByColumn(columnElement).each(function(index, card) {\n                        that.enable(card, toggle);\n                    });\n                },\n\n                readOnly: function(cardElement, toggle) {\n                    cardElement = $(cardElement);\n\n                    toggle = toggle !== false;\n\n                    cardElement.find(\"[\" + kendo.attr(\"command\") + \"]\").toggleClass(TaskBoard.styles.disabled, toggle);\n                    cardElement.find(\"a,button\").toggleClass(TaskBoard.styles.disabled, toggle);\n\n                    cardElement.toggleClass(TaskBoard.styles.ignoreDrag, toggle);\n                    cardElement.attr(\"aria-readonly\", toggle);\n                },\n\n                readOnlyByColumn: function(columnElement, toggle) {\n                    var that = this;\n\n                    columnElement = $(columnElement);\n\n                    that.itemsByColumn(columnElement).each(function(index, card) {\n                        that.readOnly(card, toggle);\n                    });\n                },\n\n                setDataSource: function(dataSource) {\n                    var that = this;\n\n                    that.options.dataSource = dataSource;\n                    that._dataSource();\n\n                    if (that.options.autoBind) {\n                        that.dataSource.read();\n                    }\n                },\n\n                setColumnsDataSource: function(dataSource) {\n                    var that = this;\n\n                    that.options.columns = dataSource;\n                    that._columnsDataSource();\n\n                    if (that.options.autoBind) {\n                        that.columnsDataSource.fetch(function() {\n                            that._renderCards(that.dataSource.view());\n                        });\n                    }\n                },\n\n                _getColumn: function(status) {\n                    return this._columns[status];\n                },\n\n                _getColumnByElement: function(columnElement) {\n                    var that = this;\n\n                    columnElement = $(columnElement);\n\n                    for (var key in that._columns) {\n                        if (that._columns[key].element[0] === columnElement[0]) {\n                            return that._columns[key];\n                        }\n                    }\n                },\n\n                _openPane: function(options) {\n                    var that = this,\n                        pane = new ui.taskboard.panes[options.pane](that, extend({}, that.options, {\n                            states: that._buildStates()\n                        }), options.card, that.resources, options.column),\n                        keyboardManager;\n\n                    if (that.pane) {\n                        that._closePane();\n                    }\n\n                    that.pane = pane;\n                    that.content.after(that.pane.element);\n                    that.content.css(\"margin-right\",\n                        that.pane.element.outerWidth() -\n                        parseInt(that.content.css(\"paddingRight\"), 10));\n\n                    that.pane.bind(ACTION, that.executeCommand.bind(that));\n\n                    that.pane.keyboardManager = keyboardManager = new ui.taskboard.KeyboardManager(that.pane.element);\n\n                    keyboardManager.bind(ACTION, that.executeCommand.bind(that));\n\n                    keyboardManager.registerShortcut(\"*\", {\n                        keyCode: kendo.keys.ESC\n                    }, { command: \"ClosePaneCommand\" });\n\n                    keyboardManager.registerShortcut(\"*\", {\n                        keyCode: kendo.keys.ENTER\n                    }, { command: \"SaveChangesCommand\", options: {\n                        card: that.pane._dataItem\n                    } });\n\n                    if (this.options.editable && this.options.editable.form && this.options.editable.form.focusFirst === false) {\n                        setTimeout(function() {\n                            that.pane.element.find(\"button\").eq(0).trigger(\"focus\");\n                        }, 0);\n                    }\n                },\n\n                _closePane: function() {\n                    var that = this;\n\n                    if (that.pane) {\n                        that.pane.keyboardManager.destroy();\n                        that.pane.unbind(ACTION);\n                        that.pane.destroy();\n                        delete that.pane;\n\n                        that.content.css(\"margin-right\", \"\");\n                    }\n                },\n\n                _wrapper: function() {\n                    var that = this,\n                        options = that.options,\n                        styles = TaskBoard.styles,\n                        headerElm = \"<div class='\" + styles.header + \"'></div>\",\n                        contentElm = \"<div class='\" + styles.content + \"'></div>\",\n                        colsContainer = \"<div class='\" + styles.columnsContainer + \"'></div>\";\n\n                    that.element.addClass(styles.wrapper)\n                        .width(options.width)\n                        .height(options.height)\n                        .attr(\"role\", \"application\");\n                    that.header = $(headerElm).appendTo(that.element);\n                    that.content = $(contentElm).appendTo(that.element);\n                    that.columnsContainer = $(colsContainer).appendTo(that.content);\n                },\n\n                _initToolbar: function() {\n                    var that = this,\n                        styles = TaskBoard.styles,\n                        options = that.options,\n                        toolbarElm = $(\"<div class='\" + styles.toolbar + \"'></div>\"),\n                        toolbarOptions = isArray(options.toolbar) ? { items: options.toolbar } : options.toolbar,\n                        tools;\n\n                    if (options.toolbar === false) {\n                        return;\n                    } else if (toolbarOptions === true) {\n                        toolbarOptions = {};\n                    }\n\n                    tools = toolbarOptions.items ? toolbarOptions.items : Object.keys(that.defaultTools);\n                    tools = that._processTools(tools);\n                    toolbarOptions.tools = tools;\n                    toolbarOptions.defaultTools = that.defaultTools;\n                    toolbarOptions.parentMessages = that.options.messages;\n\n                    that.header.append(toolbarElm);\n                    that.toolbar = new kendo.ui.ToolBar(toolbarElm, toolbarOptions);\n                    that.options.toolbar = that.toolbar.options;\n\n                    that.toolbar.bind(CLICK, that._toolbarClick.bind(that));\n                    that.toolbar.bind(TOGGLE, that._toolbarClick.bind(that));\n                    that.toolbar.bind(CHANGE, that._toolbarClick.bind(that));\n                },\n\n                _processTools: function(tools) {\n                    var that = this,\n                        states = that._buildStates(),\n                        isDefaultTool;\n\n                    tools.forEach(t => {\n                        var rules = t.rules || that.defaultTools[t] ? that.defaultTools[t].rules : null;\n                        isDefaultTool = isPlainObject(t) && Object.keys(t).length >= 1 && t.name && that.defaultTools[t.name];\n\n                        if (isDefaultTool) {\n                            var temp = extend({}, t);\n                            extend(t, that.defaultTools[t.name], temp);\n                        }\n\n                        if (isDefaultTool && t.name == \"search\") {\n                            extend(t.componentOptions, {\n                                icon: t.icon || that.defaultTools[t.name].componentOptions.icon,\n                                placeholder: t.text || that.options.messages.search\n                            });\n                        }\n\n                        if (!rules) {\n                            return;\n                        }\n\n                        rules = rules.split(\";\");\n\n                        if (!rules.length) {\n                            return;\n                        }\n\n                        for (var i = 0; i < rules.length; i++) {\n                            if (!states[rules[i]]) {\n                                if (t.rules) {\n                                    t.hidden = true;\n                                } else {\n                                    that.defaultTools[t].hidden = true;\n                                }\n                            }\n                        }\n                    });\n\n                    return tools;\n                },\n\n                _toolbarClick: function(ev) {\n                    var command = $(ev.target).data(\"command\"),\n                        options = $(ev.target).data(\"options\");\n\n                    options = extend({}, options, { value: $(ev.target).val() });\n\n                    if (!command) {\n                        return;\n                    }\n\n                    this.executeCommand({\n                        command: command,\n                        options: options\n                    });\n                },\n\n                _isToolEnabled: function(toolName) {\n                    var that = this,\n                        options = that.options.toolbar,\n                        items = options.items || that.defaultTools,\n                        found = false;\n\n                    for (var i = 0; i < items.length; i++) {\n                        if (items[i].name == toolName) {\n                            found = true;\n                            break;\n                        }\n                    }\n\n                    return items[toolName] || found;\n                },\n\n                _buildStates: function() {\n                    var that = this;\n\n                    return {\n                        isEditable: that._isEditable(),\n                        isReorderable: that._isReorderable(),\n                        isSelectable: that._isSelectable(),\n                        isReadOnly: !that._isReorderable() && !that._isEditable(),\n                        isDisabled: !that._isReorderable() && !that._isEditable() && !that._isSelectable(),\n                        isSearchable: that._isSearchable(),\n                        notLocalColumns: !(that.columnsDataSource.transport instanceof kendo.data.LocalTransport),\n                        isRtl: kendo.support.isRtl(that.wrapper)\n                    };\n                },\n\n                _isSearchable: function() {\n                    return !!this.options.search;\n                },\n\n                _isEditable: function() {\n                    return !!this.options.editable;\n                },\n\n                _isReorderable: function() {\n                    return !!this.options.reorderable;\n                },\n\n                _isSelectable: function() {\n                    return !!this.options.selectable;\n                },\n\n                executeCommand: function(args) {\n                    var that = this,\n                        commandName = args.command,\n                        commandOptions = extend({ taskboard: this }, isPlainObject(args.options) ? that._extendExecArgs(args.options) : { value: args.options }),\n                        command = ui.taskboard.commands[commandName] && new ui.taskboard.commands[commandName](commandOptions);\n\n\n                    if (!that.trigger(EXECUTE, args)) {\n                        if (command) {\n                            command.exec();\n                        } else {\n                            window.console.warn(kendo.format(\"Trying to use {0} command, but such is not available in the kendo.ui.taskboard.commands namespace!\", commandName));\n                        }\n                    }\n                },\n\n                _extendExecArgs: function(args) {\n                    var that = this,\n                        target = args.draggableEvent ? args.item : args.target,\n                        columnElm, cardElm, columnDataItem, cardDataItem;\n\n                    if (args.card) {\n                        target = that.items().filter(function(idx, elm) {\n                            return $(elm).attr(kendo.attr(\"uid\")) === args.card.get(\"uid\");\n                        });\n                    }\n\n                    if (!target || !(target && target.length)) {\n                        return args;\n                    }\n\n                    columnElm = args.columnElement || (target.is(DOT + TaskBoard.styles.column) ? target : target.parents(DOT + TaskBoard.styles.column));\n                    columnDataItem = that.columnsDataSource.getByUid(columnElm.data(kendo.ns + \"uid\"));\n                    cardElm = target.is(DOT + TaskBoard.styles.card) ? target : target.closest(DOT + TaskBoard.styles.card);\n                    cardDataItem = that.dataSource.getByUid(cardElm.data(kendo.ns + \"uid\"));\n\n                    return extend(args, {\n                        card: cardDataItem,\n                        cardElement: cardElm.length ? cardElm : undefined$1,\n                        column: columnDataItem,\n                        columnElement: columnElm.length ? columnElm : undefined$1\n                    });\n                },\n\n\n                _select: function(card, toggle) {\n                    var that = this;\n\n                    if (toggle === null) {\n                        toggle = true;\n                    }\n\n                    if (!that.trigger(SELECT, { card: card })) {\n                        that.select(card, toggle);\n                        that.previewCard(card);\n                    }\n                },\n\n                _columnsDataSource: function() {\n                    var that = this,\n                        options = that.options,\n                        columnSettings = options.columnSettings,\n                        columnsDataSource = options.columns;\n\n                    columnsDataSource = isArray(columnsDataSource) ? { data: columnsDataSource } : columnsDataSource;\n\n                    if (columnSettings.dataOrderField && !columnsDataSource.sort) {\n                        columnsDataSource.sort = { field: columnSettings.dataOrderField, dir: \"asc\" };\n                    }\n\n                    if (!columnsDataSource.schema) {\n                        var fields = {};\n\n                        fields[columnSettings.dataStatusField] = { type: \"string\", defaultValue: function() { return kendo.guid().split(\"-\")[0]; } };\n                        fields[columnSettings.dataTextField] = { type: \"string\" };\n\n                        if (columnSettings.dataOrderField) {\n                            fields[columnSettings.dataOrderField] = { type: \"number\" };\n                        }\n\n                        columnsDataSource.schema = {\n                            model: {\n                                fields: fields\n                            }\n                        };\n                    }\n\n                    if (that.columnsDataSource && that._columnsChangeHandler) {\n                        that.columnsDataSource.unbind(CHANGE, that._columnsChangeHandler);\n                        that.columnsDataSource.unbind(CHANGE, that._columnsErrorHandler);\n                    } else {\n                        that._columnsChangeHandler = that._columnsDataSourceChange.bind(that);\n                        that._columnsErrorHandler = that._error.bind(that);\n                    }\n\n                    that.columnsDataSource = DataSource.create(columnsDataSource)\n                                    .bind(CHANGE, that._columnsChangeHandler)\n                                    .bind(ERROR, that._columnsErrorHandler);\n                },\n\n                _columnsDataSourceChange: function(ev) {\n                    var that = this,\n                        view = that.columnsDataSource.view(),\n                        columnSettings = extend(true, {}, that.options.columnSettings, {\n                            messages: that.options.messages,\n                            states: that._buildStates(),\n                            sortableIdentifier: that._sortableIdentifier\n                         }),\n                        statusField = columnSettings.dataStatusField;\n\n                    if (ev.action && ev.action !== \"sync\") {\n                        return;\n                    }\n\n                    if (that.trigger(COLUMNSDATABINDING, ev)) {\n                        return;\n                    }\n\n                    that._progress(true);\n\n                    that._columns = {};\n                    that.columnsContainer.html(\"\");\n\n                    for (var i = 0; i < view.length; i++) {\n                        var data = view[i];\n                        var status = data[statusField] || GENERIC;\n                        var column;\n\n                        column = that._columns[status] = new ui.taskboard.Column(columnSettings, data);\n                        that.columnsContainer.append(column.element);\n                        column.bind(ACTION, that.executeCommand.bind(that));\n                        column.bind(MOVE, that._move.bind(that));\n                        column.bind(MOVE_END, that._moveEnd.bind(that));\n                        column.bind(MOVE_START, that._moveStart.bind(that));\n                        column.bind(CHANGE, that._changeOrder.bind(that));\n                        that._tabindex(column.element);\n                    }\n\n                    if (ev.action === \"sync\" || ev.action === undefined$1) {\n                        that._renderCards(that.dataSource.view());\n                    }\n\n                    that._progress(false);\n                    that.trigger(COLUMNSDATABOUND, ev);\n                },\n\n                _move: function(ev) {\n                    this.trigger(MOVE, this._extendExecArgs(ev));\n                },\n\n                _moveEnd: function(ev) {\n                    this.trigger(MOVE_END, this._extendExecArgs(ev));\n                },\n\n                _moveStart: function(ev) {\n                    this.trigger(MOVE_START, this._extendExecArgs(ev));\n                },\n\n                _changeOrder: function(ev) {\n                    this.trigger(CHANGE, this._extendExecArgs(ev));\n                },\n\n                _dataSource: function() {\n                    var that = this,\n                        options = that.options,\n                        dataSource = options.dataSource;\n\n                        dataSource = isArray(dataSource) ? { data: dataSource } : dataSource;\n\n                    if (options.dataOrderField && !dataSource.sort) {\n                        dataSource.sort = { field: options.dataOrderField, dir: \"asc\" };\n                    }\n\n                    if (!dataSource.schema) {\n                        var fields = {};\n\n                        fields[options.dataStatusField] = { type: \"string\" };\n                        fields[options.dataTitleField] = { type: \"string\" };\n                        fields[options.dataDescriptionField] = { type: \"string\" };\n                        fields[options.dataCategoryField] = { type: \"string\" };\n\n                        if (options.dataOrderField) {\n                            fields[options.dataOrderField] = { type: \"number\" };\n                        }\n\n                        dataSource.schema = {\n                            model: {\n                                fields: fields\n                            }\n                        };\n                    }\n\n                    if (that.dataSource && that._changeHandler) {\n                        that.dataSource.unbind(CHANGE, that._changeHandler);\n                        that.dataSource.unbind(ERROR, that._errorHandler);\n                    } else {\n                        that._changeHandler = that._change.bind(that);\n                        that._errorHandler = that._error.bind(that);\n                    }\n\n                    that.dataSource = DataSource.create(dataSource)\n                                    .bind(CHANGE, that._changeHandler);\n                },\n\n                _change: function(ev) {\n                    var that = this;\n\n                    if (ev.action && ev.action !== \"sync\") {\n                        return;\n                    }\n\n                    if (that.trigger(DATABINDING, ev)) {\n                        return;\n                    }\n\n                    that._progress(true);\n\n                    that._clearColumns();\n                    that._renderCards(that.dataSource.view());\n                    that._closePane();\n\n                    that.trigger(DATABOUND, ev);\n                    that._progress(false);\n                },\n\n                _error: function() {\n                    this._progress(false);\n                },\n\n                _renderCards: function(data) {\n                    var that = this;\n\n                    for (var i = 0; i < data.length; i++) {\n                        that._renderCard(data[i]);\n                    }\n                },\n\n                _renderCard: function(card) {\n                    var that = this,\n                        options = extend({}, that.options, { states: that._buildStates() }),\n                        statusField = options.dataStatusField,\n                        status = card[statusField] || GENERIC;\n\n                    if (status && that._columns[status]) {\n                        card = new ui.taskboard.Card(options, card, that.resources);\n                        that._columns[status].addCard(card.element);\n                        that._tabindex(card.element);\n                    }\n                },\n\n                _clearColumns: function() {\n                    var that = this;\n\n                    for (var key in that._columns) {\n                        that._columns[key].empty();\n                    }\n                },\n\n                _initCardMenu: function() {\n                    var that = this,\n                        options = that.options,\n                        cardMenuOptions = isArray(options.cardMenu) ? { items: options.cardMenu } : options.cardMenu;\n\n                    cardMenuOptions = extend({}, {\n                        messages: options.messages,\n                        target: that.columnsContainer,\n                        filter: \".k-taskboard-card-menu-button\",\n                        action: that.executeCommand.bind(that),\n                        showOn: \"click\",\n                        alignToAnchor: true,\n                        states: that._buildStates()\n                    }, cardMenuOptions);\n\n                    if (options.cardMenu === false) {\n                        return;\n                    }\n\n                    that.cardMenu = new ui.taskboard.CardMenu(\"<ul></ul>\", cardMenuOptions);\n                },\n\n                _initResources: function() {\n                    var that = this,\n                        resources = that.options.resources;\n\n                    for (var i = 0; i < resources.length; i++) {\n                        that._addResource(resources[i]);\n                    }\n                },\n\n                _addResource: function(resource) {\n                    var that = this;\n\n                    if (!that.resources) {\n                        that.resources = {};\n                    }\n\n                    that.resources[resource.field] = {\n                        field: resource.field,\n                        name: resource.name,\n                        title: resource.title || resource.field,\n                        dataTextField: resource.dataTextField || \"text\",\n                        dataValueField: resource.dataValueField || \"value\",\n                        dataColorField: resource.dataColorField || \"color\",\n                        valuePrimitive: resource.valuePrimitive === false ? false : true,\n                        multiple: resource.multiple || false,\n                        dataSource: that._resourceDataSource(resource.dataSource)\n                    };\n                },\n\n                _resourceDataSource: function(resourceDS) {\n                    var dataSource = isArray(resourceDS) ? { data: resourceDS } : resourceDS,\n                        dataSourceInstance = kendo.data.DataSource.create(dataSource);\n\n                    return dataSourceInstance;\n                },\n\n                _progress: function(toggle) {\n                    var that = this;\n\n                    kendo.ui.progress(that.element, toggle);\n                },\n\n                _initKeyboard: function() {\n                    var that = this;\n\n                    that.keyboardManager = new ui.taskboard.KeyboardManager(that.element);\n\n                    that.keyboardManager.bind(ACTION, that.executeCommand.bind(that));\n                    that._registerShortcuts();\n                },\n\n                _registerShortcuts: function() {\n                    var that = this,\n                        states = that._buildStates();\n\n                    if (states.isEditable) {\n                        that.keyboardManager.registerShortcut(DOT + TaskBoard.styles.column, {\n                            keyCode: kendo.keys.DELETE\n                        }, { command: \"DeleteColumnCommand\" });\n\n                        that.keyboardManager.registerShortcut(DOT + TaskBoard.styles.column, {\n                            keyCode: \"e\",\n                            ctrlKey: true\n                        }, { command: \"EditColumnCommand\", handler: preventDefault });\n\n                        that.keyboardManager.registerShortcut(DOT + TaskBoard.styles.column, {\n                            keyCode: \"a\",\n                            ctrlKey: true\n                        }, { command: \"AddCardCommand\", handler: preventDefault });\n\n                        that.keyboardManager.registerShortcut(DOT + TaskBoard.styles.column + \" *\", {\n                            keyCode: kendo.keys.ESC\n                        }, { command: \"CancelEditColumnCommand\" });\n\n                        that.keyboardManager.registerShortcut(DOT + TaskBoard.styles.card, {\n                            keyCode: kendo.keys.DELETE\n                        }, { command: \"DeleteCardCommand\" });\n\n                        that.keyboardManager.registerShortcut(DOT + TaskBoard.styles.card, {\n                            keyCode: \"e\",\n                            ctrlKey: true\n                        }, { command: \"EditCardCommand\", handler: preventDefault });\n                    }\n\n                    if (states.isSelectable) {\n                        that.keyboardManager.registerShortcut(DOT + TaskBoard.styles.card, {\n                            keyCode: kendo.keys.ENTER\n                        }, { command: \"SelectCardCommand\", handler: preventDefault });\n                    }\n\n                    that.keyboardManager.registerShortcut(DOT + TaskBoard.styles.card, {\n                        keyCode: kendo.keys.UP\n                    }, { command: \"MoveFocusCommand\", options: { value: \"up\" }, handler: preventDefault });\n\n                    that.keyboardManager.registerShortcut(DOT + TaskBoard.styles.card, {\n                        keyCode: kendo.keys.DOWN\n                    }, { command: \"MoveFocusCommand\", options: { value: \"down\" }, handler: preventDefault });\n\n                    that.keyboardManager.registerShortcut(DOT + TaskBoard.styles.card, {\n                        keyCode: kendo.keys.LEFT\n                    }, { command: \"MoveFocusCommand\", options: { value: \"left\" }, handler: preventDefault });\n\n                    that.keyboardManager.registerShortcut(DOT + TaskBoard.styles.card, {\n                        keyCode: kendo.keys.RIGHT\n                    }, { command: \"MoveFocusCommand\", options: { value: \"right\" }, handler: preventDefault });\n\n                    that.keyboardManager.registerShortcut(DOT + TaskBoard.styles.column, {\n                        keyCode: kendo.keys.LEFT\n                    }, { command: \"MoveFocusCommand\", options: { value: \"left\" }, handler: preventDefault });\n\n                    that.keyboardManager.registerShortcut(DOT + TaskBoard.styles.column, {\n                        keyCode: kendo.keys.RIGHT\n                    }, { command: \"MoveFocusCommand\", options: { value: \"right\" }, handler: preventDefault });\n\n                    that.keyboardManager.registerShortcut(DOT + TaskBoard.styles.column, {\n                        keyCode: kendo.keys.DOWN\n                    }, { command: \"MoveFocusCommand\", options: { value: \"down\" }, handler: preventDefault });\n                },\n\n                destroy: function() {\n                    var that = this;\n\n                    if (that._columnsChangeHandler) {\n                        that.columnsDataSource.unbind(CHANGE, that._columnsChangeHandler);\n                        that.columnsDataSource.unbind(CHANGE, that._columnsErrorHandler);\n                    }\n\n                    if (that._changeHandler) {\n                        that.dataSource.unbind(CHANGE, that._changeHandler);\n                        that.dataSource.unbind(ERROR, that._errorHandler);\n                    }\n\n                    for (var key in that._columns) {\n                        that._columns[key].destroy();\n                    }\n\n                    if (that.toolbar) {\n                        that.toolbar.destroy();\n                    }\n\n                    if (that.cardMenu) {\n                        that.cardMenu.destroy();\n                    }\n\n                    if (that.keyboardManager) {\n                        that.keyboardManager.destroy();\n                    }\n\n                    if (that.pane) {\n                        that._closePane();\n                    }\n\n                    Widget.fn.destroy.call(that);\n                }\n            });\n\n            kendo.ui.plugin(TaskBoard);\n\n            extend(true, TaskBoard, { styles: TaskBoardStyles });\n\n        })(window.kendo.jQuery);\n    var kendo$1 = kendo;\n\n    exports.__meta__ = __meta__;\n    exports.default = kendo$1;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n\n}));\n"]}