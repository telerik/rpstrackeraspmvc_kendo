{"version":3,"file":"kendo.toggleinputbase.min.js","names":["global","factory","exports","module","require","define","amd","globalThis","self","kendo","_globals","Toggleinputbase","this","$","window","ui","Widget","CHANGE","DISABLED","CHECKED","ToggleInputBase","extend","init","element","options","that","fn","call","_wrapper","_initSettings","_attachEvents","notify","events","name","NS","RENDER_INPUT","noop","check","checked","attr","prop","destroy","wrapper","off","enable","enabled","toggle","on","_change","bind","trigger","inputMethod","removeClass","wrap","wrapperClass","parent","setOptions","_clearCssClasses","_setEvents","_applyCssClasses","plugin","jQuery","kendo$1","__meta__","id","category","description","depends","default","Object","defineProperty","value"],"sources":["kendo.toggleinputbase.js"],"mappings":"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","ignoreList":[],"sourcesContent":["(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('kendo.core.js')) :\n    typeof define === 'function' && define.amd ? define(['exports', 'kendo.core'], factory) :\n    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory((global.kendo = global.kendo || {}, global.kendo._globals = global.kendo._globals || {}, global.kendo._globals.Toggleinputbase = {})));\n})(this, (function (exports) {\n    const __meta__ = {\n        id: \"toggleinputbase\",\n        name: \"ToggleInputBase\",\n        category: \"web\",\n        description: \"The ToggleInputBase component.\",\n        depends: [ \"core\" ]\n    };\n\n    (function($, undefined$1) {\n        var kendo = window.kendo,\n            ui = kendo.ui,\n            Widget = ui.Widget,\n            CHANGE = \"change\",\n            DISABLED = \"disabled\",\n            CHECKED = \"checked\";\n\n        var ToggleInputBase = Widget.extend({\n            init: function(element, options) {\n                var that = this;\n\n                Widget.fn.init.call(that, element, options);\n\n                that._wrapper();\n\n                that._initSettings();\n\n                that._attachEvents();\n\n                kendo.notify(that, kendo.ui);\n            },\n\n            events: [\n                CHANGE\n            ],\n\n            options: {\n                name: \"ToggleInputBase\"\n            },\n\n            NS: \".kendoToggleInputBase\",\n            RENDER_INPUT: $.noop,\n\n            check: function(checked) {\n                var that = this,\n                    element = that.element[0];\n\n                if (checked === undefined$1) {\n                    return element.checked;\n                }\n\n                if (element.checked !== checked) {\n                    that.options.checked = element.checked = checked;\n                }\n\n                if (checked) {\n                    that.element.attr(CHECKED, CHECKED);\n                } else {\n                    that.element.prop(CHECKED, false);\n                }\n            },\n\n            destroy: function() {\n                Widget.fn.destroy.call(this);\n                this.wrapper.off(this.NS);\n            },\n\n            enable: function(enable) {\n                var element = this.element;\n\n                if (typeof enable == \"undefined\") {\n                    enable = true;\n                }\n\n                this.options.enabled = enable;\n\n                if (enable) {\n                    element.prop(DISABLED, false);\n                } else {\n                    element.attr(DISABLED, DISABLED);\n                }\n            },\n\n            toggle: function() {\n                var that = this;\n\n                that.check(!that.element[0].checked);\n            },\n\n            _attachEvents: function() {\n                this.element.on(CHANGE + this.NS, this._change.bind(this));\n            },\n\n            _change: function() {\n                var checked = this.element[0].checked;\n\n                this.trigger(CHANGE, { checked: checked });\n            },\n\n            _initSettings: function() {\n                var that = this,\n                    element = that.element[0],\n                    options = that.options;\n\n                if (options.checked === null) {\n                    options.checked = element.checked;\n                }\n\n                that.check(options.checked);\n\n                options.enabled = options.enabled && !that.element.attr(DISABLED);\n                that.enable(options.enabled);\n            },\n\n            _wrapper: function() {\n                var that = this,\n                    options = that.options,\n                    inputMethod = that.RENDER_INPUT;\n\n\n                inputMethod(that.element, $.extend({}, options));\n                that.element.removeClass('input-validation-error');\n\n                that.wrapper = that.element.wrap(`<span class=\"${options.wrapperClass}\"></span>`).parent();\n            },\n\n            setOptions: function(options) {\n                this._clearCssClasses(options, this.element);\n                this._setEvents(options);\n                $.extend(this.options, options);\n                this._applyCssClasses(this.element);\n            },\n        });\n\n        ui.plugin(ToggleInputBase);\n    })(window.kendo.jQuery);\n    var kendo$1 = kendo;\n\n    exports.__meta__ = __meta__;\n    exports.default = kendo$1;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n\n}));\n"]}