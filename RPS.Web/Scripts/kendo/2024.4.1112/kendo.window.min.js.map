{"version":3,"file":"kendo.window.min.js","names":["global","factory","exports","module","require","define","amd","globalThis","self","kendo","_globals","Window","this","$","undefined$1","templates","window","Widget","ui","TabKeyTrap","Popup","Draggable","isPlainObject","activeElement","_activeElement","outerWidth","_outerWidth","outerHeight","_outerHeight","extend","each","template","BODY","NS","MODAL_NS","KWINDOW","KWINDOWTITLE","KWINDOWTITLEBAR","KWINDOWCONTENT","KWINDOWRESIZEHANDLES","KOVERLAY","KWINDOWMINIMIZED","KCONTENTFRAME","LOADINGICONCLASS","KHOVERSTATE","KFOCUSEDSTATE","MAXIMIZEDSTATE","INLINE_FLEX","VISIBLE","KHIDDEN","HIDDEN","CURSOR","OPEN","ACTIVATE","DEACTIVATE","CLOSE","REFRESH","RESIZESTART","RESIZEEND","DRAGSTART","DRAGEND","RESTORE","ERROR","OVERFLOW","DATADOCOVERFLOWRULE","ZINDEX","MINIMIZE_MAXIMIZEICONSELECTORS","KPINICONCLASSSELECTOR","KUNPINICONCLASSSELECTOR","PIN_UNPINICONCLASSSELECTOR","TITLEBAR_BUTTONSSELECTOR","REFRESHICONSELECTOR","WINDOWEVENTSHANDLED","zero","isLocalUrl","SIZE","small","medium","large","defined","x","toInt","element","property","parseInt","css","constrain","value","low","high","isNaN","toString","indexOf","Math","max","min","Infinity","executableScript","type","toLowerCase","getPosition","elem","result","top","offsetTop","left","offsetLeft","parent","offsetParent","parentOverflowX","parentOverflowY","scrollTop","scrollLeft","init","options","wrapper","visibility","display","position","content","windowContent","globalWindow","id","that","offset","suppressActions","actions","length","fn","call","appendTo","containment","draggable","first","url","find","filter","remove","is","document","body","contains","visible","closest","addClass","attr","_createWindow","title","_dimensions","_footerTemplate","append","_footerMessages","themeColor","getValidCssClass","minTop","minLeft","maxTop","maxLeft","_position","refresh","toFront","modal","children","_overlay","opacity","on","_buttonEnter","bind","_buttonLeave","_windowActionHandler","_keydown","_focus","_blur","_keydownContent","data","widgetInstance","not","i","_resizable","_draggable","pinned","pin","role","add","support","mousedown","touchScroller","_resizeHandler","_onDocumentResize","_marker","guid","substring","trigger","notify","_tabKeyTrap","trap","shouldTrap","_showWatermarkOverlay","e","currentTarget","removeClass","width","height","maxHeight","sizeClass","size","dimensions","contentBoxSizing","lrBorderWidth","tbBorderWidth","paddingTop","_isPinned","_updateBoundaries","maxWidth","minWidth","minHeight","hide","containmentTop","containmentLeft","parseFloat","Number","replace","innerWidth","innerHeight","clientWidth","scrollbar","clientHeight","_animationOptions","animation","open","effects","close","_resize","resize","resizable","resizing","off","destroy","target","toggleMaximization","split","index","handler","resizeHandle","WindowResizing","dragging","WindowDragging","dragHandle","clickMoveClick","_actions","icon","container","windowSpecificCommands","icons","maximize","custom","map","action","name","html","render","setOptions","doc","cachedOptions","JSON","parse","stringify","_containerScrollTop","_containerScrollLeft","scrollable","restore","_enableDocumentScrolling","events","zoom","direction","fade","duration","properties","scale","autoFocus","isMaximized","isMinimized","_closable","inArray","keys","keyCode","ESC","stopPropagation","_close","handled","newWidth","newHeight","w","h","distance","_closing","altKey","unpin","UP","DOWN","minimize","getOffset","ctrlKey","LEFT","RIGHT","preventDefault","overlay","zIndex","insertBefore","preventScroll","_stopDocumentScrolling","_actionForIcon","exec","className","_modals","windowInstance","windowElements","modals","_object","push","sort","a","b","style","widget","getKendoWindow","center","newTop","newLeft","documentWindow","_scrollIsAppended","encoded","titleBar","titleElement","arguments","text","htmlEncode","prepend","titlebar","scrollContainer","empty","otherModalsVisible","showOptions","contentElement","kendoStop","Fade","overlayFx","fx","fadeIn","endValue","play","show","kendoAnimate","complete","_activate","_removeOverlay","suppressAnimation","hideOverlay","hideOptions","fadeOut","startValue","last","systemTriggered","defaultPrevented","userTriggered","reverse","_deactivate","iframe","lastModal","_actionable","_shouldFocus","active","avoidFocus","currentWindow","containmentContext","openAnimation","originalZIndex","windowObject","zIndexNew","setTimeout","windowTop","restoreOptions","end","removeAttr","_sizingAction","actionId","callback","eq","before","toggle","_storeOverflowRule","$body","$html","_restoreOverflowRule","$element","_isOverflowStored","overflowRule","get","overflow","removeData","win","pinIcon","wnd","zoomLevel","showIframe","initOptions","src","contentFrame","_triggerRefresh","_ajaxRequest","toggleClass","_ajaxComplete","clearTimeout","_loadingIconTimeout","_ajaxError","xhr","status","_ajaxSuccess","contentTemplate","prop","_showLoading","ajax","dataType","cache","error","success","_destroy","unbind","iframeSrcAttributes","contentHtml","isRtl","getAttribute","hasClass","editor","owner","_preventDragging","group","dragstart","drag","dragend","userEvents","addOverlay","removeOverlay","dragcancel","iconName","renderButton","fillMode","prototype","elementPadding","initialPosition","resizeDirection","initialSize","containerOffset","marginTop","marginLeft","test","wrapperPosition","relativeElMarginLeft","relativeElMarginTop","_relativeElMarginLeft","_relativeElMarginTop","windowBottom","windowRight","rtl","leftRtlOffset","scrollOffset","location","y","newWindowTop","reset","initialWindowPosition","initialPointerPosition","startPosition","client","axis","_finishDrag","plugin","jQuery","kendo$1","__meta__","category","description","depends","features","default","Object","defineProperty"],"sources":["kendo.window.js"],"mappings":"CAAA,SAAWA,EAAQC,GACI,iBAAZC,SAA0C,oBAAXC,OAAyBF,EAAQC,QAASE,QAAQ,wBAAyBA,QAAQ,kBAAmBA,QAAQ,kBAAmBA,QAAQ,yBAC7J,mBAAXC,QAAyBA,OAAOC,IAAMD,OAAO,CAAC,UAAW,oBAAqB,cAAe,cAAe,qBAAsBJ,GAC9DA,IAA1ED,EAA+B,oBAAfO,WAA6BA,WAAaP,GAAUQ,MAAsBC,MAAQT,EAAOS,OAAS,CAAC,EAAGT,EAAOS,MAAMC,SAAWV,EAAOS,MAAMC,UAAY,CAAC,EAAGV,EAAOS,MAAMC,SAASC,OAAS,CAAC,GAC/M,CAJD,CAIGC,MAAM,SAAWV,IAeZ,SAAUW,EAAGC,GACT,IAYIC,EAZAN,EAAQO,OAAOP,MACfQ,EAASR,EAAMS,GAAGD,OAClBE,EAAaV,EAAMS,GAAGE,MAAMD,WAC5BE,EAAYZ,EAAMS,GAAGG,UACrBC,EAAgBT,EAAES,cAClBC,EAAgBd,EAAMe,eACtBC,EAAahB,EAAMiB,YACnBC,EAAclB,EAAMmB,aACpBC,EAAShB,EAAEgB,OACXC,EAAOjB,EAAEiB,KACTC,EAAWtB,EAAMsB,SACjBC,EAAO,OAEPC,EAAK,eACLC,EAAW,oBAEXC,EAAU,YACVC,EAAe,kBACfC,EAAkBD,EAAe,MACjCE,EAAiB,oBAEjBC,EAAuB,mBACvBC,EAAW,aACXC,EAAmB,qBACnBC,EAAgB,kBAChBC,EAAmB,cACnBC,EAAc,UACdC,EAAgB,UAChBC,EAAiB,qBACjBC,EAAc,wBAEdC,EAAU,WACVC,EAAU,WACVC,EAAS,SACTC,EAAS,SAETC,EAAO,OACPC,EAAW,WACXC,EAAa,aACbC,EAAQ,QACRC,EAAU,UAGVC,EAAc,cAEdC,EAAY,YACZC,EAAY,YACZC,EAAU,UACVC,EAAU,UAEVC,EAAQ,QACRC,EAAW,WACXC,EAAsB,yBACtBC,EAAS,SACTC,EAAiC,wLACjCC,EAAwB,wBACxBC,EAA0B,4BAC1BC,EAA6BF,EAAwB,IAAMC,EAC3DE,EAA2B,+CAC3BC,EAAsB,sFACtBC,GAAsB,sBACtBC,GAAO,aACPC,GAAajE,EAAMiE,WACnBC,GAAO,CACHC,MAAO,cACPC,OAAQ,cACRC,MAAO,eAGf,SAASC,GAAQC,GACb,YAAoB,IAALA,CACnB,CAEA,SAASC,GAAMC,EAASC,GACpB,OAAOC,SAASF,EAAQG,IAAIF,GAAW,KAAO,CAClD,CAEA,SAASG,GAAUC,EAAOC,EAAKC,GAY3B,OATIF,GAASG,MAAMH,IAAUA,EAAMI,WAAWC,QAAQ,MAAQ,EACxCL,EAEAM,KAAKC,IACnBD,KAAKE,IAAIX,SAASG,EAAO,IAAKE,IAASO,IAAWP,EAAOL,SAASK,EAAM,KACxED,KAASQ,IAAWR,EAAMJ,SAASI,EAAK,IAKpD,CAEA,SAASS,KACL,OAAQrF,KAAKsF,MAAQtF,KAAKsF,KAAKC,cAAcP,QAAQ,WAAa,CACtE,CAGA,SAASQ,GAAYC,GAIjB,IAHA,IAAIC,EAAS,CAAEC,IAAKF,EAAKG,UAAWC,KAAMJ,EAAKK,YAC3CC,EAASN,EAAKO,aAEXD,GAAQ,CACXL,EAAOC,KAAOI,EAAOH,UACrBF,EAAOG,MAAQE,EAAOD,WAEtB,IAAIG,EAAkBhG,EAAE8F,GAAQtB,IAAI,aAChCyB,EAAkBjG,EAAE8F,GAAQtB,IAAI,aAEZ,SAApByB,GAAkD,WAApBA,IAC9BR,EAAOC,KAAOI,EAAOI,WAGD,SAApBF,GAAkD,WAApBA,IAC9BP,EAAOG,MAAQE,EAAOK,YAG1BL,EAASA,EAAOC,YACpB,CAEA,OAAON,CACX,CAEA,IAAI3F,GAASM,EAAOY,OAAO,CACvBoF,KAAM,SAAS/B,EAASgC,GACpB,IACIC,EAEAC,EAAYC,EAASC,EAErBC,EACAC,EAEAC,EAEAC,EAVAC,EAAO/G,KAEPgH,EAAS,CAAC,EAOVC,EAAkBX,GAAWA,EAAQY,UAAYZ,EAAQY,QAAQC,OAGrE9G,EAAO+G,GAAGf,KAAKgB,KAAKN,EAAMzC,EAASgC,GAEnCI,GADAJ,EAAUS,EAAKT,SACII,SACnBpC,EAAUyC,EAAKzC,QACfqC,EAAUL,EAAQK,QAClBE,EAAe5G,EAAEG,QAEb6G,IACAX,EAAQY,QAAU,IAGtBH,EAAKO,SAAWrH,EAAEqG,EAAQgB,UAE1BP,EAAKQ,YAAcjB,EAAQkB,UAAUD,YAActH,EAAEqG,EAAQkB,UAAUD,aAAaE,QAAU,KAE1Fd,IAAYjG,EAAciG,KAC1BA,EAAUL,EAAQK,QAAU,CAAEe,IAAKf,IAIvCrC,EAAQqD,KAAK,UAAUC,OAAOvC,IAAkBwC,SAE3CvD,EAAQyB,SAAS+B,GAAGf,EAAKO,WAAcP,EAAKQ,aAAgBb,EAASf,MAAQzF,GAAewG,EAASb,OAAS3F,IAC3GoE,EAAQwD,GAAG1F,IACX4E,EAAS1C,EAAQ0C,UACL,IAEZR,EAAalC,EAAQG,IAAI,cACzBgC,EAAUnC,EAAQG,IAAI,WAEtBH,EAAQG,IAAI,CAAE+B,WAAYlE,EAAQmE,QAAS,KAGvCO,EADAe,SAASC,KAAKC,SAAS3D,EAAQ,IACtBA,EAAQ0C,SAER,CAAErB,IAAK,EAAGE,KAAM,GAG7BvB,EAAQG,IAAI,CAAE+B,WAAYA,EAAYC,QAASA,KAG/CC,EAASf,MAAQzF,IACjBwG,EAASf,IAAMqB,EAAOrB,KAEtBe,EAASb,OAAS3F,IAClBwG,EAASb,KAAOmB,EAAOnB,OAI1B1B,GAAQmC,EAAQ4B,UAAgC,OAApB5B,EAAQ4B,UACrC5B,EAAQ4B,QAAU5D,EAAQwD,GAAG1F,IAGjCmE,EAAUQ,EAAKR,QAAUjC,EAAQ6D,QAAQ5G,GAEpC+C,EAAQwD,GAAG,sBAAyBvB,EAAQ,KAC7CjC,EAAQ8D,SAAS,oBACjB9D,EAAQ+D,KAAK,WAAY,GACzBtB,EAAKuB,cAAchE,EAASgC,GAC5BC,EAAUQ,EAAKR,QAAUjC,EAAQ6D,QAAQ5G,GAEzCwF,EAAKwB,MAAMxB,EAAKT,QAAQiC,OACxBxB,EAAKyB,cAEDlC,EAAQmC,iBACR1B,EAAKR,QAAQmC,OAAO7I,EAAMsB,SAASmF,EAAQmC,gBAAvB5I,CAAwCyG,EAAQqC,mBAIxErC,EAAQsC,YAAqC,SAAvBtC,EAAQsC,YAC9BrC,EAAQ6B,SAASvI,EAAMgJ,iBAAiB,YAAa,aAAcvC,EAAQsC,aAG/E7B,EAAK+B,OAAS/B,EAAKgC,SAAW3D,IAC9B2B,EAAKiC,OAASjC,EAAKkC,QAAU7D,IAC7B2B,EAAKmC,YAEDvC,GACAI,EAAKoC,QAAQxC,GAGbL,EAAQ4B,SACRnB,EAAKqC,QAAQ,MAAO9C,EAAQ+C,OAGhCzC,EAAgBL,EAAQ+C,SAAS5H,GAE7B4E,EAAQ4B,SAAW5B,EAAQ+C,OAC3BtC,EAAKwC,SAAShD,EAAQuB,GAAG1F,IAAUqC,IAAI,CAAE+E,QAAS,KAGtDjD,EACKkD,GAAG,aAAepI,EAAIqC,EAA0BqD,EAAK2C,aAAaC,KAAK5C,IACvE0C,GAAG,aAAepI,EAAIqC,EAA0BqD,EAAK6C,aAAaD,KAAK5C,IACvE0C,GAAG,QAAUpI,EAAI,KAAOqC,EAA0BqD,EAAK8C,qBAAqBF,KAAK5C,IACjF0C,GAAG,UAAYpI,EAAI0F,EAAMA,EAAK+C,SAASH,KAAK5C,IAC5C0C,GAAG,QAAUpI,EAAI0F,EAAKgD,OAAOJ,KAAK5C,IAClC0C,GAAG,OAASpI,EAAI0F,EAAKiD,MAAML,KAAK5C,IAErCH,EACK6C,GAAG,UAAYpI,EAAI0F,EAAMA,EAAKkD,gBAAgBN,KAAK5C,IAE1CH,EAAce,KAAK,IAAM7F,GAAe,KAElC+E,EAAaqD,KAAKtG,MAElCiD,EAAa4C,GAAG,OAASpI,GAAI,WACzB,IAAIiD,EAAUrE,EAAE8H,SAASpH,eAAeoF,OAAOrE,GAC3C4C,EAAQ6C,QACatH,EAAMsK,eAAe7F,GAC3ByF,QAEvB,IAEAlD,EAAa4C,GAAG,QAAUpI,GAAI,WAC1BpB,EAAEyB,GAAgB0I,IAvOb,qBAuOiClJ,MAAK,SAASmJ,EAAG/F,GACnDzE,EAAMsK,eAAelK,EAAEqE,IAAU0F,OACrC,GACJ,IAEAnD,EAAaqD,KAAKtG,IAAqB,IAG3C5D,KAAKsK,aAELtK,KAAKuK,aAEDjE,EAAQkE,QAAUxK,KAAKuG,QAAQuB,GAAG,aAClCf,EAAK0D,OAGT3D,EAAKxC,EAAQ+D,KAAK,SAEdvB,GAAU,aACVP,EAAQ8B,KAAK,CACLqC,KAAQ,SACR,kBAAmB5D,IACpBwC,SAAS7H,GACX6H,SAAS9H,GACT6G,KAAK,KAAMvB,IAGpBP,EAAQoE,IAAIpE,EAAQ+C,SAAS,oBAAsB7H,IAC9CgI,GAAG5J,EAAM+K,QAAQC,UAAYxJ,EAAI0F,EAAKqC,QAAQO,KAAK5C,IAExDA,EAAK+D,cAAgBjL,EAAMiL,cAAcxG,GAEzCyC,EAAKgE,eAAiBhE,EAAKiE,kBAAkBrB,KAAK5C,GAElDA,EAAKkE,QAAUpL,EAAMqL,OAAOC,UAAU,EAAG,GAEzClL,EAAEG,QAAQqJ,GAAG,SAAWpI,EAAK0F,EAAKkE,QAASlE,EAAKgE,gBAE5CzE,EAAQ4B,UACRnB,EAAKqE,QAAQ5I,GACbuE,EAAKqE,QAAQ3I,IAGjB5C,EAAMwL,OAAOtE,GAET/G,KAAKsG,QAAQ+C,QACbrJ,KAAKsL,YAAc,IAAI/K,EAAWgG,GAClCvG,KAAKsL,YAAYC,OACjBvL,KAAKsL,YAAYE,WAAa,WAC1B,OAAOjF,EAAQ2D,KAAK,UACxB,GAGAnD,EAAK0E,uBACL1E,EAAK0E,sBAAsB1E,EAAKR,QAAQ,GAEhD,EAEAmD,aAAc,SAASgC,GACnBzL,EAAEyL,EAAEC,eAAevD,SAASpG,EAChC,EAEA4H,aAAc,SAAS8B,GACnBzL,EAAEyL,EAAEC,eAAeC,YAAY5J,EACnC,EAEA+H,OAAQ,WACJ/J,KAAKuG,QAAQ6B,SAASnG,EAC1B,EAEA+H,MAAO,WACHhK,KAAKuG,QAAQqF,YAAY3J,EAC7B,EAEAuG,YAAa,WACT,IAAIjC,EAAUvG,KAAKuG,QACfD,EAAUtG,KAAKsG,QACfuF,EAAQvF,EAAQuF,MAChBC,EAASxF,EAAQwF,OACjBC,EAAYzF,EAAQyF,UACpBC,EAAY1F,EAAQ2F,KACpBC,EAAa,CAAC,WAAW,YAAY,WAAW,aAChDC,EAAgD,eAA7B5F,EAAQ9B,IAAI,cAE/B2H,EAAgBD,EAAmB9H,GAAMkC,EAAS,qBAAuBlC,GAAMkC,EAAS,sBAAwB,EAChH8F,EAAgBF,EAAmB9H,GAAMkC,EAAS,oBAAsBlC,GAAMkC,EAAS,uBAAyB,EAChH+F,EAAaH,EAAmB9H,GAAMkC,EAAS,eAAiB,EAEhEvG,KAAKuH,cAAgBvH,KAAKuM,YAC1BvM,KAAKwM,oBACLlG,EAAQyF,UAAY9G,KAAKE,IAAInF,KAAKuH,YAAYuE,QAAUO,EAAgBC,GAAaP,GACrFzF,EAAQmG,SAAWxH,KAAKE,IAAInF,KAAKuH,YAAYsE,MAAQO,EAAe9F,EAAQmG,WAGhF,IAAK,IAAIpC,EAAI,EAAGA,EAAI6B,EAAW/E,OAAQkD,IAAK,CACxC,IAAI1F,EAAQ2B,EAAQ4F,EAAW7B,KAAO,GAClC1F,GAASS,KACTmB,EAAQ9B,IAAIyH,EAAW7B,GAAI1F,EAEnC,CAEIoH,GAAa3G,KACbpF,KAAKsE,QAAQG,IAAI,YAAasH,GAG9BF,EACAtF,EAAQ1F,WAAW6D,GAAUmH,EAAOvF,EAAQoG,SAAUpG,EAAQmG,WAG9DlG,EAAQ1F,WAAW,IAGnBiL,EACAvF,EAAQxF,YAAY2D,GAAUoH,EAAQxF,EAAQqG,UAAWrG,EAAQyF,YAGjExF,EAAQxF,YAAY,IAGnBuF,EAAQ4B,SACT3B,EAAQqF,YAAYzJ,GAAayK,OAGjCZ,GAAajI,GAAKiI,IAClBzF,EAAQ6B,SAASrE,GAAKiI,GAE9B,EAEA9C,UAAW,WACP,IAEI2D,EAAgBC,EAFhBvG,EAAUvG,KAAKuG,QACfG,EAAW1G,KAAKsG,QAAQI,SAG5B1G,KAAKwM,oBAEDxM,KAAKuH,cACLb,EAASf,IAAMe,EAASf,KAAO,EAC/Be,EAASb,KAAOa,EAASb,MAAQ,EAEjCgH,EAAiBnG,EAASf,IAAIZ,WAAWC,QAAQ,KAAO,EACpDR,SAASxE,KAAKuH,YAAYuE,QAAUiB,WAAWrG,EAASf,KAAO,KAAM,IACrEe,EAASf,IAEbmH,EAAkBpG,EAASb,KAAKd,WAAWC,QAAQ,KAAO,EACtDR,SAASxE,KAAKuH,YAAYsE,OAASkB,WAAWrG,EAASb,MAAQ,KAAM,IACrEa,EAASb,KAEba,EAASf,IAAMjB,GAAUmI,EAAgB7M,KAAK8I,OAAQ9I,KAAKgJ,QAC3DtC,EAASb,KAAOnB,GAAUoI,EAAiB9M,KAAK+I,QAAS/I,KAAKiJ,UAG9DvC,EAASf,KAAOe,EAASf,IAAIZ,WAAWC,QAAQ,MAAQ,IACxD0B,EAASf,IAAMqH,OAAOtG,EAASf,IAAIsH,QAAQ,KAAM,MAGjDvG,EAASb,MAAQa,EAASb,KAAKd,WAAWC,QAAQ,MAAQ,IAC1D0B,EAASb,KAAOmH,OAAOtG,EAASb,KAAKoH,QAAQ,KAAM,MAGlC,IAAjBvG,EAASf,MACTe,EAASf,IAAMe,EAASf,IAAIZ,YAGV,IAAlB2B,EAASb,OACTa,EAASb,KAAOa,EAASb,KAAKd,YAGlCwB,EAAQ9B,IAAI,CACRkB,IAAKe,EAASf,KAAO,GACrBE,KAAMa,EAASb,MAAQ,IAE/B,EAEA2G,kBAAmB,WACf,IAAIjF,EAAcvH,KAAKuH,YAEvB,IAAKA,EACD,OAAO,KAGXA,EAAYsE,MAAQtE,EAAY2F,aAChC3F,EAAYuE,OAASvE,EAAY4F,cAE7B3I,SAAS+C,EAAYsE,MAAO,IAAMtE,EAAY,GAAG6F,cACjD7F,EAAYsE,OAAShM,EAAM+K,QAAQyC,aAGnC7I,SAAS+C,EAAYuE,OAAQ,IAAMvE,EAAY,GAAG+F,eAClD/F,EAAYuE,QAAUjM,EAAM+K,QAAQyC,aAGxC9F,EAAYb,SAAWlB,GAAY+B,EAAY,IAE3CvH,KAAKuM,WACLvM,KAAK8I,OAAS9I,KAAK+I,SAAW3D,IAC9BpF,KAAKgJ,OAAShJ,KAAKiJ,QAAU7D,MAE7BpF,KAAK8I,OAASvB,EAAYpB,YAC1BnG,KAAK+I,QAAUxB,EAAYnB,aAC3BpG,KAAKiJ,QAAUjJ,KAAK+I,QAAUxB,EAAYsE,MAAQhL,EAAWb,KAAKuG,SAAS,GAC3EvG,KAAKgJ,OAAShJ,KAAK8I,OAASvB,EAAYuE,OAAS/K,EAAYf,KAAKuG,SAAS,GAEnF,EAEAgH,kBAAmB,SAASzG,GACxB,IAAI0G,EAAYxN,KAAKsG,QAAQkH,UAM7B,OAAOA,GAAaA,EAAU1G,IALT,CACjB2G,KAAM,CAAEC,QAAS,CAAC,GAClBC,MAAO,CAAEf,MAAM,EAAMc,QAAS,CAAC,IAGiB5G,EACxD,EAEA8G,QAAS,WACL/N,EAAMgO,OAAO7N,KAAKsE,QAAQgF,WAC9B,EAEAgB,WAAY,WACR,IAAIwD,EAAY9N,KAAKsG,QAAQwH,UACzBvH,EAAUvG,KAAKuG,QAEfvG,KAAK+N,WACLxH,EACKyH,IAAI,WAAa3M,GACjBiI,SAAS3H,GAAsBkG,SAEpC7H,KAAK+N,SAASE,UACdjO,KAAK+N,SAAW,MAGhBD,IACAvH,EAAQkD,GAAG,WAAapI,EAAII,EAAiB,SAAUiK,GAC9CzL,EAAEyL,EAAEwC,QAAQ/F,QAAQ,6BAA6BhB,QAClDnH,KAAKmO,oBAEZ,EAAExE,KAAK3J,OAERkB,EAAK,sBAAsBkN,MAAM,MAAM,SAASC,EAAOC,GACnD/H,EAAQmC,OAAOvI,EAAUoO,aAAaD,GAC1C,IAEAtO,KAAK+N,SAAW,IAAIS,GAAexO,OAGvCuG,EAAU,IACd,EAEAgE,WAAY,WACR,IAAI/C,EAAYxH,KAAKsG,QAAQkB,UAEzBxH,KAAKyO,WACLzO,KAAKyO,SAASR,UACdjO,KAAKyO,SAAW,MAEhBjH,IACAxH,KAAKyO,SAAW,IAAIC,GAAe1O,KAAMwH,EAAUmH,YAAclN,EAAiB+F,EAAUoH,gBAEpG,EAEAC,SAAU,WACN,IAWIC,EAXAxI,EAAUtG,KAAKsG,QACfY,EAAUZ,EAAQY,QAClBsD,EAASlE,EAAQkE,OAEjBuE,EADW/O,KAAKuG,QAAQ+C,SAAS7H,GACZkG,KAAK,8BAC1BqH,EAAyB,CAAE,WAAY,YACvCC,EAAQ,CACRC,SAAY,SACZ/F,QAAW,kBACXgG,OAAU,QAIdjI,EAAUjH,EAAEmP,IAAIlI,GAAS,SAASmI,GAG9B,OAFAA,EAAS7E,GAAmC,QAAzB6E,EAAO9J,cAA0B,QAAU8J,EAC9DP,EAAOG,EAAMI,EAAO9J,gBAAkB,GAC/B,CAAE+J,KAAON,EAAuBhK,QAAQqK,EAAO9J,gBAAmB,EAAK,UAAY8J,EAASA,EAAQP,KAA8B,SAAxBO,EAAO9J,cAA2B,IAAMuJ,EAC7J,IAEAC,EAAUQ,KAAK1P,EAAM2P,OAAOrP,EAAUkP,OAAQnI,GAClD,EAEAuI,WAAY,SAASnJ,GACjB,IAAIS,EAAO/G,KACPgM,EAAYjF,EAAKT,QAAQ2F,KACzByD,EAAM1P,KAAKuH,cAAgBR,EAAKwF,UAAYvM,KAAKuH,YAActH,EAAE8H,UAEjE4H,EAAgBC,KAAKC,MAAMD,KAAKE,UAAUxJ,IAE9CS,EAAKR,QAAQqF,YAAY/L,EAAMgJ,iBAAiB,YAAa,aAAc9B,EAAKT,QAAQsC,aAExF3H,EAAOqF,EAAQI,SAAUK,EAAKT,QAAQI,UACtCzF,EAAOqF,EAAQI,SAAUiJ,EAAcjJ,UAEvCK,EAAKgJ,oBAAsBL,EAAIvJ,YAC/BY,EAAKiJ,qBAAuBN,EAAItJ,aAEhC/F,EAAO+G,GAAGqI,WAAWpI,KAAKN,EAAMT,GAChC,IAAI2J,GAAyC,IAA5BlJ,EAAKT,QAAQ2J,WAoB9B,GAlBAlJ,EAAKmJ,eAEwB,IAAlB5J,EAAQiC,OACfxB,EAAKwB,MAAMjC,EAAQiC,OAGvBxB,EAAKR,QAAQqF,YAAY7H,GAAKiI,IAC9BjF,EAAKyB,cAELzB,EAAKmC,YACLnC,EAAKuD,aACLvD,EAAKwD,aACLxD,EAAK8H,WAED9H,EAAKT,QAAQsC,YAA0C,SAA5B7B,EAAKT,QAAQsC,YACxC7B,EAAKR,QAAQ6B,SAASvI,EAAMgJ,iBAAiB,YAAa,aAAc9B,EAAKT,QAAQsC,kBAG5D,IAAlBtC,EAAQ+C,MAAuB,CACtC,IAAInB,GAAmC,IAAzBnB,EAAKT,QAAQ4B,QAC3BnB,EAAKoJ,2BACLpJ,EAAKwC,SAASjD,EAAQ+C,OAASnB,EACnC,CAEAnB,EAAKzC,QAAQG,IAAItB,EAAU8M,EAAa,GAAK,SACjD,EAEAG,OAAQ,CACJ5N,EACAC,EACAC,EACAC,EA9hBO,WACA,WAgiBPC,EACAK,EACAJ,EAhiBK,SAkiBLC,EACAC,EACAC,EA/hBW,eAiiBXE,GAGJoD,QAAS,CACLgJ,KAAM,SACN9B,UAAW,CACPC,KAAM,CACFC,QAAS,CAAE2C,KAAM,CAAEC,UAAW,MAAQC,KAAM,CAAED,UAAW,OACzDE,SAAU,KAEd7C,MAAO,CACHD,QAAS,CAAE2C,KAAM,CAAEC,UAAW,MAAOG,WAAY,CAAEC,MAAO,KAASH,KAAM,CAAED,UAAW,QACtFE,SAAU,IACV5D,MAAM,IAGdrE,MAAO,GACPK,WAAY,GACZ1B,QAAS,CAAC,SACVyJ,WAAW,EACXtH,OAAO,EACP4C,KAAM,OACN6B,WAAW,EACXtG,WAAW,EACXkF,SAAU,GACVC,UAAW,GACXF,SAAUrH,IACV2G,UAAW3G,IACXoF,QAAQ,EACRyF,YAAY,EACZvJ,SAAU,CAAC,EACXC,QAAS,KACTuB,QAAS,KACT4D,OAAQ,KACRD,MAAO,KACPvE,SAAU,OACVsJ,aAAa,EACbC,aAAa,GAGjBC,UAAW,WACP,OAAO7Q,EAAE8Q,QAAQ,QAAS9Q,EAAEmP,IAAIpP,KAAKsG,QAAQY,SAAS,SAAS9C,GAAK,OAAOA,EAAEmB,aAAe,MAAO,CACvG,EAEA0E,gBAAiB,SAASyB,GACtB,IACIsF,EAAOnR,EAAMmR,KACHtF,EAAEuF,SAEDD,EAAKE,KAJTlR,KAIqB8Q,cAC5BpF,EAAEyF,kBALKnR,KAMFoR,QAAO,GAEpB,EAEAtH,SAAU,SAAS4B,GACf,IAKI1E,EAAQqK,EAIRC,EAAUC,EAAWC,EAAGC,EATxB1K,EAAO/G,KACPsG,EAAUS,EAAKT,QACf0K,EAAOnR,EAAMmR,KACbC,EAAUvF,EAAEuF,QACZ1K,EAAUQ,EAAKR,QAEfmL,EAAW,GACXd,EAActK,EAAQsK,YACtBC,EAAcvK,EAAQuK,YAGtBI,GAAWD,EAAKE,KAAOnK,EAAK+J,cAC5BpF,EAAEyF,kBACFpK,EAAKqK,QAAO,IAGZ1F,EAAEwC,QAAUxC,EAAEC,eAAiB5E,EAAK4K,WAKpCjG,EAAEkG,QAAqB,IAAXX,GACZlK,EAAKoC,UAILuC,EAAEkG,QAAqB,IAAXX,IACRlK,EAAKT,QAAQkE,OACbzD,EAAK8K,QAEL9K,EAAK0D,OAKTiB,EAAEkG,QAAUX,GAAWD,EAAKc,GACxBjB,GACA9J,EAAKmJ,UACLnJ,EAAKR,QAAQ6E,QAAQ,UACbwF,IACR7J,EAAKmI,WACLnI,EAAKR,QAAQ6E,QAAQ,UAElBM,EAAEkG,QAAUX,GAAWD,EAAKe,OAC9BlB,GAAgBD,EAGVA,IACP7J,EAAKmJ,UACLnJ,EAAKR,QAAQ6E,QAAQ,WAJrBrE,EAAKiL,WACLjL,EAAKR,QAAQ6E,QAAQ,WAO7BpE,EAASnH,EAAMoS,UAAU1L,GAErBQ,EAAKQ,cAAgBR,EAAKwF,YAC1BvF,EAASD,EAAKT,QAAQI,WAGtBJ,EAAQkB,WAAckE,EAAEwG,SAAYxG,EAAEkG,QAAWhB,IACjD7J,EAAKyF,oBACDyE,GAAWD,EAAKc,IAChB9K,EAAOrB,IAAMjB,GAAUsC,EAAOrB,IAAM+L,EAAU3K,EAAK+B,OAAQ/B,EAAKiC,QAChEqI,EAAU9K,EAAQ9B,IAAI,MAAOuC,EAAOrB,MAC7BsL,GAAWD,EAAKe,MACvB/K,EAAOrB,IAAMjB,GAAUsC,EAAOrB,IAAM+L,EAAU3K,EAAK+B,OAAQ/B,EAAKiC,QAChEqI,EAAU9K,EAAQ9B,IAAI,MAAOuC,EAAOrB,MAC7BsL,GAAWD,EAAKmB,MACvBnL,EAAOnB,KAAOnB,GAAUsC,EAAOnB,KAAO6L,EAAU3K,EAAKgC,QAAShC,EAAKkC,SACnEoI,EAAU9K,EAAQ9B,IAAI,OAAQuC,EAAOnB,OAC9BoL,GAAWD,EAAKoB,QACvBpL,EAAOnB,KAAOnB,GAAUsC,EAAOnB,KAAO6L,EAAU3K,EAAKgC,QAAShC,EAAKkC,SACnEoI,EAAU9K,EAAQ9B,IAAI,OAAQuC,EAAOnB,QAIzCS,EAAQwH,WAAapC,EAAEwG,UAAYtB,IAAgBC,IAC/CI,GAAWD,EAAKc,IAChBT,GAAU,EACVE,EAAYhL,EAAQxF,cAAgB2Q,GAC7BT,GAAWD,EAAKe,MACvBV,GAAU,EAENE,EADAxK,EAAKQ,cAAgBR,EAAKwF,UACdtH,KAAKE,IAAIoB,EAAQxF,cAAgB2Q,EACzC3K,EAAKQ,YAAYuE,OAAS9E,EAAOrB,IAAMtB,GAAMkC,EAAS,eACtDlC,GAAMkC,EAAS,qBAAuBlC,GAAMkC,EAAS,mBAE7CA,EAAQxF,cAAgB2Q,GAEjCT,GAAWD,EAAKmB,MACvBd,GAAU,EACVC,EAAW/K,EAAQ1F,aAAe6Q,GAC3BT,GAAWD,EAAKoB,QACvBf,GAAU,EAENC,EADAvK,EAAKQ,cAAgBR,EAAKwF,UACftH,KAAKE,IAAIoB,EAAQ1F,aAAe6Q,EACvB3K,EAAKQ,YAAYsE,MAAQ7E,EAAOnB,KAChCxB,GAAMkC,EAAS,mBAAqBlC,GAAMkC,EAAS,qBAE5DA,EAAQ1F,aAAe6Q,GAItCL,IACAG,EAAI9M,GAAU4M,EAAUhL,EAAQoG,SAAUpG,EAAQmG,UAClDgF,EAAI/M,GAAU6M,EAAWjL,EAAQqG,UAAWrG,EAAQyF,WAE/CjH,MAAM0M,KACPjL,EAAQ1F,WAAW2Q,GACnBzK,EAAKT,QAAQuF,MAAQ2F,EAAI,MAExB1M,MAAM2M,KACPlL,EAAQxF,YAAY0Q,GACpB1K,EAAKT,QAAQwF,OAAS2F,EAAI,MAG9B1K,EAAK8G,WAITwD,GACA3F,EAAE2G,iBAEV,EAEA9I,SAAU,SAASrB,GACf,IAAIoK,EAAUtS,KAAKuH,YAAcvH,KAAKuH,YAAY+B,SAAS1H,GAAY5B,KAAKsH,SAASgC,SAAS1H,GAC1F2E,EAAUvG,KAAKuG,QACfE,EAAUyB,EAAU,cAAgB,OACpCqK,EAAS/N,SAAS+B,EAAQ9B,IAAIpB,GAAS,IAAM,EAiBjD,OAfKiP,EAAQnL,SACTmL,EAAUrS,EAAE,8BAGhBqS,EACKE,aAAajM,EAAQ,IACrB9B,IAAI,CACD8N,OAAQA,EACR9L,QAASA,IAGbzG,KAAKsG,QAAQ+C,MAAMoJ,gBAAkBzS,KAAKuH,aAC1CvH,KAAK0S,yBAGFJ,CACX,EAEAK,eAAgB,SAAS7D,GAErB,MAAO,CACH1K,EAAK,SACLhE,OAAU,WACV,kBAAmB,WACnB,iBAAkB,UAClB,kBAAmB,UACnBqK,IAAO,MACPoH,MAAS,SARG,wBAAwBe,KAAK9D,EAAK,GAAG+D,WAAW,GASpD5F,QAAQ,kBAAmB,IAC3C,EAEApD,qBAAsB,SAAS6B,GAC3B,IAAI1L,KAAK2R,SAAT,CAGA,IAAI7C,EAAO7O,EAAEyL,EAAEwC,QAAQ/F,QAAQ,6BAA6BR,KAAK,uBAC7D0H,EAASrP,KAAK2S,eAAe7D,GAEjC,OAAIO,GACA3D,EAAE2G,iBACFrS,KAAKqP,MACE,QAHX,CAJA,CASJ,EAEAyD,QAAS,WAML,IALA,IAEIC,EAFAhM,EAAO/G,KACPgT,EAAiB/S,EAAEsB,EAAUa,GAE7B6Q,EAAS,GAEJ5I,EAAI,EAAGA,EAAI2I,EAAe7L,OAAQkD,GAAK,GAC5C0I,EAAiBhM,EAAKmM,QAAQjT,EAAE+S,EAAe3I,OAG3C0I,EAAezM,SACfyM,EAAezM,QAAQ+C,OACvB0J,EAAezM,QAAQ4B,SACvB6K,EAAezM,QAAQgB,WAAaP,EAAKT,QAAQgB,YAC/CyL,EAAexL,aAAgBR,EAAKQ,aAAewL,EAAexL,YAAY,KAAOR,EAAKQ,YAAY,KACpG0L,EAAOE,KAAKJ,EAAexM,QAAQ,IAU/C,OANA0M,EAAOG,MAAK,SAASC,EAAGC,GACpB,OAAOD,EAAEE,MAAMhB,OAASe,EAAEC,MAAMhB,MACpC,IAEAxL,EAAO,KAEA9G,EAAEgT,EACb,EAEAC,QAAS,SAAS5O,GACd,IACIkP,EADUlP,EAAQgF,SAAS5H,GACV+R,iBAErB,OAAID,GAIGtT,CACX,EAEAwT,OAAQ,WACJ,IAMIC,EAAQC,EANR7M,EAAO/G,KACP0G,EAAWK,EAAKT,QAAQI,SACxBH,EAAUQ,EAAKR,QACfsN,EAAiB5T,EAAEG,QACnB+F,EAAY,EACZC,EAAa,EAGjB,OAAIW,EAAKT,QAAQsK,cAIb7J,EAAKT,QAAQkE,SAAWzD,EAAKwF,WAC7BxF,EAAK0D,MAGJ1D,EAAKT,QAAQkE,SACdrE,EAAY0N,EAAe1N,YAC3BC,EAAayN,EAAezN,cAG5BpG,KAAKuH,cAAgBR,EAAKT,QAAQkE,QAClCmJ,EAAS3T,KAAK8I,QAAU9I,KAAKgJ,OAAShJ,KAAK8I,QAAU,EACrD8K,EAAU5T,KAAK+I,SAAW/I,KAAKiJ,QAAUjJ,KAAK+I,SAAW,IAEzDhC,EAAK+M,mBAAoB,EACzBF,EAAUxN,EAAanB,KAAKC,IAAI,GAAI2O,EAAehI,QAAUtF,EAAQ1F,cAAgB,GACrF8S,EAASxN,EAAYlB,KAAKC,IAAI,GAAI2O,EAAe/H,SAAWvF,EAAQxF,cAAgBsD,GAAMkC,EAAS,eAAiB,IAGxHA,EAAQ9B,IAAI,CACRoB,KAAM+N,EACNjO,IAAKgO,IAGTjN,EAASf,IAAMgO,EACfjN,EAASb,KAAO+N,GA3BL7M,CA8Bf,EAEAwB,MAAO,SAASA,GACZ,IACI5D,EADAoC,EAAO/G,KAEP+T,GAAU,EACVxN,EAAUQ,EAAKR,QACfyN,EAAWzN,EAAQ+C,SAAS7H,GAC5BwS,EAAeD,EAAS1K,SAAS9H,GAErC,OAAK0S,UAAU/M,QAIXlH,EAAES,cAAc6H,IAChB5D,OAA8B,IAAf4D,EAAM4L,KAAuB5L,EAAM4L,KAAO,GACzDJ,GAA4B,IAAlBxL,EAAMwL,SAEhBpP,EAAQ4D,GAGE,IAAV5D,GACA4B,EAAQ6B,SAAS,sBACjB7B,EAAQ9B,IAAI,cAAe,GAC3BuP,EAASnM,UAEJmM,EAAS7M,OAOV8M,EAAa1E,KAAKwE,EAAUlU,EAAMuU,WAAWzP,GAASA,IANtD4B,EAAQ8N,QAAQlU,EAAUmU,SAAS,CAC/B/L,MAAOwL,EAAUlU,EAAMuU,WAAWzP,GAASA,KAE/CoC,EAAK8H,WACLmF,EAAWzN,EAAQ+C,SAAS7H,IAMpCsF,EAAKT,QAAQiC,MAAQ5D,EAEdoC,GA5BIkN,EAAa1E,MA6B5B,EAEA5I,QAAS,SAAS4I,EAAMrF,GACpB,IAAIvD,EAAU3G,KAAKuG,QAAQ+C,SAAS5H,GAChC6S,EAAkB5N,EAAQ2C,SAAS,wBAIvC,OAFA3C,EAAU4N,EAAgB,GAAKA,EAAkB5N,EAE5CxC,GAAQoL,IAIb1P,EAAMoO,QAAQjO,KAAKsE,QAAQgF,YAE3B3C,EAAQ6N,QAAQjF,KAAKA,GAEdvP,MAPI2G,EAAQ4I,MAQvB,EAEA9B,KAAM,WACF,IAKI6E,EAASmC,EALT1N,EAAO/G,KACPuG,EAAUQ,EAAKR,QACfD,EAAUS,EAAKT,QACfoO,EAAc1U,KAAKuN,kBAAkB,QACrCoH,EAAiBpO,EAAQ+C,SAAS5H,GAGlCgO,EADqB1P,KAAKuH,cAAgBR,EAAKwF,UACpBvM,KAAKuH,YAActH,EAAE8H,UAEpD,IAAKhB,EAAKqE,QAAQ5I,GAAO,CAerB,GAdIuE,EAAK4K,UACLpL,EAAQqO,WAAU,GAAM,GAG5B7N,EAAK4K,UAAW,EAEhB5K,EAAKqC,UAED9C,EAAQqK,WACR5J,EAAKR,QAAQ6E,QAAQ,SAGzB9E,EAAQ4B,SAAU,EAEd5B,EAAQ+C,MAAO,CAMf,GALAoL,IAAuB1N,EAAK+L,UAAU3L,QACtCmL,EAAUvL,EAAKwC,SAASkL,IAEhBG,WAAU,GAAM,GAEpBF,EAAYlE,UAAY3Q,EAAM6N,QAAQmH,OAASJ,EAAoB,CACnE,IAAIK,EAAYjV,EAAMkV,GAAGzC,GAAS0C,SAClCF,EAAUtE,SAASkE,EAAYlE,UAAY,GAC3CsE,EAAUG,SAAS,IACnBH,EAAUI,MACd,MACI5C,EAAQ7N,IAAI,UAAW,IAG3B6N,EAAQ6C,OAERlV,EAAEG,QAAQqJ,GAAG,QAAUnI,GAAU,WACzBiF,EAAQ2D,KAAK,aAAejK,EAAE8H,SAASpH,eAAewH,QAAQ5B,GAASY,QACxEJ,EAAKR,QAAQ6E,QAAQ,QAE5B,GACJ,CAEK7E,EAAQuB,GAAG1F,KACZuS,EAAelQ,IAAItB,EAAUb,GAE7ByE,EAAKR,QAAQoB,KAAKjE,GAA0B0E,SAAS,iBAErD7B,EAAQ9B,IAAI,CAAEgC,QAAS,gBACvBF,EAAQqO,YAAYQ,aAAa,CAC7B1H,QAASgH,EAAYhH,QACrB8C,SAAUkE,EAAYlE,SACtB6E,SAAUrV,KAAKsV,UAAU3L,KAAK3J,QAG1C,CAYA,OAVIsG,EAAQsK,cACR7J,EAAKgJ,oBAAsBL,EAAIvJ,YAC/BY,EAAKiJ,qBAAuBN,EAAItJ,aAChCW,EAAK2L,0BAGL1S,KAAKsG,QAAQkE,SAAWxK,KAAKuM,WAC7BvM,KAAKyK,MAGF1D,CACX,EAEAuO,UAAW,WACP,IAAIrF,GAAyC,IAA5BjQ,KAAKsG,QAAQ2J,WAE1BjQ,KAAKsG,QAAQqK,WACb3Q,KAAKuG,QAAQ6E,QAAQ,SAGzBpL,KAAKsE,QAAQG,IAAItB,EAAU8M,EAAa,GAAK,UAC7CpQ,EAAMgO,OAAO7N,KAAKsE,QAAQgF,YAE1BtJ,KAAKoL,QAAQ3I,EACjB,EAEA8S,eAAgB,SAASC,GACrB,IAAIvC,EAASjT,KAAK8S,UACdxM,EAAUtG,KAAKsG,QACfmP,EAAcnP,EAAQ+C,QAAU4J,EAAO9L,OACvCuO,EAAc1V,KAAKuN,kBAAkB,SAEzC,GAAIkI,EAAa,CACb,IAAKD,GAAqBE,EAAYlF,UAAY3Q,EAAM6N,QAAQmH,KAAM,CAClE,IAAIC,EAAYjV,EAAMkV,GAAGzO,EAAQ+C,MAAQrJ,KAAKuJ,UAAS,GAAQtJ,EAAEC,IAAcyV,UAC/Eb,EAAUtE,SAASkF,EAAYlF,UAAY,GAC3CsE,EAAUc,WAAW,IACrBd,EAAUI,MACd,MACIlV,KAAKuJ,UAAS,GAAO1B,SAErBvB,EAAQ+C,MAAMoJ,eACdzS,KAAKmQ,0BAEb,MAAW8C,EAAO9L,SACdnH,KAAKkT,QAAQD,EAAO4C,QAAQtM,UAAS,GAEjCjD,EAAQ+C,MAAMoJ,eACdzS,KAAK0S,yBAGjB,EAEAtB,OAAQ,SAAS0E,GACb,IAOIC,EAPAhP,EAAO/G,KACPuG,EAAUQ,EAAKR,QACfD,EAAUS,EAAKT,QACfoO,EAAc1U,KAAKuN,kBAAkB,QACrCmI,EAAc1V,KAAKuN,kBAAkB,SAErCmC,EADqB1P,KAAKuH,cAAgBR,EAAKwF,UACpBvM,KAAKuH,YAActH,EAAE8H,UAGhDhB,EAAK4K,WAIToE,EAAmBhP,EAAKqE,QAAQzI,EAAO,CAAEqT,eAAgBF,IACzD/O,EAAK4K,UAAYoE,EAEbxP,EAAQuB,GAAG1F,KAAa2T,IACxBzP,EAAQ4B,SAAU,EAElBjI,EAAEsB,GAASL,MAAK,SAASmJ,EAAG/F,GACxB,IAAIqQ,EAAiB1U,EAAEqE,GAASgF,SAAS5H,GAGrC4C,GAAWiC,GAAWoO,EAAehN,KAAK,MAAQ7F,GAAeqF,OAAS,GAC1EwN,EAAerL,SAAS1H,GAAUiG,QAE1C,IAEA7H,KAAKuV,iBAGLxO,EAAKR,QAAQoB,KAAKjE,GAA0BkI,YAAY,iBAExDrF,EAAQqO,YAAYQ,aAAa,CAC7B1H,QAASgI,EAAYhI,SAAWgH,EAAYhH,QAC5CuI,SAAiC,IAAxBP,EAAYO,QACrBzF,SAAUkF,EAAYlF,SACtB6E,SAAUrV,KAAKkW,YAAYvM,KAAK3J,QAEpCC,EAAEG,QAAQ4N,IAAI1M,IAGdyF,EAAKT,QAAQsK,cACb7J,EAAKoJ,2BACDpJ,EAAKgJ,qBAAuBhJ,EAAKgJ,oBAAsB,GACvDL,EAAIvJ,UAAUY,EAAKgJ,qBAEnBhJ,EAAKiJ,sBAAwBjJ,EAAKiJ,qBAAuB,GACzDN,EAAItJ,WAAWW,EAAKiJ,uBAIxBjJ,EAAKT,QAAQ6P,QACbpP,EAAKR,QAAQ6E,QAAQ,QAE7B,EAEA8K,YAAa,WACT,IAAInP,EAAO/G,KASX,GAPA+G,EAAKR,QACAqF,YAAYzJ,GACZyK,OACAnI,IAAI,UAAW,IAEpBsC,EAAKqE,QAAQ1I,GAETqE,EAAKT,QAAQ+C,MAAO,CACpB,IAAI+M,EAAYrP,EAAKmM,QAAQnM,EAAK+L,UAAU+C,QACxCO,GACAA,EAAUhN,SAElB,CACJ,EAEAuE,MAAO,WAEH,OADA3N,KAAKoR,QAAO,GACLpR,IACX,EAEAqW,YAAa,SAAS/R,GAClB,OAAOrE,EAAEqE,GAASwD,GAAG,GAAGpE,8JAC5B,EAEA4S,aAAc,SAASpI,GACnB,IAAIqI,EAAS5V,IACT2D,EAAUtE,KAAKuG,QAEnB,OAAOvG,KAAKsG,QAAQqK,YACf1Q,EAAEsW,GAAQzO,GAAGxD,KACbtE,KAAKqW,YAAYnI,MAChB5J,EAAQqD,KAAK4O,GAAQpP,SAAW7C,EAAQqD,KAAKuG,GAAQ/G,OAC/D,EAEAiC,QAAS,SAASsC,EAAG8K,GACjB,IAAIzP,EAAO/G,KACPuG,EAAUQ,EAAKR,QACfkQ,EAAgBlQ,EAAQ,GACxBmQ,EAAqB3P,EAAKQ,cAAgBR,EAAKwF,UAC/CoK,EAAgB3W,KAAKuN,kBAAkB,QACvCgF,GAAUhM,EAAQ9B,IAAIpB,GACtBuT,EAAiBrE,EACjBrE,EAAUxC,GAAKA,EAAEwC,QAAW,KA2BhC,GAzBAjO,EAAEsB,GAASL,MAAK,SAASmJ,EAAG/F,GACxB,IAAIuS,EAAe5W,EAAEqE,GACjBwS,EAAYD,EAAapS,IAAIpB,GAC7BsR,EAAiBkC,EAAavN,SAAS5H,GAEtCoD,MAAMgS,KACPvE,EAAStN,KAAKC,KAAK4R,EAAWvE,IAGlChM,EAAQ2D,KAAK,UAAW5F,GAAWmS,GAI/BnS,GAAWmS,GACX9B,EAAehN,KAAK,IAAM7F,GAAeqF,SACxCwN,EAAehN,KAAK/F,GAAUuF,QAC/BwN,EAAejM,OAAOvI,EAAUmS,QAExC,MAEK/L,EAAQ,GAAGgN,MAAMhB,QAAUqE,EAAiBrE,IAC7ChM,EAAQ9B,IAAIpB,EAAQkP,EAAS,GAEjCxL,EAAKzC,QAAQqD,KAAK,gBAAgBE,SAE9Bd,EAAKuP,aAAapI,GAAS,CACtBsI,GACDO,YAAW,WACPhQ,EAAKR,QAAQ6E,QAAQ,QACzB,GAAGuL,EAAgBA,EAAcnG,SAAW,GAGhD,IAAIrK,EAAYuQ,EAAqB3P,EAAKQ,YAAYpB,YAAclG,EAAEG,QAAQ+F,YAC1E6Q,EAAYxS,SAAS+B,EAAQG,WAAWf,IAAK,KAE5CoB,EAAKT,QAAQkE,QAAUwM,EAAY,GAAKA,EAAY7Q,IACjDA,EAAY,EACZlG,EAAEG,QAAQ+F,UAAU6Q,GAEpBzQ,EAAQ9B,IAAI,MAAO0B,GAG/B,CAIA,OAFAI,EAAU,KAEHQ,CACX,EAEAoH,mBAAoB,WAChB,OAAInO,KAAK2R,SACE3R,KAGJA,KAAKA,KAAKsG,QAAQsK,YAAc,UAAY,aACvD,EAEAV,QAAS,WACL,IAAInJ,EAAO/G,KACPsG,EAAUS,EAAKT,QACfqG,EAAYrG,EAAQqG,UACpBsK,EAAiBlQ,EAAKkQ,eAEtBlI,EAAYhI,EAAKQ,cAAgBR,EAAKwF,UAAYxF,EAAKQ,YAActH,EAAE8H,UAE3E,OAAKzB,EAAQsK,aAAgBtK,EAAQuK,aAIjClE,GAAaA,GAAavH,KAC1B2B,EAAKR,QAAQ9B,IAAI,aAAckI,GAG/BsK,IAAmB3Q,EAAQsK,cAC3BqG,EAAenL,OAASpH,GAAUuS,EAAenL,OAAQ/E,EAAKT,QAAQqG,UAAW5F,EAAKT,QAAQyF,WAE1EzF,EAAQI,SAASf,IAAMnB,SAASyS,EAAenL,OAAQ,IAAM/E,EAAKiC,SAGlF1C,EAAQI,SAASf,IAAMjB,GAAU4B,EAAQI,SAASf,IAAKoB,EAAK+B,OAAQ/B,EAAKiC,OAASxE,SAASyS,EAAenL,OAAQ,KAElH7K,EAAOgW,EAAgB,CACnBpR,KAAMS,EAAQI,SAASb,KACvBF,IAAKW,EAAQI,SAASf,QAKlCoB,EAAKR,QACA9B,IAAI,CACDiC,SAAUJ,EAAQkE,OAAS,QAAU,WACrC3E,KAAMoR,EAAepR,KACrBF,IAAKsR,EAAetR,IACpBkG,MAAOoL,EAAepL,MACtBC,OAAQmL,EAAenL,SAE1BF,YAAY1J,GACZ0J,YAAY/J,GACZ8F,KAAK,sCAAsCwN,OAAO+B,MAClDvP,KAAK,qFAAqF5B,SAAS8B,SAASqP,MAAMA,MAClHvP,KAAKrE,GAAgCyC,SAASoP,OAAO+B,MAAMA,MAC3DvP,KAAKlE,GAA4BsC,SAASoP,OAE3C7O,EAAQsK,YACR7J,EAAKR,QAAQoB,KAAK,+BAA+B5B,SAASqF,QAAQ,SAC3D9E,EAAQuK,aACf9J,EAAKR,QAAQoB,KAAK,iDAAiD5B,SAASqF,QAAQ,SAGxFrE,EAAKT,QAAQuF,MAAQoL,EAAepL,MACpC9E,EAAKT,QAAQwF,OAASmL,EAAenL,OAEhC/E,EAAKT,QAAQ+C,MAAMoJ,eACpB1L,EAAKoJ,2BAGLpJ,EAAKgJ,qBAAuBhJ,EAAKgJ,oBAAsB,GACvDhB,EAAU5I,UAAUY,EAAKgJ,qBAEzBhJ,EAAKiJ,sBAAwBjJ,EAAKiJ,qBAAuB,GACzDjB,EAAU3I,WAAWW,EAAKiJ,sBAG9B1J,EAAQsK,YAActK,EAAQuK,aAAc,EAE5C9J,EAAKR,QAAQ4Q,WAAW,oBAExBpQ,EAAK8G,SAEL9G,EAAKqE,QAAQnI,GAEN8D,GAjEIA,CAkEf,EAEAqQ,cAAe,SAASC,EAAUC,GAC9B,IAAIvQ,EAAO/G,KACPuG,EAAUQ,EAAKR,QACfgN,EAAQhN,EAAQ,GAAGgN,MACnBjN,EAAUS,EAAKT,QAEnB,OAAIA,EAAQsK,aAAetK,EAAQuK,cAInC9J,EAAKkQ,eAAiB,CAClBpL,MAAO0H,EAAM1H,MACbC,OAAQyH,EAAMzH,QAGlBvF,EACK+C,SAAS3H,GAAsBiL,OAAOsK,MACtC5N,SAAS7H,GAAiBkG,KAAKrE,GAAgCyC,SAAS6G,OACxE2K,GAAG,GAAGC,OAAOrX,EAAUkP,OAAO,CAAEC,KAAM,oBAE3CgI,EAASjQ,KAAKN,GAEdA,EAAKR,QAAQ+C,SAAS7H,GAAiBkG,KAAKlE,GAA4BsC,SAAS0R,OAAoB,aAAbJ,GAExFtQ,EAAKqE,QAAQiM,GAEb9Q,EAAQoB,KAAK,+CAA+C5B,SAASqF,QAAQ,UAnBlErE,CAsBf,EAEAmI,SAAU,WA+BN,OA9BAlP,KAAKoX,cAAc,YAAY,WAC3B,IAAIrQ,EAAO/G,KACPuG,EAAUQ,EAAKR,QACfmQ,EAAqB1W,KAAKuH,cAAgBR,EAAKwF,UAC/C7F,EAAWH,EAAQG,WACnBgJ,EAAMzP,EAAE8H,UAEZ9G,EAAO8F,EAAKkQ,eAAgB,CACxBpR,KAAMa,EAASb,MAAQ6Q,EAAqB1W,KAAKuH,YAAYnB,aAAe,GAC5ET,IAAKe,EAASf,KAAO+Q,EAAqB1W,KAAKuH,YAAYpB,YAAc,KAG7EnG,KAAK+P,oBAAsB2G,EAAqB1W,KAAKuH,YAAYpB,YAAcuJ,EAAIvJ,YACnFnG,KAAKgQ,qBAAuB0G,EAAqB1W,KAAKuH,YAAYnB,aAAesJ,EAAItJ,aAErFW,EAAK2L,yBAELnM,EACK9B,IAAI,CACDkB,IAAK+Q,EAAqB1W,KAAKuH,YAAYpB,YAAc,EACzDN,KAAM6Q,EAAqB1W,KAAKuH,YAAYnB,aAAe,EAC3DM,SAAUgQ,EAAqB,WAAa,UAE/CtO,SAASlG,GAEd6E,EAAKT,QAAQsK,aAAc,EAE3B7J,EAAKiE,mBACT,IAEOhL,IACX,EAEA0S,uBAAwB,WACpB,IAAI3L,EAAO/G,KACPuH,EAAcR,EAAKQ,YAEvB,GAAIA,IAAgBR,EAAKwF,UAOrB,OANAxF,EAAK2Q,mBAAmBnQ,GACxBA,EAAY9C,IAAItB,EAAUb,QAC1ByE,EAAKR,QAAQ9B,IAAI,CACbgI,SAAUlF,EAAY2F,aACtBnB,UAAWxE,EAAY4F,gBAK/B,IAAIwK,EAAQ1X,EAAE,QACd8G,EAAK2Q,mBAAmBC,GACxBA,EAAMlT,IAAItB,EAAUb,GAEpB,IAAIsV,EAAQ3X,EAAE,QACd8G,EAAK2Q,mBAAmBE,GACxBA,EAAMnT,IAAItB,EAAUb,EACxB,EAEA6N,yBAA0B,WACtB,IAAIpJ,EAAO/G,KACPuH,EAAcR,EAAKQ,YAEvB,GAAIA,IAAgBR,EAAKwF,UAMrB,OALAxF,EAAK8Q,qBAAqBtQ,QAC1BR,EAAKR,QAAQ9B,IAAI,CACbgI,SAAUlF,EAAYsE,MACtBE,UAAWxE,EAAYuE,SAK/B/E,EAAK8Q,qBAAqB5X,EAAE8H,SAASC,OACrCjB,EAAK8Q,qBAAqB5X,EAAE,QAChC,EAEAyX,mBAAoB,SAASI,GACzB,IAAI9X,KAAK+X,kBAAkBD,GAA3B,CAIA,IAAIE,EAAeF,EAASG,IAAI,GAAG1E,MAAM2E,SAEb,iBAAjBF,GACPF,EAAS5N,KAAK9G,EAAqB4U,EALvC,CAOJ,EAEAD,kBAAmB,SAASD,GACxB,MAAqD,iBAAvCA,EAAS5N,KAAK9G,EAChC,EAEAyU,qBAAsB,SAASC,GAC3B,IAAIE,EAAeF,EAAS5N,KAAK9G,GAEZ,OAAjB4U,GAAyBA,IAAiB9X,GAC1C4X,EAASrT,IAAItB,EAAU6U,GACvBF,EAASK,WAAW/U,IAEpB0U,EAASrT,IAAItB,EAAU,GAE/B,EAEAyN,YAAa,WACT,OAAO5Q,KAAKsG,QAAQsK,WACxB,EAEAoB,SAAU,WAmBN,OAlBAhS,KAAKoX,cAAc,YAAY,WAC3B,IAAIrQ,EAAO/G,KAEX+G,EAAKR,QAAQ9B,IAAI,CACbqH,OAAQ,GACRa,UAAW,KAGf5F,EAAKzC,QAAQsI,OAEb7F,EAAKT,QAAQuK,aAAc,CAC/B,IAEA7Q,KAAKuG,QAAQ8B,KAAK,mBAAoBrI,KAAKsE,QAAQ+D,KAAK,qBACxDrI,KAAKuG,QAAQ6B,SAASvG,GAEtB7B,KAAKwM,oBAEExM,IACX,EAEA6Q,YAAa,WACT,OAAO7Q,KAAKsG,QAAQuK,WACxB,EAEApG,IAAK,WACD,IAAI1D,EAAO/G,KACPoY,EAAMnY,EAAEG,QACRmG,EAAUQ,EAAKR,QACfD,EAAUS,EAAKT,QACfI,EAAWJ,EAAQI,SACnBf,EAAM3F,KAAKuH,YAAc/B,GAAYe,EAAQ,IAAIZ,IAAMtB,GAAMrE,KAAKuH,YAAa,kBAAoBlD,GAAMkC,EAAS,OAClHV,EAAO7F,KAAKuH,YAAc/B,GAAYe,EAAQ,IAAIV,KAAOxB,GAAMrE,KAAKuH,YAAa,mBAAqBlD,GAAMkC,EAAS,QAEzH,IAAKQ,EAAKT,QAAQsK,YAAa,CAC3BlK,EAASf,IAAMA,EACfe,EAASb,KAAOA,GAEZkB,EAAK+M,mBAAuB9T,KAAKuH,aAAoD,UAArCvH,KAAKuH,YAAY9C,IAAI,cAErEiC,EAASf,KAAOyS,EAAIjS,YACpBO,EAASb,MAAQuS,EAAIhS,aACrBW,EAAK+M,mBAAoB,GAG7BvN,EAAQ9B,IAAIxD,EAAOyF,EAAU,CAAEA,SAAU,WACzC,IAAI2R,EAAU9R,EAAQ+C,SAAS7H,GAAiBkG,KAAKpE,GAAuBgU,GAAG,GAC3Ec,EAAQlR,OAAS,GACjBtH,EAAMS,GAAGwO,KAAKuJ,EAAS,CAAEvJ,KAAM,UAGnC/H,EAAKwF,WAAY,EACjBxF,EAAKT,QAAQkE,QAAS,EAElBxK,KAAKuH,cACLjB,EAAQmG,SAAWnG,EAAQyF,UAAY3G,IACvCmB,EAAQ9B,IAAI,CACRgI,SAAU,GACVV,UAAW,KAGvB,CACJ,EAEA8F,MAAO,WACH,IAAI9K,EAAO/G,KACPoY,EAAMnY,EAAEG,QACRmG,EAAUQ,EAAKR,QACfD,EAAUS,EAAKT,QACfI,EAAWK,EAAKT,QAAQI,SACxBa,EAAcR,EAAKQ,YACnB5B,EAAMnB,SAAS+B,EAAQ9B,IAAI,OAAQ,IAAM2T,EAAIjS,YAC7CN,EAAOrB,SAAS+B,EAAQ9B,IAAI,QAAS,IAAM2T,EAAIhS,aAEnD,IAAKW,EAAKT,QAAQsK,YAAa,CAC3B7J,EAAKwF,WAAY,EACjBxF,EAAK+M,mBAAoB,EACzB/M,EAAKT,QAAQkE,QAAS,EAElBjD,IACAR,EAAKyF,oBAELlG,EAAQmG,SAAWxH,KAAKE,IAAIoC,EAAYsE,MAAOvF,EAAQmG,UACvDnG,EAAQyF,UAAY9G,KAAKE,IAAIoC,EAAYuE,OAASzH,GAAMkC,EAAS,eAAgBD,EAAQyF,WAEzFxF,EAAQ9B,IAAI,CACRgI,SAAUnG,EAAQmG,SAClBV,UAAWzF,EAAQyF,YAInBpG,EADAA,EAAM4B,EAAYb,SAASf,IACrBoB,EAAK+B,OACJnD,EAAM4B,EAAYb,SAASf,IAAM4B,EAAYuE,OAC9C/E,EAAKiC,OAELrD,EAAM4B,EAAYpB,aAAeoB,EAAYb,SAASf,IAAMtB,GAAMkD,EAAa,qBAIrF1B,EADAA,EAAO0B,EAAYb,SAASb,KACrBkB,EAAKgC,QACLlD,EAAO0B,EAAYb,SAASb,KAAO0B,EAAYsE,MAC/C9E,EAAKkC,QAELpD,EAAO0B,EAAYnB,cAAgBmB,EAAYb,SAASb,KAAOxB,GAAMkD,EAAa,uBAKjGb,EAASf,IAAMjB,GAAUiB,EAAKoB,EAAK+B,OAAQ/B,EAAKiC,QAChDtC,EAASb,KAAOnB,GAAUmB,EAAMkB,EAAKgC,QAAShC,EAAKkC,SAEnD1C,EAAQ9B,IAAIxD,EAAOyF,EAAU,CAAEA,SAAU,MACzC,IAAI2R,EAAU9R,EAAQ+C,SAAS7H,GAAiBkG,KAAKnE,GAAyB+T,GAAG,GAC7Ec,EAAQlR,OAAS,GACjBtH,EAAMS,GAAGwO,KAAKuJ,EAAS,CAAEvJ,KAAM,OAEvC,CACJ,EAEA9D,kBAAmB,WACf,IAKIwG,EAAGC,EALH1K,EAAO/G,KACPuG,EAAUQ,EAAKR,QACf+R,EAAMrY,EAAEG,QACRmY,EAAY1Y,EAAM+K,QAAQ2N,YAC1BpM,EAAgD,eAA7B5F,EAAQ9B,IAAI,cAGnC,GAAKsC,EAAKT,QAAQsK,YAAlB,CAIA,IAAIxE,EAAgBD,EAAmB9H,GAAMkC,EAAS,qBAAuBlC,GAAMkC,EAAS,sBAAwB,EAChH8F,EAAgBF,EAAmB9H,GAAMkC,EAAS,oBAAsBlC,GAAMkC,EAAS,uBAAyB,EAChH+F,EAAaH,EAAmB9H,GAAMkC,EAAS,eAAiB,EAEhEQ,EAAKQ,cAAgBR,EAAKwF,WAC1BiF,EAAIzK,EAAKQ,YAAY2F,aAAed,EACpCqF,EAAI1K,EAAKQ,YAAY4F,eAAiBd,EAAgBC,KAEtDkF,EAAI8G,EAAIzM,QAAU0M,EAAYnM,EAC9BqF,EAAI6G,EAAIxM,SAAWyM,GAAalM,EAAgBC,IAGpD/F,EAAQ9B,IAAI,CACRoH,MAAO2F,EACP1F,OAAQ2F,IAEZ1K,EAAKT,QAAQuF,MAAQ2F,EACrBzK,EAAKT,QAAQwF,OAAS2F,EAEtB1K,EAAK8G,QArBL,CAsBJ,EAEA1E,QAAS,SAAS7C,GACd,IAGI6P,EACAqC,EACA9Q,EALAX,EAAO/G,KACPyY,EAAc1R,EAAKT,QACnBhC,EAAUrE,EAAE8G,EAAKzC,SAiDrB,OA5CK5D,EAAc4F,KACfA,EAAU,CAAEoB,IAAKpB,IAGrBA,EAAUrF,EAAOwX,EAAY9R,QAASL,GAEtCkS,EAAarU,GAAQsU,EAAYtC,QAAUsC,EAAYtC,OAAS7P,EAAQ6P,QAExEzO,EAAMpB,EAAQoB,MAGLvD,GAAQqU,KACTA,GAAc1U,GAAW4D,IAGxB8Q,IAIDrC,EAAS7R,EAAQqD,KAAK,IAAM7F,GAAe,IAIvCqU,EAAOuC,IAAMhR,GAAOyO,EAAOuC,IAG3BpU,EAAQiL,KAAKpP,EAAUwY,aAAa1X,EAAO,CAAC,EAAGwX,EAAa,CAAE9R,QAASL,MAG3EhC,EAAQqD,KAAK,IAAM7F,GACdkM,IAAI,OAAS3M,GACboI,GAAG,OAASpI,EAAIrB,KAAK4Y,gBAAgBjP,KAAK3J,QAd/C+G,EAAK8R,aAAavS,KAiBlBA,EAAQnF,UAER4F,EAAKJ,QAAQxF,EAASmF,EAAQnF,SAAjBA,CAA2B,CAAC,IAG7C4F,EAAKqE,QAAQxI,IAGjB0B,EAAQwU,YAAY,2BAA4BN,GAEzCzR,CACX,EAEA6R,gBAAiB,WACb5Y,KAAKoL,QAAQxI,EACjB,EAEAmW,cAAe,WACXC,aAAahZ,KAAKiZ,qBAClBjZ,KAAKuG,QAAQoB,KAAKhE,GAAqBiI,YAAY7J,EACvD,EAEAmX,WAAY,SAASC,EAAKC,GACtBpZ,KAAKoL,QAAQlI,EAAO,CAAEkW,OAAQA,EAAQD,IAAKA,GAC/C,EAEAE,aAAc,SAASC,GACnB,OAAO,SAASpP,GACZ,IAAIqF,EAAOrF,EACPoP,IACA/J,EAAOpO,EAASmY,EAATnY,CAA0B+I,GAAQ,CAAC,IAG9ClK,KAAK2G,QAAQ4I,EAAMrF,GACnBlK,KAAKsE,QAAQiV,KAAK,YAAa,GAE/BvZ,KAAKoL,QAAQxI,EACjB,CACJ,EAEA4W,aAAc,WACVxZ,KAAKuG,QAAQoB,KAAKhE,GAAqByE,SAASrG,EACpD,EAEA8W,aAAc,SAASvS,GACnBtG,KAAKiZ,oBAAsBlC,WAAW/W,KAAKwZ,aAAa7P,KAAK3J,MAAO,KAEpEC,EAAEwZ,KAAKxY,EAAO,CACVqE,KAAM,MACNoU,SAAU,OACVC,OAAO,EACPC,MAAO5Z,KAAKkZ,WAAWvP,KAAK3J,MAC5BqV,SAAUrV,KAAK+Y,cAAcpP,KAAK3J,MAClC6Z,QAAS7Z,KAAKqZ,aAAa/S,EAAQnF,UAAUwI,KAAK3J,OACnDsG,GACP,EAEAwT,SAAU,WACF9Z,KAAK+N,UACL/N,KAAK+N,SAASE,UAGdjO,KAAKyO,UACLzO,KAAKyO,SAASR,UAGlBjO,KAAKuG,QAAQyH,IAAI3M,GACZiI,SAAS5H,GAAgBsM,IAAI3M,GAAI6V,MACjCvP,KAAK,uCAAuCqG,IAAI3M,GAErDpB,EAAEG,QAAQ4N,IAAI,SAAW3M,EAAKrB,KAAKiL,SACnChL,EAAEG,QAAQ4N,IAAI1M,GACdrB,EAAEG,QAAQ4N,IAAI3M,GAEd2X,aAAahZ,KAAKiZ,qBAElB5Y,EAAO+G,GAAG6G,QAAQ5G,KAAKrH,MAEvBA,KAAK+Z,OAAO7Z,GAEZL,EAAMoO,QAAQjO,KAAKuG,QACvB,EAEA0H,QAAS,WACLjO,KAAK8Z,WAED9Z,KAAKsG,QAAQ+C,OACbrJ,KAAKuV,gBAAe,GAGxBvV,KAAKuG,QAAQiO,QAAQ3M,SAErB7H,KAAKuG,QAAUvG,KAAKsH,SAAWtH,KAAKsE,QAAUrE,GAClD,EAEAqI,cAAe,WACX,IAEI0R,EACAzT,EAHA0T,EAAcja,KAAKsE,QACnBgC,EAAUtG,KAAKsG,QAGf4T,EAAQra,EAAM+K,QAAQsP,MAAMD,IAEL,IAAvB3T,EAAQ2J,YACRgK,EAAYxV,IAAI,WAAY,UAGhC8B,EAAUtG,EAAEE,EAAUoG,QAAQD,IAI9B0T,EAAsBC,EAAYtS,KAAK,gCAAgCyH,KAAI,WACvE,IAAIsJ,EAAM1Y,KAAKma,aAAa,OAE5B,OADAna,KAAK0Y,IAAM,GACJA,CACX,IAGAnS,EACKuS,YAAY,QAASoB,GACrB7R,KAAK,WAAY,GACjBK,OAAOuR,GACPtS,KAAK,gCAAgCzG,MAAK,SAASmN,GAEpDrO,KAAK0Y,IAAMsB,EAAoB3L,EACnC,IAEIrO,KAAKuH,YACLvH,KAAKuH,YAAY8M,QAAQ9N,GAClBvG,KAAKsH,UACZf,EAAQe,SAAStH,KAAKsH,UAG1Bf,EAAQoB,KAAK,mBACRlD,IAAIyV,EAAQ,OAAS,QAASrZ,EAAW0F,EAAQoB,KAAK,+BAAiC,IAE5FsS,EAAYxV,IAAI,aAAc,IAAI0Q,OAE9BlV,EAAEga,GAAaG,SAAS/X,IAExBpC,EAAEga,GAAarO,YAAYvJ,GAE/B4X,EAAYtS,KAAK,sBAAsBzG,MAAK,WACxC,IAAImZ,EAASpa,EAAED,MAAMkK,KAAK,eAEtBmQ,GACAA,EAAOlR,SAEf,IAEA5C,EAAU0T,EAAc,IAC5B,IA4BJ,SAASzL,GAAe8J,GACpB,IAAIvR,EAAO/G,KACX+G,EAAKuT,MAAQhC,EACbvR,EAAKwT,kBAAmB,EACxBxT,EAAKwD,WAAa,IAAI9J,EAAU6X,EAAI/R,QAAS,CACzCqB,OAAQ,IAAMjG,EACd6Y,MAAOlC,EAAI/R,QAAQO,GAAK,YACxB2T,UAAW1T,EAAK0T,UAAU9Q,KAAK5C,GAC/B2T,KAAM3T,EAAK2T,KAAK/Q,KAAK5C,GACrB4T,QAAS5T,EAAK4T,QAAQhR,KAAK5C,KAG/BA,EAAKwD,WAAWqQ,WAAWjR,KAAK,QAAS5C,EAAK8T,WAAWlR,KAAK5C,IAC9DA,EAAKwD,WAAWqQ,WAAWjR,KAAK,UAAW5C,EAAK+T,cAAcnR,KAAK5C,GACvE,CAmLA,SAAS2H,GAAe4J,EAAK3J,EAAYC,GACrC,IAAI7H,EAAO/G,KAOX+G,EAAKuT,MAAQhC,EACbvR,EAAKwT,kBAAmB,EACxBxT,EAAKwD,WAAa,IAAI9J,EAAU6X,EAAI/R,QAAS,CACzCqB,OAAQ+G,EACR6L,MAAOlC,EAAI/R,QAAQO,GAAK,UACxB8H,eAAgBA,EAChB6L,UAAW1T,EAAK0T,UAAU9Q,KAAK5C,GAC/B2T,KAAM3T,EAAK2T,KAAK/Q,KAAK5C,GACrB4T,QAAS5T,EAAK4T,QAAQhR,KAAK5C,GAC3BgU,WAAYhU,EAAKgU,WAAWpR,KAAK5C,KAGrCA,EAAKwD,WAAWqQ,WAAWzJ,iBAAkB,CACjD,CA/OAhR,EAAY,CACRoG,QAASpF,GAAS,IAAM,iCACxBkO,OAAQlO,GAAS,EAAGmO,OAAMR,WACtB,IAAIkM,GAAYlM,GAAQ,IAAIvJ,eAAiB+J,EAAK/J,cAGlD,MAFgB,WAAZyV,IAAyBA,EAAW,kBAEjCnb,EAAM0P,KAAK0L,aAAa,sEAAsE3L,eAAmB,CAAER,KAAMkM,EAAUE,SAAU,QAAS,IAEjK5G,SAAUnT,GAAS,EAAGoH,WAEd,+DAAgCA,gEAIxC+J,QAAS,gCACTqG,aAAcxX,GAAS,EAAGoH,QAAO5B,aAC7B,kCAAkC4B,aAAiBzG,WAC3C6E,EAAQe,qEAIpB6G,aAAcpN,GAAU+I,GAAS,2DAA2DA,eAoBhGsE,GAAe2M,UAAY,CACvBN,WAAY,WACR7a,KAAKsa,MAAM/T,QAAQmC,OAAOvI,EAAUmS,QACxC,EACAwI,cAAe,WACX9a,KAAKsa,MAAM/T,QAAQoB,KAAK/F,GAAUiG,QACtC,EACA4S,UAAW,SAAS/O,GAChB,IAAI3E,EAAO/G,KACPsY,EAAMvR,EAAKuT,MACX/T,EAAU+R,EAAI/R,QAGlB,GADAQ,EAAKwT,iBAAmBjC,EAAIlN,QAAQvI,IAChCkE,EAAKwT,iBAAT,CAIAxT,EAAKqU,eAAiB5W,SAAS+B,EAAQ9B,IAAI,eAAgB,IAC3DsC,EAAKsU,gBAAkBxb,EAAMoS,UAAU1L,EAAS,YAEhDQ,EAAKuU,gBAAkB5P,EAAEC,cAAc4N,KAAK,aAAatM,QAAQ,4BAA6B,IAE9FlG,EAAKwU,YAAc,CACf1P,MAAOtF,EAAQ1F,aACfiL,OAAQvF,EAAQxF,eAGpBuX,EAAI9L,oBAEJzF,EAAKyU,gBAAkBlD,EAAI/Q,YAAc+Q,EAAI/Q,YAAYb,SAAW7G,EAAMoS,UAAUqG,EAAIhR,UAExF,IAAItB,EAAeO,EAAQP,eAE3B,GAAIA,EAAa8B,GAAG,QAChBf,EAAKyU,gBAAgB7V,IAAMoB,EAAKyU,gBAAgB3V,KAAO,MACpD,CACH,IAAI4V,EAAYzV,EAAavB,IAAI,cAC7BiX,EAAa1V,EAAavB,IAAI,eAElC,IADiBZ,GAAK8X,KAAKF,KAAe5X,GAAK8X,KAAKD,GACrC,CACX,IAAIE,EAAkBpW,GAAYe,EAAQ,IACtCsV,EAAuBD,EAAgB/V,KAAOkB,EAAKyU,gBAAgB3V,KAAOkB,EAAKsU,gBAAgBxV,KAC/FiW,EAAsBF,EAAgBjW,IAAMoB,EAAKyU,gBAAgB7V,IAAMoB,EAAKsU,gBAAgB1V,IAEhGoB,EAAKgV,sBAAwBF,EAAuB,EAAIA,EAAuB,EAC/E9U,EAAKiV,qBAAuBF,EAAsB,EAAIA,EAAsB,EAE5E/U,EAAKsU,gBAAgBxV,MAAQkB,EAAKgV,sBAClChV,EAAKsU,gBAAgB1V,KAAOoB,EAAKiV,oBACrC,CACJ,CAEAzV,EACK+C,SAAS3H,GAAsByI,IAAIsB,EAAEC,eAAeiB,OAEzD3M,EAAEmB,GAAMqD,IAAIlC,EAAQmJ,EAAEC,cAAclH,IAAIlC,GAxCxC,CAyCJ,EACAmY,KAAM,SAAShP,GACX,IAAI1L,KAAKua,iBAAT,CAGA,IAaIjJ,EAAUC,EACV0K,EAAcC,EAddnV,EAAO/G,KACPsY,EAAMvR,EAAKuT,MACX/T,EAAU+R,EAAI/R,QACdD,EAAUgS,EAAIhS,QACdI,EAAWJ,EAAQI,SACnB4J,EAAYvJ,EAAKuU,gBACjBE,EAAkBzU,EAAKyU,gBACvBH,EAAkBtU,EAAKsU,gBACvBE,EAAcxU,EAAKwU,YACnB7E,EAAqB4B,EAAI/Q,cAAgB+Q,EAAI/L,UAC7C4P,EAAMtc,EAAM+K,QAAQsP,MAAM5B,EAAI/Q,aAC9B6U,EAAgB1F,GAAsByF,GAAO7D,EAAI/Q,YAAY2F,aAAeoL,EAAI/Q,YAAYsE,MAAQhM,EAAM+K,QAAQyC,YAAc,EAChIgP,EAAe3F,EAAqB,CAAE/Q,IAAK2S,EAAI/Q,YAAYpB,YAAaN,KAAMyS,EAAI/Q,YAAYnB,cAAiB,CAAET,IAAK,EAAGE,KAAM,GAG/HzB,EAAIa,KAAKC,IAAIwG,EAAEtH,EAAEkY,SAAU,GAC3BC,EAAItX,KAAKC,IAAIwG,EAAE6Q,EAAED,SAAU,GAEvBhM,EAAUtL,QAAQ,MAAQ,GAGtBsM,EADAgH,EAAI/Q,aAAenD,EAAImX,EAAY1P,OAASyM,EAAIrP,QAAUoT,EAAaxW,KAAO2V,EAAgB3V,KAAOuW,EAC1F9D,EAAIrP,QAAUmT,EAAgBf,EAAgBxV,KAAO0V,EAAY1P,MAAQwQ,EAAaxW,KAEtFzB,EAAIiX,EAAgBxV,KAAO2V,EAAgB3V,KAG1DU,EAAQ1F,WAAW6D,GAAU4M,EAAUhL,EAAQoG,SAAUpG,EAAQmG,YAC1D6D,EAAUtL,QAAQ,MAAQ,IAEjCsM,EAAW5M,IADXwX,EAAcb,EAAgBxV,KAAO0V,EAAY1P,MAAQ2P,EAAgB3V,MACtCzB,EAAGkC,EAAQoG,SAAUpG,EAAQmG,UAChE/F,EAASb,KAAOqW,EAAc5K,EAAWkK,EAAgB3V,KAAOuW,GAAiBrV,EAAKgV,uBAAyB,GAAKM,EAAaxW,KAE7HyS,EAAI/Q,aAAeb,EAASb,MAAQyS,EAAIvP,UACxCrC,EAASb,KAAOyS,EAAIvP,QACpBuI,EAAW5M,GAAUwX,EAAcE,EAAgB1V,EAASb,KAAO2V,EAAgB3V,KAAOwW,EAAaxW,KAAMS,EAAQoG,SAAUpG,EAAQmG,WAG3IlG,EAAQ9B,IAAI,CACRoB,KAAMa,EAASb,KACfgG,MAAOyF,KAIf,IAAIkL,EAAeD,EACfjE,EAAIhS,QAAQkE,SACZgS,GAAgBvc,EAAEG,QAAQ+F,aAE1BmK,EAAUtL,QAAQ,MAAQ,GAC1BuM,EAAYiL,EAAenB,EAAgB1V,IAAMoB,EAAKqU,eAAiBI,EAAgB7V,IAEnF6W,EAAejB,EAAYzP,OAAS/E,EAAKqU,gBAAkB9C,EAAItP,OAASwS,EAAgB7V,IAAM0W,EAAa1W,MAC3G4L,EAAY+G,EAAItP,OAASqS,EAAgB1V,IAAM4V,EAAYzP,OAASuQ,EAAa1W,KAGrFY,EAAQxF,YAAY2D,GAAU6M,EAAWjL,EAAQqG,UAAWrG,EAAQyF,aAC7DuE,EAAUtL,QAAQ,MAAQ,IAEjCuM,EAAY7M,IADZuX,EAAeZ,EAAgB1V,IAAM4V,EAAYzP,OAAS0P,EAAgB7V,KACrC6W,EAAclW,EAAQqG,UAAWrG,EAAQyF,WAC9ErF,EAASf,IAAMsW,EAAe1K,EAAYiK,EAAgB7V,KAAOoB,EAAKiV,sBAAwB,GAAKK,EAAa1W,IAE5Ge,EAASf,KAAO2S,EAAIxP,QAAUwP,EAAI/Q,cAClCb,EAASf,IAAM2S,EAAIxP,OACnByI,EAAY7M,GAAUuX,EAAevV,EAASf,IAAM6V,EAAgB7V,IAAM0W,EAAa1W,IAAKW,EAAQqG,UAAWrG,EAAQyF,YAG3HxF,EAAQ9B,IAAI,CACRkB,IAAKe,EAASf,IACdmG,OAAQyF,KAIZD,IACAgH,EAAIhS,QAAQuF,MAAQyF,EAAW,MAE/BC,IACA+G,EAAIhS,QAAQwF,OAASyF,EAAY,MAGrC+G,EAAIzK,QA/ER,CAgFJ,EACA8M,QAAS,SAASjP,GACd,IAAI1L,KAAKua,iBAAT,CAIA,IAAIxT,EAAO/G,KACPsY,EAAMvR,EAAKuT,MACX/T,EAAU+R,EAAI/R,QAkBlB,OAhBAA,EACK+C,SAAS3H,GAAsByI,IAAIsB,EAAEC,eAAewJ,OAEzDlV,EAAEmB,GAAMqD,IAAIlC,EAAQ,IAEhB+V,EAAIxN,eACJwN,EAAIxN,cAAc2R,QAGL,IAAb/Q,EAAEuF,SACF1K,EAAQ9B,IAAIsC,EAAKsU,iBACZ5W,IAAIsC,EAAKwU,aAGlBjD,EAAIlN,QAAQtI,IAEL,CAtBP,CAuBJ,EACAmL,QAAS,WACDjO,KAAKuK,YACLvK,KAAKuK,WAAW0D,UAGpBjO,KAAKuK,WAAavK,KAAKsa,MAAQ,IACnC,GA0BJ5L,GAAeyM,UAAY,CACvBV,UAAW,SAAS/O,GAChB,IAAI4M,EAAMtY,KAAKsa,MACX9S,EAAY8Q,EAAIhS,QAAQkB,UACxBlD,EAAUgU,EAAIhU,QACd4C,EAAU5C,EAAQqD,KAAK,8BACvB6T,EAAkB3b,EAAMoS,UAAUqG,EAAIhR,UAE1CtH,KAAKua,iBAAmBjC,EAAIlN,QAAQrI,KAAeyE,EAC/CxH,KAAKua,kBAAoBjC,EAAI1H,gBAIjC0H,EAAIoE,sBAAwB7c,EAAMoS,UAAUqG,EAAI/R,QAAS,YAEpD+R,EAAIqE,yBACLrE,EAAIhS,QAAQI,SAASb,KAAOnB,GAAU4T,EAAIoE,sBAAsB7W,KAAMyS,EAAIvP,QAASuP,EAAIrP,SACvFqP,EAAIhS,QAAQI,SAASf,IAAMjB,GAAU4T,EAAIoE,sBAAsB/W,IAAK2S,EAAIxP,OAAQwP,EAAItP,SAGxFsP,EAAIqE,uBAAyB,CACzB9W,KAAMyS,EAAIhS,QAAQI,SAASb,KAC3BF,IAAK2S,EAAIhS,QAAQI,SAASf,KAG9B2S,EAAIsE,cAAgB,CAChB/W,KAAM6F,EAAEtH,EAAEyY,OAASvE,EAAIoE,sBAAsB7W,KAC7CF,IAAK+F,EAAE6Q,EAAEM,OAASvE,EAAIoE,sBAAsB/W,KAGhD2S,EAAI9L,oBACC8L,EAAI/Q,cACDL,EAAQC,OAAS,EACjBmR,EAAIvP,QAAUlI,EAAWqG,GAAW1C,SAAS0C,EAAQzC,IAAI,SAAU,IAAM5D,EAAWyD,GAEpFgU,EAAIvP,QAAU,GAAKlI,EAAWyD,GAGlCgU,EAAIvP,SAAWyS,EAAgB3V,KAC/ByS,EAAIxP,QAAU0S,EAAgB7V,KAGlC1F,EAAEE,EAAUmS,SAAShL,SAASgR,EAAI/R,SAAS9B,IAAI,CAAE+E,QAAS,IAE1D8O,EAAI/R,QAAQ+C,SAAS3H,GAAsBiL,OAE3C3M,EAAEmB,GAAMqD,IAAIlC,EAAQmJ,EAAEC,cAAclH,IAAIlC,IAC5C,EAEAmY,KAAM,SAAShP,GACX,IAGI7F,EACAF,EAJA2S,EAAMtY,KAAKsa,MACX5T,EAAW4R,EAAIhS,QAAQI,SACvBoW,EAAOxE,EAAIhS,QAAQkB,UAAUsV,KAI7B9c,KAAKua,kBAAoBjC,EAAI1H,gBAI5BkM,GAA+B,MAAvBA,EAAKvX,gBACdM,EAAO6F,EAAEtH,EAAEyY,OAASvE,EAAIsE,cAAc/W,KAElCyS,EAAI/Q,cAAgB+Q,EAAI/L,YACxB1G,GAAQyS,EAAI/Q,YAAYnB,cAG5BM,EAASb,KAAOnB,GAAUmB,EAAMyS,EAAIvP,QAASuP,EAAIrP,UAGhD6T,GAA+B,MAAvBA,EAAKvX,gBACdI,EAAM+F,EAAE6Q,EAAEM,OAASvE,EAAIsE,cAAcjX,IAEjC2S,EAAI/Q,cAAgB+Q,EAAI/L,YACxB5G,GAAO2S,EAAI/Q,YAAYpB,aAG3BO,EAASf,IAAMjB,GAAUiB,EAAK2S,EAAIxP,OAAQwP,EAAItP,SAGlD/I,EAAEqY,EAAI/R,SAAS9B,IACX,YAAa,cACZiC,EAASb,KAAOyS,EAAIqE,uBAAuB9W,MAAQ,QACnDa,EAASf,IAAM2S,EAAIqE,uBAAuBhX,KAAO,OAG1D,EAEAoX,YAAa,WACT,IAAIzE,EAAMtY,KAAKsa,MAEfhC,EAAI/R,QACC+C,SAAS3H,GAAsB8V,QAAQa,EAAIhS,QAAQuK,aAAaqG,MAChEvP,KAAK/F,GAAUiG,SAEpB5H,EAAEmB,GAAMqD,IAAIlC,EAAQ,GACxB,EAEAwY,WAAY,SAASrP,GACb1L,KAAKua,mBAGTva,KAAK+c,cAELrR,EAAEC,cAAcxD,QAAQ5G,GAASkD,IAAIzE,KAAKsa,MAAMoC,uBACpD,EAEA/B,QAAS,WACL,IAAIrC,EAAMtY,KAAKsa,MAEf,IAAIta,KAAKua,mBAAoBjC,EAAI1H,cAYjC,OARA3Q,EAAEqY,EAAI/R,SACD9B,IAAI6T,EAAIhS,QAAQI,UAChBjC,IAAI,YAAa,IAEtBzE,KAAK+c,cAELzE,EAAIlN,QAAQpI,IAEL,CACX,EACAiL,QAAS,WACDjO,KAAKuK,YACLvK,KAAKuK,WAAW0D,UAGpBjO,KAAKuK,WAAavK,KAAKsa,MAAQ,IACnC,GAGJza,EAAMS,GAAG0c,OAAOjd,GAEnB,CAroED,CAqoEGK,OAAOP,MAAMod,QACpB,IAAIC,EAAUrd,MAEdP,EAAQ6d,SAtpES,CACTrW,GAAI,SACJwI,KAAM,SACN8N,SAAU,MACVC,YAAa,0EACbC,QAAS,CAAE,cAAe,QAAS,SACnCC,SAAU,CAAE,CACRzW,GAAI,YACJwI,KAAM,YACN+N,YAAa,wBACbC,QAAS,CAAE,SA6oEvBhe,EAAQke,QAAUN,EAElBO,OAAOC,eAAepe,EAAS,aAAc,CAAEqF,OAAO,GAEzD","ignoreList":[],"sourcesContent":["(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('kendo.draganddrop.js'), require('kendo.popup.js'), require('kendo.icons.js'), require('kendo.html.button.js')) :\n    typeof define === 'function' && define.amd ? define(['exports', 'kendo.draganddrop', 'kendo.popup', 'kendo.icons', 'kendo.html.button'], factory) :\n    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory((global.kendo = global.kendo || {}, global.kendo._globals = global.kendo._globals || {}, global.kendo._globals.Window = {})));\n})(this, (function (exports) {\n    const __meta__ = {\n            id: \"window\",\n            name: \"Window\",\n            category: \"web\",\n            description: \"The Window widget displays content in a modal or non-modal HTML window.\",\n            depends: [ \"draganddrop\", \"popup\", \"icons\" ],\n            features: [ {\n                id: \"window-fx\",\n                name: \"Animation\",\n                description: \"Support for animation\",\n                depends: [ \"fx\" ]\n            } ]\n        };\n\n        (function($, undefined$1) {\n            var kendo = window.kendo,\n                Widget = kendo.ui.Widget,\n                TabKeyTrap = kendo.ui.Popup.TabKeyTrap,\n                Draggable = kendo.ui.Draggable,\n                isPlainObject = $.isPlainObject,\n                activeElement = kendo._activeElement,\n                outerWidth = kendo._outerWidth,\n                outerHeight = kendo._outerHeight,\n                extend = $.extend,\n                each = $.each,\n                template = kendo.template,\n                BODY = \"body\",\n                templates,\n                NS = \".kendoWindow\",\n                MODAL_NS = \".kendoWindowModal\",\n                // classNames\n                KWINDOW = \".k-window\",\n                KWINDOWTITLE = \".k-window-title\",\n                KWINDOWTITLEBAR = KWINDOWTITLE + \"bar\",\n                KWINDOWCONTENT = \".k-window-content\",\n                KDIALOGCONTENT = \".k-dialog-content\",\n                KWINDOWRESIZEHANDLES = \".k-resize-handle\",\n                KOVERLAY = \".k-overlay\",\n                KWINDOWMINIMIZED = \"k-window-minimized\",\n                KCONTENTFRAME = \"k-content-frame\",\n                LOADINGICONCLASS = \"k-i-loading\",\n                KHOVERSTATE = \"k-hover\",\n                KFOCUSEDSTATE = \"k-focus\",\n                MAXIMIZEDSTATE = \"k-window-maximized\",\n                INLINE_FLEX = \"k-display-inline-flex\",\n                // constants\n                VISIBLE = \":visible\",\n                KHIDDEN = \"k-hidden\",\n                HIDDEN = \"hidden\",\n                CURSOR = \"cursor\",\n                // events\n                OPEN = \"open\",\n                ACTIVATE = \"activate\",\n                DEACTIVATE = \"deactivate\",\n                CLOSE = \"close\",\n                REFRESH = \"refresh\",\n                MINIMIZE = \"minimize\",\n                MAXIMIZE = \"maximize\",\n                RESIZESTART = \"resizeStart\",\n                RESIZE = \"resize\",\n                RESIZEEND = \"resizeEnd\",\n                DRAGSTART = \"dragstart\",\n                DRAGEND = \"dragend\",\n                RESTORE = \"restore\",\n                KENDOKEYDOWN = \"kendoKeydown\",\n                ERROR = \"error\",\n                OVERFLOW = \"overflow\",\n                DATADOCOVERFLOWRULE = \"original-overflow-rule\",\n                ZINDEX = \"zIndex\",\n                MINIMIZE_MAXIMIZEICONSELECTORS = \".k-window-titlebar-actions .k-i-window-minimize,.k-window-titlebar-actions .k-i-window,.k-window-titlebar-actions .k-svg-i-window-minimize,.k-window-titlebar-actions .k-svg-i-window\",\n                KPINICONCLASSSELECTOR = \".k-i-pin,.k-svg-i-pin\",\n                KUNPINICONCLASSSELECTOR = \".k-i-unpin,.k-svg-i-unpin\",\n                PIN_UNPINICONCLASSSELECTOR = KPINICONCLASSSELECTOR + \",\" + KUNPINICONCLASSSELECTOR,\n                TITLEBAR_BUTTONSSELECTOR = \".k-window-titlebar .k-window-titlebar-action\",\n                REFRESHICONSELECTOR = \".k-window-titlebar .k-i-arrow-rotate-cw,.k-window-titlebar .k-svg-i-arrow-rotate-cw\",\n                WINDOWEVENTSHANDLED = \"WindowEventsHandled\",\n                zero = /^0[a-z]*$/i,\n                isLocalUrl = kendo.isLocalUrl,\n                SIZE = {\n                    small: \"k-window-sm\",\n                    medium: \"k-window-md\",\n                    large: \"k-window-lg\"\n                };\n\n            function defined(x) {\n                return (typeof x != \"undefined\");\n            }\n\n            function toInt(element, property) {\n                return parseInt(element.css(property), 10) || 0;\n            }\n\n            function constrain(value, low, high) {\n                var normalizedValue;\n\n                if (value && isNaN(value) && value.toString().indexOf(\"px\") < 0) {\n                    normalizedValue = value;\n                } else {\n                    normalizedValue = Math.max(\n                        Math.min(parseInt(value, 10), high === Infinity ? high : parseInt(high, 10)),\n                        low === -Infinity ? low : parseInt(low, 10)\n                    );\n                }\n\n                return normalizedValue;\n            }\n\n            function executableScript() {\n                return !this.type || this.type.toLowerCase().indexOf(\"script\") >= 0;\n            }\n\n\n            function getPosition(elem) {\n                var result = { top: elem.offsetTop, left: elem.offsetLeft },\n                    parent = elem.offsetParent;\n\n                while (parent) {\n                    result.top += parent.offsetTop;\n                    result.left += parent.offsetLeft;\n\n                    var parentOverflowX = $(parent).css(\"overflowX\");\n                    var parentOverflowY = $(parent).css(\"overflowY\");\n\n                    if (parentOverflowY === \"auto\" || parentOverflowY === \"scroll\") {\n                        result.top -= parent.scrollTop;\n                    }\n\n                    if (parentOverflowX === \"auto\" || parentOverflowX === \"scroll\") {\n                        result.left -= parent.scrollLeft;\n                    }\n\n                    parent = parent.offsetParent;\n                }\n\n                return result;\n            }\n\n            var Window = Widget.extend({\n                init: function(element, options) {\n                    var that = this,\n                        wrapper,\n                        offset = {},\n                        visibility, display, position,\n                        isVisible = false,\n                        content,\n                        windowContent,\n                        windowFrame,\n                        globalWindow,\n                        suppressActions = options && options.actions && !options.actions.length,\n                        id;\n\n                    Widget.fn.init.call(that, element, options);\n                    options = that.options;\n                    position = options.position;\n                    element = that.element;\n                    content = options.content;\n                    globalWindow = $(window);\n\n                    if (suppressActions) {\n                        options.actions = [];\n                    }\n\n                    that.appendTo = $(options.appendTo);\n\n                    that.containment = options.draggable.containment ? $(options.draggable.containment).first() : null;\n\n                    if (content && !isPlainObject(content)) {\n                        content = options.content = { url: content };\n                    }\n\n                    // remove script blocks to prevent double-execution\n                    element.find(\"script\").filter(executableScript).remove();\n\n                    if (!element.parent().is(that.appendTo) && !that.containment && (position.top === undefined$1 || position.left === undefined$1)) {\n                        if (element.is(VISIBLE)) {\n                            offset = element.offset();\n                            isVisible = true;\n                        } else {\n                            visibility = element.css(\"visibility\");\n                            display = element.css(\"display\");\n\n                            element.css({ visibility: HIDDEN, display: \"\" });\n\n                            if (document.body.contains(element[0])) {\n                                offset = element.offset();\n                            } else {\n                                offset = { top: 0, left: 0 };\n                            }\n\n                            element.css({ visibility: visibility, display: display });\n                        }\n\n                        if (position.top === undefined$1) {\n                            position.top = offset.top;\n                        }\n                        if (position.left === undefined$1) {\n                            position.left = offset.left;\n                        }\n                    }\n\n                    if (!defined(options.visible) || options.visible === null) {\n                        options.visible = element.is(VISIBLE);\n                    }\n\n                    wrapper = that.wrapper = element.closest(KWINDOW);\n\n                    if (!element.is(\".k-window-content\") || !wrapper[0]) {\n                        element.addClass(\"k-window-content\");\n                        element.attr(\"tabindex\", 0);\n                        that._createWindow(element, options);\n                        wrapper = that.wrapper = element.closest(KWINDOW);\n\n                        that.title(that.options.title);\n                        that._dimensions();\n\n                        if (options._footerTemplate) {\n                            that.wrapper.append(kendo.template(options._footerTemplate)(options._footerMessages));\n                        }\n                    }\n\n                    if (options.themeColor && options.themeColor !== \"none\") {\n                        wrapper.addClass(kendo.getValidCssClass(\"k-window-\", \"themeColor\", options.themeColor));\n                    }\n\n                    that.minTop = that.minLeft = -Infinity;\n                    that.maxTop = that.maxLeft = Infinity;\n                    that._position();\n\n                    if (content) {\n                        that.refresh(content);\n                    }\n\n                    if (options.visible) {\n                        that.toFront(null, !options.modal);\n                    }\n\n                    windowContent = wrapper.children(KWINDOWCONTENT);\n\n                    if (options.visible && options.modal) {\n                        that._overlay(wrapper.is(VISIBLE)).css({ opacity: 0.5 });\n                    }\n\n                    wrapper\n                        .on(\"mouseenter\" + NS, TITLEBAR_BUTTONSSELECTOR, that._buttonEnter.bind(that))\n                        .on(\"mouseleave\" + NS, TITLEBAR_BUTTONSSELECTOR, that._buttonLeave.bind(that))\n                        .on(\"click\" + NS, \"> \" + TITLEBAR_BUTTONSSELECTOR, that._windowActionHandler.bind(that))\n                        .on(\"keydown\" + NS, that, that._keydown.bind(that))\n                        .on(\"focus\" + NS, that._focus.bind(that))\n                        .on(\"blur\" + NS, that._blur.bind(that));\n\n                    windowContent\n                        .on(\"keydown\" + NS, that, that._keydownContent.bind(that));\n\n                    windowFrame = windowContent.find(\".\" + KCONTENTFRAME)[0];\n\n                    if (windowFrame && !globalWindow.data(WINDOWEVENTSHANDLED)) {\n\n                        globalWindow.on(\"blur\" + NS, function() {\n                            var element = $(document.activeElement).parent(KWINDOWCONTENT);\n                            if (element.length) {\n                                var windowInstance = kendo.widgetInstance(element);\n                                windowInstance._focus();\n                            }\n                        });\n\n                        globalWindow.on(\"focus\" + NS, function() {\n                            $(KWINDOWCONTENT).not(KDIALOGCONTENT).each(function(i, element) {\n                                kendo.widgetInstance($(element))._blur();\n                            });\n                        });\n\n                        globalWindow.data(WINDOWEVENTSHANDLED, true);\n                    }\n\n                    this._resizable();\n\n                    this._draggable();\n\n                    if (options.pinned && this.wrapper.is(\":visible\")) {\n                        that.pin();\n                    }\n\n                    id = element.attr(\"id\");\n                    if (id) {\n                        id = id + \"_wnd_title\";\n                        wrapper.attr({\n                                \"role\": \"dialog\",\n                                \"aria-labelledby\": id\n                            }).children(KWINDOWTITLEBAR)\n                            .children(KWINDOWTITLE)\n                            .attr(\"id\", id);\n                    }\n\n                    wrapper.add(wrapper.children(\".k-resize-handle,\" + KWINDOWTITLEBAR))\n                        .on(kendo.support.mousedown + NS, that.toFront.bind(that));\n\n                    that.touchScroller = kendo.touchScroller(element);\n\n                    that._resizeHandler = that._onDocumentResize.bind(that);\n\n                    that._marker = kendo.guid().substring(0, 8);\n\n                    $(window).on(\"resize\" + NS + that._marker, that._resizeHandler);\n\n                    if (options.visible) {\n                        that.trigger(OPEN);\n                        that.trigger(ACTIVATE);\n                    }\n\n                    kendo.notify(that);\n\n                    if (this.options.modal) {\n                        this._tabKeyTrap = new TabKeyTrap(wrapper);\n                        this._tabKeyTrap.trap();\n                        this._tabKeyTrap.shouldTrap = function() {\n                            return wrapper.data(\"isFront\");\n                        };\n                    }\n\n                    if (that._showWatermarkOverlay) {\n                        that._showWatermarkOverlay(that.wrapper[0]);\n                    }\n                },\n\n                _buttonEnter: function(e) {\n                    $(e.currentTarget).addClass(KHOVERSTATE);\n                },\n\n                _buttonLeave: function(e) {\n                    $(e.currentTarget).removeClass(KHOVERSTATE);\n                },\n\n                _focus: function() {\n                    this.wrapper.addClass(KFOCUSEDSTATE);\n                },\n\n                _blur: function() {\n                    this.wrapper.removeClass(KFOCUSEDSTATE);\n                },\n\n                _dimensions: function() {\n                    var wrapper = this.wrapper;\n                    var options = this.options;\n                    var width = options.width;\n                    var height = options.height;\n                    var maxHeight = options.maxHeight;\n                    var sizeClass = options.size;\n                    var dimensions = [\"minWidth\",\"minHeight\",\"maxWidth\",\"maxHeight\"];\n                    var contentBoxSizing = wrapper.css(\"box-sizing\") == \"content-box\";\n\n                    var lrBorderWidth = contentBoxSizing ? toInt(wrapper, \"border-left-width\") + toInt(wrapper, \"border-right-width\") : 0;\n                    var tbBorderWidth = contentBoxSizing ? toInt(wrapper, \"border-top-width\") + toInt(wrapper, \"border-bottom-width\") : 0;\n                    var paddingTop = contentBoxSizing ? toInt(wrapper, \"padding-top\") : 0;\n\n                    if (this.containment && !this._isPinned) {\n                        this._updateBoundaries();\n                        options.maxHeight = Math.min(this.containment.height - (tbBorderWidth + paddingTop), maxHeight);\n                        options.maxWidth = Math.min(this.containment.width - lrBorderWidth, options.maxWidth);\n                    }\n\n                    for (var i = 0; i < dimensions.length; i++) {\n                        var value = options[dimensions[i]] || \"\";\n                        if (value != Infinity) {\n                            wrapper.css(dimensions[i], value);\n                        }\n                    }\n\n                    if (maxHeight != Infinity) {\n                        this.element.css(\"maxHeight\", maxHeight);\n                    }\n\n                    if (width) {\n                        wrapper.outerWidth(constrain(width, options.minWidth, options.maxWidth));\n                    }\n                    else {\n                        wrapper.outerWidth(\"\");\n                    }\n\n                    if (height) {\n                        wrapper.outerHeight(constrain(height, options.minHeight, options.maxHeight));\n                    }\n                    else {\n                        wrapper.outerHeight(\"\");\n                    }\n\n                    if (!options.visible) {\n                        wrapper.removeClass(INLINE_FLEX).hide();\n                    }\n\n                    if (sizeClass && SIZE[sizeClass]) {\n                        wrapper.addClass(SIZE[sizeClass]);\n                    }\n                },\n\n                _position: function() {\n                    var wrapper = this.wrapper,\n                        position = this.options.position,\n                        containmentTop, containmentLeft;\n\n                    this._updateBoundaries();\n\n                    if (this.containment) {\n                        position.top = position.top || 0;\n                        position.left = position.left || 0;\n\n                        containmentTop = position.top.toString().indexOf(\"%\") > 0 ?\n                            parseInt(this.containment.height * (parseFloat(position.top) / 100), 10) :\n                            position.top;\n\n                        containmentLeft = position.left.toString().indexOf(\"%\") > 0 ?\n                            parseInt(this.containment.width * (parseFloat(position.left) / 100), 10) :\n                            position.left;\n\n                        position.top = constrain(containmentTop, this.minTop, this.maxTop);\n                        position.left = constrain(containmentLeft, this.minLeft, this.maxLeft);\n                    }\n\n                    if (position.top && position.top.toString().indexOf(\"px\") > 0) {\n                        position.top = Number(position.top.replace(\"px\", \"\"));\n                    }\n\n                    if (position.left && position.left.toString().indexOf(\"px\") > 0) {\n                        position.left = Number(position.left.replace(\"px\", \"\"));\n                    }\n\n                    if (position.top === 0) {\n                        position.top = position.top.toString();\n                    }\n\n                    if (position.left === 0) {\n                        position.left = position.left.toString();\n                    }\n\n                    wrapper.css({\n                        top: position.top || \"\",\n                        left: position.left || \"\"\n                    });\n                },\n\n                _updateBoundaries: function() {\n                    var containment = this.containment;\n\n                    if (!containment) {\n                        return null;\n                    }\n\n                    containment.width = containment.innerWidth();\n                    containment.height = containment.innerHeight();\n\n                    if (parseInt(containment.width, 10) > containment[0].clientWidth) {\n                        containment.width -= kendo.support.scrollbar();\n                    }\n\n                    if (parseInt(containment.height, 10) > containment[0].clientHeight) {\n                        containment.height -= kendo.support.scrollbar();\n                    }\n\n                    containment.position = getPosition(containment[0]);\n\n                    if (this._isPinned) {\n                        this.minTop = this.minLeft = -Infinity;\n                        this.maxTop = this.maxLeft = Infinity;\n                    } else {\n                        this.minTop = containment.scrollTop();\n                        this.minLeft = containment.scrollLeft();\n                        this.maxLeft = this.minLeft + containment.width - outerWidth(this.wrapper, true);\n                        this.maxTop = this.minTop + containment.height - outerHeight(this.wrapper, true);\n                    }\n                },\n\n                _animationOptions: function(id) {\n                    var animation = this.options.animation;\n                    var basicAnimation = {\n                        open: { effects: {} },\n                        close: { hide: true, effects: {} }\n                    };\n\n                    return animation && animation[id] || basicAnimation[id];\n                },\n\n                _resize: function() {\n                    kendo.resize(this.element.children());\n                },\n\n                _resizable: function() {\n                    var resizable = this.options.resizable;\n                    var wrapper = this.wrapper;\n\n                    if (this.resizing) {\n                        wrapper\n                            .off(\"dblclick\" + NS)\n                            .children(KWINDOWRESIZEHANDLES).remove();\n\n                        this.resizing.destroy();\n                        this.resizing = null;\n                    }\n\n                    if (resizable) {\n                        wrapper.on(\"dblclick\" + NS, KWINDOWTITLEBAR, (function(e) {\n                            if (!$(e.target).closest(\".k-window-titlebar-action\").length) {\n                                this.toggleMaximization();\n                            }\n                        }).bind(this));\n\n                        each(\"n e s w se sw ne nw\".split(\" \"), function(index, handler) {\n                            wrapper.append(templates.resizeHandle(handler));\n                        });\n\n                        this.resizing = new WindowResizing(this);\n                    }\n\n                    wrapper = null;\n                },\n\n                _draggable: function() {\n                    var draggable = this.options.draggable;\n\n                    if (this.dragging) {\n                        this.dragging.destroy();\n                        this.dragging = null;\n                    }\n                    if (draggable) {\n                        this.dragging = new WindowDragging(this, draggable.dragHandle || KWINDOWTITLEBAR, draggable.clickMoveClick);\n                    }\n                },\n\n                _actions: function() {\n                    var options = this.options;\n                    var actions = options.actions;\n                    var pinned = options.pinned;\n                    var titlebar = this.wrapper.children(KWINDOWTITLEBAR);\n                    var container = titlebar.find(\".k-window-titlebar-actions\");\n                    var windowSpecificCommands = [ \"minimize\", \"maximize\" ];\n                    var icons = {\n                        \"maximize\": \"window\",\n                        \"refresh\": \"arrow-rotate-cw\",\n                        \"custom\": \"gear\"\n                    };\n                    var icon;\n\n                    actions = $.map(actions, function(action) {\n                        action = pinned && action.toLowerCase() === \"pin\" ? \"unpin\" : action;\n                        icon = icons[action.toLowerCase()] || \"\";\n                        return { name: (windowSpecificCommands.indexOf(action.toLowerCase()) > - 1) ? \"window-\" + action : action, icon: action.toLowerCase() == \"close\" ? \"x\" : icon };\n                    });\n\n                    container.html(kendo.render(templates.action, actions));\n                },\n\n                setOptions: function(options) {\n                    var that = this;\n                    var sizeClass = that.options.size;\n                    var doc = this.containment && !that._isPinned ? this.containment : $(document);\n                    // make a deep extend over options.position telerik/kendo-ui-core#844\n                    var cachedOptions = JSON.parse(JSON.stringify(options));\n\n                    that.wrapper.removeClass(kendo.getValidCssClass(\"k-window-\", \"themeColor\", that.options.themeColor));\n\n                    extend(options.position, that.options.position);\n                    extend(options.position, cachedOptions.position);\n\n                    that._containerScrollTop = doc.scrollTop();\n                    that._containerScrollLeft = doc.scrollLeft();\n\n                    Widget.fn.setOptions.call(that, options);\n                    var scrollable = that.options.scrollable !== false;\n\n                    that.restore();\n\n                    if (typeof options.title !== \"undefined\") {\n                        that.title(options.title);\n                    }\n\n                    that.wrapper.removeClass(SIZE[sizeClass]);\n                    that._dimensions();\n\n                    that._position();\n                    that._resizable();\n                    that._draggable();\n                    that._actions();\n\n                    if (that.options.themeColor && that.options.themeColor !== \"none\") {\n                        that.wrapper.addClass(kendo.getValidCssClass(\"k-window-\", \"themeColor\", that.options.themeColor));\n                    }\n\n                    if (typeof options.modal !== \"undefined\") {\n                        var visible = that.options.visible !== false;\n                        that._enableDocumentScrolling();\n                        that._overlay(options.modal && visible);\n                    }\n\n                    that.element.css(OVERFLOW, scrollable ? \"\" : \"hidden\");\n                },\n\n                events: [\n                    OPEN,\n                    ACTIVATE,\n                    DEACTIVATE,\n                    CLOSE,\n                    MINIMIZE,\n                    MAXIMIZE,\n                    REFRESH,\n                    RESTORE,\n                    RESIZESTART,\n                    RESIZE,\n                    RESIZEEND,\n                    DRAGSTART,\n                    DRAGEND,\n                    KENDOKEYDOWN,\n                    ERROR\n                ],\n\n                options: {\n                    name: \"Window\",\n                    animation: {\n                        open: {\n                            effects: { zoom: { direction: \"in\" }, fade: { direction: \"in\" } },\n                            duration: 350\n                        },\n                        close: {\n                            effects: { zoom: { direction: \"out\", properties: { scale: 0.7 } }, fade: { direction: \"out\" } },\n                            duration: 350,\n                            hide: true\n                        }\n                    },\n                    title: \"\",\n                    themeColor: \"\",\n                    actions: [\"Close\"],\n                    autoFocus: true,\n                    modal: false,\n                    size: \"auto\",\n                    resizable: true,\n                    draggable: true,\n                    minWidth: 90,\n                    minHeight: 50,\n                    maxWidth: Infinity,\n                    maxHeight: Infinity,\n                    pinned: false,\n                    scrollable: true,\n                    position: {},\n                    content: null,\n                    visible: null,\n                    height: null,\n                    width: null,\n                    appendTo: \"body\",\n                    isMaximized: false,\n                    isMinimized: false\n                },\n\n                _closable: function() {\n                    return $.inArray(\"close\", $.map(this.options.actions, function(x) { return x.toLowerCase(); })) > -1;\n                },\n\n                _keydownContent: function(e) {\n                    var that = this,\n                        keys = kendo.keys,\n                        keyCode = e.keyCode;\n\n                    if (keyCode == keys.ESC && that._closable()) {\n                        e.stopPropagation();\n                        that._close(false);\n                    }\n                },\n\n                _keydown: function(e) {\n                    var that = this,\n                        options = that.options,\n                        keys = kendo.keys,\n                        keyCode = e.keyCode,\n                        wrapper = that.wrapper,\n                        offset, handled,\n                        distance = 10,\n                        isMaximized = options.isMaximized,\n                        isMinimized = options.isMinimized,\n                        newWidth, newHeight, w, h;\n\n                    if (keyCode == keys.ESC && that._closable()) {\n                        e.stopPropagation();\n                        that._close(false);\n                    }\n\n                    if (e.target != e.currentTarget || that._closing) {\n                        return;\n                    }\n\n                     // Refresh\n                    if (e.altKey && keyCode == 82) {// Alt + R\n                        that.refresh();\n                    }\n\n                    // Pin/Unpin\n                    if (e.altKey && keyCode == 80) {// Alt + P\n                        if (that.options.pinned) {\n                            that.unpin();\n                        } else {\n                            that.pin();\n                        }\n                    }\n\n                    // Maximize/Restore/Miminimize\n                    if (e.altKey && keyCode == keys.UP) {\n                        if (isMinimized) {\n                            that.restore();\n                            that.wrapper.trigger(\"focus\");\n                        } else if (!isMaximized) {\n                            that.maximize();\n                            that.wrapper.trigger(\"focus\");\n                        }\n                    } else if (e.altKey && keyCode == keys.DOWN) {\n                        if (!isMinimized && !isMaximized) {\n                            that.minimize();\n                            that.wrapper.trigger(\"focus\");\n                        } else if (isMaximized) {\n                            that.restore();\n                            that.wrapper.trigger(\"focus\");\n                        }\n                    }\n\n                    offset = kendo.getOffset(wrapper);\n\n                    if (that.containment && !that._isPinned) {\n                        offset = that.options.position;\n                    }\n\n                    if (options.draggable && !e.ctrlKey && !e.altKey && !isMaximized) {\n                        that._updateBoundaries();\n                        if (keyCode == keys.UP) {\n                            offset.top = constrain(offset.top - distance, that.minTop, that.maxTop);\n                            handled = wrapper.css(\"top\", offset.top);\n                        } else if (keyCode == keys.DOWN) {\n                            offset.top = constrain(offset.top + distance, that.minTop, that.maxTop);\n                            handled = wrapper.css(\"top\", offset.top);\n                        } else if (keyCode == keys.LEFT) {\n                            offset.left = constrain(offset.left - distance, that.minLeft, that.maxLeft);\n                            handled = wrapper.css(\"left\", offset.left);\n                        } else if (keyCode == keys.RIGHT) {\n                            offset.left = constrain(offset.left + distance, that.minLeft, that.maxLeft);\n                            handled = wrapper.css(\"left\", offset.left);\n                        }\n                    }\n\n                    if (options.resizable && e.ctrlKey && !isMaximized && !isMinimized) {\n                        if (keyCode == keys.UP) {\n                            handled = true;\n                            newHeight = wrapper.outerHeight() - distance;\n                        } else if (keyCode == keys.DOWN) {\n                            handled = true;\n                            if (that.containment && !that._isPinned) {\n                                newHeight = Math.min(wrapper.outerHeight() + distance,\n                                    that.containment.height - offset.top - toInt(wrapper, \"padding-top\") -\n                                    toInt(wrapper, \"borderBottomWidth\") - toInt(wrapper, \"borderTopWidth\"));\n                            } else {\n                                newHeight = wrapper.outerHeight() + distance;\n                            }\n                        } else if (keyCode == keys.LEFT) {\n                            handled = true;\n                            newWidth = wrapper.outerWidth() - distance;\n                        } else if (keyCode == keys.RIGHT) {\n                            handled = true;\n                            if (that.containment && !that._isPinned) {\n                                newWidth = Math.min(wrapper.outerWidth() + distance,\n                                                    that.containment.width - offset.left -\n                                                    toInt(wrapper, \"borderLeftWidth\") - toInt(wrapper, \"borderRightWidth\"));\n                            } else {\n                                newWidth = wrapper.outerWidth() + distance;\n                            }\n                        }\n\n                        if (handled) {\n                            w = constrain(newWidth, options.minWidth, options.maxWidth);\n                            h = constrain(newHeight, options.minHeight, options.maxHeight);\n\n                            if (!isNaN(w)) {\n                                wrapper.outerWidth(w);\n                                that.options.width = w + \"px\";\n                            }\n                            if (!isNaN(h)) {\n                                wrapper.outerHeight(h);\n                                that.options.height = h + \"px\";\n                            }\n\n                            that.resize();\n                        }\n                    }\n\n                    if (handled) {\n                        e.preventDefault();\n                    }\n                },\n\n                _overlay: function(visible) {\n                    var overlay = this.containment ? this.containment.children(KOVERLAY) : this.appendTo.children(KOVERLAY),\n                        wrapper = this.wrapper,\n                        display = visible ? \"inline-flex\" : \"none\",\n                        zIndex = parseInt(wrapper.css(ZINDEX), 10) - 1;\n\n                    if (!overlay.length) {\n                        overlay = $(\"<div class='k-overlay' />\");\n                    }\n\n                    overlay\n                        .insertBefore(wrapper[0])\n                        .css({\n                            zIndex: zIndex,\n                            display: display\n                        });\n\n                    if (this.options.modal.preventScroll && !this.containment) {\n                        this._stopDocumentScrolling();\n                    }\n\n                    return overlay;\n                },\n\n                _actionForIcon: function(icon) {\n                    var iconClass = /\\bk(-svg)?-i(-\\w+)+\\b/.exec(icon[0].className)[0];\n                    return {\n                        \"x\": \"_close\",\n                        \"window\": \"maximize\",\n                        \"window-minimize\": \"minimize\",\n                        \"window-restore\": \"restore\",\n                        \"arrow-rotate-cw\": \"refresh\",\n                        \"pin\": \"pin\",\n                        \"unpin\": \"unpin\"\n                    }[iconClass.replace(/(k-i-|k-svg-i-)/, \"\")];\n                },\n\n                _windowActionHandler: function(e) {\n                    if (this._closing) {\n                        return;\n                    }\n                    var icon = $(e.target).closest(\".k-window-titlebar-action\").find(\".k-icon,.k-svg-icon\");\n                    var action = this._actionForIcon(icon);\n\n                    if (action) {\n                        e.preventDefault();\n                        this[action]();\n                        return false;\n                    }\n                },\n\n                _modals: function() {\n                    var that = this,\n                        windowElements = $(KWINDOW + VISIBLE),\n                        windowInstance,\n                        modals = [];\n\n                    for (var i = 0; i < windowElements.length; i += 1) {\n                        windowInstance = that._object($(windowElements[i]));\n\n                        if (windowInstance &&\n                            windowInstance.options &&\n                            windowInstance.options.modal &&\n                            windowInstance.options.visible &&\n                            windowInstance.options.appendTo === that.options.appendTo &&\n                            (!windowInstance.containment || (that.containment && windowInstance.containment[0] === that.containment[0]))) {\n                                modals.push(windowInstance.wrapper[0]);\n                        }\n                    }\n\n                    modals.sort(function(a, b) {\n                        return a.style.zIndex - b.style.zIndex;\n                    });\n\n                    that = null;\n\n                    return $(modals);\n                },\n\n                _object: function(element) {\n                    var content = element.children(KWINDOWCONTENT);\n                    var widget = content.getKendoWindow();\n\n                    if (widget) {\n                        return widget;\n                    }\n\n                    return undefined$1;\n                },\n\n                center: function() {\n                    var that = this,\n                        position = that.options.position,\n                        wrapper = that.wrapper,\n                        documentWindow = $(window),\n                        scrollTop = 0,\n                        scrollLeft = 0,\n                        newTop, newLeft;\n\n                    if (that.options.isMaximized) {\n                        return that;\n                    }\n\n                    if (that.options.pinned && !that._isPinned) {\n                        that.pin();\n                    }\n\n                    if (!that.options.pinned) {\n                        scrollTop = documentWindow.scrollTop();\n                        scrollLeft = documentWindow.scrollLeft();\n                    }\n\n                    if (this.containment && !that.options.pinned) {\n                        newTop = this.minTop + (this.maxTop - this.minTop) / 2;\n                        newLeft = this.minLeft + (this.maxLeft - this.minLeft) / 2;\n                    } else {\n                        that._scrollIsAppended = true;\n                        newLeft = scrollLeft + Math.max(0, (documentWindow.width() - wrapper.outerWidth()) / 2);\n                        newTop = scrollTop + Math.max(0, (documentWindow.height() - wrapper.outerHeight() - toInt(wrapper, \"paddingTop\")) / 2);\n                    }\n\n                    wrapper.css({\n                        left: newLeft,\n                        top: newTop\n                    });\n\n                    position.top = newTop;\n                    position.left = newLeft;\n\n                    return that;\n                },\n\n                title: function(title) {\n                    var that = this,\n                        value,\n                        encoded = true,\n                        wrapper = that.wrapper,\n                        titleBar = wrapper.children(KWINDOWTITLEBAR),\n                        titleElement = titleBar.children(KWINDOWTITLE);\n\n                    if (!arguments.length) {\n                        return titleElement.html();\n                    }\n\n                    if ($.isPlainObject(title)) {\n                        value = typeof title.text !== \"undefined\" ? title.text : \"\";\n                        encoded = title.encoded !== false;\n                    } else {\n                        value = title;\n                    }\n\n                    if (value === false) {\n                        wrapper.addClass(\"k-window-titleless\");\n                        wrapper.css(\"padding-top\", 0);\n                        titleBar.remove();\n                    } else {\n                        if (!titleBar.length) {\n                            wrapper.prepend(templates.titlebar({\n                                title: encoded ? kendo.htmlEncode(value) : value\n                            }));\n                            that._actions();\n                            titleBar = wrapper.children(KWINDOWTITLEBAR);\n                        } else {\n                            titleElement.html(encoded ? kendo.htmlEncode(value) : value);\n                        }\n                    }\n\n                    that.options.title = value;\n\n                    return that;\n                },\n\n                content: function(html, data) {\n                    var content = this.wrapper.children(KWINDOWCONTENT),\n                        scrollContainer = content.children(\".km-scroll-container\");\n\n                    content = scrollContainer[0] ? scrollContainer : content;\n\n                    if (!defined(html)) {\n                        return content.html();\n                    }\n\n                    kendo.destroy(this.element.children());\n\n                    content.empty().html(html);\n\n                    return this;\n                },\n\n                open: function() {\n                    var that = this,\n                        wrapper = that.wrapper,\n                        options = that.options,\n                        showOptions = this._animationOptions(\"open\"),\n                        contentElement = wrapper.children(KWINDOWCONTENT),\n                        overlay, otherModalsVisible,\n                        containmentContext = this.containment && !that._isPinned,\n                        doc = containmentContext ? this.containment : $(document);\n\n                    if (!that.trigger(OPEN)) {\n                        if (that._closing) {\n                            wrapper.kendoStop(true, true);\n                        }\n\n                        that._closing = false;\n\n                        that.toFront();\n\n                        if (options.autoFocus) {\n                            that.wrapper.trigger(\"focus\");\n                        }\n\n                        options.visible = true;\n\n                        if (options.modal) {\n                            otherModalsVisible = !!that._modals().length;\n                            overlay = that._overlay(otherModalsVisible);\n\n                            overlay.kendoStop(true, true);\n\n                            if (showOptions.duration && kendo.effects.Fade && !otherModalsVisible) {\n                                var overlayFx = kendo.fx(overlay).fadeIn();\n                                overlayFx.duration(showOptions.duration || 0);\n                                overlayFx.endValue(0.5);\n                                overlayFx.play();\n                            } else {\n                                overlay.css(\"opacity\", 0.5);\n                            }\n\n                            overlay.show();\n\n                            $(window).on(\"focus\" + MODAL_NS, function() {\n                                if (wrapper.data(\"isFront\") && !$(document.activeElement).closest(wrapper).length) {\n                                   that.wrapper.trigger(\"focus\");\n                                }\n                            });\n                        }\n\n                        if (!wrapper.is(VISIBLE)) {\n                            contentElement.css(OVERFLOW, HIDDEN);\n\n                            that.wrapper.find(TITLEBAR_BUTTONSSELECTOR).addClass(\"k-button-flat\");\n\n                            wrapper.css({ display: \"inline-flex\" });\n                            wrapper.kendoStop().kendoAnimate({\n                                effects: showOptions.effects,\n                                duration: showOptions.duration,\n                                complete: this._activate.bind(this)\n                            });\n                        }\n                    }\n\n                    if (options.isMaximized) {\n                        that._containerScrollTop = doc.scrollTop();\n                        that._containerScrollLeft = doc.scrollLeft();\n                        that._stopDocumentScrolling();\n                    }\n\n                    if (this.options.pinned && !this._isPinned) {\n                        this.pin();\n                    }\n\n                    return that;\n                },\n\n                _activate: function() {\n                    var scrollable = this.options.scrollable !== false;\n\n                    if (this.options.autoFocus) {\n                        this.wrapper.trigger(\"focus\");\n                    }\n\n                    this.element.css(OVERFLOW, scrollable ? \"\" : \"hidden\");\n                    kendo.resize(this.element.children());\n\n                    this.trigger(ACTIVATE);\n                },\n\n                _removeOverlay: function(suppressAnimation) {\n                    var modals = this._modals();\n                    var options = this.options;\n                    var hideOverlay = options.modal && !modals.length;\n                    var hideOptions = this._animationOptions(\"close\");\n\n                    if (hideOverlay) {\n                        if (!suppressAnimation && hideOptions.duration && kendo.effects.Fade) {\n                            var overlayFx = kendo.fx(options.modal ? this._overlay(true) : $(undefined$1)).fadeOut();\n                            overlayFx.duration(hideOptions.duration || 0);\n                            overlayFx.startValue(0.5);\n                            overlayFx.play();\n                        } else {\n                            this._overlay(false).remove();\n                        }\n                        if (options.modal.preventScroll) {\n                            this._enableDocumentScrolling();\n                        }\n                    } else if (modals.length) {\n                        this._object(modals.last())._overlay(true);\n\n                        if (options.modal.preventScroll) {\n                            this._stopDocumentScrolling();\n                        }\n                    }\n                },\n\n                _close: function(systemTriggered) {\n                    var that = this,\n                        wrapper = that.wrapper,\n                        options = that.options,\n                        showOptions = this._animationOptions(\"open\"),\n                        hideOptions = this._animationOptions(\"close\"),\n                        containmentContext = this.containment && !that._isPinned,\n                        doc = containmentContext ? this.containment : $(document),\n                        defaultPrevented;\n\n                    if (that._closing) {\n                        return;\n                    }\n\n                    defaultPrevented = that.trigger(CLOSE, { userTriggered: !systemTriggered });\n                    that._closing = !defaultPrevented;\n\n                    if (wrapper.is(VISIBLE) && !defaultPrevented) {\n                        options.visible = false;\n\n                        $(KWINDOW).each(function(i, element) {\n                            var contentElement = $(element).children(KWINDOWCONTENT);\n\n                            // Remove overlay set by toFront\n                            if (element != wrapper && contentElement.find(\"> .\" + KCONTENTFRAME).length > 0) {\n                                contentElement.children(KOVERLAY).remove();\n                            }\n                        });\n\n                        this._removeOverlay();\n\n                        // Prevent close animation from stopping\n                        that.wrapper.find(TITLEBAR_BUTTONSSELECTOR).removeClass(\"k-button-flat\");\n\n                        wrapper.kendoStop().kendoAnimate({\n                            effects: hideOptions.effects || showOptions.effects,\n                            reverse: hideOptions.reverse === true,\n                            duration: hideOptions.duration,\n                            complete: this._deactivate.bind(this)\n                        });\n                        $(window).off(MODAL_NS);\n                    }\n\n                    if (that.options.isMaximized) {\n                        that._enableDocumentScrolling();\n                        if (that._containerScrollTop && that._containerScrollTop > 0) {\n                            doc.scrollTop(that._containerScrollTop);\n                        }\n                        if (that._containerScrollLeft && that._containerScrollLeft > 0) {\n                            doc.scrollLeft(that._containerScrollLeft);\n                        }\n                    }\n\n                    if (that.options.iframe) {\n                        that.wrapper.trigger(\"blur\");\n                    }\n                },\n\n                _deactivate: function() {\n                    var that = this;\n\n                    that.wrapper\n                        .removeClass(INLINE_FLEX)\n                        .hide()\n                        .css(\"opacity\", \"\");\n\n                    that.trigger(DEACTIVATE);\n\n                    if (that.options.modal) {\n                        var lastModal = that._object(that._modals().last());\n                        if (lastModal) {\n                            lastModal.toFront();\n                        }\n                    }\n                },\n\n                close: function() {\n                    this._close(true);\n                    return this;\n                },\n\n                _actionable: function(element) {\n                    return $(element).is(`${TITLEBAR_BUTTONSSELECTOR}, :input, a, .k-input, .k-icon, .k-svg-icon, .k-svg-icon>svg, .k-svg-icon>svg>path, .k-icon-button, [role='gridcell'], .k-input-inner, .k-input-value-text`);\n                },\n\n                _shouldFocus: function(target) {\n                    var active = activeElement(),\n                        element = this.wrapper;\n\n                    return this.options.autoFocus &&\n                        !$(active).is(element) &&\n                        !this._actionable(target) &&\n                        (!element.find(active).length || !element.find(target).length);\n                },\n\n                toFront: function(e, avoidFocus) {\n                    var that = this,\n                        wrapper = that.wrapper,\n                        currentWindow = wrapper[0],\n                        containmentContext = that.containment && !that._isPinned,\n                        openAnimation = this._animationOptions(\"open\"),\n                        zIndex = +wrapper.css(ZINDEX),\n                        originalZIndex = zIndex,\n                        target = (e && e.target) || null;\n\n                    $(KWINDOW).each(function(i, element) {\n                        var windowObject = $(element),\n                            zIndexNew = windowObject.css(ZINDEX),\n                            contentElement = windowObject.children(KWINDOWCONTENT);\n\n                        if (!isNaN(zIndexNew)) {\n                            zIndex = Math.max(+zIndexNew, zIndex);\n                        }\n\n                        wrapper.data(\"isFront\", element == currentWindow);\n                        // Add overlay to windows with iframes and lower z-index to prevent\n                        // trapping of events when resizing / dragging\n\n                        if (element != currentWindow &&\n                            contentElement.find(\".\" + KCONTENTFRAME).length &&\n                            !contentElement.find(KOVERLAY).length) {\n                            contentElement.append(templates.overlay);\n                        }\n                    });\n\n                    if (!wrapper[0].style.zIndex || originalZIndex < zIndex) {\n                        wrapper.css(ZINDEX, zIndex + 2);\n                    }\n                    that.element.find(\"> .k-overlay\").remove();\n\n                    if (that._shouldFocus(target)) {\n                        if (!avoidFocus) {\n                            setTimeout(function() {\n                                that.wrapper.trigger(\"focus\");\n                            }, openAnimation ? openAnimation.duration : 0);\n                        }\n\n                        var scrollTop = containmentContext ? that.containment.scrollTop() : $(window).scrollTop(),\n                            windowTop = parseInt(wrapper.position().top, 10);\n\n                        if (!that.options.pinned && windowTop > 0 && windowTop < scrollTop) {\n                            if (scrollTop > 0) {\n                                $(window).scrollTop(windowTop);\n                            } else {\n                                wrapper.css(\"top\", scrollTop);\n                            }\n                        }\n                    }\n\n                    wrapper = null;\n\n                    return that;\n                },\n\n                toggleMaximization: function() {\n                    if (this._closing) {\n                        return this;\n                    }\n\n                    return this[this.options.isMaximized ? \"restore\" : \"maximize\"]();\n                },\n\n                restore: function() {\n                    var that = this;\n                    var options = that.options;\n                    var minHeight = options.minHeight;\n                    var restoreOptions = that.restoreOptions;\n                    var shouldRestrictTop;\n                    var container = that.containment && !that._isPinned ? that.containment : $(document);\n\n                    if (!options.isMaximized && !options.isMinimized) {\n                        return that;\n                    }\n\n                    if (minHeight && minHeight != Infinity) {\n                        that.wrapper.css(\"min-height\", minHeight);\n                    }\n\n                    if (restoreOptions && !options.isMaximized) {\n                        restoreOptions.height = constrain(restoreOptions.height, that.options.minHeight, that.options.maxHeight);\n\n                        shouldRestrictTop = options.position.top + parseInt(restoreOptions.height, 10) > that.maxTop;\n\n                        if (shouldRestrictTop) {\n                            options.position.top = constrain(options.position.top, that.minTop, that.maxTop - parseInt(restoreOptions.height, 10));\n\n                            extend(restoreOptions, {\n                                left: options.position.left,\n                                top: options.position.top\n                            });\n                        }\n                    }\n\n                    that.wrapper\n                        .css({\n                            position: options.pinned ? \"fixed\" : \"absolute\",\n                            left: restoreOptions.left,\n                            top: restoreOptions.top,\n                            width: restoreOptions.width,\n                            height: restoreOptions.height\n                        })\n                        .removeClass(MAXIMIZEDSTATE)\n                        .removeClass(KWINDOWMINIMIZED)\n                        .find(\".k-window-content,.k-resize-handle\").show().end()\n                        .find(\".k-window-titlebar .k-i-window-restore,.k-window-titlebar .k-svg-i-window-restore\").parent().remove().end().end()\n                        .find(MINIMIZE_MAXIMIZEICONSELECTORS).parent().show().end().end()\n                        .find(PIN_UNPINICONCLASSSELECTOR).parent().show();\n\n                    if (options.isMaximized) {\n                        that.wrapper.find(\".k-i-window,.k-svg-i-window\").parent().trigger(\"focus\");\n                    } else if (options.isMinimized) {\n                        that.wrapper.find(\".k-i-window-minimize,.k-svg-i-window-minimize\").parent().trigger(\"focus\");\n                    }\n\n                    that.options.width = restoreOptions.width;\n                    that.options.height = restoreOptions.height;\n\n                    if (!that.options.modal.preventScroll) {\n                        that._enableDocumentScrolling();\n                    }\n\n                    if (that._containerScrollTop && that._containerScrollTop > 0) {\n                        container.scrollTop(that._containerScrollTop);\n                    }\n                    if (that._containerScrollLeft && that._containerScrollLeft > 0) {\n                        container.scrollLeft(that._containerScrollLeft);\n                    }\n\n                    options.isMaximized = options.isMinimized = false;\n\n                    that.wrapper.removeAttr(\"aria-labelled-by\");\n\n                    that.resize();\n\n                    that.trigger(RESTORE);\n\n                    return that;\n                },\n\n                _sizingAction: function(actionId, callback) {\n                    var that = this,\n                        wrapper = that.wrapper,\n                        style = wrapper[0].style,\n                        options = that.options;\n\n                    if (options.isMaximized || options.isMinimized) {\n                        return that;\n                    }\n\n                    that.restoreOptions = {\n                        width: style.width,\n                        height: style.height\n                    };\n\n                    wrapper\n                        .children(KWINDOWRESIZEHANDLES).hide().end()\n                        .children(KWINDOWTITLEBAR).find(MINIMIZE_MAXIMIZEICONSELECTORS).parent().hide()\n                        .eq(0).before(templates.action({ name: \"window-restore\" }));\n\n                    callback.call(that);\n\n                    that.wrapper.children(KWINDOWTITLEBAR).find(PIN_UNPINICONCLASSSELECTOR).parent().toggle(actionId !== \"maximize\");\n\n                    that.trigger(actionId);\n\n                    wrapper.find(\".k-i-window-restore,.k-svg-i-window-restore\").parent().trigger(\"focus\");\n\n                    return that;\n                },\n\n                maximize: function() {\n                    this._sizingAction(\"maximize\", function() {\n                        var that = this,\n                            wrapper = that.wrapper,\n                            containmentContext = this.containment && !that._isPinned,\n                            position = wrapper.position(),\n                            doc = $(document);\n\n                        extend(that.restoreOptions, {\n                            left: position.left + (containmentContext ? this.containment.scrollLeft() : 0),\n                            top: position.top + (containmentContext ? this.containment.scrollTop() : 0)\n                        });\n\n                        this._containerScrollTop = containmentContext ? this.containment.scrollTop() : doc.scrollTop();\n                        this._containerScrollLeft = containmentContext ? this.containment.scrollLeft() : doc.scrollLeft();\n\n                        that._stopDocumentScrolling();\n\n                        wrapper\n                            .css({\n                                top: containmentContext ? this.containment.scrollTop() : 0,\n                                left: containmentContext ? this.containment.scrollLeft() : 0,\n                                position: containmentContext ? \"absolute\" : \"fixed\"\n                            })\n                            .addClass(MAXIMIZEDSTATE);\n\n                        that.options.isMaximized = true;\n\n                        that._onDocumentResize();\n                    });\n\n                    return this;\n                },\n\n                _stopDocumentScrolling: function() {\n                    var that = this;\n                    var containment = that.containment;\n\n                    if (containment && !that._isPinned) {\n                        that._storeOverflowRule(containment);\n                        containment.css(OVERFLOW, HIDDEN);\n                        that.wrapper.css({\n                            maxWidth: containment.innerWidth(),\n                            maxHeight: containment.innerHeight()\n                        });\n                        return;\n                    }\n\n                    var $body = $(\"body\");\n                    that._storeOverflowRule($body);\n                    $body.css(OVERFLOW, HIDDEN);\n\n                    var $html = $(\"html\");\n                    that._storeOverflowRule($html);\n                    $html.css(OVERFLOW, HIDDEN);\n                },\n\n                _enableDocumentScrolling: function() {\n                    var that = this;\n                    var containment = that.containment;\n\n                    if (containment && !that._isPinned) {\n                        that._restoreOverflowRule(containment);\n                        that.wrapper.css({\n                            maxWidth: containment.width,\n                            maxHeight: containment.height\n                        });\n                        return;\n                    }\n\n                    that._restoreOverflowRule($(document.body));\n                    that._restoreOverflowRule($(\"html\"));\n                },\n\n                _storeOverflowRule: function($element) {\n                    if (this._isOverflowStored($element)) {\n                        return;\n                    }\n\n                    var overflowRule = $element.get(0).style.overflow;\n\n                    if (typeof overflowRule === \"string\") {\n                        $element.data(DATADOCOVERFLOWRULE, overflowRule);\n                    }\n                },\n\n                _isOverflowStored: function($element) {\n                    return typeof $element.data(DATADOCOVERFLOWRULE) === \"string\";\n                },\n\n                _restoreOverflowRule: function($element) {\n                    var overflowRule = $element.data(DATADOCOVERFLOWRULE);\n\n                    if (overflowRule !== null && overflowRule !== undefined$1) {\n                        $element.css(OVERFLOW, overflowRule);\n                        $element.removeData(DATADOCOVERFLOWRULE);\n                    } else {\n                        $element.css(OVERFLOW, \"\");\n                    }\n                },\n\n                isMaximized: function() {\n                    return this.options.isMaximized;\n                },\n\n                minimize: function() {\n                    this._sizingAction(\"minimize\", function() {\n                        var that = this;\n\n                        that.wrapper.css({\n                            height: \"\",\n                            minHeight: \"\"\n                        });\n\n                        that.element.hide();\n\n                        that.options.isMinimized = true;\n                    });\n\n                    this.wrapper.attr(\"aria-labelled-by\", this.element.attr(\"aria-labelled-by\"));\n                    this.wrapper.addClass(KWINDOWMINIMIZED);\n\n                    this._updateBoundaries();\n\n                    return this;\n                },\n\n                isMinimized: function() {\n                    return this.options.isMinimized;\n                },\n\n                pin: function() {\n                    var that = this,\n                        win = $(window),\n                        wrapper = that.wrapper,\n                        options = that.options,\n                        position = options.position,\n                        top = this.containment ? getPosition(wrapper[0]).top + toInt(this.containment, \"borderTopWidth\") : toInt(wrapper, \"top\"),\n                        left = this.containment ? getPosition(wrapper[0]).left + toInt(this.containment, \"borderLeftWidth\") : toInt(wrapper, \"left\");\n\n                    if (!that.options.isMaximized) {\n                        position.top = top;\n                        position.left = left;\n\n                        if (that._scrollIsAppended && (!this.containment || this.containment.css(\"position\") !== \"fixed\")) {\n\n                            position.top -= win.scrollTop();\n                            position.left -= win.scrollLeft();\n                            that._scrollIsAppended = false;\n                        }\n\n                        wrapper.css(extend(position, { position: \"fixed\" }));\n                        var pinIcon = wrapper.children(KWINDOWTITLEBAR).find(KPINICONCLASSSELECTOR).eq(0);\n                        if (pinIcon.length > 0) {\n                            kendo.ui.icon(pinIcon, { icon: \"unpin\" });\n                        }\n\n                        that._isPinned = true;\n                        that.options.pinned = true;\n\n                        if (this.containment) {\n                            options.maxWidth = options.maxHeight = Infinity;\n                            wrapper.css({\n                                maxWidth: \"\",\n                                maxHeight: \"\"\n                            });\n                        }\n                    }\n                },\n\n                unpin: function() {\n                    var that = this,\n                        win = $(window),\n                        wrapper = that.wrapper,\n                        options = that.options,\n                        position = that.options.position,\n                        containment = that.containment,\n                        top = parseInt(wrapper.css(\"top\"), 10) + win.scrollTop(),\n                        left = parseInt(wrapper.css(\"left\"), 10) + win.scrollLeft();\n\n                    if (!that.options.isMaximized) {\n                        that._isPinned = false;\n                        that._scrollIsAppended = true;\n                        that.options.pinned = false;\n\n                        if (containment) {\n                            that._updateBoundaries();\n\n                            options.maxWidth = Math.min(containment.width, options.maxWidth);\n                            options.maxHeight = Math.min(containment.height - toInt(wrapper, \"padding-top\"), options.maxHeight);\n\n                            wrapper.css({\n                                maxWidth: options.maxWidth,\n                                maxHeight: options.maxHeight\n                            });\n\n                            if (top < containment.position.top) {\n                                top = that.minTop;\n                            } else if (top > containment.position.top + containment.height) {\n                                top = that.maxTop;\n                            } else {\n                                top = top + containment.scrollTop() - (containment.position.top + toInt(containment, \"border-top-width\"));\n                            }\n\n                            if (left < containment.position.left) {\n                                left = that.minLeft;\n                            } else if (left > containment.position.left + containment.width) {\n                                left = that.maxLeft;\n                            } else {\n                                left = left + containment.scrollLeft() - (containment.position.left + toInt(containment, \"border-left-width\"));\n                            }\n\n                        }\n\n                        position.top = constrain(top, that.minTop, that.maxTop);\n                        position.left = constrain(left, that.minLeft, that.maxLeft);\n\n                        wrapper.css(extend(position, { position: \"\" }));\n                        var pinIcon = wrapper.children(KWINDOWTITLEBAR).find(KUNPINICONCLASSSELECTOR).eq(0);\n                        if (pinIcon.length > 0) {\n                            kendo.ui.icon(pinIcon, { icon: \"pin\" });\n                        }\n                    }\n                },\n\n                _onDocumentResize: function() {\n                    var that = this,\n                        wrapper = that.wrapper,\n                        wnd = $(window),\n                        zoomLevel = kendo.support.zoomLevel(),\n                        contentBoxSizing = wrapper.css(\"box-sizing\") == \"content-box\",\n                        w, h;\n\n                    if (!that.options.isMaximized) {\n                        return;\n                    }\n\n                    var lrBorderWidth = contentBoxSizing ? toInt(wrapper, \"border-left-width\") + toInt(wrapper, \"border-right-width\") : 0;\n                    var tbBorderWidth = contentBoxSizing ? toInt(wrapper, \"border-top-width\") + toInt(wrapper, \"border-bottom-width\") : 0;\n                    var paddingTop = contentBoxSizing ? toInt(wrapper, \"padding-top\") : 0;\n\n                    if (that.containment && !that._isPinned) {\n                        w = that.containment.innerWidth() - lrBorderWidth;\n                        h = that.containment.innerHeight() - (tbBorderWidth + paddingTop);\n                    } else {\n                        w = wnd.width() / zoomLevel - lrBorderWidth;\n                        h = wnd.height() / zoomLevel - (tbBorderWidth + paddingTop);\n                    }\n\n                    wrapper.css({\n                        width: w,\n                        height: h\n                    });\n                    that.options.width = w;\n                    that.options.height = h;\n\n                    that.resize();\n                },\n\n                refresh: function(options) {\n                    var that = this,\n                        initOptions = that.options,\n                        element = $(that.element),\n                        iframe,\n                        showIframe,\n                        url;\n\n                    if (!isPlainObject(options)) {\n                        options = { url: options };\n                    }\n\n                    options = extend(initOptions.content, options);\n\n                    showIframe = defined(initOptions.iframe) ? initOptions.iframe : options.iframe;\n\n                    url = options.url;\n\n                    if (url) {\n                        if (!defined(showIframe)) {\n                            showIframe = !isLocalUrl(url);\n                        }\n\n                        if (!showIframe) {\n                            // perform AJAX request\n                            that._ajaxRequest(options);\n                        } else {\n                            iframe = element.find(\".\" + KCONTENTFRAME)[0];\n\n                            if (iframe) {\n                                // refresh existing iframe\n                                iframe.src = url || iframe.src;\n                            } else {\n                                // render new iframe\n                                element.html(templates.contentFrame(extend({}, initOptions, { content: options })));\n                            }\n\n                            element.find(\".\" + KCONTENTFRAME)\n                                .off(\"load\" + NS)\n                                .on(\"load\" + NS, this._triggerRefresh.bind(this));\n                        }\n                    } else {\n                        if (options.template) {\n                            // refresh template\n                            that.content(template(options.template)({}));\n                        }\n\n                        that.trigger(REFRESH);\n                    }\n\n                    element.toggleClass(\"k-window-iframecontent\", !!showIframe);\n\n                    return that;\n                },\n\n                _triggerRefresh: function() {\n                    this.trigger(REFRESH);\n                },\n\n                _ajaxComplete: function() {\n                    clearTimeout(this._loadingIconTimeout);\n                    this.wrapper.find(REFRESHICONSELECTOR).removeClass(LOADINGICONCLASS);\n                },\n\n                _ajaxError: function(xhr, status) {\n                    this.trigger(ERROR, { status: status, xhr: xhr });\n                },\n\n                _ajaxSuccess: function(contentTemplate) {\n                    return function(data) {\n                        var html = data;\n                        if (contentTemplate) {\n                            html = template(contentTemplate)(data || {});\n                        }\n\n                        this.content(html, data);\n                        this.element.prop(\"scrollTop\", 0);\n\n                        this.trigger(REFRESH);\n                    };\n                },\n\n                _showLoading: function() {\n                    this.wrapper.find(REFRESHICONSELECTOR).addClass(LOADINGICONCLASS);\n                },\n\n                _ajaxRequest: function(options) {\n                    this._loadingIconTimeout = setTimeout(this._showLoading.bind(this), 100);\n\n                    $.ajax(extend({\n                        type: \"GET\",\n                        dataType: \"html\",\n                        cache: false,\n                        error: this._ajaxError.bind(this),\n                        complete: this._ajaxComplete.bind(this),\n                        success: this._ajaxSuccess(options.template).bind(this)\n                    }, options));\n                },\n\n                _destroy: function() {\n                    if (this.resizing) {\n                        this.resizing.destroy();\n                    }\n\n                    if (this.dragging) {\n                        this.dragging.destroy();\n                    }\n\n                    this.wrapper.off(NS)\n                        .children(KWINDOWCONTENT).off(NS).end()\n                        .find(\".k-resize-handle,.k-window-titlebar\").off(NS);\n\n                    $(window).off(\"resize\" + NS + this._marker);\n                    $(window).off(MODAL_NS);\n                    $(window).off(NS);\n\n                    clearTimeout(this._loadingIconTimeout);\n\n                    Widget.fn.destroy.call(this);\n\n                    this.unbind(undefined$1);\n\n                    kendo.destroy(this.wrapper);\n                },\n\n                destroy: function() {\n                    this._destroy();\n\n                    if (this.options.modal) {\n                        this._removeOverlay(true);\n                    }\n\n                    this.wrapper.empty().remove();\n\n                    this.wrapper = this.appendTo = this.element = $();\n                },\n\n                _createWindow: function() {\n                    var contentHtml = this.element,\n                        options = this.options,\n                        iframeSrcAttributes,\n                        wrapper,\n                        isRtl = kendo.support.isRtl(contentHtml);\n\n                    if (options.scrollable === false) {\n                        contentHtml.css(\"overflow\", \"hidden\");\n                    }\n\n                    wrapper = $(templates.wrapper(options));\n\n                    // Collect the src attributes of all iframes and then set them to empty string.\n                    // This seems to fix this IE9 \"feature\": http://msdn.microsoft.com/en-us/library/gg622929%28v=VS.85%29.aspx?ppud=4\n                    iframeSrcAttributes = contentHtml.find(\"iframe:not(.k-content-frame)\").map(function() {\n                        var src = this.getAttribute(\"src\");\n                        this.src = \"\";\n                        return src;\n                    });\n\n                    // Make sure the wrapper is appended to the body only once. IE9+ will throw exceptions if you move iframes in DOM\n                    wrapper\n                        .toggleClass(\"k-rtl\", isRtl)\n                        .attr(\"tabindex\", 0)\n                        .append(contentHtml)\n                        .find(\"iframe:not(.k-content-frame)\").each(function(index) {\n                        // Restore the src attribute of the iframes when they are part of the live DOM tree\n                        this.src = iframeSrcAttributes[index];\n                    });\n\n                    if (this.containment) {\n                        this.containment.prepend(wrapper);\n                    } else if (this.appendTo) {\n                        wrapper.appendTo(this.appendTo);\n                    }\n\n                    wrapper.find(\".k-window-title\")\n                        .css(isRtl ? \"left\" : \"right\", outerWidth(wrapper.find(\".k-window-titlebar-actions\")) + 10);\n\n                    contentHtml.css(\"visibility\", \"\").show();\n\n                    if ($(contentHtml).hasClass(KHIDDEN))\n                    {\n                        $(contentHtml).removeClass(KHIDDEN);\n                    }\n                    contentHtml.find(\"[data-role=editor]\").each(function() {\n                        var editor = $(this).data(\"kendoEditor\");\n\n                        if (editor) {\n                            editor.refresh();\n                        }\n                    });\n\n                    wrapper = contentHtml = null;\n                }\n            });\n\n            templates = {\n                wrapper: template(() => \"<div class='k-window'></div>\"),\n                action: template(({ name, icon }) => {\n                    let iconName = (icon || \"\").toLowerCase() || name.toLowerCase();\n                    if (iconName == \"restore\") { iconName = \"window-restore\"; }\n\n                    return kendo.html.renderButton(`<button role='button' class='k-window-titlebar-action' aria-label='${name}'></button>`, { icon: iconName, fillMode: \"flat\" });\n                }),\n                titlebar: template(({ title }) =>\n                    \"<div class='k-window-titlebar'>\" +\n                        `<span class='k-window-title'>${title}</span>` +\n                        \"<div class='k-window-titlebar-actions'></div>\" +\n                    \"</div>\"\n                ),\n                overlay: \"<div class='k-overlay'></div>\",\n                contentFrame: template(({ title, content }) =>\n                    `<iframe frameborder='0' title='${title}' class='${KCONTENTFRAME}' ` +\n                    `src='${content.url}'>` +\n                    \"This page requires frames in order to show content\" +\n                    \"</iframe>\"\n                ),\n                resizeHandle: template((data) => `<div aria-hidden='true' class='k-resize-handle k-resize-${data}'></div>`)\n            };\n\n\n            function WindowResizing(wnd) {\n                var that = this;\n                that.owner = wnd;\n                that._preventDragging = false;\n                that._draggable = new Draggable(wnd.wrapper, {\n                    filter: \">\" + KWINDOWRESIZEHANDLES,\n                    group: wnd.wrapper.id + \"-resizing\",\n                    dragstart: that.dragstart.bind(that),\n                    drag: that.drag.bind(that),\n                    dragend: that.dragend.bind(that)\n                });\n\n                that._draggable.userEvents.bind(\"press\", that.addOverlay.bind(that));\n                that._draggable.userEvents.bind(\"release\", that.removeOverlay.bind(that));\n            }\n\n            WindowResizing.prototype = {\n                addOverlay: function() {\n                    this.owner.wrapper.append(templates.overlay);\n                },\n                removeOverlay: function() {\n                    this.owner.wrapper.find(KOVERLAY).remove();\n                },\n                dragstart: function(e) {\n                    var that = this;\n                    var wnd = that.owner;\n                    var wrapper = wnd.wrapper;\n\n                    that._preventDragging = wnd.trigger(RESIZESTART);\n                    if (that._preventDragging) {\n                        return;\n                    }\n\n                    that.elementPadding = parseInt(wrapper.css(\"padding-top\"), 10);\n                    that.initialPosition = kendo.getOffset(wrapper, \"position\");\n\n                    that.resizeDirection = e.currentTarget.prop(\"className\").replace(\"k-resize-handle k-resize-\", \"\");\n\n                    that.initialSize = {\n                        width: wrapper.outerWidth(),\n                        height: wrapper.outerHeight()\n                    };\n\n                    wnd._updateBoundaries();\n\n                    that.containerOffset = wnd.containment ? wnd.containment.position : kendo.getOffset(wnd.appendTo);\n\n                    var offsetParent = wrapper.offsetParent();\n\n                    if (offsetParent.is(\"html\")) {\n                        that.containerOffset.top = that.containerOffset.left = 0;\n                    } else {\n                        var marginTop = offsetParent.css(\"margin-top\");\n                        var marginLeft = offsetParent.css(\"margin-left\");\n                        var hasMargin = !zero.test(marginTop) || !zero.test(marginLeft);\n                        if (hasMargin) {\n                            var wrapperPosition = getPosition(wrapper[0]);\n                            var relativeElMarginLeft = wrapperPosition.left - that.containerOffset.left - that.initialPosition.left;\n                            var relativeElMarginTop = wrapperPosition.top - that.containerOffset.top - that.initialPosition.top;\n\n                            that._relativeElMarginLeft = relativeElMarginLeft > 1 ? relativeElMarginLeft : 0;\n                            that._relativeElMarginTop = relativeElMarginTop > 1 ? relativeElMarginTop : 0;\n\n                            that.initialPosition.left += that._relativeElMarginLeft;\n                            that.initialPosition.top += that._relativeElMarginTop;\n                        }\n                    }\n\n                    wrapper\n                        .children(KWINDOWRESIZEHANDLES).not(e.currentTarget).hide();\n\n                    $(BODY).css(CURSOR, e.currentTarget.css(CURSOR));\n                },\n                drag: function(e) {\n                    if (this._preventDragging) {\n                        return;\n                    }\n                    var that = this,\n                        wnd = that.owner,\n                        wrapper = wnd.wrapper,\n                        options = wnd.options,\n                        position = options.position,\n                        direction = that.resizeDirection,\n                        containerOffset = that.containerOffset,\n                        initialPosition = that.initialPosition,\n                        initialSize = that.initialSize,\n                        containmentContext = wnd.containment && !wnd._isPinned,\n                        rtl = kendo.support.isRtl(wnd.containment),\n                        leftRtlOffset = containmentContext && rtl && wnd.containment.innerWidth() > wnd.containment.width ? kendo.support.scrollbar() : 0,\n                        scrollOffset = containmentContext ? { top: wnd.containment.scrollTop(), left: wnd.containment.scrollLeft() } : { top: 0, left: 0 },\n                        newWidth, newHeight,\n                        windowBottom, windowRight,\n                        x = Math.max(e.x.location, 0),\n                        y = Math.max(e.y.location, 0);\n\n                        if (direction.indexOf(\"e\") >= 0) {\n\n                            if (wnd.containment && x - initialSize.width >= wnd.maxLeft - scrollOffset.left + containerOffset.left + leftRtlOffset) {\n                                newWidth = wnd.maxLeft + leftRtlOffset - initialPosition.left + initialSize.width - scrollOffset.left;\n                            } else {\n                                newWidth = x - initialPosition.left - containerOffset.left;\n                            }\n\n                            wrapper.outerWidth(constrain(newWidth, options.minWidth, options.maxWidth));\n                        } else if (direction.indexOf(\"w\") >= 0) {\n                            windowRight = initialPosition.left + initialSize.width + containerOffset.left;\n                            newWidth = constrain(windowRight - x, options.minWidth, options.maxWidth);\n                            position.left = windowRight - newWidth - containerOffset.left - leftRtlOffset - (that._relativeElMarginLeft || 0) + scrollOffset.left;\n\n                            if (wnd.containment && position.left <= wnd.minLeft) {\n                                position.left = wnd.minLeft;\n                                newWidth = constrain(windowRight - leftRtlOffset - position.left - containerOffset.left + scrollOffset.left, options.minWidth, options.maxWidth);\n                            }\n\n                            wrapper.css({\n                                left: position.left,\n                                width: newWidth\n                            });\n                        }\n\n                        var newWindowTop = y;\n                        if (wnd.options.pinned) {\n                            newWindowTop -= $(window).scrollTop();\n                        }\n                        if (direction.indexOf(\"s\") >= 0) {\n                            newHeight = newWindowTop - initialPosition.top - that.elementPadding - containerOffset.top;\n\n                            if (newWindowTop - initialSize.height - that.elementPadding >= wnd.maxTop + containerOffset.top - scrollOffset.top) {\n                                newHeight = wnd.maxTop - initialPosition.top + initialSize.height - scrollOffset.top;\n                            }\n\n                            wrapper.outerHeight(constrain(newHeight, options.minHeight, options.maxHeight));\n                        } else if (direction.indexOf(\"n\") >= 0) {\n                            windowBottom = initialPosition.top + initialSize.height + containerOffset.top;\n                            newHeight = constrain(windowBottom - newWindowTop, options.minHeight, options.maxHeight);\n                            position.top = windowBottom - newHeight - containerOffset.top - (that._relativeElMarginTop || 0) + scrollOffset.top;\n\n                            if (position.top <= wnd.minTop && wnd.containment) {\n                                position.top = wnd.minTop;\n                                newHeight = constrain(windowBottom - position.top - containerOffset.top + scrollOffset.top, options.minHeight, options.maxHeight);\n                            }\n\n                            wrapper.css({\n                                top: position.top,\n                                height: newHeight\n                            });\n                        }\n\n                        if (newWidth) {\n                            wnd.options.width = newWidth + \"px\";\n                        }\n                        if (newHeight) {\n                            wnd.options.height = newHeight + \"px\";\n                        }\n\n                        wnd.resize();\n                },\n                dragend: function(e) {\n                    if (this._preventDragging) {\n                        return;\n                    }\n\n                    var that = this,\n                        wnd = that.owner,\n                        wrapper = wnd.wrapper;\n\n                    wrapper\n                        .children(KWINDOWRESIZEHANDLES).not(e.currentTarget).show();\n\n                    $(BODY).css(CURSOR, \"\");\n\n                    if (wnd.touchScroller) {\n                        wnd.touchScroller.reset();\n                    }\n\n                    if (e.keyCode == 27) {\n                        wrapper.css(that.initialPosition)\n                            .css(that.initialSize);\n                    }\n\n                    wnd.trigger(RESIZEEND);\n\n                    return false;\n                },\n                destroy: function() {\n                    if (this._draggable) {\n                        this._draggable.destroy();\n                    }\n\n                    this._draggable = this.owner = null;\n                }\n            };\n\n            function WindowDragging(wnd, dragHandle, clickMoveClick) {\n                var that = this,\n                    filter = dragHandle;\n\n                if (clickMoveClick) {\n                    filter += \",.k-overlay\";\n                }\n\n                that.owner = wnd;\n                that._preventDragging = false;\n                that._draggable = new Draggable(wnd.wrapper, {\n                    filter: dragHandle,\n                    group: wnd.wrapper.id + \"-moving\",\n                    clickMoveClick: clickMoveClick,\n                    dragstart: that.dragstart.bind(that),\n                    drag: that.drag.bind(that),\n                    dragend: that.dragend.bind(that),\n                    dragcancel: that.dragcancel.bind(that)\n                });\n\n                that._draggable.userEvents.stopPropagation = false;\n            }\n\n            WindowDragging.prototype = {\n                dragstart: function(e) {\n                    var wnd = this.owner,\n                        draggable = wnd.options.draggable,\n                        element = wnd.element,\n                        actions = element.find(\".k-window-titlebar-actions\"),\n                        containerOffset = kendo.getOffset(wnd.appendTo);\n\n                    this._preventDragging = wnd.trigger(DRAGSTART) || !draggable;\n                    if (this._preventDragging || wnd.isMaximized()) {\n                        return;\n                    }\n\n                    wnd.initialWindowPosition = kendo.getOffset(wnd.wrapper, \"position\");\n\n                    if (!wnd.initialPointerPosition) {\n                        wnd.options.position.left = constrain(wnd.initialWindowPosition.left, wnd.minLeft, wnd.maxLeft);\n                        wnd.options.position.top = constrain(wnd.initialWindowPosition.top, wnd.minTop, wnd.maxTop);\n                    }\n\n                    wnd.initialPointerPosition = {\n                        left: wnd.options.position.left,\n                        top: wnd.options.position.top\n                    };\n\n                    wnd.startPosition = {\n                        left: e.x.client - wnd.initialWindowPosition.left,\n                        top: e.y.client - wnd.initialWindowPosition.top\n                    };\n\n                    wnd._updateBoundaries();\n                    if (!wnd.containment) {\n                        if (actions.length > 0) {\n                            wnd.minLeft = outerWidth(actions) + parseInt(actions.css(\"right\"), 10) - outerWidth(element);\n                        } else {\n                            wnd.minLeft = 20 - outerWidth(element); // at least 20px remain visible\n                        }\n\n                        wnd.minLeft -= containerOffset.left;\n                        wnd.minTop = -containerOffset.top;\n                    }\n\n                    $(templates.overlay).appendTo(wnd.wrapper).css({ opacity: 0 });\n\n                    wnd.wrapper.children(KWINDOWRESIZEHANDLES).hide();\n\n                    $(BODY).css(CURSOR, e.currentTarget.css(CURSOR));\n                },\n\n                drag: function(e) {\n                    var wnd = this.owner;\n                    var position = wnd.options.position;\n                    var axis = wnd.options.draggable.axis;\n                    var left;\n                    var top;\n\n                    if (this._preventDragging || wnd.isMaximized()) {\n                        return;\n                    }\n\n                    if (!axis || axis.toLowerCase() === \"x\") {\n                        left = e.x.client - wnd.startPosition.left;\n\n                        if (wnd.containment && !wnd._isPinned) {\n                            left += wnd.containment.scrollLeft();\n                        }\n\n                        position.left = constrain(left, wnd.minLeft, wnd.maxLeft);\n                    }\n\n                    if (!axis || axis.toLowerCase() === \"y\") {\n                        top = e.y.client - wnd.startPosition.top;\n\n                        if (wnd.containment && !wnd._isPinned) {\n                            top += wnd.containment.scrollTop();\n                        }\n\n                        position.top = constrain(top, wnd.minTop, wnd.maxTop);\n                    }\n\n                    $(wnd.wrapper).css(\n                        \"transform\", \"translate(\" +\n                        (position.left - wnd.initialPointerPosition.left) + \"px, \" +\n                        (position.top - wnd.initialPointerPosition.top) + \"px)\"\n                    );\n\n                },\n\n                _finishDrag: function() {\n                    var wnd = this.owner;\n\n                    wnd.wrapper\n                        .children(KWINDOWRESIZEHANDLES).toggle(!wnd.options.isMinimized).end()\n                        .find(KOVERLAY).remove();\n\n                    $(BODY).css(CURSOR, \"\");\n                },\n\n                dragcancel: function(e) {\n                    if (this._preventDragging) {\n                        return;\n                    }\n                    this._finishDrag();\n\n                    e.currentTarget.closest(KWINDOW).css(this.owner.initialWindowPosition);\n                },\n\n                dragend: function() {\n                    var wnd = this.owner;\n\n                    if (this._preventDragging || wnd.isMaximized()) {\n                        return;\n                    }\n\n                    $(wnd.wrapper)\n                        .css(wnd.options.position)\n                        .css(\"transform\", \"\");\n\n                    this._finishDrag();\n\n                    wnd.trigger(DRAGEND);\n\n                    return false;\n                },\n                destroy: function() {\n                    if (this._draggable) {\n                        this._draggable.destroy();\n                    }\n\n                    this._draggable = this.owner = null;\n                }\n            };\n\n            kendo.ui.plugin(Window);\n\n        })(window.kendo.jQuery);\n    var kendo$1 = kendo;\n\n    exports.__meta__ = __meta__;\n    exports.default = kendo$1;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n\n}));\n"]}