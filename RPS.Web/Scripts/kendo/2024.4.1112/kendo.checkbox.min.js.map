{"version":3,"file":"kendo.checkbox.min.js","names":["global","factory","exports","module","require","define","amd","globalThis","self","kendo","_globals","Checkbox","this","window","ui","CheckBox","ToggleInputBase","extend","options","name","checked","enabled","encoded","label","rounded","size","wrapperClass","RENDER_INPUT","html","renderCheckBox","NS","value","check","apply","cssProperties","registerPrefix","registerValues","prop","values","roundedValues","concat","plugin","jQuery","kendo$1","__meta__","id","category","description","depends","default","Object","defineProperty"],"sources":["kendo.checkbox.js"],"mappings":"CAAA,SAAWA,EAAQC,GACI,iBAAZC,SAA0C,oBAAXC,OAAyBF,EAAQC,QAASE,QAAQ,4BAA6BA,QAAQ,wBAC3G,mBAAXC,QAAyBA,OAAOC,IAAMD,OAAO,CAAC,UAAW,wBAAyB,oBAAqBJ,GACnCA,IAA1ED,EAA+B,oBAAfO,WAA6BA,WAAaP,GAAUQ,MAAsBC,MAAQT,EAAOS,OAAS,CAAC,EAAGT,EAAOS,MAAMC,SAAWV,EAAOS,MAAMC,UAAY,CAAC,EAAGV,EAAOS,MAAMC,SAASC,SAAW,CAAC,GACjN,CAJD,CAIGC,MAAM,SAAWV,IAShB,WACI,IAAIO,EAAQI,OAAOJ,MACfK,EAAKL,EAAMK,GAGXC,EAFkBD,EAAGE,gBAEMC,OAAO,CAClCC,QAAS,CACLC,KAAM,WACNC,QAAS,KACTC,SAAS,EACTC,SAAS,EACTC,MAAO,KACPC,QAAS,SACTC,KAAM,SACNC,aAAc,mBAGlBC,aAAclB,EAAMmB,KAAKC,eACzBC,GAAI,iBAGJC,MAAO,SAASA,GAKZ,MAJqB,iBAAVA,IACPA,EAAmB,SAAVA,GAGNnB,KAAKoB,MAAMC,MAAMrB,KAAM,CAACmB,GACnC,IAGJtB,EAAMyB,cAAcC,eAAe,WAAY,eAE/C1B,EAAMyB,cAAcE,eAAe,WAAY,CAAC,CAC5CC,KAAM,UACNC,OAAQ7B,EAAMyB,cAAcK,cAAcC,OAAO,CAAC,CAAC,OAAQ,aAG/D1B,EAAG2B,OAAO1B,EACb,CAtCD,CAsCGF,OAAOJ,MAAMiC,QAChB,IAAIC,EAAUlC,MAEdP,EAAQ0C,SAjDS,CACbC,GAAI,WACJ1B,KAAM,WACN2B,SAAU,MACVC,YAAa,8DACbC,QAAS,CAAE,kBAAmB,eA6ClC9C,EAAQ+C,QAAUN,EAElBO,OAAOC,eAAejD,EAAS,aAAc,CAAE6B,OAAO,GAEzD","ignoreList":[],"sourcesContent":["(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('kendo.toggleinputbase.js'), require('kendo.html.input.js')) :\n    typeof define === 'function' && define.amd ? define(['exports', 'kendo.toggleinputbase', 'kendo.html.input'], factory) :\n    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory((global.kendo = global.kendo || {}, global.kendo._globals = global.kendo._globals || {}, global.kendo._globals.Checkbox = {})));\n})(this, (function (exports) {\n    const __meta__ = {\n        id: \"checkbox\",\n        name: \"CheckBox\",\n        category: \"web\",\n        description: \"The CheckBox widget is used to display boolean value input.\",\n        depends: [ \"toggleinputbase\", \"html.input\" ]\n    };\n\n    (function($, undefined$1) {\n        var kendo = window.kendo,\n            ui = kendo.ui,\n            ToggleInputBase = ui.ToggleInputBase;\n\n        var CheckBox = ToggleInputBase.extend({\n            options: {\n                name: \"CheckBox\",\n                checked: null,\n                enabled: true,\n                encoded: true,\n                label: null,\n                rounded: \"medium\",\n                size: \"medium\",\n                wrapperClass: \"k-checkbox-wrap\"\n            },\n\n            RENDER_INPUT: kendo.html.renderCheckBox,\n            NS: \".kendoCheckBox\",\n\n            // alias for check, NG support\n            value: function(value) {\n                if (typeof value === \"string\") {\n                    value = (value === \"true\");\n                }\n\n                return this.check.apply(this, [value]);\n            }\n        });\n\n        kendo.cssProperties.registerPrefix(\"CheckBox\", \"k-checkbox-\");\n\n        kendo.cssProperties.registerValues(\"CheckBox\", [{\n            prop: \"rounded\",\n            values: kendo.cssProperties.roundedValues.concat([['full', 'full']])\n        }]);\n\n        ui.plugin(CheckBox);\n    })(window.kendo.jQuery);\n    var kendo$1 = kendo;\n\n    exports.__meta__ = __meta__;\n    exports.default = kendo$1;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n\n}));\n"]}