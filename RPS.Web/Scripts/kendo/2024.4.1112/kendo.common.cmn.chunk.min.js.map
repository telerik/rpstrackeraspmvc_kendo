{"version":3,"file":"kendo.common.cmn.chunk.min.js","names":["global","factory","exports","module","define","amd","globalThis","self","kendo","_globals","CommonCmnChunk","this","isWindowAvailable$1","window","agentRxs$1","wp","fire","android","iphone","ipad","meego","webos","blackberry","playbook","windows","tizen","sailfish","ffos","osRxs$1","ios","flat","desktopBrowserRxs$1","edge","webkit","safari","opera","msie","mozilla","mobileBrowserRxs$1","omini","omobile","firefox","mobilesafari","ie","chrome","testRx$1","agent","rxs","dflt","rx","hasOwnProperty","test","undefined","userAgent$1","navigator","userAgent","browser$1","ua","browserInfo","match","toLowerCase","split","version","parseInt","document","documentMode","detectDesktopBrowser$1","minorVersion","os","device","browser","name","majorVersion","replace","substr","flatVersion","Array","length","join","cordova","PhoneGap","appMode","standalone","location","protocol","detectMobileOS$1","MSPointerEvent","PointerEvent","getterCache$1","obj","reComment","reDeclaration","reDoubleQuoted","reSingleQuoted","isWindowAvailable","agentRxs","osRxs","desktopBrowserRxs","mobileBrowserRxs","testRx","detectMobileOS","detectDesktopBrowser","getterCache","__meta__","id","category","description","depends","hidden","chunk","a","b","d","p","styleString","property","value","styleObject","input","exec","trim"],"sources":["kendo.common.cmn.chunk.js"],"mappings":"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","ignoreList":[],"sourcesContent":["(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n  typeof define === 'function' && define.amd ? define(['exports'], factory) :\n  (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory((global.kendo = global.kendo || {}, global.kendo._globals = global.kendo._globals || {}, global.kendo._globals.CommonCmnChunk = {})));\n})(this, (function (exports) {\n  const __meta__ = {\n      id: \"common.cmn.chunk\",\n      name: \"CommonCmnChunk\",\n      category: \"web\",\n      description: \"A reusable outputed chunk of code\",\n      depends: [],\n      hidden: true,\n      chunk: true\n  };\n\n  /**\n   * @hidden\n   */\n  var isWindowAvailable$1 = function () {\n      return typeof window !== 'undefined';\n  };\n\n  /* tslint:disable:object-literal-sort-keys max-line-length */\n  var agentRxs$1 = {\n      wp: /(Windows Phone(?: OS)?)\\s(\\d+)\\.(\\d+(\\.\\d+)?)/,\n      fire: /(Silk)\\/(\\d+)\\.(\\d+(\\.\\d+)?)/,\n      android: /(Android|Android.*(?:Opera|Firefox).*?\\/)\\s*(\\d+)(\\.(\\d+(\\.\\d+)?))?/,\n      iphone: /(iPhone|iPod).*OS\\s+(\\d+)[\\._]([\\d\\._]+)/,\n      ipad: /(iPad).*OS\\s+(\\d+)[\\._]([\\d_]+)/,\n      meego: /(MeeGo).+NokiaBrowser\\/(\\d+)\\.([\\d\\._]+)/,\n      webos: /(webOS)\\/(\\d+)\\.(\\d+(\\.\\d+)?)/,\n      blackberry: /(BlackBerry|BB10).*?Version\\/(\\d+)\\.(\\d+(\\.\\d+)?)/,\n      playbook: /(PlayBook).*?Tablet\\s*OS\\s*(\\d+)\\.(\\d+(\\.\\d+)?)/,\n      windows: /(MSIE)\\s+(\\d+)\\.(\\d+(\\.\\d+)?)/,\n      tizen: /(tizen).*?Version\\/(\\d+)\\.(\\d+(\\.\\d+)?)/i,\n      sailfish: /(sailfish).*rv:(\\d+)\\.(\\d+(\\.\\d+)?).*firefox/i,\n      ffos: /(Mobile).*rv:(\\d+)\\.(\\d+(\\.\\d+)?).*Firefox/\n  };\n  var osRxs$1 = {\n      ios: /^i(phone|pad|pod)$/i,\n      android: /^android|fire$/i,\n      blackberry: /^blackberry|playbook/i,\n      windows: /windows/,\n      wp: /wp/,\n      flat: /sailfish|ffos|tizen/i,\n      meego: /meego/\n  };\n  var desktopBrowserRxs$1 = {\n      edge: /(edge)[ \\/]([\\w.]+)/i,\n      webkit: /(chrome)[ \\/]([\\w.]+)/i,\n      safari: /(webkit)[ \\/]([\\w.]+)/i,\n      opera: /(opera)(?:.*version|)[ \\/]([\\w.]+)/i,\n      msie: /(msie\\s|trident.*? rv:)([\\w.]+)/i,\n      mozilla: /(mozilla)(?:.*? rv:([\\w.]+)|)/i\n  };\n  var mobileBrowserRxs$1 = {\n      omini: /Opera\\sMini/i,\n      omobile: /Opera\\sMobi/i,\n      firefox: /Firefox|Fennec/i,\n      mobilesafari: /version\\/.*safari/i,\n      ie: /MSIE|Windows\\sPhone/i,\n      chrome: /chrome|crios/i,\n      webkit: /webkit/i\n  };\n  var testRx$1 = function (agent, rxs, dflt) {\n      for (var rx in rxs) {\n          if (rxs.hasOwnProperty(rx) && rxs[rx].test(agent)) {\n              return rx;\n          }\n      }\n      return dflt !== undefined ? dflt : agent;\n  };\n  /**\n   * A function that detects the mobile browser based on the given UserAgent.\n   *\n   * @param ua - The user agent string.\n   * @returns - A browser info object containing the browser type and version.\n   *\n   * @example\n   * ```ts-no-run\n   * const userAgent = 'Mozilla/5.0 (Linux; Android 8.0.0) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Focus/1.3 Chrome/61.0.3163.81 Mobile Safari/537.36';\n   * detectMobileOS(userAgent); // { android: true };\n   * ```\n   */\n  var detectMobileOS$1 = function (ua) {\n      var minorVersion;\n      var match = [];\n      for (var agent in agentRxs$1) {\n          if (agentRxs$1.hasOwnProperty(agent)) {\n              match = ua.match(agentRxs$1[agent]);\n              if (!match) {\n                  continue;\n              }\n              if (agent === 'windows' && 'plugins' in window.navigator) {\n                  return null;\n              } // Break if not Metro/Mobile Windows\n              var os = {};\n              os.device = agent;\n              os.browser = testRx$1(ua, mobileBrowserRxs$1, 'default');\n              os.name = testRx$1(agent, osRxs$1);\n              os[os.name] = true;\n              os.majorVersion = match[2];\n              os.minorVersion = match[3] ? match[3].replace('_', '.') : '.0';\n              minorVersion = os.minorVersion.replace('.', '').substr(0, 2);\n              os.flatVersion = os.majorVersion + minorVersion +\n                  (new Array(3 - (minorVersion.length < 3 ? minorVersion.length : 2)).join('0'));\n              os.cordova = typeof window.PhoneGap !== undefined\n                  || typeof window.cordova !== undefined; // Use file protocol to detect appModes.\n              os.appMode = window.navigator.standalone\n                  || (/file|local|wmapp/).test(window.location.protocol)\n                  || os.cordova; // Use file protocol to detect appModes.\n              return os;\n          }\n      }\n      return null;\n  };\n  /**\n   * A function that detects the desktop browser based on the given UserAgent.\n   *\n   * @param ua - The user agent string.\n   * @returns - A browser info object containing the browser type and version.\n   *\n   * @example\n   * ```ts-no-run\n   * const userAgent = 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_7_3) AppleWebKit/535.19 (KHTML, like Gecko) Chrome/18.0.1025.151 Safari/535.19';\n   * detectDesktopBrowser(userAgent); // { chrome: true, webkit: true };\n   * ```\n   */\n  var detectDesktopBrowser$1 = function (ua) {\n      var browserInfo = null;\n      var match = [];\n      for (var agent in desktopBrowserRxs$1) {\n          if (desktopBrowserRxs$1.hasOwnProperty(agent)) {\n              match = ua.match(desktopBrowserRxs$1[agent]);\n              if (match) {\n                  browserInfo = {};\n                  browserInfo[agent] = true;\n                  browserInfo[match[1].toLowerCase().split(' ')[0].split('/')[0]] = true;\n                  browserInfo.version = parseInt(document.documentMode || match[2], 10);\n                  break;\n              }\n          }\n      }\n      return browserInfo;\n  };\n  var userAgent$1 = isWindowAvailable$1() && window.navigator ? window.navigator.userAgent : null;\n  /**\n   * A constant holding the desktop browser info. The variable persists the result of the detectDesktopBrowser(window.navigator.userAgent) call.\n   * If no desktop browser is detected, the constant will be `null`.\n   */\n  var browser$1 = userAgent$1 ? detectDesktopBrowser$1(userAgent$1) : null;\n  /**\n   * A constant holding the mobile OS info. The variable persists the result of the detectMobileOS(window.navigator.userAgent) call.\n   * If no mobile OS is detected, the constant will be `null`.\n   */\n  var mobileOS$1 = userAgent$1 ? detectMobileOS$1(userAgent$1) : null;\n  /**\n   * A constant reporting the browser `touch` events support.\n   */\n  var touch$1 = isWindowAvailable$1() && 'ontouchstart' in window;\n  /**\n   * @hidden\n   * A constant reporting the browser `msPointers` events support.\n   */\n  var msPointers$1 = browser$1 && !browser$1.chrome && window.MSPointerEvent;\n  /**\n   * A constant reporting the browser `pointers` events support.\n   */\n  var pointers$1 = browser$1 && !browser$1.chrome && window.PointerEvent;\n  /**\n   * A constant reporting whether the browser is touch enabled.\n   */\n  var touchEnabled$1 = mobileOS$1 && (touch$1 || msPointers$1 || pointers$1);\n\n  var FIELD_REGEX$1 = /\\[(?:(\\d+)|['\"](.*?)['\"])\\]|((?:(?!\\[.*?\\]|\\.).)+)/g;\n  /**\n   * @hidden\n   */\n  function fieldList$1(field) {\n      var fields = [];\n      field.replace(FIELD_REGEX$1, function (_match, index, indexAccessor, fieldName) {\n          fields.push(index !== undefined ? index : (indexAccessor || fieldName));\n      });\n      return fields;\n  }\n\n  var getterCache$1 = {};\n  // tslint:disable-next-line:no-string-literal\n  getterCache$1['undefined'] = function (obj) { return obj; };\n  /**\n   * @hidden\n   */\n  function getter$1(field) {\n      if (getterCache$1[field]) {\n          return getterCache$1[field];\n      }\n      var fields = fieldList$1(field);\n      getterCache$1[field] = function (obj) {\n          var result = obj;\n          for (var idx = 0; idx < fields.length && result; idx++) {\n              result = result[fields[idx]];\n          }\n          return result;\n      };\n      return getterCache$1[field];\n  }\n\n  var setterCache$1 = {};\n  // tslint:disable-next-line:no-string-literal\n  setterCache$1['undefined'] = function (obj) { return obj; };\n  var defaultValue$1 = function (nextField, options) {\n      return options && options.arrays && !isNaN(Number(nextField)) ? [] : {};\n  };\n  /**\n   * @hidden\n   */\n  function setter$1(field) {\n      if (setterCache$1[field]) {\n          return setterCache$1[field];\n      }\n      var fields = fieldList$1(field);\n      setterCache$1[field] = function (obj, value, options) {\n          var root = obj;\n          var depth = fields.length - 1;\n          for (var idx = 0; idx < depth && root; idx++) {\n              root = root[fields[idx]] = root[fields[idx]] || defaultValue$1(fields[idx + 1], options);\n          }\n          root[fields[depth]] = value;\n      };\n      return setterCache$1[field];\n  }\n\n  var reComment = /\\/\\*[\\s\\S]*?\\*\\//g;\n  /*\n  ([^\\s:;]+?)\\s*:\\s*         # Property name and colon\n  (\n    (?:\n      (?:                    # Begin alternation\n        url\\(                # Match 'url('\n          \\s*\n          (?:\n            (?:[^\"')\\\\]|\\\\.)*  # Content inside url(), excluding quotes and closing parenthesis\n            |\n            \"(?:[^\"\\\\]|\\\\.)*\"  # Double-quoted strings, handling escaped characters\n            |\n            '(?:[^'\\\\]|\\\\.)*'  # Single-quoted strings, handling escaped characters\n          )\n          \\s*\n        \\)\n        |\n        \"(?:[^\"\\\\]|\\\\.)*\"     # Double-quoted strings, handling escaped characters\n        |\n        '(?:[^'\\\\]|\\\\.)*'     # Single-quoted strings, handling escaped characters\n        |\n        [^;\"']                # Any character except ';', double or single quotes\n      )*?                     # Repeat zero or more times, non-greedy\n      \\s*\n    )\n  )\n  (?=;|$)                     # Lookahead for ';' or end of string\n  */\n  var reDeclaration = /([^\\s:;]+?)\\s*:\\s*((?:(?:url\\(\\s*(?:(?:[^\"')\\\\]|\\\\.)*|\"(?:[^\"\\\\]|\\\\.)*\"|'(?:[^'\\\\]|\\\\.)*')\\s*\\)|\"(?:[^\"\\\\]|\\\\.)*\"|'(?:[^'\\\\]|\\\\.)*'|[^;\"'])*?)\\s*)(?=;|$)/gi;\n  var reDoubleQuoted = /&quot;|&#34;|&#x22;/gi;\n  var reSingleQuoted = /&apos;|&#39;|&#x27;/gi;\n  var doubleQuote = '\"';\n  var singleQuote = \"'\";\n  var empty = '';\n  function replaceQuoteEntities(str) {\n      return str.replace(reDoubleQuoted, doubleQuote)\n          .replace(reSingleQuoted, singleQuote);\n  }\n  /**\n   * Parse inline styles string into object.\n   *\n   * @param styleString - inline styles string\n   * @returns object with styles\n   */\n  function parseInlineStyles(styleString) {\n      var styleObject = {};\n      var input = replaceQuoteEntities((styleString || empty).replace(reComment, empty));\n      var match = reDeclaration.exec(input), property, value;\n      while (match !== null) {\n          property = match[1].trim();\n          value = match[2].trim();\n          styleObject[property] = value;\n          match = reDeclaration.exec(input);\n      }\n      return styleObject;\n  }\n\n  /**\n   * @hidden\n   */\n  var isWindowAvailable = function () {\n      return typeof window !== 'undefined';\n  };\n\n  /* tslint:disable:object-literal-sort-keys max-line-length */\n  var agentRxs = {\n      wp: /(Windows Phone(?: OS)?)\\s(\\d+)\\.(\\d+(\\.\\d+)?)/,\n      fire: /(Silk)\\/(\\d+)\\.(\\d+(\\.\\d+)?)/,\n      android: /(Android|Android.*(?:Opera|Firefox).*?\\/)\\s*(\\d+)(\\.(\\d+(\\.\\d+)?))?/,\n      iphone: /(iPhone|iPod).*OS\\s+(\\d+)[\\._]([\\d\\._]+)/,\n      ipad: /(iPad).*OS\\s+(\\d+)[\\._]([\\d_]+)/,\n      meego: /(MeeGo).+NokiaBrowser\\/(\\d+)\\.([\\d\\._]+)/,\n      webos: /(webOS)\\/(\\d+)\\.(\\d+(\\.\\d+)?)/,\n      blackberry: /(BlackBerry|BB10).*?Version\\/(\\d+)\\.(\\d+(\\.\\d+)?)/,\n      playbook: /(PlayBook).*?Tablet\\s*OS\\s*(\\d+)\\.(\\d+(\\.\\d+)?)/,\n      windows: /(MSIE)\\s+(\\d+)\\.(\\d+(\\.\\d+)?)/,\n      tizen: /(tizen).*?Version\\/(\\d+)\\.(\\d+(\\.\\d+)?)/i,\n      sailfish: /(sailfish).*rv:(\\d+)\\.(\\d+(\\.\\d+)?).*firefox/i,\n      ffos: /(Mobile).*rv:(\\d+)\\.(\\d+(\\.\\d+)?).*Firefox/\n  };\n  var osRxs = {\n      ios: /^i(phone|pad|pod)$/i,\n      android: /^android|fire$/i,\n      blackberry: /^blackberry|playbook/i,\n      windows: /windows/,\n      wp: /wp/,\n      flat: /sailfish|ffos|tizen/i,\n      meego: /meego/\n  };\n  var desktopBrowserRxs = {\n      edge: /(edge)[ \\/]([\\w.]+)/i,\n      webkit: /(chrome)[ \\/]([\\w.]+)/i,\n      safari: /(webkit)[ \\/]([\\w.]+)/i,\n      opera: /(opera)(?:.*version|)[ \\/]([\\w.]+)/i,\n      msie: /(msie\\s|trident.*? rv:)([\\w.]+)/i,\n      mozilla: /(mozilla)(?:.*? rv:([\\w.]+)|)/i\n  };\n  var mobileBrowserRxs = {\n      omini: /Opera\\sMini/i,\n      omobile: /Opera\\sMobi/i,\n      firefox: /Firefox|Fennec/i,\n      mobilesafari: /version\\/.*safari/i,\n      ie: /MSIE|Windows\\sPhone/i,\n      chrome: /chrome|crios/i,\n      webkit: /webkit/i\n  };\n  var testRx = function (agent, rxs, dflt) {\n      for (var rx in rxs) {\n          if (rxs.hasOwnProperty(rx) && rxs[rx].test(agent)) {\n              return rx;\n          }\n      }\n      return dflt !== undefined ? dflt : agent;\n  };\n  /**\n   * A function that detects the mobile browser based on the given UserAgent.\n   *\n   * @param ua - The user agent string.\n   * @returns - A browser info object containing the browser type and version.\n   *\n   * @example\n   * ```ts-no-run\n   * const userAgent = 'Mozilla/5.0 (Linux; Android 8.0.0) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Focus/1.3 Chrome/61.0.3163.81 Mobile Safari/537.36';\n   * detectMobileOS(userAgent); // { android: true };\n   * ```\n   */\n  var detectMobileOS = function (ua) {\n      var minorVersion;\n      var match = [];\n      for (var agent in agentRxs) {\n          if (agentRxs.hasOwnProperty(agent)) {\n              match = ua.match(agentRxs[agent]);\n              if (!match) {\n                  continue;\n              }\n              if (agent === 'windows' && 'plugins' in window.navigator) {\n                  return null;\n              } // Break if not Metro/Mobile Windows\n              var os = {};\n              os.device = agent;\n              os.browser = testRx(ua, mobileBrowserRxs, 'default');\n              os.name = testRx(agent, osRxs);\n              os[os.name] = true;\n              os.majorVersion = match[2];\n              os.minorVersion = match[3] ? match[3].replace('_', '.') : '.0';\n              minorVersion = os.minorVersion.replace('.', '').substr(0, 2);\n              os.flatVersion = os.majorVersion + minorVersion +\n                  (new Array(3 - (minorVersion.length < 3 ? minorVersion.length : 2)).join('0'));\n              os.cordova = typeof window.PhoneGap !== undefined\n                  || typeof window.cordova !== undefined; // Use file protocol to detect appModes.\n              os.appMode = window.navigator.standalone\n                  || (/file|local|wmapp/).test(window.location.protocol)\n                  || os.cordova; // Use file protocol to detect appModes.\n              return os;\n          }\n      }\n      return null;\n  };\n  /**\n   * A function that detects the desktop browser based on the given UserAgent.\n   *\n   * @param ua - The user agent string.\n   * @returns - A browser info object containing the browser type and version.\n   *\n   * @example\n   * ```ts-no-run\n   * const userAgent = 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_7_3) AppleWebKit/535.19 (KHTML, like Gecko) Chrome/18.0.1025.151 Safari/535.19';\n   * detectDesktopBrowser(userAgent); // { chrome: true, webkit: true };\n   * ```\n   */\n  var detectDesktopBrowser = function (ua) {\n      var browserInfo = null;\n      var match = [];\n      for (var agent in desktopBrowserRxs) {\n          if (desktopBrowserRxs.hasOwnProperty(agent)) {\n              match = ua.match(desktopBrowserRxs[agent]);\n              if (match) {\n                  browserInfo = {};\n                  browserInfo[agent] = true;\n                  browserInfo[match[1].toLowerCase().split(' ')[0].split('/')[0]] = true;\n                  browserInfo.version = parseInt(document.documentMode || match[2], 10);\n                  break;\n              }\n          }\n      }\n      return browserInfo;\n  };\n  var userAgent = isWindowAvailable() && window.navigator ? window.navigator.userAgent : null;\n  /**\n   * A constant holding the desktop browser info. The variable persists the result of the detectDesktopBrowser(window.navigator.userAgent) call.\n   * If no desktop browser is detected, the constant will be `null`.\n   */\n  var browser = userAgent ? detectDesktopBrowser(userAgent) : null;\n  /**\n   * A constant holding the mobile OS info. The variable persists the result of the detectMobileOS(window.navigator.userAgent) call.\n   * If no mobile OS is detected, the constant will be `null`.\n   */\n  var mobileOS = userAgent ? detectMobileOS(userAgent) : null;\n  /**\n   * A constant reporting the browser `touch` events support.\n   */\n  var touch = isWindowAvailable() && 'ontouchstart' in window;\n  /**\n   * @hidden\n   * A constant reporting the browser `msPointers` events support.\n   */\n  var msPointers = browser && !browser.chrome && window.MSPointerEvent;\n  /**\n   * A constant reporting the browser `pointers` events support.\n   */\n  var pointers = browser && !browser.chrome && window.PointerEvent;\n  /**\n   * A constant reporting whether the browser is touch enabled.\n   */\n  var touchEnabled = mobileOS && (touch || msPointers || pointers);\n\n  var FIELD_REGEX = /\\[(?:(\\d+)|['\"](.*?)['\"])\\]|((?:(?!\\[.*?\\]|\\.).)+)/g;\n  /**\n   * @hidden\n   */\n  function fieldList(field) {\n      var fields = [];\n      field.replace(FIELD_REGEX, function (_match, index, indexAccessor, fieldName) {\n          fields.push(index !== undefined ? index : (indexAccessor || fieldName));\n      });\n      return fields;\n  }\n\n  var getterCache = {};\n  // tslint:disable-next-line:no-string-literal\n  getterCache['undefined'] = function (obj) { return obj; };\n  /**\n   * @hidden\n   */\n  function getter(field) {\n      if (getterCache[field]) {\n          return getterCache[field];\n      }\n      var fields = fieldList(field);\n      getterCache[field] = function (obj) {\n          var result = obj;\n          for (var idx = 0; idx < fields.length && result; idx++) {\n              result = result[fields[idx]];\n          }\n          return result;\n      };\n      return getterCache[field];\n  }\n\n  var setterCache = {};\n  // tslint:disable-next-line:no-string-literal\n  setterCache['undefined'] = function (obj) { return obj; };\n  var defaultValue = function (nextField, options) {\n      return options && options.arrays && !isNaN(Number(nextField)) ? [] : {};\n  };\n  /**\n   * @hidden\n   */\n  function setter(field) {\n      if (setterCache[field]) {\n          return setterCache[field];\n      }\n      var fields = fieldList(field);\n      setterCache[field] = function (obj, value, options) {\n          var root = obj;\n          var depth = fields.length - 1;\n          for (var idx = 0; idx < depth && root; idx++) {\n              root = root[fields[idx]] = root[fields[idx]] || defaultValue(fields[idx + 1], options);\n          }\n          root[fields[depth]] = value;\n      };\n      return setterCache[field];\n  }\n\n  exports.__meta__ = __meta__;\n  exports.a = detectMobileOS;\n  exports.b = browser$1;\n  exports.d = detectDesktopBrowser;\n  exports.p = parseInlineStyles;\n\n}));\n"]}