{"version":3,"file":"kendo.autocomplete.min.js","names":["global","factory","exports","module","require","define","amd","globalThis","self","kendo","_globals","Autocomplete","List","MobileScroller","Virtuallist","PrefixSuffixContainersChunk","this","kendo_list_js","kendo_mobile_scroller_js","kendo_virtuallist_js","kendo_prefixSuffixContainers_chunk_js","$","undefined$1","window","encode","htmlEncode","support","caret","activeElement","_activeElement","placeholderSupported","placeholder","ui","keys","DataSource","data","ARIA_DISABLED","ARIA_READONLY","CHANGE","DISABLED","READONLY","FOCUSED","STATEDISABLED","ns","HOVEREVENTS","indexOfWordAtCaret","caretIdx","text","separator","substring","split","length","AutoComplete","extend","init","element","options","wrapper","that","Array","isArray","dataSource","fn","call","attr","_wrapper","_clearButton","_dataSource","_ignoreCase","type","_popup","addClass","on","_keydown","bind","_keypress","_search","_prev","_accessor","_oldText","_placeholder","ev","filterInput","relatedTarget","_change","close","removeClass","autocomplete","role","_clear","_clearValue","_clearValueMouseDownHandler","_enable","_old","_initList","parents","is","enable","listView","e","preventDefault","_resetFocusItemHandler","_resetFocusItem","a","widget","prefixInsertBefore","_inputValuesContainer","suffixInsertAfter","clearButton","notify","_toggleCloseVisibility","_applyCssClasses","label","_label","_aria","name","enabled","suggest","template","groupTemplate","fixedGroupTemplate","prefixOptions","suffixOptions","dataTextField","minLength","enforceMinLength","delay","height","filter","ignoreCase","highlightFirst","animation","virtual","value","autoWidth","popup","size","fillMode","rounded","currentTarget","classList","contains","_clearValueTrigger","_onActionSheetCreate","val","trigger","_onCloseButtonPressed","_refreshHandler","_unbindDataSource","_progressHandler","_showBusy","_errorHandler","_hideBusy","create","setDataSource","events","setOptions","listOptions","_listOptions","_accessors","skipUpdateOnBind","dataValueField","selectedItemChange","_editable","off","readonly","disable","_toggleHover","prop","current","focus","_deactivateItem","destroy","refresh","select","li","_select","search","word","lowerCaseValue","_separator","accentFoldingFiltering","clearTimeout","_typingTimeout","wordAtCaret","_open","_mute","toLocaleLowerCase","toLowerCase","_filterSource","operator","field","one","_unifySeparators","idx","key","_last","currentValue","words","wordIndex","selectionEnd","BACKSPACE","DELETE","view","inArray","ul","_text","indexOf","lastIndexOf","_defaultSeparator","toString","push","lastSeparator","matchAll","source","pop","slice","join","_refreshFloatingLabel","_click","item","dataItem","dataItemByIndex","getElementIndex","_active","done","_blur","_clearText","noop","_highlightFirst","index","scrollTo","_listBound","action","flatView","groupsLength","_group","isActive","_renderFooter","_renderNoData","_toggleNoData","_toggleHeader","_resizePopup","position","_inputValue","_allowOpening","unbind","_touchScroller","reset","callback","_muted","_listChange","_selectValue","selectedDataItems","defaultSeparator","splice","replaceWordAtCaret","_preselect","oldText","setValue","unifyType","valueUpdated","_typing","itemSelected","clearValueTrigger","typing","className","keyCode","visible","DOWN","_move","open","ESC","altKey","UP","HOME","END","ENTER","TAB","PAGEDOWN","PAGEUP","_hovered","direction","scrollWith","screenHeight","_view","show","toggleClass","document","RegExp","setTimeout","candidate","insertAfter","preventShow","_showClear","_hideClear","DOMelement","parent","wrap","style","cssText","css","width","_focused","plugin","cssProperties","registerPrefix","registerValues","values","roundedValues","concat","jQuery","kendo$1","__meta__","id","category","description","depends","features","default","Object","defineProperty"],"sources":["kendo.autocomplete.js"],"mappings":"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","ignoreList":[],"sourcesContent":["(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('kendo.list.js'), require('kendo.mobile.scroller.js'), require('kendo.virtuallist.js'), require('kendo.prefix-suffix-containers.chunk.js')) :\n    typeof define === 'function' && define.amd ? define(['exports', 'kendo.list', 'kendo.mobile.scroller', 'kendo.virtuallist', 'kendo.prefix-suffix-containers.chunk'], factory) :\n    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory((global.kendo = global.kendo || {}, global.kendo._globals = global.kendo._globals || {}, global.kendo._globals.Autocomplete = {}), global.kendo._globals.List, global.kendo._globals.MobileScroller, global.kendo._globals.Virtuallist, global.kendo._globals.PrefixSuffixContainersChunk));\n})(this, (function (exports, kendo_list_js, kendo_mobile_scroller_js, kendo_virtuallist_js, kendo_prefixSuffixContainers_chunk_js) {\n    const __meta__ = {\n        id: \"autocomplete\",\n        name: \"AutoComplete\",\n        category: \"web\",\n        description: \"The AutoComplete widget provides suggestions depending on the typed text.It also allows multiple value entries.\",\n        depends: [\"list\", \"prefix-suffix-containers.chunk\"],\n        features: [ {\n            id: \"mobile-scroller\",\n            name: \"Mobile scroller\",\n            description: \"Support for kinetic scrolling in mobile device\",\n            depends: [ \"mobile.scroller\" ]\n        }, {\n            id: \"virtualization\",\n            name: \"VirtualList\",\n            description: \"Support for virtualization\",\n            depends: [ \"virtuallist\" ]\n        } ]\n    };\n\n    (function($, undefined$1) {\n        var kendo = window.kendo,\n            encode = kendo.htmlEncode,\n            support = kendo.support,\n            caret = kendo.caret,\n            activeElement = kendo._activeElement,\n            placeholderSupported = support.placeholder,\n            ui = kendo.ui,\n            List = ui.List,\n            keys = kendo.keys,\n            DataSource = kendo.data.DataSource,\n            ARIA_DISABLED = \"aria-disabled\",\n            ARIA_READONLY = \"aria-readonly\",\n            CHANGE = \"change\",\n            DISABLED = \"disabled\",\n            READONLY = \"readonly\",\n            FOCUSED = \"k-focus\",\n            SELECTED = \"k-selected\",\n            STATEDISABLED = \"k-disabled\",\n            AUTOCOMPLETEVALUE = \"off\",\n            HOVER = \"k-hover\",\n            ns = \".kendoAutoComplete\",\n            HOVEREVENTS = \"mouseenter\" + ns + \" mouseleave\" + ns;\n\n        function indexOfWordAtCaret(caretIdx, text, separator) {\n            return separator ? text.substring(0, caretIdx).split(separator).length - 1 : 0;\n        }\n\n        function wordAtCaret(caretIdx, text, separator) {\n            return text.split(separator)[indexOfWordAtCaret(caretIdx, text, separator)];\n        }\n\n        function replaceWordAtCaret(caretIdx, text, word, separator, defaultSeparator) {\n            var words = text.split(separator);\n\n            words.splice(indexOfWordAtCaret(caretIdx, text, separator), 1, word);\n\n            if (separator && words[words.length - 1] !== \"\") {\n                words.push(\"\");\n            }\n\n            return words.join(defaultSeparator);\n        }\n\n        var AutoComplete = List.extend({\n            init: function(element, options) {\n                var that = this, wrapper, disabled;\n\n                that.ns = ns;\n                options = Array.isArray(options) ? { dataSource: options } : options;\n\n                List.fn.init.call(that, element, options);\n\n                element = that.element;\n                options = that.options;\n\n                options.placeholder = options.placeholder || element.attr(\"placeholder\");\n                if (placeholderSupported) {\n                    element.attr(\"placeholder\", options.placeholder);\n                }\n\n                that._wrapper();\n                that._clearButton();\n\n                that._dataSource();\n                that._ignoreCase();\n\n                element[0].type = \"text\";\n                wrapper = that.wrapper;\n\n                that._popup();\n\n                element\n                    .addClass(\"k-input-inner\")\n                    .on(\"keydown\" + ns, that._keydown.bind(that))\n                    .on(\"keypress\" + ns, that._keypress.bind(that))\n                    .on(\"input\" + ns, that._search.bind(that))\n                    .on(\"paste\" + ns, that._search.bind(that))\n                    .on(\"focus\" + ns, function() {\n                        that._prev = that._accessor();\n                        that._oldText = that._prev;\n                        that._placeholder(false);\n                        wrapper.addClass(FOCUSED);\n                    })\n                    .on(\"focusout\" + ns, function(ev) {\n                        if (that.filterInput && ev.relatedTarget === that.filterInput[0]) {\n                            return;\n                        }\n\n                        that._change();\n                        that._placeholder();\n                        that.close();\n                        wrapper.removeClass(FOCUSED);\n                    })\n                    .attr({\n                        autocomplete: AUTOCOMPLETEVALUE,\n                        role: \"combobox\",\n                        \"aria-expanded\": false\n                    });\n\n                that._clear.on(\"click\" + ns + \" touchend\" + ns, that._clearValue.bind(that));\n                that._clear.on(\"mousedown\" + ns, that._clearValueMouseDownHandler.bind(that));\n                that._enable();\n\n                that._old = that._accessor();\n\n                that._placeholder();\n\n                that._initList();\n\n                disabled = $(that.element).parents(\"fieldset\").is(':disabled');\n\n                if (disabled) {\n                    that.enable(false);\n                }\n\n                that.listView.bind(\"click\", function(e) { e.preventDefault(); });\n\n                that._resetFocusItemHandler = that._resetFocusItem.bind(that);\n                kendo_prefixSuffixContainers_chunk_js.a({ widget: that, wrapper: that.wrapper, options: that.options, prefixInsertBefore: that._inputValuesContainer, suffixInsertAfter: options.clearButton ? that._clear : that.element });\n\n                kendo.notify(that);\n                that._toggleCloseVisibility();\n                that._applyCssClasses();\n\n                if (options.label) {\n                    that._label();\n                }\n\n                that._aria();\n            },\n\n            options: {\n                name: \"AutoComplete\",\n                enabled: true,\n                suggest: false,\n                template: \"\",\n                groupTemplate: (data) => encode(data),\n                fixedGroupTemplate: (data) => encode(data),\n                prefixOptions: {\n                    separator: true\n                },\n                suffixOptions: {\n                    separator: true\n                },\n                dataTextField: \"\",\n                minLength: 1,\n                enforceMinLength: false,\n                delay: 200,\n                height: 200,\n                filter: \"startswith\",\n                ignoreCase: true,\n                highlightFirst: false,\n                separator: null,\n                placeholder: \"\",\n                animation: {},\n                virtual: false,\n                value: null,\n                clearButton: true,\n                autoWidth: false,\n                popup: null,\n                size: \"medium\",\n                fillMode: \"solid\",\n                rounded: \"medium\",\n                label: null,\n            },\n\n            _clearValueMouseDownHandler: function(ev) {\n                var that = this;\n\n                if (ev && ev.currentTarget && ev.currentTarget.classList.contains('k-clear-value')) {\n                    that._clearValueTrigger = true;\n                } else {\n                    that._clearValueTrigger = false;\n                }\n            },\n\n            _onActionSheetCreate: function() {\n                var that = this;\n\n                if (that.filterInput) {\n                    that.filterInput\n                        .on(\"keydown\" + ns, that._keydown.bind(that))\n                        .on(\"keypress\" + ns, that._keypress.bind(that))\n                        .on(\"input\" + ns, that._search.bind(that))\n                        .on(\"paste\" + ns, that._search.bind(that))\n                        .attr({\n                            autocomplete: AUTOCOMPLETEVALUE,\n                            role: \"combobox\",\n                            \"aria-expanded\": false\n                        });\n\n                    that.popup.bind(\"activate\", () => {\n                        that.filterInput.val(that.element.val());\n                        that.filterInput.trigger(\"focus\");\n                    });\n\n                    that.popup.bind(\"deactivate\", () => {\n                        that.element.trigger(\"focus\");\n                    });\n                }\n            },\n\n            _onCloseButtonPressed: function() {\n                var that = this;\n\n                if (that.filterInput && activeElement() === that.filterInput[0]) {\n                    that.element.val(that.filterInput.val());\n                }\n            },\n\n            _popup: function() {\n                List.fn._popup.call(this);\n                this.popup.element.addClass(\"k-autocomplete-popup\");\n            },\n\n            _dataSource: function() {\n                var that = this;\n\n                if (that.dataSource && that._refreshHandler) {\n                    that._unbindDataSource();\n                } else {\n                    that._progressHandler = that._showBusy;\n                    that._errorHandler = that._hideBusy;\n                }\n\n                that.dataSource = DataSource.create(that.options.dataSource)\n                    .bind(\"progress\", that._progressHandler)\n                    .bind(\"error\", that._errorHandler);\n            },\n\n            setDataSource: function(dataSource) {\n                this.options.dataSource = dataSource;\n                this._dataSource();\n\n                this.listView.setDataSource(this.dataSource);\n            },\n\n            events: [\n                \"open\",\n                \"close\",\n                CHANGE,\n                \"select\",\n                \"filtering\",\n                \"dataBinding\",\n                \"dataBound\"\n            ],\n\n            setOptions: function(options) {\n                var listOptions = this._listOptions(options);\n\n                List.fn.setOptions.call(this, options);\n\n                this.listView.setOptions(listOptions);\n                this._accessors();\n                this._aria();\n                this._clearButton();\n            },\n\n            _listOptions: function(options) {\n                var listOptions = List.fn._listOptions.call(this, $.extend(options, {\n                    skipUpdateOnBind: true\n                }));\n\n                listOptions.dataValueField = listOptions.dataTextField;\n                listOptions.selectedItemChange = null;\n\n                return listOptions;\n            },\n\n            _editable: function(options) {\n                var that = this,\n                    element = that.element,\n                    wrapper = that.wrapper.off(ns),\n                    readonly = options.readonly,\n                    disable = options.disable;\n\n                if (!readonly && !disable) {\n                    wrapper\n                        .removeClass(STATEDISABLED)\n                        .on(HOVEREVENTS, that._toggleHover);\n\n                    element.prop(DISABLED, false)\n                           .prop(READONLY, false)\n                           .attr(ARIA_DISABLED, false)\n                           .attr(ARIA_READONLY, false);\n                } else {\n                    wrapper\n                        .addClass(disable ? STATEDISABLED : \"\")\n                        .removeClass(disable ? \"\" : STATEDISABLED);\n\n                    element.attr(DISABLED, disable)\n                           .attr(READONLY, readonly)\n                           .attr(ARIA_DISABLED, disable)\n                           .attr(ARIA_READONLY, readonly);\n                }\n\n                that._toggleCloseVisibility();\n            },\n\n            close: function() {\n                var that = this;\n                var current = that.listView.focus();\n\n                if (current) {\n                    current.removeClass(SELECTED);\n                }\n\n                that.popup.close();\n                that._deactivateItem();\n            },\n\n            destroy: function() {\n                var that = this;\n\n                that.element.off(ns);\n                that._clear.off(ns);\n                that.wrapper.off(ns);\n\n                if (that.filterInput) {\n                    that.filterInput.off(ns);\n                }\n\n                List.fn.destroy.call(that);\n            },\n\n            refresh: function() {\n                this.listView.refresh();\n            },\n\n            select: function(li) {\n                this._select(li);\n            },\n\n            search: function(word) {\n                let that = this,\n                options = that.options,\n                ignoreCase = options.ignoreCase,\n                separator = that._separator(),\n                length,\n                lowerCaseValue,\n                accentFoldingFiltering = that.dataSource.options.accentFoldingFiltering,\n                element = that.filterInput && activeElement() === that.filterInput[0] ? that.filterInput : that.element;\n\n                word = word || that._accessor();\n\n                clearTimeout(that._typingTimeout);\n\n                if (separator) {\n                    word = wordAtCaret(caret(element)[0], word, separator);\n                }\n\n                length = word.length;\n\n                if ((!options.enforceMinLength && !length) || length >= options.minLength) {\n                    that._open = true;\n\n                    that._mute(function() {\n                        this.listView.value([]);\n                    });\n\n                    lowerCaseValue = accentFoldingFiltering ? word.toLocaleLowerCase(accentFoldingFiltering) : word.toLowerCase();\n\n                    that._filterSource({\n                        value: ignoreCase ? lowerCaseValue : word,\n                        operator: options.filter,\n                        field: options.dataTextField,\n                        ignoreCase: ignoreCase\n                    });\n\n                    that.one(\"close\", that._unifySeparators.bind(that));\n                }\n                that._toggleCloseVisibility();\n            },\n\n            suggest: function(word) {\n                var that = this,\n                    key = that._last,\n                    value = that._accessor(),\n                    currentValue = that.value(),\n                    element = that.element[0],\n                    caretIdx = caret(element)[0],\n                    separator = that._separator(),\n                    words = value.split(separator),\n                    wordIndex = indexOfWordAtCaret(caretIdx, value, separator),\n                    selectionEnd = caretIdx,\n                    idx,\n                    accentFoldingFiltering = that.dataSource.options.accentFoldingFiltering;\n\n                if (key == keys.BACKSPACE || key == keys.DELETE) {\n                    that._last = undefined$1;\n                    return;\n                }\n\n                word = word || \"\";\n\n                if (typeof word !== \"string\") {\n                    if (word[0]) {\n                        word = that.dataSource.view()[List.inArray(word[0], that.ul[0])];\n                    }\n\n                    word = word ? that._text(word) : \"\";\n                }\n\n                if (caretIdx <= 0) {\n                    caretIdx = (accentFoldingFiltering ? value.toLocaleLowerCase(accentFoldingFiltering) : value.toLowerCase()).indexOf(accentFoldingFiltering ? word.toLocaleLowerCase(accentFoldingFiltering) : word.toLowerCase()) + 1;\n                }\n\n                idx = value.substring(0, caretIdx).lastIndexOf(that._defaultSeparator());\n                idx = idx > -1 ? caretIdx - (idx + that._defaultSeparator().length) : caretIdx;\n                value = words[wordIndex].substring(0, idx);\n\n                if (word) {\n                    word = word.toString();\n                    idx = (accentFoldingFiltering ? word.toLocaleLowerCase(accentFoldingFiltering) : word.toLowerCase()).indexOf(accentFoldingFiltering ? value.toLocaleLowerCase(accentFoldingFiltering) : value.toLowerCase());\n                    if (idx > -1) {\n                        word = word.substring(idx + value.length);\n\n                        selectionEnd = caretIdx + word.length;\n\n                        value += word;\n                    }\n\n                    if (separator && words[words.length - 1] !== \"\") {\n                        words.push(\"\");\n                    }\n\n                }\n\n                words[wordIndex] = value;\n\n                if (typeof that.options.separator == 'object' && that.options.separator != null) {\n                    if (currentValue.length > 1) {\n                        let lastSeparator = [...currentValue.matchAll(separator.source)].pop();\n                        if (lastSeparator) {\n                            that._accessor(words.slice(0, -1).join(that._defaultSeparator() || \"\") + lastSeparator + words[words.length - 1]);\n                        } else {\n                            that._accessor(words.slice(0, -1).join(that._defaultSeparator() || \"\"));\n                        }\n                    } else {\n                      that._accessor(words.join(this._defaultSeparator() || \"\"));\n                    }\n                } else {\n                    that._accessor(words.join(separator || \"\"));\n                }\n\n                if (element === activeElement()) {\n                    caret(element, caretIdx, selectionEnd);\n                }\n            },\n\n            value: function(value) {\n                if (value !== undefined$1) {\n                    this.listView.value(value);\n\n                    this._accessor(value);\n                    this._old = this._accessor();\n                    this._oldText = this._accessor();\n                } else {\n                    return this._accessor();\n                }\n                this._toggleCloseVisibility();\n                this._refreshFloatingLabel();\n            },\n\n            _click: function(e) {\n                var item = e.item;\n                var that = this;\n                var element = that.element;\n                var dataItem = that.listView.dataItemByIndex(that.listView.getElementIndex(item));\n\n                e.preventDefault();\n\n                that._active = true;\n\n                if (that.trigger(\"select\", { dataItem: dataItem, item: item })) {\n                    that.close();\n                    return;\n                }\n                that._oldText = element.val();\n                that._select(item).done(function() {\n                    that._blur();\n\n                    caret(element, element.val().length);\n                });\n            },\n\n            _clearText: $.noop,\n\n            _highlightFirst: function() {\n                var index = this.options.highlightFirst ? 0 : -1;\n\n                this.listView.focus(index);\n            },\n\n            _resetFocusItem: function() {\n                if (this.options.virtual) {\n                    this.listView.scrollTo(0);\n                }\n\n                this._highlightFirst();\n            },\n\n            _listBound: function() {\n                var that = this;\n                var popup = that.popup;\n                var options = that.options;\n                var data = that.dataSource.flatView();\n                var length = data.length;\n                var groupsLength = that.dataSource._group ? that.dataSource._group.length : 0;\n                var isActive = that.element[0] === activeElement() || that.filterInput && that.filterInput[0] === activeElement();\n                var action;\n\n                that._renderFooter();\n                that._renderNoData();\n                that._toggleNoData(!length);\n                that._toggleHeader(!!groupsLength && !!length);\n\n                that._resizePopup();\n\n                popup.position();\n\n                if (length) {\n                    if (options.suggest && isActive && that._inputValue()) {\n                        that.suggest(data[0]);\n                    }\n\n                    that._highlightFirst();\n                }\n\n                if (that._open) {\n                    that._open = false;\n                    action = that._allowOpening() ? \"open\" : \"close\";\n\n                    if (that._typingTimeout && !isActive) {\n                        action = \"close\";\n                    }\n\n                    if (length) {\n                        that._resetFocusItem();\n\n                        if (options.virtual) {\n                            that.popup\n                                .unbind(\"activate\", that._resetFocusItemHandler)\n                                .one(\"activate\", that._resetFocusItemHandler);\n                        }\n                    }\n\n                    popup[action]();\n                    that._typingTimeout = undefined$1;\n                }\n\n                if (that._touchScroller) {\n                    that._touchScroller.reset();\n                }\n\n                that._hideBusy();\n\n                that.trigger(\"dataBound\");\n            },\n\n            _mute: function(callback) {\n                this._muted = true;\n                callback.call(this);\n                this._muted = false;\n            },\n\n            _listChange: function() {\n                var isActive = this._active || this.element[0] === activeElement();\n\n                if (isActive && !this._muted) {\n                    this._selectValue(this.listView.selectedDataItems()[0]);\n                }\n            },\n\n            _selectValue: function(dataItem) {\n                var separator = this._separator();\n                var text = \"\";\n\n                if (dataItem) {\n                    text = this._text(dataItem);\n                }\n\n                if (text === null) {\n                    text = \"\";\n                }\n\n                if (separator) {\n                    text = replaceWordAtCaret(caret(this.element)[0], this._accessor(), text, separator, this._defaultSeparator());\n                }\n\n                this._prev = text;\n                this._accessor(text);\n                this._placeholder();\n            },\n\n            _unifySeparators: function() {\n                this._accessor(this.value().split(this._separator()).join(this._defaultSeparator()));\n                return this;\n            },\n\n            _preselect: function(value, text) {\n                this._inputValue(text);\n                this._accessor(value);\n\n                this._old = this.oldText = this._accessor();\n\n                this.listView.setValue(value);\n                this._placeholder();\n            },\n\n            _change: function() {\n                var that = this;\n                var value = that._unifySeparators().value();\n                var trigger = value !== List.unifyType(that._old, typeof value);\n\n                var valueUpdated = trigger && !that._typing;\n                var itemSelected = that._oldText !== value;\n                var clearValueTrigger = that._clearValueTrigger;\n\n                that._old = value;\n                that._oldText = value;\n\n                if (that.filterInput && activeElement() === that.filterInput[0]) {\n                    that.element.val(that.filterInput.val());\n                }\n\n                if ((valueUpdated || itemSelected) && !clearValueTrigger) {\n                    // trigger the DOM change event so any subscriber gets notified\n                    that.element.trigger(CHANGE);\n                }\n\n                if (trigger && !clearValueTrigger) {\n                    that.trigger(CHANGE);\n                }\n\n                that.typing = false;\n                that._toggleCloseVisibility();\n            },\n\n            _accessor: function(value) {\n                var that = this,\n                    element = that.filterInput && activeElement() === that.filterInput[0] ? that.filterInput[0] : that.element[0];\n\n                if (value !== undefined$1) {\n                    element.value = value === null ? \"\" : value;\n                    that._placeholder();\n                } else {\n                    value = element.value;\n\n                    if (element.className.indexOf(\"k-readonly\") > -1) {\n                        if (value === that.options.placeholder) {\n                            return \"\";\n                        } else {\n                            return value;\n                        }\n                    }\n\n                    return value;\n                }\n            },\n\n            _keydown: function(e) {\n                var that = this;\n                var key = e.keyCode;\n                var listView = that.listView;\n                var visible = that.popup.visible();\n                var current = listView.focus();\n\n                that._last = key;\n\n                if (key === keys.DOWN) {\n                    if (visible) {\n                        this._move(current ? \"focusNext\" : \"focusFirst\");\n                    } else if (that.value()) {\n                        that._filterSource({\n                            value: that.ignoreCase ? that.value().toLowerCase() : that.value(),\n                            operator: that.options.filter,\n                            field: that.options.dataTextField,\n                            ignoreCase: that.ignoreCase\n                        }).done(function() {\n                            if (that._allowOpening()) {\n                                that._resetFocusItem();\n                                that.popup.open();\n                            }\n                        });\n                    }\n                    e.preventDefault();\n                } else if (key === keys.ESC ) {\n                    if (visible) {\n                        e.preventDefault();\n                        that.close();\n                    } else {\n                        that._clearValue();\n                    }\n                } else if (e.altKey && key === keys.UP && visible) {\n                    e.preventDefault();\n                    that.close();\n                } else if (key === keys.UP) {\n                    if (visible) {\n                        this._move(current ? \"focusPrev\" : \"focusLast\");\n                    }\n                    e.preventDefault();\n                } else if (key === keys.HOME) {\n                    this._move(\"focusFirst\");\n                } else if (key === keys.END) {\n                    this._move(\"focusLast\");\n                } else if (key === keys.ENTER || key === keys.TAB) {\n\n                    if (key === keys.ENTER && visible) {\n                        e.preventDefault();\n                    }\n\n                    if (visible && current) {\n                        var dataItem = listView.dataItemByIndex(listView.getElementIndex(current));\n                        if (that.trigger(\"select\", { dataItem: dataItem, item: current })) {\n                            return;\n                        }\n\n                        this._select(current);\n                    }\n\n                    this._blur();\n                } else if (that.popup.visible() && (key === keys.PAGEDOWN || key === keys.PAGEUP)) {\n                    e.preventDefault();\n\n                    var direction = key === keys.PAGEDOWN ? 1 : -1;\n                    listView.scrollWith(direction * listView.screenHeight());\n                } else {\n                    // In some cases when the popup is opened resize is triggered which will cause it to close\n                    // Setting the below flag will prevent this from happening\n                    that.popup._hovered = true;\n                    that._search();\n                }\n            },\n\n            _keypress: function() {\n                this._oldText = this.element.val();\n                this._typing = true;\n            },\n\n            _move: function(action) {\n                this.listView[action]();\n\n                if (this.options.suggest && this.listView.focus() == null && action == \"focusNext\") {\n                    this.listView.focus(0);\n                    this.suggest(this.listView._view[0].item);\n                } else if (this.options.suggest && this.listView.focus() == null && action == \"focusPrev\") {\n                    let index = this.listView._view.length - 1;\n                    this.listView.focus(index);\n                    this.suggest(this.listView._view[index].item);\n                } else if (this.options.suggest && (action == \"focusFirst\" || action == \"focusLast\")) {\n                   caret(this.element);\n                } else if (this.options.suggest && this.listView.focus() != null) {\n                    this.suggest(this.listView.focus());\n                }\n            },\n\n            _placeholder: function(show) {\n                if (placeholderSupported) {\n                    return;\n                }\n\n                var that = this,\n                    element = that.element,\n                    placeholder = that.options.placeholder,\n                    value;\n\n                if (placeholder) {\n                    value = element.val();\n\n                    if (show === undefined$1) {\n                        show = !value;\n                    }\n\n                    if (!show) {\n                        if (value !== placeholder) {\n                            placeholder = value;\n                        } else {\n                            placeholder = \"\";\n                        }\n                    }\n\n                    if (value === that._old && !show) {\n                        return;\n                    }\n\n                    element.toggleClass(\"k-readonly\", show)\n                           .val(placeholder);\n\n                    if (!placeholder && element[0] === document.activeElement) {\n                        caret(element[0], 0, 0);\n                    }\n                }\n            },\n\n            _separator: function() {\n                var separator = this.options.separator;\n                if (separator instanceof Array) {\n                   return new RegExp(separator.join(\"|\"), 'gi');\n                }\n                return separator;\n            },\n\n            _defaultSeparator: function() {\n                var separator = this.options.separator;\n                if (separator instanceof Array) {\n                    return separator[0];\n                }\n                return separator;\n            },\n\n            _inputValue: function() {\n                return this.element.val();\n            },\n\n            _search: function() {\n                var that = this;\n                clearTimeout(that._typingTimeout);\n\n                that._typingTimeout = setTimeout(function() {\n                    if (that._prev !== that._accessor()) {\n                        that._prev = that._accessor();\n                        that.search();\n                    }\n                }, that.options.delay);\n            },\n\n            _select: function(candidate) {\n                var that = this;\n                that._active = true;\n\n                return that.listView.select(candidate).done(function() {\n                    that._active = false;\n                });\n            },\n\n            _clearButton: function() {\n                List.fn._clearButton.call(this);\n\n                if (this.options.clearButton) {\n                    this._clear.insertAfter(this.element);\n                }\n            },\n\n            _toggleHover: function(e) {\n                $(e.currentTarget).toggleClass(HOVER, e.type === \"mouseenter\");\n            },\n\n            _toggleCloseVisibility: function() {\n                var preventShow = this.element.is(\":disabled\") || this.element.is(\"[readonly]\");\n\n                if (this.value() && !preventShow) {\n                    this._showClear();\n                } else {\n                    this._hideClear();\n                }\n            },\n\n            _wrapper: function() {\n                var that = this,\n                    element = that.element,\n                    DOMelement = element[0],\n                    wrapper;\n\n                wrapper = element.parent();\n\n                if (!wrapper.is(\"span.k-autocomplete\")) {\n                    wrapper = element.wrap(\"<span />\").parent();\n                }\n\n                wrapper.attr(\"tabindex\", -1);\n\n                wrapper[0].style.cssText = DOMelement.style.cssText;\n                element.css({\n                    width: \"\",\n                    height: DOMelement.style.height\n                });\n\n                that._focused = that.element;\n                that.wrapper = wrapper\n                    .addClass(\"k-autocomplete k-input\")\n                    .addClass(DOMelement.className)\n                    .removeClass('input-validation-error');\n            },\n\n            _clearValue: function() {\n                this._clearValueTrigger = false;\n                List.fn._clearValue.call(this);\n                this.element.trigger(\"focus\");\n            }\n        });\n\n        ui.plugin(AutoComplete);\n\n        kendo.cssProperties.registerPrefix(\"AutoComplete\", \"k-input-\");\n\n        kendo.cssProperties.registerValues(\"AutoComplete\", [{\n            prop: \"rounded\",\n            values: kendo.cssProperties.roundedValues.concat([['full', 'full']])\n        }]);\n    })(window.kendo.jQuery);\n    var kendo$1 = kendo;\n\n    exports.__meta__ = __meta__;\n    exports.default = kendo$1;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n\n}));\n"]}