{"version":3,"file":"kendo.loaderContainer.chunk.min.js","names":["global","factory","exports","module","require","define","amd","globalThis","self","kendo","_globals","LoaderContainerChunk","this","$","jQuery","__meta__","id","name","category","description","depends","hidden","chunk","u","toggle","options","that","wrapper","loader","find","length","defaultOptions","message","overlayColor","themeColor","extend","loaderOverlay","html","renderLoaderContainer","wrapperWidth","width","mask","wrapperClone","clone","removeAttr","addClass","append","element","insertBefore","destroy","remove"],"sources":["kendo.loaderContainer.chunk.js"],"mappings":"CAAA,SAAWA,EAAQC,GACI,iBAAZC,SAA0C,oBAAXC,OAAyBF,EAAQC,QAASE,QAAQ,kBACtE,mBAAXC,QAAyBA,OAAOC,IAAMD,OAAO,CAAC,UAAW,kBAAmBJ,GACRA,IAA1ED,EAA+B,oBAAfO,WAA6BA,WAAaP,GAAUQ,MAAsBC,MAAQT,EAAOS,OAAS,CAAC,EAAGT,EAAOS,MAAMC,SAAWV,EAAOS,MAAMC,UAAY,CAAC,EAAGV,EAAOS,MAAMC,SAASC,qBAAuB,CAAC,GAC7N,CAJD,CAIGC,MAAM,SAAWV,GAahB,IAAIW,EAAIJ,MAAMK,OAwCdZ,EAAQa,SApDS,CACbC,GAAI,wBACJC,KAAM,uBACNC,SAAU,MACVC,YAAa,oCACbC,QAAS,CAAC,QACVC,QAAQ,EACRC,OAAO,GA8CXpB,EAAQqB,EAvCR,SAA4BC,EAAQC,GAChC,IAAIC,EAAOd,KACPe,EAAUD,EAAKC,QAEnB,GAAIH,GAAUE,EAAKE,QACf,IAAKF,EAAKC,QAAQE,KAAK,uBAAuBC,OAAQ,CAElD,IAAIC,EAAiB,CACjBC,QAAS,aACTC,aAAc,OACdC,WAAY,WAEhBH,EAAiBlB,EAAEsB,OAAO,CAAC,EAAGJ,EAAgBN,GAE9C,MAAMW,EAAgB3B,MAAM4B,KAAKC,sBAAsBzB,EAAE,eAAgBkB,GACnEQ,EAAeb,EAAKC,QAAQa,QAE5BC,EAAO5B,EAAE,0CACT6B,EAAehB,EAAKC,QAAQgB,QAAQC,WAAW,MAAMC,SAAS,0BAA0BL,MAAMD,GACpGE,EAAKK,OAAOJ,GACZD,EAAKK,OAAOV,GACZV,EAAKe,KAAOA,EAEZd,EAAQmB,OAAOL,GAEff,EAAKgB,aAAeD,EAAKZ,KAAK,gBAC9BH,EAAKU,cAAgBK,EAAKZ,KAAK,uBAE/BH,EAAKE,OAAOmB,QAAQC,aAAaP,EAAKZ,KAAK,6BAC/C,OAEIH,EAAKU,cAAcN,SACnBrB,MAAMwC,QAAQvB,EAAKU,eACnBV,EAAKe,KAAKS,SAGtB,CAKH","ignoreList":[],"sourcesContent":["(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('kendo.core.js')) :\n    typeof define === 'function' && define.amd ? define(['exports', 'kendo.core'], factory) :\n    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory((global.kendo = global.kendo || {}, global.kendo._globals = global.kendo._globals || {}, global.kendo._globals.LoaderContainerChunk = {})));\n})(this, (function (exports) {\n    const __meta__ = {\n        id: \"loaderContainer.chunk\",\n        name: \"LoaderContainerChunk\",\n        category: \"web\",\n        description: \"A reusable outputed chunk of code\",\n        depends: ['core'],\n        hidden: true,\n        chunk: true\n    };\n\n\n\n    let $ = kendo.jQuery;\n\n    function useLoaderContainer(toggle, options) {\n        var that = this,\n            wrapper = that.wrapper;\n\n        if (toggle && that.loader) {\n            if (!that.wrapper.find(\".k-loader-container\").length) {\n\n                var defaultOptions = {\n                    message: \"Loading...\",\n                    overlayColor: \"dark\",\n                    themeColor: \"primary\",\n                };\n                defaultOptions = $.extend({}, defaultOptions, options);\n\n                const loaderOverlay = kendo.html.renderLoaderContainer($(\"<div></div>\"), defaultOptions);\n                const wrapperWidth = that.wrapper.width();\n\n                const mask = $(\"<div class='k-loading-pdf-mask'></div>\");\n                const wrapperClone = that.wrapper.clone().removeAttr(\"id\").addClass('k-loading-pdf-progress').width(wrapperWidth);\n                mask.append(wrapperClone);\n                mask.append(loaderOverlay);\n                that.mask = mask;\n\n                wrapper.append(mask);\n\n                that.wrapperClone = mask.find(\".k-pivotgrid\");\n                that.loaderOverlay = mask.find(\".k-loader-container\");\n\n                that.loader.element.insertBefore(mask.find(\".k-loader-container-label\"));\n            }\n        } else {\n            if (that.loaderOverlay.length) {\n                kendo.destroy(that.loaderOverlay);\n                that.mask.remove();\n            }\n        }\n    }\n\n    exports.__meta__ = __meta__;\n    exports.u = useLoaderContainer;\n\n}));\n"]}