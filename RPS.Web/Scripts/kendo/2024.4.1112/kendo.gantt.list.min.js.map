{"version":3,"file":"kendo.gantt.list.min.js","names":["global","factory","exports","module","require","define","amd","globalThis","self","kendo","_globals","GanttList","this","$","extend","map","isFunction","ui","TreeList","outerHeight","activeElement","mobileOS","DATATYPE","BINDING","FORMAT","STRING","defaultDateFormat","titleFromField","SIZE_CALCULATION_TEMPLATE","listStyles","window","jQuery","_outerHeight","_activeElement","support","attr","getCulture","calendar","patterns","d","title","start","end","percentComplete","parentId","id","orderId","gridHeader","gridContentWrap","editCell","iconCollapse","iconExpand","init","element","options","columns","length","push","fn","call","_unbindDataSource","_setWidth","name","autoBind","sortable","selectable","_editCellEvent","_tabCycleStop","navigatable","editable","move","mode","resizable","renderAllRows","destroy","closeCell","isCancel","tr","model","that","cell","editor","_isIncellEditable","dataItem","_cancelEditor","removeClass","parent","editRow","lockedContent","_relatedRow","_render","trigger","item","data","ns","_adjustRowHeight","css","insertAfter","nodeData","referenceNode","taskInfo","task","updateInfo","insertBefore","_adjustHeight","height","contentWrap","find","header","scrollbar","_isHeightSet","_hasLockedColumns","table","offsetWidth","clientWidth","row1","row2","offsetHeight1","offsetHeight","offsetHeight2","style","el","initialHeight","newHeight","_attachCellEditingEventHandlers","update","touch","content","kendoTouch","filter","touchstart","e","_mouseDownHandler","doubletap","event","target","classList","contains","_openEditorHandler","_blurActiveElement","nodeName","toLowerCase","_columns","_hasExpandable","forEach","expandable","_eachColumn","bind","_columnEditor","column","field","required","_extractFormat","format","container","validation","fields","dateCompare","message","hide","appendTo","prependTo","kendoDateTimePicker","_columnFromElement","td","closest","idx","children","index","resourcesField","isSortable","hasNestedColumns","indexOf","template","value","get","formatedValue","i","join","_editCell","editedCell","modelCopy","dataSource","_createNewModel","toJSON","clearTimeout","_closeCellTimeout","_restorePageSizeAfterAddChild","_edit","editedColumn","editedColumnIndex","add","lockedTable","first","_createIncellEditor","change","values","preventDefault","_current","_modelFromElement","row","getByUid","currentTarget","hasClass","isLockedCell","multiple","has","tbody","is","_renderTree","taskTree","addClass","rowHeight","_rowHeight","tasks","applyStylesFromKendoAttributes","append","remove","_setData","listWidth","plugin","kendo$1","__meta__","category","description","depends","hidden","default","Object","defineProperty"],"sources":["kendo.gantt.list.js"],"mappings":"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","ignoreList":[],"sourcesContent":["(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('kendo.treelist.js'), require('kendo.treeview.draganddrop.js')) :\n    typeof define === 'function' && define.amd ? define(['exports', 'kendo.treelist', 'kendo.treeview.draganddrop'], factory) :\n    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory((global.kendo = global.kendo || {}, global.kendo._globals = global.kendo._globals || {}, global.kendo._globals.GanttList = {})));\n})(this, (function (exports) {\n    const __meta__ = {\n        id: \"gantt.list\",\n        name: \"Gantt List\",\n        category: \"web\",\n        description: \"The Gantt List\",\n        depends: [ \"treelist\", \"treeview.draganddrop\" ],\n        hidden: true\n    };\n\n    (function($) {\n        var extend = $.extend,\n            map = $.map,\n            isFunction = kendo.isFunction,\n\n            ui = kendo.ui,\n            TreeList = ui.TreeList,\n            outerHeight = kendo._outerHeight,\n            activeElement = kendo._activeElement,\n            mobileOS = kendo.support.mobileOS,\n\n            DATATYPE = kendo.attr(\"type\"),\n            BINDING = kendo.attr(\"bind\"),\n            FORMAT = kendo.attr(\"format\"),\n\n            STRING = \"string\",\n            BEFORE_EDIT = \"beforeEdit\",\n            EDIT = \"edit\",\n            SAVE = \"save\",\n            RENDER = \"render\",\n            DOT = \".\",\n\n            defaultDateFormat = \"{0:\" + kendo.getCulture().calendar.patterns.d + \"}\",\n\n            titleFromField = {\n                \"title\": \"Title\",\n                \"start\": \"Start Time\",\n                \"end\": \"End Time\",\n                \"percentComplete\": \"% Done\",\n                \"parentId\": \"Predecessor ID\",\n                \"id\": \"ID\",\n                \"orderId\": \"Order ID\"\n            },\n\n            SIZE_CALCULATION_TEMPLATE = `<table ${kendo.attr(\"style-visibility\")}=\"hidden\">` +\n                \"<tbody>\" +\n                    `<tr ${kendo.attr(\"style-height\")}=\"{0}\">` +\n                        \"<td>&nbsp;</td>\" +\n                    \"</tr>\" +\n                \"</tbody>\" +\n            \"</table>\",\n\n            listStyles = {\n                gridHeader: \"k-grid-header\",\n                gridContentWrap: \"k-grid-content\",\n                editCell: \"k-edit-cell\",\n                iconCollapse: \"caret-alt-down\",\n                iconExpand: \"caret-alt-right\"\n            };\n\n        var GanttList = ui.GanttList = TreeList.extend({\n            init: function(element, options) {\n                if (this.options.columns.length === 0) {\n                    this.options.columns.push(\"title\");\n                }\n\n                TreeList.fn.init.call(this, element, options);\n\n                this._unbindDataSource();\n                this._setWidth();\n            },\n\n            options: {\n                name: \"GanttList\",\n                autoBind: false,\n                sortable: true,\n                selectable: true,\n                _editCellEvent: \"dblclick\",\n                _tabCycleStop: true,\n                navigatable: false,\n                editable: {\n                    move: true,\n                    mode: \"incell\"\n                },\n                resizable: false,\n                renderAllRows: false\n            },\n\n            destroy: function() {\n                TreeList.fn.destroy.call(this);\n                kendo.destroy(this.element);\n            },\n\n            closeCell: function(isCancel) {\n                var that = this;\n                var cell = (that.editor || {}).element;\n                var tr;\n                var model;\n\n                if (!cell || !cell[0] || !that._isIncellEditable()) {\n                    return;\n                }\n\n                model = that.dataItem(cell);\n                that._cancelEditor();\n                cell.removeClass(listStyles.editCell);\n                tr = cell.parent().removeClass(listStyles.editRow);\n\n                if (that.lockedContent) {\n                    that._relatedRow(tr).removeClass(listStyles.editRow);\n                }\n\n                if (isCancel) {\n                    that._render();\n                }\n\n                that.trigger(\"itemChange\", { item: tr, data: model, ns: ui });\n\n                if (that.lockedContent) {\n                    that._adjustRowHeight(tr.css(\"height\", \"\")[0], that._relatedRow(tr).css(\"height\", \"\")[0]);\n                }\n            },\n\n            insertAfter: function(nodeData, referenceNode) {\n                if (!nodeData || !referenceNode) {\n                    return;\n                }\n\n                var orderId = referenceNode.orderId;\n                var taskInfo = {\n                    parentId: referenceNode.parentId\n                };\n\n                if (referenceNode.parentId === nodeData.parentId && referenceNode.orderId > nodeData.orderId) {\n                    taskInfo.orderId = orderId;\n                } else {\n                    taskInfo.orderId = orderId + 1;\n                }\n\n                this.trigger(\"reorder\", {\n                    task: nodeData,\n                    updateInfo: taskInfo\n                });\n            },\n\n            insertBefore: function(nodeData, referenceNode) {\n                if (!nodeData || !referenceNode) {\n                    return;\n                }\n\n                var orderId = referenceNode.orderId;\n                var taskInfo = {\n                    parentId: referenceNode.parentId\n                };\n\n                if (referenceNode.parentId === nodeData.parentId &&\n                    referenceNode.orderId > nodeData.orderId) {\n                        taskInfo.orderId = orderId - 1;\n                } else {\n                    taskInfo.orderId = orderId;\n                }\n\n                this.trigger(\"reorder\", {\n                    task: nodeData,\n                    updateInfo: taskInfo\n                });\n            },\n\n            _adjustHeight: function() {\n                var element = this.element;\n                var contentWrap = element.find(DOT + listStyles.gridContentWrap);\n                var header = element.find(DOT + listStyles.gridHeader);\n                var height;\n                var scrollbar = kendo.support.scrollbar();\n\n                if (this._isHeightSet(element)) {\n                    height = element.height() - outerHeight(header);\n\n                    contentWrap.height(height);\n\n                    if (this._hasLockedColumns) {\n                        scrollbar = this.table[0].offsetWidth > this.table.parent()[0].clientWidth ? scrollbar : 0;\n                        this.lockedContent.height(height - scrollbar);\n                    }\n                }\n            },\n\n            _adjustRowHeight: function(row1, row2) {\n                var height;\n                var offsetHeight1 = row1.offsetHeight;\n                var offsetHeight2 = row2.offsetHeight;\n\n                if (offsetHeight1 > offsetHeight2) {\n                    height = offsetHeight1 + \"px\";\n                } else if (offsetHeight1 < offsetHeight2) {\n                    height = offsetHeight2 + \"px\";\n                }\n\n                if (height) {\n                    row1.style.height = row2.style.height = height;\n                }\n             },\n\n            // identical code found in treelist, grid & scheduler :(\n            _isHeightSet: function(el) {\n                var initialHeight, newHeight;\n                if (el[0].style.height) {\n                    return true;\n                } else {\n                    initialHeight = el.height();\n                }\n\n                el.height(\"auto\");\n                newHeight = el.height();\n                el.height(\"\");\n\n                return (initialHeight != newHeight);\n            },\n\n            _attachCellEditingEventHandlers: function() {\n                var that = this,\n                    editable = that.options.editable;\n\n                TreeList.fn._attachCellEditingEventHandlers.call(that);\n\n                if (that._isIncellEditable() && editable.update !== false) {\n\n                    if (mobileOS) {\n                        that.touch = that.content\n                            .kendoTouch({\n                                filter: \"td\",\n                                touchstart: function(e) {\n                                    that._mouseDownHandler(e.touch);\n                                },\n                                doubletap: function(e) {\n                                    if (e.event.target.classList.contains(\"k-icon\") || e.event.target.classList.contains(\"k-svg-icon\")) {\n                                        return;\n                                    }\n                                    that._openEditorHandler(e.touch);\n                                }\n                            }).data(\"kendoTouch\");\n                    }\n                }\n            },\n\n            _blurActiveElement: function() {\n                var activeElement = kendo._activeElement();\n\n                if (activeElement && activeElement.nodeName.toLowerCase() !== \"body\") {\n                    $(activeElement).trigger(\"blur\");\n                }\n            },\n\n            _columns: function() {\n                var that = this,\n                    columns = this.options.columns;\n\n                that._hasExpandable = false;\n\n                columns.forEach(function(item) {\n                    if (item.expandable) {\n                        that._hasExpandable = true;\n                    }\n                });\n\n                that.columns = that.options.columns = map(columns, that._eachColumn.bind(that));\n\n                TreeList.fn._columns.call(that);\n            },\n\n            _columnEditor: function(column) {\n                var attr = {\n                    \"name\": column.field,\n                    \"required\": true\n                };\n\n                attr[BINDING] = \"value:\" + column.field;\n                attr[DATATYPE] = \"date\";\n                attr[FORMAT] = kendo._extractFormat(column.format);\n\n                return function(container, options) {\n                    var model = options.model,\n                        field = model.fields[column.field] || model[column.field],\n                        validation = field.validation;\n\n                    if (validation && validation.dateCompare && isFunction(validation.dateCompare) && validation.message) {\n                        $('<span ' + kendo.attr(\"for\") + '=\"' + column.field + '\" class=\"k-invalid-msg\"/>')\n                            .hide()\n                            .appendTo(container);\n\n                        attr[kendo.attr(\"dateCompare-msg\")] = validation.message;\n                    }\n\n                    $('<input type=\"text\"/>')\n                        .attr(attr)\n                        .prependTo(container)\n                        .kendoDateTimePicker({ format: options.format });\n                };\n            },\n\n            _columnFromElement: function(element) {\n                var td = element.closest(\"td\"),\n                    tr = td.parent(),\n                    idx = tr.children().index(td);\n\n                return this.columns[idx];\n            },\n\n            _eachColumn: function(column) {\n                var that = this,\n                    resourcesField = that.options.resourcesField,\n                    isSortable = this.options.sortable;\n\n                var model = function() {\n                    this.field = \"\";\n                    this.title = \"\";\n                    this.editable = function() { return false; };\n                    this.sortable = false;\n                };\n\n                var formatResources = function(task) {\n                    var value = task.get(resourcesField) || [],\n                        formatedValue = [];\n\n                    for (var i = 0; i < value.length; i++) {\n                        formatedValue.push(kendo.format(\"{0} [{1}]\", value[i].get(\"name\"), value[i].get(\"formatedValue\")));\n                    }\n\n                    return formatedValue.join(\", \");\n                };\n\n                if (column.columns) {\n                    that.hasNestedColumns = true;\n                    column.columns = map(column.columns, this._eachColumn.bind(this));\n                }\n\n                if (typeof column === STRING) {\n                    column = {\n                        field: column,\n                        title: titleFromField[column]\n                    };\n                }\n\n                if (column.editable === true) {\n                    column.editable = function() {\n                        return true;\n                    };\n                } else {\n                    column.editable = function() {\n                        return false;\n                    };\n                }\n\n                if (column.field === \"start\" || column.field === \"end\") {\n                    column.format = kendo.getCulture().calendar.patterns[column.format] || column.format || defaultDateFormat;\n\n                    if (!column.editor) {\n                        if (column.format === defaultDateFormat || column.format.toLowerCase().indexOf(\"h\") > -1) {\n                            column.editor = that._columnEditor(column);\n                        }\n                    }\n                }\n                if (column.field === resourcesField) {\n                    column.sortable = false;\n                    column.template = column.template || formatResources;\n                }\n                if (!that._hasExpandable && column.field === \"title\") {\n                    column.expandable = true;\n                }\n\n                if (isSortable && !column.sortable) {\n                    column.sortable = false;\n                }\n\n                return extend(new model(), column);\n            },\n\n            _editCell: function(cell, column, model) {\n                var that = this,\n                    resourcesField = that.options.resourcesField,\n                    modelCopy = that.dataSource._createNewModel(model.toJSON()),\n                    editedCell;\n\n                clearTimeout(that._closeCellTimeout);\n                if (column.field === resourcesField) {\n                    column.editor(cell, modelCopy);\n                    return;\n                } else {\n                    if (that.trigger(BEFORE_EDIT, { model: model, container: cell })) {\n                        that.dataSource._restorePageSizeAfterAddChild();\n                        return;\n                    }\n\n                    that.closeCell();\n\n                    model._edit = true;\n\n                    that._cancelEditor();\n\n                    that._render({\n                        editedColumn: column,\n                        editedColumnIndex: cell.index()\n                    });\n\n                    editedCell = that.table.add(that.lockedTable).find(DOT + listStyles.editCell).first();\n\n                    that.editor = that._createIncellEditor(editedCell, {\n                        columns: [column],\n                        model: model,\n                        change: function(e) {\n                            if (that.trigger(SAVE, { values: e.values, container: cell, model: model } )) {\n                                e.preventDefault();\n                            }\n                        }\n                    });\n\n                    // refresh the current element as the DOM element reference can be changed after render()\n                    that._current = editedCell;\n\n                    that.trigger(EDIT, { container: cell, model: model });\n                }\n            },\n\n            _modelFromElement: function(element) {\n                var row = element.closest(\"tr\"),\n                    model = this.dataSource.getByUid(row.attr(kendo.attr(\"uid\")));\n\n                return model;\n            },\n\n            _mouseDownHandler: function(e) {\n                var currentTarget = $(e.currentTarget);\n\n                if (!currentTarget.hasClass(listStyles.editCell)) {\n                    this._blurActiveElement();\n                }\n            },\n\n            _openEditorHandler: function(e) {\n                var that = this,\n                    td = $(e.currentTarget),\n                    isLockedCell = that.lockedTable && td.closest(\"table\")[0] === that.lockedTable[0],\n                    selectable = that.selectable && that.selectable.options.multiple;\n\n                if (td.hasClass(listStyles.editCell) ||\n                    td.has(\"a.k-grid-delete\").length ||\n                    td.has(\"button.k-grid-delete\").length ||\n                    (td.closest(\"tbody\")[0] !== that.tbody[0] && !isLockedCell) ||\n                    $(e.target).is(\":input\") ||\n                    $(e.target).is(`[class*=${listStyles.iconExpand}]`) ||\n                    $(e.target).is(`[class*=${listStyles.iconCollapse}]`)) {\n\n                    return;\n                }\n\n                if (that.editor) {\n                    if (that.editor.end()) {\n                        if (selectable) {\n                            $(activeElement()).trigger(\"blur\");\n                        }\n                        that.closeCell();\n                        that.editCell(td);\n                    }\n                } else {\n                    that.editCell(td);\n                }\n            },\n\n            _renderTree: function(taskTree) {\n                TreeList.fn._render.call(this);\n\n                if (this.hasNestedColumns) {\n                    this.element.addClass(\"k-gantt-treelist-nested-columns\");\n                }\n\n                if (taskTree && taskTree.length && !taskTree.editedColumn) {\n                    if (this.options.rowHeight) {\n                        this._rowHeight(taskTree);\n                    }\n\n                    this.trigger(RENDER);\n                }\n\n                this._adjustHeight();\n            },\n\n            _rowHeight: function(tasks) {\n                var content = this.content,\n                    options = this.options,\n                    rowHeight = typeof options.rowHeight === STRING ? options.rowHeight : options.rowHeight + \"px\",\n                    table = $(kendo.format(SIZE_CALCULATION_TEMPLATE, rowHeight)),\n                    height;\n\n                kendo.applyStylesFromKendoAttributes(table, [\"height\", \"visibility\"]);\n                content.append(table);\n                height = outerHeight(table.find(\"tr\"));\n                table.remove();\n\n                this.element.find('[role=\"treegrid\"]').css(\"height\", (tasks.length * height) + \"px\");\n            },\n\n            _setData: function(tasks) {\n                this.dataSource.data(tasks);\n            },\n\n            _setWidth: function() {\n                this.element.find(\".k-grid-header table\").css(\"minWidth\", this.options.listWidth);\n                this.content.find(\"table\").css(\"minWidth\", this.options.listWidth);\n            }\n        });\n\n        ui.plugin(GanttList);\n\n    })(window.kendo.jQuery);\n    var kendo$1 = kendo;\n\n    exports.__meta__ = __meta__;\n    exports.default = kendo$1;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n\n}));\n"]}