{"version":3,"file":"kendo.pivotgrid.min.js","names":["global","factory","exports","module","require","define","amd","globalThis","self","kendo","_globals","Pivotgrid","Dom","Data","Icons","Loader","HtmlLoadercontainer","Sortable","PivotgridCommonCmnChunk","LoaderContainerChunk","this","kendo_dom_js","kendo_data_js","kendo_icons_js","kendo_loader_js","kendo_html_loadercontainer_js","kendo_sortable_js","kendo_pivotgridCommon_cmn_chunk_js","kendo_loaderContainer_chunk_js","$","undefined$1","window","ui","encode","htmlEncode","Class","Comparer","data","Widget","DataSource","outerWidth","_outerWidth","outerHeight","_outerHeight","normalizeFilter","Query","normalizeSort","toString","identity","o","map","extend","keys","isFunction","RESIZE","READ","CHANGE","ERROR","PROGRESS","MEASURES","STATERESET","AUTO","DIV","NS","ROW_TOTAL_KEY","DATABINDING","DATABOUND","EXPANDMEMBER","HEADERTEMPLATE","id","key","headerClass","colspan","rowspan","expandable","iconClass","role","expanded","icon","COLLAPSEMEMBER","STATE_EXPANDED_ICONNAME","STATE_EXPANDED_SELECTOR","STATE_COLLAPSED_ICONNAME","HEADER_TEMPLATE","member","caption","name","PIVOTGRID_TREND_ICONS_MAP","KPISTATUS_TEMPLATE","dataItem","value","KPITREND_TEMPLATE","DATACELL_TEMPLATE","fmtValue","tableStyles","normalizeMeasures","measure","descriptor","descriptors","call","d","type","normalizeMembers","expand","slice","normalizeName","indexOf","accumulateMembers","accumulator","rootTuple","tuple","level","idx","length","children","members","stringify","buildPath","descriptorsForAxes","tuples","result","k","push","JSON","parse","descriptorsForMembers","axis","measures","firstTuple","tupleMembers","found","j","getName","hierarchy","addMissingPathMembers","tupletoSearch","findExistingTuple","tupleToDescriptors","createAggregateGetter","m","measureGetter","getter","field","aggregatorContext","state","aggregate","isNumber","val","isNaN","isDate","getTime","loadLocalData","params","deferred","that","originalData","reader","_pristineData","columnSettings","_createSettings","columnAxes","rowSettings","rowAxes","stateArgs","dataTree","c","dataField","columnsData","filter","item","fields","sort","flattenSortDescriptors","_saveState","a","trigger","resolve","i","dir","split","pop","createLocalMeasure","format","measureMap","sum","s","average","b","min","max","count","e","bind","uniqueName","functions","PivotCubeBuilder","init","options","dimensions","_normalizeDescriptors","keyField","_rootTuples","rootNames","measureAggregators","root","parts","aggregatorsLength","dimensionsSchema","measureIdx","rootNamesLength","levelName","levelNum","hasChildren","parentName","_sortMap","sortDescriptors","flattenTree","mapItem","sortedMaps","sortTree","directParentName","fillSortTree","sortItemsTree","create","flatColumns","index","_expandedTuples","current","currentKeys","memberInfo","expandedNames","accumulatorKeys","isEmptyObject","_findExpandedMember","uniquePath","names","expandedIdx","join","_asTuples","rootInfo","expandedInfo","concat","apply","_measuresInfo","rowAxis","aggregateNames","resultFuncs","formats","_toDataArray","measuresInfo","rowKeys","columnKeys","aggregates","n","row","column","columnKey","columnMeasureNames","rowMeasureNamesLength","rowMeasureNames","rowLength","columnLength","items","_addData","resultFunc","ordinal","_matchDescriptors","getters","parentField","expectedValue","_calculateAggregate","totalItem","aggregator","_processColumns","columns","rowTotal","updateColumn","path","columnIndex","childrenMap","_measureAggregators","defaultAggregate","measureDescriptors","aggregators","toLowerCase","Error","_buildGetters","_parseDescriptors","parsedDescriptors","parseDescriptors","getRootNames","mapNames","_filter","expr","filters","operator","_normalizeFilter","logic","process","measuresRowAxis","measuresAxis","columnDescriptors","rowDescriptors","rows","rowValue","rowIdx","rowDescriptor","rowName","columnsInfo","rowsInfo","aggregatedData","columnGetters","rowGetters","processed","expandedColumns","expandedRows","hasExpandedRows","axes","PivotTransport","transport","discover","read","update","destroy","success","catalog","connection","cube","PivotDataSourceV2","schema","cubes","catalogs","hierarchies","levels","cubeSchema","_cubeSchema","fn","transportOptions","_online","XmlaTransportV2","_columns","_rows","_measuresAxis","values","_measures","serverSorting","serverPaging","serverFiltering","serverGrouping","serverAggregates","normalizeAxis","_mergeState","fetch","callback","_data","_query","done","settings","dimensionsSettings","displayValueFunc","sortValueFunc","displayValue","sortValue","defaultHierarchy","restoreMeasure","memberType","distinct","levelUniqueName","childrenCardinality","isPrevented","_params","Deferred","newDataState","response","_preventRefresh","error","err","promise","measureAxes","isOdata","converters","schemaMeasures","schemaKPIs","kpis","schemaDimensions","schemaHierarchies","schemaLevels","schemaCubes","schemaCatalogs","schemaMembers","_handleCustomErrors","command","status","reject","restrictions","catalogName","cubeName","dimensionName","dimensionUniqueName","hierarchyName","hierarchyUniqueName","_columnTuples","_rowTuples","_view","PivotDataSource","cubeBuilder","_skipNormalize","_axes","memberUniqueName","schemaData","dataGetter","_rawData","treeOp","_clearAxesData","query","rowsAxisDescriptors","columnsAxisDescriptors","_expandPath","origin","other","memberToExpand","_lastExpanded","_descriptorsForAxis","_process","page","pageSize","group","_updateLocalData","expandColumn","expandRow","_processResult","processedData","_requestData","columnIndexes","rowIndexes","resultAxis","axisToSkip","hasColumnTuples","_rowMeasures","_normalizeTuples","_columnMeasures","_normalizeData","columnsLength","rowsLength","validateAxis","sourceTuples","targetTuples","columnIdx","dataIdx","targetColumnsLength","membersCount","measuresLength","tupleIndex","adjustDataByColumn","adjustDataByRow","_mergeAxes","_readData","newData","_createTuple","buildRoot","Number","_hasRoot","target","source","isRoot","sourceAxes","startIndex","columnMeasures","rowMeasures","oldRowsLength","newRowsLength","oldColumnsLength","newColumnsLength","rowIndex","dataIndex","calcIndex","indices","buildDataIndices","Math","prepareDataOnColumns","parseSource","mergedColumns","mergeTuples","targetIndex","sourceIndex","parseInt","prepareDataOnRows","mergedRows","findDataIndex","parsedRoot","memberIndex","offset","_mergeColumnData","_mergeRowData","toAdd","toJSON","drop","splice","_observe","_ranges","_addRange","_total","_pristineTotal","memberIdx","last","roots","indexes","tupleName","_addMissingDataItems","metadata","addEmptyDataItem","_normalizeOrdinals","lastOrdinal","converter","sortFunction","currentItem","newAxis","collection","queue","shift","counter","targetMembers","sourceMembers","equalTuples","first","second","equal","toFind","membersLength","addMembers","len","findParentMember","parentMember","parentPath","normalizeTupleMeasures","measureIndex","measurePosition","spliceIndex","baseHierarchyPath","memberName","expandMemberDescriptor","sortDescriptor","sortDescriptorForMember","crossJoin","r","crossJoinCommand","tmp","measureNames","rootName","rootLength","l","child","serializeMembers","crossJoinCommands","dataSource","filterFunctionFormats","contains","doesnotcontain","startswith","endswith","eq","neq","serializeExpression","expression","serializeOptions","parentTagName","capitalize","keyToUse","replace","toUpperCase","xmlaDiscoverCommands","convertersMap","serializeFilters","properties","Catalog","XmlaTransport","RemoteTransport","originalOptions","url","setup","dataType","contentType","parameterMap","ajax","fetchOptions","noop","requestOptions","f","then","g","catch","h","asArray","object","translateAxis","captionGetter","unameGetter","levelNameGetter","levelNumGetter","childrenGetter","hierarchyGetter","parentNameGetter","Member","schemaDataReaderMap","description","groupName","displayFolder","defaultFormat","goal","trend","statusGraphic","trendGraphic","defaultMember","orderingProperty","xmlaReaderMethods","XmlaDataReader","XmlDataReader","_extend","methodName","option","xml","errors","fault","faultstring","faultcode","cells","ordinalGetter","valueGetter","fmtValueGetter","_mapSchema","obj","transports","xmla","readers","removeExpr","expressions","PivotSettingTarget","element","addClass","_refreshHandler","refresh","template","actions","enabled","ns","emptyTemplate","_sortable","on","closest","action","attr","hasClass","remove","sortable","sortDirection","currentTarget","find","filterable","fieldMenu","PivotFieldMenu","messages","setting","empty","setDataSource","unbind","kendoSortable","connectWith","hint","cursor","start","change","add","move","newIndex","_isKPI","validate","isMeasure","Array","isArray","sortExpressions","_sort","skipExpr","allowUnsort","html","sortIcon","_sortIcon","off","sortExpr","PivotSettingTargetV2","parent","text","navigatable","ev","chip","keyCode","DELETE","BACKSPACE","configuratorNavigation","elements","focusElement","DOWN","altKey","ctrlKey","shiftKey","LEFT","ind","el","RIGHT","UP","otherTarget","PivotFieldMenuV2","events","_applyState","_sortState","_stateFilter","_savedState","_cancelChanges","deepExtend","_initialState","_redraw","_state","newState","modifyInit","blur","_savedFilter","_emptyState","enable","removeClass","_targetsHTML","menuenabled","PivotConfiguratorButton","_element","_attachEvents","configurator","setOptions","toggle","pivot","pivotEl","toggleClass","getKendoPivotGridV2","_setContentWidth","_updateDimensions","PivotContainer","_addClasses","configuratorPosition","className","PivotGridV2","_dataSource","_bindConfigurator","_ariaId","guid","_wrapper","_columnHeadersWrapper","_rowHeadersWrapper","_contentWrapper","wrapper","append","_columnBuilder","ColumnRowBuilder","columnHeaderTemplate","ariaId","_rowBuilder","rowHeaderTemplate","_contentBuilder","ContentBuilderV2","dataCellTemplate","kpiStatusTemplate","kpiTrendTemplate","_scrollable","button","is","isRow","paths","eventName","reducerPayLoad","payload","tree","getTree","currentAxes","newHeaders","_exportData","autoBind","_aria","_initPivotGridNavigation","_initLoader","notify","height","columnWidth","emptyCellLabel","loader","_windowResizeHandler","defaultOptions","size","exporting","kendoLoader","_loaderContainer","u","navigation","P","tabIndex","keyboardEvents","keydown","_target","nav","_ev","next","nextElementSibling","HTMLElement","matches","parentNode","querySelector","click","setTimeout","confHeader","setAttribute","String","focus","firstCell","_matchAriaAttributes","rowHeaderRows","querySelectorAll","rowHeaderCols","from","reduce","acc","curr","getAttribute","colHeaderRows","colHeaderCells","valueTableCells","emptyCell","firstColHeadersRow","firstColHeaderRowCellsIds","forEach","valueCellsIds","filterAndMap","idParts","cell","cellColIndex","colHeaderCellsIds","headerCellColIndex","headerCellColspan","arr","predicate","mapper","_progressHandler","_errorHandler","_requestStart","_error","_resize","div","scrollbar","style","setProperty","document","createElement","cssText","innerHTML","body","appendChild","offsetWidth","scrollWidth","removeChild","columnsHeader","rowsHeader","scroll","scrollLeft","scrollTop","_wheelScroll","delta","wheelDeltaY","preventDefault","one","css","_progress","_isExport","message","progress","offsetHeight","contentTable","columnTable","rowTable","width","kendoPivotConfiguratorV2","cellInfoByElement","cellInfo","contentBuilder","columnsCount","rowsCount","columnTuple","hash","rowTuple","lastFocusedCellID","_activeElement","lastCellIdWithTabIndex","setTuples","build","setRowColumnInfo","columnHeaderLeafs","getHeaderLeafs","rowHeaderLeafs","columnHeaderBreadth","getBreadth","rowHeaderDepth","plugin","PivotGrid","columnBuilder","rowBuilder","support","isRtl","_createLayout","ColumnBuilder","RowBuilder","ContentBuilder","_templates","builder","eventArgs","request","childrenLoaded","maxChildren","reorderable","measureFields","columnFields","rowFields","columnTemplate","rowTemplate","dataTemplate","useWithBlock","kendoPivotConfigurator","columnInfo","rowInfo","view","measuresTarget","rowsTarget","columnsTarget","clearTimeout","_headerReflowTimeout","_stateResetHandler","_stateReset","reset","_measureFields","_createSettingTarget","pivotOptions","getIcons","_initSettingTargets","layoutTable","leftContainer","rightContainer","gridWrapper","wrap","content","columnsHeaderTree","dom","Tree","rowsHeaderTree","contentTree","firstChild","_setSectionsWidth","_setSectionsHeight","_setContentHeight","_columnHeaderReflow","browser","mozilla","leftColumn","measureFieldsHeight","columnFieldsHeight","rowFieldsHeight","innerHeight","columnsHeight","padding","firstRowHeight","secondRowHeight","calculatedWidth","minWidth","ceil","_resetColspan","skipScrollbar","clientHeight","_colspan","_layoutTimeout","_axisMeasures","hasMeasure","columnAxis","render","_indexes","touchScroller","contentResized","movable","sender","x","y","htmlNode","createMetadata","maxMembers","addColElements","table","addRowElements","addColumCell","_getTemplate","measureType","cellMembers","cellMeasure","cellValue","rowEl","rowItem","cellEl","total","t","headerTemplate","columnHeaderRows","_getExportData","rowElement","match","rowSpan","colSpan","defaultCellTemplate","treeData","headerRows","headerLeafs","breadth","rowHeaderBreadth","_tree","_breadth","_headerLeafs","tbody","_tbody","colgroup","_colGroup","_rowLength","_buildRows","_normalize","cellsLength","cellIdx","tupleAll","_rowIndex","_row","parentRow","rowKey","notFirst","collapsed","measureRow","_cell","_content","childRow","childrenLength","allCell","nextMember","cellChildren","memberCollapsed","rootLevelNum","cellIconEl","maxcolSpan","allRow","firstMemberName","tuplePath","hasChild","axisInfo","axisInfoMember","skipChildren","firstEmpty","_buildRow","templateInfo","cellContent","startIdx","PivotExcelExporter","widget","columnHeaderTable","rowHeaderTable","columnHeaderLength","rowHeaderLength","autoWidth","_cells","background","color","contentRows","columnRows","rowRows","_freezePane","colSplit","rowSplit","_columnsV2","_cellsV2","Object","_rowsV2","contentCells","endIndex","_freezePaneV2","_filterV2","excel","to","workbook","sheets","freezePane","PivotExcelMixin","proto","saveAsExcel","proxyURL","fileName","exporter","book","ooxml","Workbook","toDataURLAsync","dataURI","saveAs","forceProxy","always","prototype","PDFMixin","_drawPDF","_drawPDFShadow","avoidLinks","pdf","_saveAsPDF","saveAsPDF","pivotgrid","common","addKPI","addMultipleMeasures","averageAggregate","buildKPIMeasures","p","cloneDataTree","q","compareAxes","configuratorReducer","createAxisDescriptors","v","createDataState","createDataTree","createDiscoverBody","w","createFlatSchemaDimensions","createLocalDataState","createRequestBody","createTuples","z","discoverCommands","A","fetchData","fetchDiscover","headersReducer","maxAggregate","mergeTrees","B","minAggregate","parseResponse","C","readData","D","rootFields","E","setFilter","F","setSort","G","sumAggregate","toColumns","toData","toRows","toTree","jQuery","kendo$1","__meta__","category","depends","features","default","defineProperty"],"sources":["kendo.pivotgrid.js"],"mappings":"CAAA,SAAWA,EAAQC,GACI,iBAAZC,SAA0C,oBAAXC,OAAyBF,EAAQC,QAASE,QAAQ,gBAAiBA,QAAQ,iBAAkBA,QAAQ,kBAAmBA,QAAQ,mBAAoBA,QAAQ,iCAAkCA,QAAQ,qBAAsBA,QAAQ,uCAAwCA,QAAQ,mCACxS,mBAAXC,QAAyBA,OAAOC,IAAMD,OAAO,CAAC,UAAW,YAAa,aAAc,cAAe,eAAgB,6BAA8B,iBAAkB,mCAAoC,+BAAgCJ,GACnKA,IAA1ED,EAA+B,oBAAfO,WAA6BA,WAAaP,GAAUQ,MAAsBC,MAAQT,EAAOS,OAAS,CAAC,EAAGT,EAAOS,MAAMC,SAAWV,EAAOS,MAAMC,UAAY,CAAC,EAAGV,EAAOS,MAAMC,SAASC,UAAY,CAAC,GAAIX,EAAOS,MAAMC,SAASE,IAAKZ,EAAOS,MAAMC,SAASG,KAAMb,EAAOS,MAAMC,SAASI,MAAOd,EAAOS,MAAMC,SAASK,OAAQf,EAAOS,MAAMC,SAASM,oBAAqBhB,EAAOS,MAAMC,SAASO,SAAUjB,EAAOS,MAAMC,SAASQ,wBAAyBlB,EAAOS,MAAMC,SAASS,qBACxd,CAJD,CAIGC,MAAM,SAAWlB,EAASmB,EAAcC,EAAeC,EAAgBC,EAAiBC,EAA+BC,EAAmBC,EAAoCC,IAoC7K,SAAUC,EAAGC,GACT,IAAIrB,EAAQsB,OAAOtB,MACfuB,EAAKvB,EAAMuB,GACXC,EAASxB,EAAMyB,WACfC,EAAQ1B,EAAM0B,MACdC,EAAW3B,EAAM4B,KAAKD,SACtBE,EAASN,EAAGM,OACZC,EAAa9B,EAAM4B,KAAKE,WACxBC,EAAa/B,EAAMgC,YACnBC,EAAcjC,EAAMkC,aACpBC,EAAkBnC,EAAM4B,KAAKQ,MAAMD,gBACnCE,EAAgBrC,EAAM4B,KAAKQ,MAAMC,cACjCC,EAAW,CAAC,EAAEA,SACdC,EAAW,SAASC,GAAK,OAAOA,CAAG,EACnCC,EAAMrB,EAAEqB,IACRC,EAAStB,EAAEsB,OACXC,EAAO3C,EAAM2C,KACbC,EAAa5C,EAAM4C,WACnBC,EAAS,SACTC,EAAO,OACPC,EAAS,SACTC,EAAQ,QAERC,EAAW,WAEXC,EAAW,WACXC,EAAa,aACbC,EAAO,OACPC,EAAM,cACNC,EAAK,kBACLC,EAAgB,gBAChBC,EAAc,cACdC,EAAY,YACZC,EAAe,eACfC,EAAiB,EAAGC,KAAIC,MAAKC,cAAaC,UAASC,UAASC,aAAYC,YAAWC,OAAMC,cAAe,WAAWR,YAAaO,MAASF,EAAa,kBAAkBG,KAAc,iBAAiB5C,EAAOqC,cAAgBrC,EAAOsC,OAAiBC,EAAU,YAAcvC,EAAOuC,GAAW,IAAM,MAAMC,EAAU,YAAcxC,EAAOwC,GAAW,IAAM,MAC7TC,EAAajE,EAAMuB,GAAG8C,KAAKjD,EAAE,gEAAiE,CAAEiD,KAAM,WAAW7C,EAAO0C,OAAkB,UAEzKI,EAAiB,iBACjBC,EAA0B,iBAC1BC,EAA0B,QAAQD,cAAoCA,IACtEE,EAA2B,kBAC3BC,EAAkB,EAAGC,YAAa,SAASnD,EAAOmD,EAAOC,SAAWD,EAAOE,eAC3EC,EAA4B,CACxB,qBAAsB,iBACtB,qBAAsB,eACtB,kBAAmB,SAEvBC,EAAqB,EAAGC,cAAehF,EAAMuB,GAAG8C,KAAKjD,EAAE,gBAAgBI,EAAOwD,EAASC,mBAAoB,CAAEZ,KAAM,eAAcW,EAASC,MAAQ,EAAI,OAASD,EAASC,MAAQ,EAAI,OAAS,UAC7LC,EAAoB,EAAGF,cAAehF,EAAMuB,GAAG8C,KAAKjD,EAAE,gBAAgBI,EAAOwD,EAASC,mBAAoB,CAAEZ,KAAMS,EAA0B,cAAaE,EAASC,MAAQ,EAAI,WAAaD,EAASC,MAAQ,EAAI,WAAa,YAC7NE,EAAoB,EAAGH,cAAgBA,IAAWA,EAASI,UAAYJ,EAASC,OAAQ,qCAAqCzD,EAAOwD,EAASI,UAAYJ,EAASC,gBAA6B,SAc3LI,EACU,cADVA,EAEQ,sBAFRA,EAGa,yCAHbA,EAIO,qBAJPA,EAKc,kCALdA,EAMO,gBANPA,EAOW,aAGnB,SAASC,EAAkBC,GACvB,IAAIC,EAAgC,iBAAZD,EAAuB,CAAC,CAAEV,KAAMU,IAAaA,EACjEE,EAA4C,mBAA9BnD,EAASoD,KAAKF,GAAmCA,EAAcA,IAAenE,EAAc,CAACmE,GAAc,GAE7H,OAAO/C,EAAIgD,GAAa,SAASE,GAC7B,MAAiB,iBAANA,EACA,CAAEd,KAAMc,GAEZvE,EAAEsB,QAAO,EAAMiD,EAAG,CAAEd,KAAMc,EAAEd,KAAMe,KAAMD,EAAEC,MACrD,GACJ,CAEA,SAASC,EAAiBlB,GACtB,IAAIa,EAA+B,iBAAXb,EAAsB,CAAC,CAAEE,KAAM,CAACF,GAASmB,QAAQ,IAAWnB,EAChFc,EAA4C,mBAA9BnD,EAASoD,KAAKF,GAAmCA,EAAcA,IAAenE,EAAc,CAACmE,GAAc,GAE7H,OAAO/C,EAAIgD,GAAa,SAASE,GAC7B,MAAiB,iBAANA,EACA,CAAEd,KAAM,CAACc,GAAIG,QAAQ,GAEzB,CAAEjB,KAAiC,mBAA1BvC,EAASoD,KAAKC,EAAEd,MAA6Bc,EAAEd,KAAKkB,QAAU,CAACJ,EAAEd,MAAQiB,OAAQH,EAAEG,OACvG,GACJ,CAEA,SAASE,GAAcnB,GAKnB,OAJ2B,IAAvBA,EAAKoB,QAAQ,OACbpB,EAAO,KAAOA,EAAO,MAGlBA,CACX,CAEA,SAASqB,GAAkBC,EAAaC,EAAWC,EAAOC,GACtD,IAAIC,EAAKC,EACLC,EACA9B,EAYJ,GAVK0B,IACDA,EAAQD,GAGPE,IACDA,EAAQ,IAGZ3B,EAAS0B,EAAMK,QAAQJ,MAER3B,EAAOY,QAAtB,CAaA,GARAiB,GADAC,EAAW9B,EAAO8B,UACAD,OAEdH,IAAUD,EACVD,EAAYnG,EAAM2G,UAAU,CAAChC,EAAOE,UAAY2B,EACzCA,IACPL,EAAYnG,EAAM2G,UAAUC,GAAUP,EAAOC,MAAW,GAGxDE,EACA,IAAKD,EAAM,EAAGA,EAAMC,EAAQD,IACxBL,GAAkBC,EAAaC,EAAWK,EAASF,GAAMD,GAIjEJ,GAAkBC,EAAaC,EAAWC,EAAOC,EAAQ,EAjBzD,CAkBJ,CAEA,SAASO,GAAmBC,GACxB,IAAIC,EAAS,CAAC,EAEVD,EAAON,QACPN,GAAkBa,EAAQD,EAAO,IAGrC,IAAIrB,EAAc,GAClB,IAAK,IAAIuB,KAAKD,EACVtB,EAAYwB,KAAK,CAAEpC,KAAMqC,KAAKC,MAAMH,GAAIlB,OAAQiB,EAAOC,KAG3D,OAAOvB,CACX,CA6CA,SAAS2B,GAAsBC,EAAMX,EAASY,IA3C9C,SAA+BZ,EAASW,GACpC,IACIE,GADSF,EAAKP,QAAU,IACJ,GAExB,GAAIS,GAAcb,EAAQF,OAASe,EAAWb,QAAQF,OAGlD,IAFA,IAAIgB,EAAeD,EAAWb,QAErBH,EAAM,EAAGA,EAAMiB,EAAahB,OAAQD,IACzC,IAAIiB,EAAajB,GAAKhB,QAAtB,CAKA,IADA,IAAIkC,GAAQ,EACHC,EAAI,EAAGA,EAAIhB,EAAQF,OAAQkB,IAChC,GAAiE,IAA7DC,GAAQjB,EAAQgB,IAAIzB,QAAQuB,EAAajB,GAAKqB,WAAkB,CAChEH,GAAQ,EACR,KACJ,CAGCA,GACDf,EAAQO,KAAK,CAAEpC,KAAM,CAAC2C,EAAajB,GAAK1B,MAAOiB,QAAQ,GAX3D,CAeZ,EAqBI+B,CAAsBnB,EAFtBW,EAAOA,GAAQ,CAAC,GAIZC,EAASd,OAAS,GAClBE,EAAQO,KAAK,CACTpC,KAAM3B,EACNqC,SAAS,EACTkB,SAAUZ,EAAiByB,KAInC,IAAIQ,EAAgB,CAChBpB,QAASA,GAGb,GAAIW,EAAKP,OAAQ,CACb,IAAIC,EAASgB,GAAkBV,EAAKP,OAAQgB,GACxCf,EAAOV,QACPK,EApCZ,SAA4BL,GAIxB,IAHA,IAAIU,EAAS,GACTL,EAAUL,EAAMK,QAEXH,EAAM,EAAGA,EAAMG,EAAQF,OAAQD,IAChCG,EAAQH,GAAKhB,SAKjBwB,EAAOE,KAAK,CAAEpC,KAAM,CAAC6B,EAAQH,GAAK1B,MAAOiB,OAAQY,EAAQH,GAAKE,SAASD,OAAS,IAGpF,OAAOO,CACX,CAsBsBiB,CAAmBjB,EAAOV,OAE5C,CAEA,OAAOK,CACX,CAEA,SAASuB,GAAsBC,GAC3B,IAAIC,EAAgBnI,EAAMoI,OAAOF,EAAEG,OAAO,GAC1C,OAAO,SAASC,EAAmBC,GAC/B,OAAOL,EAAEM,UAAUL,EAAcG,EAAkBtD,UAAWuD,EAAOD,EACzE,CACJ,CAEA,SAASG,GAASC,GACd,MAAsB,iBAARA,IAAqBC,MAAMD,EAC7C,CAEA,SAASE,GAAOF,GACZ,OAAOA,GAAOA,EAAIG,OACtB,CAoBA,SAASC,GAAclH,EAAMmH,EAAQC,GACjC,MAAMC,EAAOtI,KACPuI,GAAgBD,EAAKE,OAAOvH,KAAKA,IAAS,IAAImE,MAAM,GACtDmD,IAAiBD,EAAKG,gBACtBH,EAAKG,cAAgBF,GAEzB,MAAMG,EAAiBJ,EAAKK,gBAAgBP,EAAOQ,YAC7CC,EAAcP,EAAKK,gBAAgBP,EAAOU,SAC1CnC,EAAW2B,EAAK3B,WAGhBoC,EAAY,CACdC,SAHazI,EAAmC0I,EAAEV,EAAcM,EAAaH,EAAgB/B,EAAU,CAAEuC,UAAW,YAAaC,YAAa,WAAab,EAAKc,UAAY,IAI5KV,eAAgBA,EAChBG,YAAaA,EACbD,WAAYR,EAAOQ,WACnBE,QAASV,EAAOU,QAChBnC,SAAUA,EAAS7E,KAAI,SAASuH,GAAQ,OAAOA,CAAM,IACrDC,OAAQ,CAAEJ,UAAW,YAAaC,YAAa,WAC/CI,KAAMC,GAAuBpB,EAAOmB,MAAQ,KAGhDjB,EAAKmB,WAAWlJ,EAAmCmJ,EAAEX,IACrDT,EAAKqB,QAAQvH,GACbiG,EAASuB,SACb,CAEA,SAASJ,GAAuB1E,GAE5B,IADA,IAAIsB,EAAS,GACJyD,EAAI,EAAGA,EAAI/E,EAAYe,OAAQgE,IACpCzD,EAAOE,KAAK,CACRwD,IAAKhF,EAAY+E,GAAGC,IACpBpC,MAAO5C,EAAY+E,GAAGnC,MAAMqC,MAAM,KAAKC,QAG/C,OAAO5D,CACX,CAEA,SAAS6D,GAAmBvC,EAAOxE,EAAKgH,EAAQrC,GAC5C,IACIsC,EAAa,CACbC,IAAO7J,EAAmC8J,EAC1CC,QAAW/J,EAAmCgK,EAC9CC,IAAOjK,EAAmCgH,EAC1CkD,IAAOlK,EAAmCyE,EAC1C0F,MAASnK,EAAmCoK,GAG5C/F,EAAU,CACNN,MAFQ,SAAS+E,GAAQ,OAAOA,EAAKrJ,KAAK0H,MAAQ,EAEjCkD,KAAK,CAAElD,MAAOA,IAC/BG,UAAWsC,EAAWtC,GACtB5D,QAASf,EACT2H,WAAY3H,EACZ+B,KAAM,EACNf,KAAM,CAAChB,IAMf,OAJIgH,IACAtF,EAAQiD,UAAUqC,OAlBL,SAAS5F,GAAS,OAAOjF,EAAM6K,OAAOlK,KAAKkK,OAAQ5F,EAAQ,EAkBlCsG,KAAK,CAAEV,OAAQA,KAGlDtF,CACX,CAsBA,IAAIkG,GAAY,CACZV,IAAK,SAAS9F,EAAOsD,GACjB,IAAIpC,EAAcoC,EAAMpC,YAQxB,OANKsC,GAAStC,GAEHsC,GAASxD,KAChBkB,GAAelB,GAFfkB,EAAclB,EAKXkB,CACX,EACAkF,MAAO,SAASpG,EAAOsD,GACnB,OAAQA,EAAMpC,aAAe,GAAK,CACtC,EACA8E,QAAS,CACLzC,UAAW,SAASvD,EAAOsD,GACvB,IAAIpC,EAAcoC,EAAMpC,YAgBxB,OAdIoC,EAAM8C,QAAUhK,IAChBkH,EAAM8C,MAAQ,GAGb5C,GAAStC,GAEHsC,GAASxD,KAChBkB,GAAelB,GAFfkB,EAAclB,EAKdwD,GAASxD,IACTsD,EAAM8C,QAGHlF,CACX,EACAY,OAAQ,SAASwB,GACb,IAAIpC,EAAcoC,EAAMpC,YAMxB,OAJIsC,GAAStC,KACTA,GAA4BoC,EAAM8C,OAG/BlF,CACX,GAEJiF,IAAK,SAASnG,EAAOsD,GACjB,IAAIpC,EAAcoC,EAAMpC,YASxB,OAPKsC,GAAStC,IAAiByC,GAAOzC,KAClCA,EAAclB,GAGdkB,EAAclB,IAAUwD,GAASxD,IAAU2D,GAAO3D,MAClDkB,EAAclB,GAEXkB,CACX,EACAgF,IAAK,SAASlG,EAAOsD,GACjB,IAAIpC,EAAcoC,EAAMpC,YASxB,OAPKsC,GAAStC,IAAiByC,GAAOzC,KAClCA,EAAclB,GAGdkB,EAAclB,IAAUwD,GAASxD,IAAU2D,GAAO3D,MAClDkB,EAAclB,GAEXkB,CACX,GAGAuF,GAAmBhK,EAAMgB,OAAO,CAChCiJ,KAAM,SAASC,GACXjL,KAAKiL,QAAUlJ,EAAO,CAAC,EAAG/B,KAAKiL,QAASA,GACxCjL,KAAKkL,WAAalL,KAAKmL,sBAAsB,QAASnL,KAAKiL,QAAQC,YACnElL,KAAK2G,SAAW3G,KAAKmL,sBAAsB,OAAQnL,KAAKiL,QAAQtE,SACpE,EAEAwE,sBAAuB,SAASC,EAAUtG,GACtCA,EAAcA,GAAe,CAAC,EAC9B,IACI4C,EADA4B,EAAS,CAAC,EAGd,GAAmC,mBAA/B3H,EAASoD,KAAKD,GAAmC,CACjD,IAAK,IAAIc,EAAM,EAAGC,EAASf,EAAYe,OAAQD,EAAMC,EAAQD,IAEpC,iBADrB8B,EAAQ5C,EAAYc,IAEhB0D,EAAO5B,GAAS,CAAC,EACVA,EAAM0D,KACb9B,EAAO5B,EAAM0D,IAAa1D,GAGlC5C,EAAcwE,CAClB,CAEA,OAAOxE,CACX,EAEAuG,YAAa,SAASC,EAAWC,GAC7B,IAEIC,EAAMtH,EAAMuH,EAEZ7F,EAJA8F,EAAoBH,EAAmB1F,QAAU,EACjD8F,EAAmB3L,KAAKkL,YAAc,GAEtCU,EAAa,EAGbC,EAAkBP,EAAUzF,OAC5BO,EAAS,GACTpE,EAAO,GAEX,GAAI6J,GAAmBN,EAAmB1F,OAAQ,CAC9C,IAAK+F,EAAa,EAAGA,EAAaF,EAAmBE,IAAc,CAI/D,IAFAJ,EAAO,CAAEzF,QAAS,IAEbH,EAAM,EAAGA,EAAMiG,EAAiBjG,IAEjC6F,GADAvH,EAAOoH,EAAU1F,IACJmE,MAAM,KAEnByB,EAAKzF,QAAQyF,EAAKzF,QAAQF,QAAU,CAChCC,SAAU,GACV7B,SAAU0H,EAAiBzH,IAAS,CAAC,GAAGD,SAAW,MACnDC,KAAMA,EACN4H,UAAW5H,EACX6H,SAAU,IACVC,aAAa,EACbC,WAAYR,EAAM5F,OAAS,EAAI4F,EAAM,GAAK/K,EAC1CuG,UAAW/C,GAIfwH,EAAoB,IACpBF,EAAKzF,QAAQyF,EAAKzF,QAAQF,QAAU,CAChCC,SAAU,GACV7B,QAAUsH,EAAmBK,GAAa3H,QAC1CC,KAAMqH,EAAmBK,GAAY/G,WAAWX,KAChD4H,UAAW,WACXC,SAAU,IACVC,aAAa,EACbC,WAAYvL,EACZuG,UAAW,aAInBb,EAAOA,EAAOP,QAAU2F,CAC5B,CAEAxJ,EAAKsE,KAAK1D,EACd,CAEA,MAAO,CACHZ,KAAMA,EACNmE,OAAQC,EAEhB,EAEA8F,SAAU,SAASpK,EAAKqK,GACpB,IAEIC,EACAC,EACAnJ,EAJAoJ,EAAa,GACbC,EAAW,GAKf,IAAKrJ,KAAOpB,EACHA,EAAIoB,GAAKsJ,kBACVD,EAASjG,KAAK7F,EAAEsB,OAAO,CAAC,EAAG,CAAEmC,KAAMhB,EAAK+I,WAAYnK,EAAIoB,GAAK+I,cAMrE,IAAKM,EAAS1G,OACV,IAAK3C,KAAOpB,EACRyK,EAASjG,KAAK7F,EAAEsB,OAAO,CAAC,EAAG,CAAEmC,KAAMhB,EAAK+I,WAAYnK,EAAIoB,GAAK+I,cAIrEQ,GAAaF,EAAUzK,GAGvB,IAAK,IAAI+H,EAAI,EAAGA,EAAIsC,EAAgBtG,OAAQgE,IACxC6C,GAAcP,EAAgBtC,GAAGnC,MAAMqC,MAAM,KAAKC,MAAOuC,EAAUvL,EAAS2L,OAAO,CAAEjF,MAAO,OAAQoC,IAAKqC,EAAgBtC,GAAGC,OAGhIsC,EAAcQ,GAAYL,GAG1B,IAAK,IAAIxF,EAAI,EAAGA,EAAIqF,EAAYvG,OAAQkB,KACpCsF,EAAUvK,EAAIsK,EAAYrF,GAAG7C,OACrB2I,MAAQ9F,EAChBuF,EAAWvF,GAAKsF,EAGpB,OAAOC,CACX,EAEAQ,gBAAiB,SAAShL,EAAK2B,EAAU8H,EAAoBY,GACzD,IAEIP,EACAlG,EAEAxC,EACAmJ,EACAU,EACAC,EAGAC,EAEAC,EACAzB,EACAvH,EACA0B,EAhBA8F,EAAoBH,EAAmB1F,QAAU,EACjD8F,EAAmB3L,KAAKkL,YAAc,GAQtC1F,EAAc,GACd2H,EAAkB,GAYtB,IAAKjK,KAJDiJ,GAAmBA,EAAgBtG,SAAWpF,EAAE2M,cAActL,KAC9DA,EAAM9B,KAAKkM,SAASpK,EAAKqK,IAGjBrK,EAAK,CASb,IARAuK,EAAUvK,EAAIoB,GAGd6J,EAAUvH,GAFVyH,EAAajN,KAAKqN,oBAAoB5J,EAAU4I,EAAQiB,aAEvBT,QAAU,GAC3CG,EAAcG,EAAgBF,EAAWJ,QAAU,GAEnDK,EAAgBD,EAAWjJ,OAAOuJ,MAE7B3B,EAAa,EAAGA,EAAaF,EAAmBE,IAAc,CAE/D,IADAlG,EAAQ,CAAEK,QAAS,IACdH,EAAM,EAAGA,EAAMsH,EAAcrH,OAAQD,IAClCA,IAAQqH,EAAWjJ,OAAOwJ,aAC1B9H,EAAMK,QAAQL,EAAMK,QAAQF,QAAU,CAClCC,SAAU,GACV7B,QAASoI,EAAQ/H,MACjBJ,KAAMmI,EAAQnI,KACd8H,aAAa,EACbD,SAAU,EACVD,UAAWO,EAAQJ,WAAaI,EAAQnI,KACxC+H,WAAYI,EAAQJ,WACpBhF,UAAWoF,EAAQJ,WAAaI,EAAQnI,MAGzB,IAAf0H,GACAoB,EAAY1G,KAAKL,GAAUP,EAAOE,GAAK6H,KAAK,OAIhDhC,GADAvH,EAAOgJ,EAActH,IACRmE,MAAM,KACnBrE,EAAMK,QAAQL,EAAMK,QAAQF,QAAU,CAClCC,SAAU,GACV7B,SAAU0H,EAAiBzH,IAAS,CAAC,GAAGD,SAAW,MACnDC,KAAMA,EACN4H,UAAW5H,EACX6H,SAAU,IACVC,aAAa,EACbC,WAAYR,EAAM5F,OAAS,EAAI4F,EAAM,GAAK/K,EAC1CuG,UAAW/C,IAKnBwH,EAAoB,IACpBhG,EAAMK,QAAQL,EAAMK,QAAQF,QAAU,CAClCC,SAAU,GACV7B,QAASsH,EAAmBK,GAAY3H,QACxCC,KAAMqH,EAAmBK,GAAY/G,WAAWX,KAChD4H,UAAW,WACXC,SAAU,IACVC,aAAa,EACbC,WAAYvL,EACZuG,UAAW,aAInB8F,EAAQA,EAAQlH,QAAUH,CAC9B,CAEAF,EAAYyH,EAAWJ,OAASE,EAChCI,EAAgBF,EAAWJ,OAASG,CACxC,CAEA,MAAO,CACHhL,KAAMmL,EACNhH,OAAQX,EAEhB,EAEA6H,oBAAqB,SAAStH,EAASkG,GACnC,IAAK,IAAIrG,EAAM,EAAGA,EAAMG,EAAQF,OAAQD,IACpC,GAAIG,EAAQH,GAAK0H,aAAerB,EAC5B,MAAO,CACHjI,OAAQ+B,EAAQH,GAChBiH,MAAOjH,EAIvB,EAEA8H,UAAW,SAAS5L,EAAK+C,EAAY0G,EAAoBY,GACrDZ,EAAqBA,GAAsB,GAE3C,IAAIoC,EAAW3N,KAAKqL,YAAYxG,EAAW2G,KAAMD,GAC7CqC,EAAe5N,KAAK8M,gBAAgBhL,EAAK+C,EAAWpB,SAAU8H,EAAoBY,GAEtF,MAAO,CACHnK,KAAM,GAAG6L,OAAOC,MAAMH,EAAS3L,KAAM4L,EAAa5L,MAClDmE,OAAQ,GAAG0H,OAAOC,MAAMH,EAASxH,OAAQyH,EAAazH,QAE9D,EAEA4H,cAAe,SAASpH,EAAUqH,GAY9B,IAXA,IAQIpJ,EACAV,EATA0B,EAAM,EACNC,EAASc,GAAYA,EAASd,OAE9BoI,EAAiB,GACjBC,EAAc,CAAC,EACfC,EAAU,CAAC,EAEXrJ,EAAe9E,KAAK2G,UAAY,CAAC,EAI9Bf,EAAMC,EAAQD,IAEjBhB,EAAUE,EADVZ,EAAOyC,EAASf,GAAKf,WAAWX,OACD,CAAC,EAEhC+J,EAAe3H,KAAKpC,GAEhBU,EAAQwB,SACR8H,EAAYhK,GAAQU,EAAQwB,QAG5BxB,EAAQsF,SACRiE,EAAQjK,GAAQU,EAAQsF,QAIhC,MAAO,CACHqD,MAAOU,EACPE,QAASA,EACTD,YAAaA,EACbF,QAASA,EAEjB,EAEAI,aAAc,SAAStM,EAAKuM,EAAcC,EAASC,GAC/C,IAEIC,EACAtK,EAAM2F,EAAG9C,EAAGV,EAAGoI,EACfC,EAAKC,EAAQC,EAIbC,EARAzI,EAAS,GAMT0I,EAAwB,EACxBC,EAAkB,GAGlBC,EAAYV,EAAQzI,QAAU,EAC9BoJ,EAAeV,EAAW1I,QAAU,EASxC,IAPIwI,EAAaL,QAEbc,GADAC,EAAkBV,EAAad,OACS1H,OAExCgJ,EAAqBR,EAAad,MAGjC1D,EAAI,EAAGA,EAAImF,EAAWnF,IAGvB,IAFA6E,EAAM5M,EAAIwM,EAAQzE,IAAMjH,GAEnB6L,EAAI,EAAGA,EAAIK,EAAuBL,IAKnC,IAJIJ,EAAaL,UACba,EAAqB,CAACE,EAAgBN,KAGrC1H,EAAI,EAAGA,EAAIkI,EAAclI,IAU1B,IATA6H,EAAYL,EAAWxH,IAAMnE,EAC7B+L,EAASD,EAAIQ,MAAMN,GAGfJ,EADAI,IAAchM,EACD8L,EAAIF,WAEJG,EAASA,EAAOH,WAAa,CAAC,EAG1CnI,EAAI,EAAGA,EAAIwI,EAAmBhJ,OAAQQ,IACvCnC,EAAO2K,EAAmBxI,GAC1BrG,KAAKmP,SAAS/I,EAAQoI,EAAWtK,GAAOmK,EAAaF,QAAQjK,GAAOmK,EAAaH,YAAYhK,IAM7G,OAAOkC,CACX,EAEA+I,SAAU,SAAS/I,EAAQ9B,EAAO4F,EAAQkF,GACtC,IACIC,EADA5K,EAAW,GAGXH,IACAA,EAAQ8K,EAAaA,EAAW9K,GAASA,EAAMkB,YAC/Cf,EAAWyF,EAAS7K,EAAM6K,OAAOA,EAAQ5F,GAASA,GAKtD8B,EAFAiJ,EAAUjJ,EAAOP,QAEC,CACdwJ,QAASA,EACT/K,MAAOA,GAAS,GAChBG,SAAUA,EAElB,EAEA6K,kBAAmB,SAASjL,EAAUQ,EAAY0K,GAS9C,IARA,IAAI9D,EACA+D,EACAC,EAIAnL,EAFAiJ,EAAQ1I,EAAW0I,MACnB3H,EAAMf,EAAW2I,YAGd5H,EAAM,GAET,IADA6F,EAAQ8B,IAAQ3H,GAAKmE,MAAM,MACjBlE,OAAS,IACf2J,EAAc/D,EAAM,GACpBgE,EAAgBhE,EAAM,IAGtBnH,GADAA,EAAQiL,EAAQC,GAAanL,MACV3D,GAAyB,OAAV4D,EAAkBA,EAAM3C,WAAa2C,IAE1DmL,GACT,OAAO,EAInB,OAAO,CACX,EAEAC,oBAAqB,SAASnE,EAAoB5D,EAAmBgI,GAKjE,IAJA,IACI/H,EACA1D,EAFAkC,EAAS,CAAC,EAILwF,EAAa,EAAGA,EAAaL,EAAmB1F,OAAQ+F,IAC7D1H,EAAOqH,EAAmBK,GAAY/G,WAAWX,MACjD0D,EAAQ+H,EAAUnB,WAAWtK,IAAS,CAAE,GAClCsB,YAAc+F,EAAmBK,GAAYgE,WAAWjI,EAAmBC,GACjFxB,EAAOlC,GAAQ0D,EAGnB,OAAOxB,CACX,EAEAyJ,gBAAiB,SAAStE,EAAoBzG,EAAayK,EAASO,EAASnI,EAAmBoI,EAAUnI,EAAOoI,GAS7G,IARA,IAAI1L,EACAO,EACA8J,EACAgB,EACAzM,EAAKgB,EAAM+H,EAAYgE,EACvB5L,EAAWsD,EAAkBtD,SAC7BuB,EAAM,EAEHA,EAAMd,EAAYe,OAAQD,IAC7Bf,EAAaC,EAAYc,GAGpB5F,KAAKsP,kBAAkBjL,EAAUQ,EAAY0K,KAIlDU,EAAOpL,EAAW0I,MAAMnI,MAAM,EAAGP,EAAW2I,aAAaC,KAAK,IAO9DxB,EANA/H,EAAOW,EAAW0I,MAAM1I,EAAW2I,aAUnCmB,EAASmB,EAFT5M,EAAM+M,GADN/L,EAAOA,EAAO,KAHdI,GADAA,EAAQiL,EAAQrL,GAAMG,MACH3D,GAAyB,OAAV4D,EAAkBA,EAAM3C,WAAa2C,MAM9C,CACrBuI,MAAOjF,EAAMsI,YACbjE,WAAYA,EACZ/H,KAAMA,EACNsI,kBAAyC,IAAvByD,EAAK3K,QAAQ,KAAc2K,EAAO,GACpD3C,WAAY2C,EAAOhE,EACnBkE,YAAa,CAAC,EACd7L,MAAOA,GAGP2L,GAAQH,EAAQG,KAAUH,EAAQG,GAAME,YAAYF,EAAOhE,EAAa,IAAM3H,KAC9EwL,EAAQG,GAAME,YAAYF,EAAOhE,EAAa,IAAM3H,IAAS,GAGjEqL,EAAYI,EAASb,MAAMhM,IAAQ,CAC/BsL,WAAY,CAAC,GAGjBuB,EAASb,MAAMhM,GAAO,CAClB2J,MAAO8B,EAAO9B,MACd2B,WAAYxO,KAAK0P,oBAAoBnE,EAAoB5D,EAAmBgI,IAG5EK,IACKF,EAAQ5M,IACT0E,EAAMsI,cAEVJ,EAAQ5M,GAAOyL,GAG3B,EAEAyB,oBAAqB,SAASnF,GAC1B,IAGIpG,EAAYD,EAASgB,EAAKC,EAC1BwK,EAAkBxI,EAJlByI,EAAqBrF,EAAQtE,UAAY,GACzCA,EAAW3G,KAAK2G,UAAY,CAAC,EAC7B4J,EAAc,GAIlB,GAAID,EAAmBzK,QACnB,IAAKD,EAAM,EAAGC,EAASyK,EAAmBzK,OAAQD,EAAMC,EAAQD,IAK5D,GAFAyK,EAAmB,KADnBzL,EAAU+B,GADV9B,EAAayL,EAAmB1K,IACF1B,MAGjB,CAET,GAAyB,iBADzB2D,EAAYjD,EAAQiD,WACe,CAG/B,KAFAwI,EAAmBvF,GAAUjD,EAAU2I,gBAGnC,MAAM,IAAIC,MAAM,uCAGpB7L,EAAQiD,UAAYwI,EAAiBxI,WAAawI,EAClDzL,EAAQwB,OAASiK,EAAiBjK,MACtC,CAGAmK,EAAYjK,KAAK,CACbzB,WAAYA,EACZZ,QAASW,EAAQX,QACjBmC,OAAQxB,EAAQwB,OAChBwJ,WAAYtI,GAAsB1C,IAE1C,OAGJ2L,EAAYjK,KAAK,CACbzB,WAAY,CAAEX,KAAM,WACpBD,QAAS,UACT2L,WAAY,WAAa,OAAO,CAAG,IAI3C,OAAOW,CACX,EAEAG,cAAe,SAASnD,GAKpB,IAJA,IACI9B,EACAvH,EAFAkC,EAAS,CAAC,EAILR,EAAM,EAAGA,EAAM2H,EAAM1H,OAAQD,KAElC6F,GADAvH,EAAOqJ,EAAM3H,IACAmE,MAAM,MAETlE,OAAS,EACfO,EAAOqF,EAAM,IAAMpM,EAAMoI,OAAOgE,EAAM,IAAI,GAE1CrF,EAAOlC,GAAQ7E,EAAMoI,OAAOpC,GAAcnB,IAAO,GAIzD,OAAOkC,CACX,EAEAuK,kBAAmB,SAAS7L,GAMxB,IALA,IAAI8L,EAAoBC,GAAiB/L,GACrCwG,EAAYwF,GAAaF,EAAkBpF,MAC3C/H,EAAWmN,EAAkBnN,SAC7B2C,EAAS,GAEJR,EAAM,EAAGA,EAAMnC,EAASoC,OAAQD,IACrCQ,EAAOE,KAAKyK,GAAStN,EAASmC,GAAK1B,KAAMoH,IAG7C,MAAO,CACHE,KAAMF,EACN7H,SAAU2C,EAElB,EAEA4K,QAAS,SAAS/P,EAAMmI,GACpB,IAAKA,EACD,OAAOnI,EAOX,IAJA,IAAIgQ,EACArL,EAAM,EACNsL,EAAU9H,EAAO8H,QAEdtL,EAAMsL,EAAQrL,OAAQD,IAGH,QAFtBqL,EAAOC,EAAQtL,IAENuL,WACLD,EAAQtL,GAAO5F,KAAKoR,iBAAiBH,IAI7C,OAAO,IAAI5R,EAAM4B,KAAKQ,MAAMR,GAAMmI,OAAOA,GAAQnI,IACrD,EAEAmQ,iBAAkB,SAAShI,GACvB,IAAI9E,EAAQ8E,EAAO9E,MAAMyF,MAAM,KAC3B3D,EAAS,GAEb,IAAK9B,EAAMuB,OACP,OAAOvB,EAGX,IAAK,IAAIsB,EAAM,EAAGA,EAAMtB,EAAMuB,OAAQD,IAClCQ,EAAOE,KAAK,CACRoB,MAAO0B,EAAO1B,MACdyJ,SAAU,KACV7M,MAAOA,EAAMsB,KAIrB,MAAO,CACHyL,MAAO,KACPH,QAAS9K,EAEjB,EAEAkL,QAAS,SAASrQ,EAAMgK,GACpBhK,EAAOA,GAAQ,GACfgK,EAAUA,GAAW,CAAC,EAEtBhK,EAAOjB,KAAKgR,QAAQ/P,EAAMgK,EAAQ7B,QAElC,IAAIzC,EAAWsE,EAAQtE,UAAY,GAE/B4K,EAA2C,SAAzBtG,EAAQuG,aAE1BC,EAAoBxG,EAAQ6E,SAAW,GACvC4B,EAAiBzG,EAAQ0G,MAAQ,IAEhCF,EAAkB5L,QAAU6L,EAAe7L,UAAYc,EAASd,QAAWc,EAASd,QAAU0L,KAC/FE,EAAoBC,EACpBA,EAAiB,GACjBH,GAAkB,GAGjBE,EAAkB5L,QAAW6L,EAAe7L,SAC7C0L,GAAkB,IAGjBE,EAAkB5L,QAAUc,EAASd,SACtC4L,EAAoBvM,EAAiB+F,EAAQtE,WAGjD8K,EAAoBzR,KAAK2Q,kBAAkBc,GAC3CC,EAAiB1R,KAAK2Q,kBAAkBe,GAExC,IAIIE,EAaAvN,EACAsD,EAGAkK,EAAQC,EAAeC,EAAShC,EAChC7M,EAAK+M,EAAMhE,EAAY3H,EACvB0N,EAAaC,EAvBbC,EAAiB,CAAC,EAClBpC,EAAU,CAAC,EACX6B,EAAO,CAAC,EAGR/J,EAAQ,CAAEsI,YAAa,GAEvB3E,EAAqBvL,KAAKoQ,oBAAoBnF,GAE9CkH,EAAgBnS,KAAK0Q,cAAce,EAAkBjG,MACrD4G,EAAapS,KAAK0Q,cAAcgB,EAAelG,MAE/C6G,GAAY,EAEZC,EAAkBb,EAAkBhO,SACpC8O,EAAeb,EAAejO,SAI9B+O,EAA0C,IAAxBD,EAAa1M,OAK/BA,EAAS5E,EAAK4E,OACdD,EAAM,EAEV,GAAI6L,EAAkBjG,KAAK3F,QAAU6L,EAAelG,KAAK3F,OAGrD,IAFAwM,GAAY,EAEPzM,EAAM,EAAGA,EAAMC,EAAQD,IAkBxB,IAfA+B,EAAoB,CAChBtD,SAHJA,EAAWpD,EAAK2E,GAIZiH,MAAOjH,GAGXmK,EAAWmC,EAAetP,IAAkB,CACxCsM,MAAO,CAAC,EACRV,WAAY,CAAC,GAGjBxO,KAAK6P,gBAAgBtE,EAAoB+G,EAAiBH,EAAerC,EAASnI,EAAmBoI,EAAUnI,GAAQ4K,GAEvHzC,EAASvB,WAAaxO,KAAK0P,oBAAoBnE,EAAoB5D,EAAmBoI,GACtFmC,EAAetP,GAAiBmN,EAE3B8B,EAAS,EAAGA,EAASU,EAAa1M,OAAQgM,IAC3CC,EAAgBS,EAAaV,GAExB7R,KAAKsP,kBAAkBjL,EAAUyN,EAAeM,IAKrDnC,EAAO6B,EAAcvE,MAAMnI,MAAM,EAAG0M,EAActE,aAAaC,KAAK,IAGpExB,EAFA8F,EAAUD,EAAcvE,MAAMuE,EAActE,aAU5CmE,EAFAzO,EAAM+M,GADN8B,EAAUA,EAAU,KAFpBH,GADAA,EAAWQ,EAAWL,GAAS1N,MACP3D,EAAckR,EAASjQ,WAAaiQ,KAKhD,CACRtE,WAAY2C,EAAOhE,EACnBA,WAAYA,EACZ/H,KAAM6N,EACNzN,MAAOsN,GAGXtN,EAAQ4N,EAAehP,IAAQ,CAC3BgM,MAAO,CAAC,EACRV,WAAY,CAAC,GAGjBxO,KAAK6P,gBAAgBtE,EAAoB+G,EAAiBH,EAAerC,EAASnI,EAAmBrD,EAAOsD,GAAO,GAEnHtD,EAAMkK,WAAaxO,KAAK0P,oBAAoBnE,EAAoB5D,EAAmBrD,GACnF4N,EAAehP,GAAOoB,GA9BlBtE,KAAK6P,gBAAgBtE,EAAoB+G,EAAiBH,EAAerC,EAASnI,EAAmB,CAAEuH,MAAO,CAAC,EAAGV,WAAY,CAAC,GAAK5G,GAAO,GAsD3J,OAnBIyK,GAAaxM,KACT0F,EAAmB1F,OAAS,IAAOoF,EAAQ6E,SAAY7E,EAAQ6E,QAAQjK,SACvE4L,EAAoB,CAChBjG,KAAM,GACN/H,SAAU,KAIlBuO,EAAchS,KAAK0N,UAAUoC,EAAS2B,EAAmBF,EAAkB,GAAKhG,EAAoBN,EAAQ1B,KAAO0B,EAAQ1B,KAAO,IAClI0I,EAAWjS,KAAK0N,UAAUiE,EAAMD,EAAgBH,EAAkBhG,EAAqB,GAAIN,EAAQ1B,KAAO0B,EAAQ1B,KAAO,IAEzHuG,EAAUkC,EAAY7L,OACtBwL,EAAOM,EAAS9L,OAEhB+L,EAAiBlS,KAAKoO,aAAa8D,EAAgBlS,KAAK+N,cAAcxC,EAAoBgG,GAAkBU,EAASjQ,KAAMgQ,EAAYhQ,OAEvIkQ,EAAiBpC,EAAU6B,EAAO,GAG/B,CACHc,KAAM,CACF3C,QAAS,CAAE3J,OAAQ2J,GACnB6B,KAAM,CAAExL,OAAQwL,IAEpB1Q,KAAMiR,EAEd,IAGAQ,GAAiB3R,EAAMgB,OAAO,CAC9BiJ,KAAM,SAASC,EAAS0H,GACpB3S,KAAK2S,UAAYA,EACjB3S,KAAKiL,QAAU0H,EAAU1H,SAAW,CAAC,EAEhCjL,KAAK2S,UAAUC,UACZ3Q,EAAWgJ,EAAQ2H,YACnB5S,KAAK4S,SAAW3H,EAAQ2H,SAGpC,EACAC,KAAM,SAAS5H,GACX,OAAOjL,KAAK2S,UAAUE,KAAK5H,EAC/B,EACA6H,OAAQ,SAAS7H,GACb,OAAOjL,KAAK2S,UAAUG,OAAO7H,EACjC,EACA0B,OAAQ,SAAS1B,GACb,OAAOjL,KAAK2S,UAAUhG,OAAO1B,EACjC,EACA8H,QAAS,SAAS9H,GACd,OAAOjL,KAAK2S,UAAUI,QAAQ9H,EAClC,EACA2H,SAAU,SAAS3H,GACf,GAAIjL,KAAK2S,UAAUC,SACf,OAAO5S,KAAK2S,UAAUC,SAAS3H,GAEnCA,EAAQ+H,QAAQ,CAAC,EACrB,EACAC,QAAS,SAASlL,GACd,IAAIkD,EAAUjL,KAAKiL,SAAW,CAAC,EAE/B,GAAIlD,IAAQrH,EACR,OAAQuK,EAAQiI,YAAc,CAAC,GAAGD,QAItC,IAAIC,EAAajI,EAAQiI,YAAc,CAAC,EACxCA,EAAWD,QAAUlL,EAErB/H,KAAKiL,QAAQiI,WAAaA,EAC1BzS,EAAEsB,OAAO/B,KAAK2S,UAAU1H,QAAS,CAAEiI,WAAYA,GACnD,EACAC,KAAM,SAASpL,GACX,IAAIkD,EAAUjL,KAAKiL,SAAW,CAAC,EAE/B,GAAIlD,IAAQrH,EACR,OAAQuK,EAAQiI,YAAc,CAAC,GAAGC,KAGtC,IAAID,EAAajI,EAAQiI,YAAc,CAAC,EACxCA,EAAWC,KAAOpL,EAElB/H,KAAKiL,QAAQiI,WAAaA,EAC1BnR,GAAO,EAAM/B,KAAK2S,UAAU1H,QAAS,CAAEiI,WAAYA,GACvD,IAGAE,GAAoBjS,EAAWY,OAAO,CACtCiJ,KAAM,SAASC,GAEX,IAAIkI,IAASlI,GAAW,CAAC,GAAGoI,QAAU,CAAC,GAAGF,KAEtCE,EAAS,CACTZ,KAAM7Q,EACN0R,MAAO1R,EACP2R,SAAU3R,EACV+E,SAAU/E,EACVsJ,WAAYtJ,EACZ4R,YAAa5R,EACb6R,OAAQ7R,EACRmE,QAASnE,GAGTuR,IACAnT,KAAK0T,WAAajT,EAAEsB,OAAOsR,EAAQrT,KAAK2T,YAAYR,KAGxDhS,EAAWyS,GAAG5I,KAAKjG,KAAK/E,KAAM+B,GAAO,EAAM,CAAC,EAAG,CAC3CsR,OAAQrT,KAAK0T,YACdzI,IAEH,IAAI4I,EAAmB7T,KAAKiL,QAAQ0H,WAAa,CAAC,EAEE,UAA/C3S,KAAKiL,QAAQhG,MAAQ,QAAQuL,eAC9BxQ,KAAK8T,SAAU,EACf9T,KAAK2S,UAAY,IAAIoB,GAAgBF,IAErC7T,KAAK2S,UAAY,IAAID,GAAe1S,KAAKiL,QAAQ0H,WAAa,CAAC,EAAG3S,KAAK2S,WAG3E3S,KAAKgU,SAAW9O,EAAiBlF,KAAKiL,QAAQ6E,SAC9C9P,KAAKiU,MAAQ/O,EAAiBlF,KAAKiL,QAAQ0G,MAE3C,IAAIhL,EAAW3G,KAAK0T,WAAa1T,KAAK0T,WAAW/M,WAAa3G,KAAKiL,QAAQtE,UAAY,GAEvD,oBAA5BhF,EAASoD,KAAK4B,KACd3G,KAAKkU,cAAgBvN,EAASD,MAAQ,UACtCC,EAAWA,EAASwN,QAAU,IAGlCnU,KAAKoU,UAAYzP,EAAkBgC,EACvC,EAEAsE,QAAS,CACLoJ,eAAe,EACfC,cAAc,EACdC,iBAAiB,EACjBC,gBAAgB,EAChBC,kBAAkB,GAGtBhC,KAAM,WACF,MAAO,CACH3C,QAAS4E,GAAc1U,KAAK8P,WAC5B6B,KAAM+C,GAAc1U,KAAK2R,QAEjC,EAEAsB,QAAS,SAASlL,GACd,GAAIA,IAAQrH,EACR,OAAOV,KAAK2S,UAAUM,UAG1BjT,KAAK2S,UAAUM,QAAQlL,GACvB/H,KAAK2U,YAAY,CAAC,GAClB3U,KAAK6S,MACT,EAEAM,KAAM,SAASpL,GACX,GAAIA,IAAQrH,EACR,OAAOV,KAAK2S,UAAUQ,OAG1BnT,KAAK2S,UAAUQ,KAAKpL,GACpB/H,KAAK2U,YAAY,CAAC,GAClB3U,KAAK6S,MACT,EAEArB,aAAc,WACV,OAAOxR,KAAKkU,eAAiB,SACjC,EAEAU,MAAO,SAASC,GACZ,IAAIvM,EAAOtI,KACX,GAAIA,KAAK8U,QAAUpU,GAAqC,IAAtBV,KAAK8U,MAAMjP,OAAc,CAOvD,OAAO7F,KAAK+U,SAASC,MANZ,WACD/S,EAAW4S,IACXA,EAAS9P,KAAKuD,EAEtB,GAGJ,CACJ,EAEAK,gBAAiB,SAAS8J,GAMtB,IALA,IACIvP,EADA+R,EAAW,GAEX/J,EAAalL,KAAK0T,WAAWwB,qBAC7BC,EAAmB,SAAS9L,GAAQ,OAAOA,EAAKrJ,KAAKkD,IAAM,EAC3DkS,EAAgB,SAAS9Q,GAAS,OAAOA,CAAO,EAC3CuF,EAAI,EAAGA,EAAI4I,EAAK5M,OAAQgE,IAC7B3G,EAAMuP,EAAK5I,GAAG3F,KAAK,GACnB+Q,EAAS3O,KAAK,CACVpD,IAAKA,EACLmS,aAAcF,EAAiBvK,KAAK,CAAE1H,IAAKA,IAC3CoS,UAAWF,EACXnR,SAAUiH,EAAWhI,IAAQ,CAAC,GAAGe,SAAWf,IAGpD,OAAO+R,CACX,EAEAtB,YAAa,SAASR,GAClB,MAAO,CACH+B,mBAAoB,WAChB,OAAO/B,EAAKjI,UAChB,EACAA,WAAY,WACR,IAAI9E,EAAS,GACT8E,EAAaiI,EAAKjI,WAEtB,IAAK,IAAIhI,KAAOgI,EACZ9E,EAAOE,KAAK,CACRpC,KAAMhB,EACNe,QAASiH,EAAWhI,GAAKe,SAAWf,EACpC2H,WAAY3H,EACZqS,iBAAkBrS,EAClB+B,KAAM,IAad,OATIkO,EAAKxM,UACLP,EAAOE,KAAK,CACRpC,KAAM3B,EACN0B,QAAS1B,EACTsI,WAAYtI,EACZ0C,KAAM,IAIPmB,CACX,EACAoP,eAAgB,SAAS7O,EAAU/B,GAC/B,IAAK,IAAIiF,EAAI,EAAGA,EAAIlD,EAASd,OAAQgE,IAC5BlD,EAASkD,GAAGhC,YACblB,EAASkD,GAAGhC,UAAYjD,EAAQiD,UAChClB,EAASkD,GAAGvF,MAAQM,EAAQN,MAC5BqC,EAASkD,GAAG5F,QAAUW,EAAQX,QAC9B0C,EAASkD,GAAGgB,WAAajG,EAAQiG,WACjClE,EAASkD,GAAG5E,KAAO,EAG/B,EACA0B,SAAU,WACN,IAAIP,EAAS,GACTO,EAAWwM,EAAKxM,SAEpB,IAAK,IAAIzD,KAAOyD,EACZP,EAAOE,KAAK2D,GAAmBtD,EAASzD,GAAKwE,MAAOxE,EAAKyD,EAASzD,GAAKgH,OAAQvD,EAASzD,GAAK2E,YAGjG,OAAOzB,CACX,EACAqP,WAAY,SAASvR,GACjB,IAAIuD,EAASpI,EAAMoI,OAAOpC,GAAcnB,IAAO,GAC3CjD,EAAOjB,KAAKiL,QAAQhK,MAAQjB,KAAKyI,eAAiB,GACtD,OAAKxH,EAAK4E,cAII4B,EAAOxG,EAAK,IAHf,IAIf,EAAE2J,KAAK5K,MACP+F,QAAS,SAAS7B,GACd,IAGIuD,EACAnD,EAJArD,EAAOjB,KAAKiL,QAAQhK,MAAQjB,KAAKyI,eAAiB,GAClDrC,EAAS,GACTsP,EAAW,CAAC,EAGZ9P,EAAM,EAEV,IAAiC,IAA7B1B,EAAKoB,QAAQ,WACb,MAAO,CACH,CACIrB,QAASkP,EAAKjI,WAAWhH,EAAK6F,MAAM,KAAK,IAAI9F,SAAWC,EACxDyR,gBAAiBzR,EACjBA,KAAMA,EACN0R,oBAAqB,EACrB/K,WAAY3G,IAOxB,IAFAuD,EAASpI,EAAMoI,OAAOpC,GAAcnB,IAAO,GAEpC0B,EAAM3E,EAAK4E,OAAQD,MACtBtB,EAAQmD,EAAOxG,EAAK2E,MACI,IAAVtB,IAAyB,IAAVA,GAAqBoR,EAASpR,KACvDoR,EAASpR,IAAS,EAElB8B,EAAOE,KAAK,CACRrC,QAASK,EAAQ,GACjBJ,KAAMI,EAAQ,GACdsR,oBAAqB,EACrB/K,WAAYvG,KAKxB,OAAO8B,CACX,EAAEwE,KAAK5K,MAEf,EAEA6S,KAAM,SAAS5R,GACX,MAAMqH,EAAOtI,KACP6V,EAAcvN,EAAKqB,QAr2Cd,eAq2CoC,CAAE1E,KAAM9C,IACjDiG,EAASE,EAAKwN,QAAQ7U,GACtBoH,EAAW5H,EAAEsV,WAiCnB,OAhCKF,IACDvN,EAAKqB,QAAQrH,GAETgG,EAAK2C,QAAQhK,KACbkH,GAAcpD,KAAKuD,EAAMA,EAAK2C,QAAQhK,KAAMmH,EAAQC,GACG,UAA/CrI,KAAKiL,QAAQhG,MAAQ,QAAQuL,cACrClI,EAAKqK,UAAUE,KAAK,CAChB5R,KAAMmH,EACN4K,QAAS,SAASgD,GACd1N,EAAKmB,WAAWuM,GAChB1N,EAAKqB,QAh3CZ,aAg3CgC,CAAEsM,SAAUD,EAAc/Q,KAAM9C,IACzDmG,EAAKqB,QAAQvH,GACTkG,EAAK4N,kBACL5N,EAAK4N,iBAAkB,GAE3B7N,EAASuB,SACb,EACAuM,MAAO,SAASC,GACZ9N,EAAKqB,QAAQtH,EAAO,CAAE8T,MAAOC,GACjC,IAGJ9N,EAAKqK,UAAUE,KAAK,CAChBG,QAAS,SAAS/R,GACdkH,GAAcpD,KAAKuD,EAAMrH,EAAMmH,EAAQC,EAC3C,EACA8N,MAAO,SAASC,GACZ9N,EAAKqB,QAAQtH,EAAO,CAAE8T,MAAOC,GACjC,KAIL/N,EAASgO,SACpB,EAEAP,QAAS,SAAS7U,GACd,IAAIqH,EAAOtI,KACPiL,EAAU9J,EAAWyS,GAAGkC,QAAQ/Q,KAAKuD,EAAMrH,GAsB/C,OApBAgK,EAAUlJ,EAAO,CACb6G,WAAYrC,KAAKC,MAAMD,KAAKP,UAAUsC,EAAK0L,WAC3ClL,QAASvC,KAAKC,MAAMD,KAAKP,UAAUsC,EAAK2L,QACxCzC,aAAclJ,EAAKkJ,eACnB8E,YAAahO,EAAK8L,WACnBnJ,GAE6C,UAA3CjL,KAAKiL,QAAQhG,MAAQ,IAAIuL,gBAC1BvF,EAAQiI,WAAa5K,EAAK2C,QAAQ0H,UAAUO,YAG5CjI,EAAQ7B,SACR6B,EAAQ7B,OAAS5H,EAAgByJ,EAAQ7B,QACzC6B,EAAQ7B,QAAU6B,EAAQ7B,QAAU,CAAC,GAAG8H,SAGxCjG,EAAQ1B,OACR0B,EAAQ1B,KAAO7H,EAAcuJ,EAAQ1B,OAGlC0B,CACX,EAEA2H,SAAU,SAAS3H,GACf,MAAM3C,EAAOtI,KACP2S,EAAYrK,EAAKqK,UACjB4D,EAAgC,UAAtBjO,EAAK2C,QAAQhG,KAEvBuR,EAAa,CACfC,eAAkBnO,EAAKE,OAAO7B,SAC9B+P,WAAcpO,EAAKE,OAAOmO,KAC1BC,iBAAoBtO,EAAKE,OAAO0C,WAChC2L,kBAAqBvO,EAAKE,OAAOgL,YACjCsD,aAAgBxO,EAAKE,OAAOiL,OAC5BsD,YAAezO,EAAKE,OAAO8K,MAC3B0D,eAAkB1O,EAAKE,OAAO+K,SAC9B0D,cAAiB3O,EAAKE,OAAOzC,SAGjC,OAAI4M,EAAUC,WAAa2D,EAChB5D,EAAUC,SAAS3H,GAGvBxK,EAAEsV,UAAS,SAAS1N,GACvBsK,EAAUC,SAAS7Q,EAAO,CACtBiR,QAAS,SAASiD,GACfA,EAAW3N,EAAKE,OAAOhC,MAAMyP,GAExB3N,EAAK4O,oBAAoBjB,KAIzBO,EAAWvL,EAAQkM,WACnBlB,EAAWO,EAAWvL,EAAQkM,SAASlB,IAE3C5N,EAASuB,QAAQqM,GACrB,EACAE,MAAO,SAASF,EAAUmB,EAAQjB,GAC9B9N,EAASgP,OAAOpB,GAChB3N,EAAK6N,MAAMF,EAAUmB,EAAQjB,EACjC,GACDlL,GACP,IAAGoL,UAAUrB,MAAK,WACd1M,EAAKqB,QAAQ,eACjB,GACJ,EAEA8M,eAAgB,WACZ,MAAMnO,EAAOtI,KACb,OAAOsI,EAAKsK,SACR,CACIuE,QAAS,iBACTG,aAAc,CACVC,YAAajP,EAAKqK,UAAUM,UAC5BuE,SAAUlP,EAAKqK,UAAUQ,SAGzC,EAEAuD,WAAY,WACR,MAAMpO,EAAOtI,KACb,OAAOsI,EAAKsK,SACR,CACIuE,QAAS,aACTG,aAAc,CACVC,YAAajP,EAAKqK,UAAUM,UAC5BuE,SAAUlP,EAAKqK,UAAUQ,SAGrC,EAEJyD,iBAAkB,WACd,MAAMtO,EAAOtI,KACb,OAAOsI,EAAKsK,SACR,CACIuE,QAAS,mBACTG,aAAc,CACVC,YAAajP,EAAKqK,UAAUM,UAC5BuE,SAAUlP,EAAKqK,UAAUQ,SAGrC,EAEJ0D,kBAAmB,SAASY,GACxB,MAAMnP,EAAOtI,KACb,OAAOsI,EAAKsK,SAAS,CACjBuE,QAAS,oBACTG,aAAc,CACVC,YAAajP,EAAKqK,UAAUM,UAC5BuE,SAAUlP,EAAKqK,UAAUQ,OACzBuE,oBAAqBD,IAGhC,EAEDX,aAAc,SAASa,GACnB,MAAMrP,EAAOtI,KACb,OAAOsI,EAAKsK,SAAS,CACjBuE,QAAS,eACTG,aAAc,CACVC,YAAajP,EAAKqK,UAAUM,UAC5BuE,SAAUlP,EAAKqK,UAAUQ,OACzByE,oBAAqBD,IAGjC,EAEAZ,YAAa,WAET,OADa/W,KACD4S,SAAS,CACjBuE,QAAS,cACTG,aAAc,CACVC,YAJKvX,KAIa2S,UAAUM,YAGxC,EAGA+D,eAAgB,WAEZ,OADahX,KACD4S,SAAS,CACjBuE,QAAS,kBAEjB,EAGAF,cAAe,SAASK,GACpB,MAAMhP,EAAOtI,KACb,OAAOsI,EAAKsK,SAAS,CACjBuE,QAAS,gBACTG,aAAcvV,EAAO,CAClBwV,YAAajP,EAAKqK,UAAUM,UAC5BuE,SAAUlP,EAAKqK,UAAUQ,QACzBmE,IAEX,EAEA7N,WAAY,SAAS7B,GACjB,IAAIU,EAAOtI,KAEXsI,EAAKuP,cAAgBjQ,EAAMkI,QAC3BxH,EAAKwP,WAAalQ,EAAM+J,KACxBrJ,EAAKyP,MAAQzP,EAAKwM,MAAQlN,EAAM3G,IACpC,EAEA6O,QAAS,SAAS/H,GACd,GAAIA,IAAQrH,EACR,OAAOV,KAAKgU,SAGhBhU,KAAKgU,SAAW9O,EAAiB6C,GACjC/H,KAAK6S,MACT,EAEAlB,KAAM,SAAS5J,GACX,GAAIA,IAAQrH,EACR,OAAOV,KAAKiU,MAGhBjU,KAAKiU,MAAQ/O,EAAiB6C,GAE9B/H,KAAK6S,MACT,EAEAlM,SAAU,SAASoB,GACf,GAAIA,IAAQrH,EACR,OAAOV,KAAKoU,UAGhBpU,KAAKoU,UAAYzP,EAAkBoD,GAEnC/H,KAAK6S,MACT,EAEA8B,YAAa,SAAS1J,GAGlB,OAFAA,EAAU9J,EAAWyS,GAAGe,YAAY5P,KAAK/E,KAAMiL,EAGnD,EAEA8J,OAAQ,SAAS9J,GACb,IAAI3C,EAAOtI,KACPoI,EAASrG,EAAO,CAAC,EAAG,CACpBwH,KAAMjB,EAAKiB,OACXiI,aAAclJ,EAAKkJ,eACnBpI,OAAQd,EAAKc,UACd6B,GAGH,OAFAjL,KAAK2U,YAAYvM,GAEVpI,KAAK6S,MAChB,IAGAmF,GAAkB7W,EAAWY,OAAO,CACpCiJ,KAAM,SAASC,GACX,IAEItE,EAFAwM,IAASlI,GAAW,CAAC,GAAGoI,QAAU,CAAC,GAAGF,KACtC3B,EAAe,UAGf6B,EAAS,CACTZ,KAAM7Q,EACN0R,MAAO1R,EACP2R,SAAU3R,EACV+E,SAAU/E,EACVsJ,WAAYtJ,EACZ4R,YAAa5R,EACb6R,OAAQ7R,EACRmE,QAASnE,GAGTuR,IACAE,EAAS5S,EAAEsB,OAAOsR,EAAQrT,KAAK2T,YAAYR,IAC3CnT,KAAKiY,YAAc,IAAIlN,GAAiBoI,IAG5ChS,EAAWyS,GAAG5I,KAAKjG,KAAK/E,KAAM+B,GAAO,EAAM,CAAC,EAAG,CAC3CsR,OAAQA,GACTpI,IAEHjL,KAAK2S,UAAY,IAAID,GAAe1S,KAAKiL,QAAQ0H,WAAa,CAAC,EAAG3S,KAAK2S,WAEvE3S,KAAKgU,SAAW9O,EAAiBlF,KAAKiL,QAAQ6E,SAC9C9P,KAAKiU,MAAQ/O,EAAiBlF,KAAKiL,QAAQ0G,MAE3ChL,EAAW3G,KAAKiL,QAAQtE,UAAY,GAEJ,oBAA5BhF,EAASoD,KAAK4B,KACd6K,EAAe7K,EAASD,MAAQ,UAChCC,EAAWA,EAASwN,QAAU,IAGlCnU,KAAKoU,UAAYzP,EAAkBgC,GACnC3G,KAAKkU,cAAgB1C,EAErBxR,KAAKkY,eAAiB,EACtBlY,KAAKmY,MAAQ,CAAC,CAClB,EAEAxE,YAAa,SAASR,GAClB,MAAO,CACHjI,WAAY,WACR,IAAI9E,EAAS,GACT8E,EAAaiI,EAAKjI,WAEtB,IAAK,IAAIhI,KAAOgI,EACZ9E,EAAOE,KAAK,CACRpC,KAAMhB,EACNe,QAASiH,EAAWhI,GAAKe,SAAWf,EACpC2H,WAAY3H,EACZqS,iBAAkBrS,EAClB+B,KAAM,IAad,OATIkO,EAAKxM,UACLP,EAAOE,KAAK,CACRpC,KAAM3B,EACN0B,QAAS1B,EACTsI,WAAYtI,EACZ0C,KAAM,IAIPmB,CACX,EACAoN,YAAa,WACT,MAAO,EACX,EACA7M,SAAU,WACN,IAAIP,EAAS,GACTO,EAAWwM,EAAKxM,SAEpB,IAAK,IAAIzD,KAAOyD,EACZP,EAAOE,KAAK,CACRpC,KAAMhB,EACNe,QAASf,EACT2H,WAAY3H,EACZ0M,WAAY1M,IAIpB,OAAOkD,CACX,EACAL,QAAS,SAASkQ,EAAUqB,GACxB,IAKI7P,EACAnD,EANAJ,EAAOoT,EAAa3B,iBAAmB2B,EAAac,iBACpDC,EAAarY,KAAKiL,QAAQoI,OAAOpS,KACjCqX,EAAarW,EAAWoW,GAAcA,EAAahZ,EAAMoI,OAAO4Q,GAAY,GAC5EpX,EAAQjB,KAAKiL,QAAQhK,MAAQqX,EAAWtY,KAAKiL,QAAQhK,OAAUjB,KAAKuY,UAAY,GAChFnS,EAAS,GAGTR,EAAM,EACN8P,EAAW,CAAC,EAMhB,GAJIxR,IACAA,EAAOA,EAAK6F,MAAM,KAAK,KAGtBuN,EAAakB,OAWd,OAVApS,EAAOE,KAAK,CACRrC,QAASkP,EAAKjI,WAAWhH,GAAMD,SAAWC,EAC1C0R,oBAAqB,IACrB8B,oBAAqBxT,EACrB0T,oBAAqB1T,EACrByR,gBAAiBzR,EACjBA,KAAMA,EACN2G,WAAY3G,IAGTkC,EAKX,IAFAqB,EAASpI,EAAMoI,OAAOpC,GAAcnB,IAAO,GAEpC0B,EAAM3E,EAAK4E,OAAQD,MACtBtB,EAAQmD,EAAOxG,EAAK2E,MACI,IAAVtB,GAAiBoR,EAASpR,KACpCoR,EAASpR,IAAS,EAElB8B,EAAOE,KAAK,CACRrC,QAASK,EACTsR,oBAAqB,IACrB8B,oBAAqBxT,EACrB0T,oBAAqB1T,EACrByR,gBAAiBzR,EACjBA,KAAMI,EACNuG,WAAYvG,KAKxB,OAAO8B,CACX,EAAEwE,KAAK5K,MAEf,EAEAiL,QAAS,CACLoJ,eAAe,EACfC,cAAc,EACdC,iBAAiB,EACjBC,gBAAgB,EAChBC,kBAAkB,GAGtBxB,QAAS,SAASlL,GACd,GAAIA,IAAQrH,EACR,OAAOV,KAAK2S,UAAUM,UAG1BjT,KAAK2S,UAAUM,QAAQlL,GACvB/H,KAAK2U,YAAY,CAAC,GAClB3U,KAAKmY,MAAQ,CAAC,EACdnY,KAAKiB,KAAK,GACd,EAEAkS,KAAM,SAASpL,GACX,GAAIA,IAAQrH,EACR,OAAOV,KAAK2S,UAAUQ,OAG1BnT,KAAK2S,UAAUQ,KAAKpL,GACpB/H,KAAKmY,MAAQ,CAAC,EACdnY,KAAK2U,YAAY,CAAC,GAClB3U,KAAKiB,KAAK,GACd,EAEAwR,KAAM,WACF,OAAOzS,KAAKmY,KAChB,EAEArI,QAAS,SAAS/H,GACd,GAAIA,IAAQrH,EACR,OAAOV,KAAKgU,SAGhBhU,KAAKkY,gBAAkB,EACvBlY,KAAKyY,gBAAiB,EAEtBzY,KAAKgU,SAAW9O,EAAiB6C,GACjC/H,KAAK0Y,MAAM,CACP5I,QAAS/H,EACT4J,KAAM3R,KAAK2Y,sBACXhS,SAAU3G,KAAK2G,WACf4C,KAAMvJ,KAAKuJ,OACXH,OAAQpJ,KAAKoJ,UAErB,EAEAuI,KAAM,SAAS5J,GACX,GAAIA,IAAQrH,EACR,OAAOV,KAAKiU,MAGhBjU,KAAKkY,gBAAkB,EACvBlY,KAAKyY,gBAAiB,EAEtBzY,KAAKiU,MAAQ/O,EAAiB6C,GAE9B/H,KAAK0Y,MAAM,CACP5I,QAAS9P,KAAK4Y,yBACdjH,KAAM5J,EACNpB,SAAU3G,KAAK2G,WACf4C,KAAMvJ,KAAKuJ,OACXH,OAAQpJ,KAAKoJ,UAErB,EAEAzC,SAAU,SAASoB,GACf,GAAIA,IAAQrH,EACR,OAAOV,KAAKoU,UAGhBpU,KAAKkY,gBAAkB,EACvBlY,KAAKyY,gBAAiB,EAEtBzY,KAAK0Y,MAAM,CACP5I,QAAS9P,KAAK4Y,yBACdjH,KAAM3R,KAAK2Y,sBACXhS,SAAUhC,EAAkBoD,GAC5BwB,KAAMvJ,KAAKuJ,OACXH,OAAQpJ,KAAKoJ,UAErB,EAEAoI,aAAc,WACV,OAAOxR,KAAKkU,eAAiB,SACjC,EAEA2E,YAAa,SAAS5I,EAAMvJ,GACxB,IAAIoS,EAAkB,YAATpS,EAAqB,UAAY,OAC1CqS,EAAiB,YAATrS,EAAqB,OAAS,UAEtCX,EAAUb,EAAiB+K,GAC3B+I,EAAiBhS,GAAQjB,EAAQA,EAAQF,OAAS,IAEtD7F,KAAKiZ,cAAgBH,EAErB/S,EAAUU,GAAsBzG,KAAKyS,OAAOqG,GAAS/S,EAAS/F,KAAK2G,YAEnE,IAAK,IAAIf,EAAM,EAAGA,EAAMG,EAAQF,OAAQD,IAAO,CAG3C,GAFiBoB,GAAQjB,EAAQH,MAEdoT,EAAgB,CAC/B,GAAIjT,EAAQH,GAAKT,OACb,OAEJY,EAAQH,GAAKT,QAAS,CAC1B,MACIY,EAAQH,GAAKT,QAAS,CAE9B,CAEA,IAAIL,EAAc,CAAC,EACnBA,EAAYgU,GAAU/S,EACtBjB,EAAYiU,GAAS/Y,KAAKkZ,oBAAoBH,GAE9C/Y,KAAK+U,OAAOjQ,EAChB,EAEAoU,oBAAqB,SAASxS,GAC1B,IAAI+L,EAAOzS,KAAKyS,OACZ3N,EAAc9E,KAAK0G,MAAW,GAKlC,OAHI+L,GAAQA,EAAK/L,IAAS+L,EAAK/L,GAAMP,QAAUsM,EAAK/L,GAAMP,OAAO,KAC7DrB,EAAcoB,GAAmBuM,EAAK/L,GAAMP,QAAU,KAEnDrB,CACX,EAEA8T,uBAAwB,WACpB,OAAO5Y,KAAKkZ,oBAAoB,UACpC,EAEAP,oBAAqB,WACjB,OAAO3Y,KAAKkZ,oBAAoB,OACpC,EAEAC,SAAU,SAASlY,EAAM0J,GACrB3K,KAAK+X,MAAQ9W,GAEb0J,EAAIA,GAAK,CAAC,GACRuE,MAAQvE,EAAEuE,OAASlP,KAAK+X,MAE1B/X,KAAK2J,QAAQvH,EAAQuI,EACzB,EAEAoK,OAAQ,SAAS9J,GACb,IAAI3C,EAAOtI,KAOX,OALKiL,IACDjL,KAAKkY,gBAAkB,EACvBlY,KAAKyY,gBAAiB,GAGnBnQ,EAAKoQ,MAAM3W,EAAO,CAAC,EAAG,CACzBqX,KAAM9Q,EAAK8Q,OACXC,SAAU/Q,EAAK+Q,WACf9P,KAAMjB,EAAKiB,OACXH,OAAQd,EAAKc,SACbkQ,MAAOhR,EAAKgR,QACZzR,UAAWS,EAAKT,YAChBiI,QAAS9P,KAAK4Y,yBACdjH,KAAM3R,KAAK2Y,sBACXhS,SAAU3G,KAAK2G,YAChBsE,GACP,EAEAyN,MAAO,SAASzN,GACZ,IAAIrD,EAAQ5H,KAAK2U,YAAY1J,GAE7B,OAAIjL,KAAK8U,MAAMjP,QAAU7F,KAAKiY,aAC1BjY,KAAK8V,QAAQlO,GACb5H,KAAKuZ,iBAAiBvZ,KAAKyI,eAEpBhI,EAAEsV,WAAWnM,UAAUyM,WAG3BrW,KAAK6S,KAAKjL,EACrB,EAEA+M,YAAa,SAAS1J,GAkBlB,OAjBAA,EAAU9J,EAAWyS,GAAGe,YAAY5P,KAAK/E,KAAMiL,MAE/BvK,IACZV,KAAKoU,UAAYzP,EAAkBsG,EAAQtE,UAEvCsE,EAAQ6E,QACR7E,EAAQ6E,QAAU5K,EAAiB+F,EAAQ6E,SACnC7E,EAAQ6E,UAChB9P,KAAKgU,SAAW,IAGhB/I,EAAQ0G,KACR1G,EAAQ0G,KAAOzM,EAAiB+F,EAAQ0G,MAChC1G,EAAQ0G,OAChB3R,KAAKiU,MAAQ,KAGdhJ,CACX,EAEA7B,OAAQ,SAASrB,GACb,GAAIA,IAAQrH,EACR,OAAOV,KAAKgR,QAGhBhR,KAAKkY,gBAAkB,EACvBlY,KAAKyY,gBAAiB,EACtBzY,KAAK+U,OAAO,CAAE3L,OAAQrB,EAAKqR,KAAM,GACrC,EAEAI,aAAc,SAASvJ,GACnBjQ,KAAK6Y,YAAY5I,EAAM,UAC3B,EAEAwJ,UAAW,SAASxJ,GAChBjQ,KAAK6Y,YAAY5I,EAAM,OAC3B,EAEA+C,QAAS,SAAS/R,GACd,IAAIsH,EACAvI,KAAKiY,cACL1P,GAAgBvI,KAAKwI,OAAOvH,KAAKA,IAAS,IAAImE,MAAM,IAExDjE,EAAWyS,GAAGZ,QAAQjO,KAAK/E,KAAMiB,GAC7BsH,IACAvI,KAAKyI,cAAgBF,EAE7B,EAEAmR,eAAgB,SAASzY,EAAMwR,GAC3B,GAAIzS,KAAKiY,YAAa,CAClB,IAAI0B,EAAgB3Z,KAAKiY,YAAY3G,QAAQrQ,EAAMjB,KAAK4Z,cAExD3Y,EAAO0Y,EAAc1Y,KACrBwR,EAAOkH,EAAclH,IACzB,CAEA,IAAIoH,EAAeC,EACf3T,EAAQ4T,EAAYpT,EAAUqT,EAC9BvI,EAAoBzR,KAAK8P,UACzB4B,EAAiB1R,KAAK2R,OACtBsI,EAAkBxH,EAAK3C,SAAW2C,EAAK3C,QAAQ3J,OAE9CsL,EAAkB5L,SAAU6L,EAAe7L,SAAUoU,IAAoBja,KAAKka,eAAerU,QAAW7F,KAAK2G,WAAWd,SACzH4M,EAAO,CACH3C,QAAS,CAAC,EACV6B,KAAMc,EAAK3C,UAId2B,EAAkB5L,QAAW6L,EAAe7L,QAAkC,SAAxB7F,KAAKwR,iBAA6ByI,IACzFxH,EAAO,CACH3C,QAAS,CAAC,EACV6B,KAAMc,EAAK3C,UAInB9P,KAAKmY,MAAQ,CACTrI,QAAS4E,GAAc1U,KAAKmY,MAAMrI,SAClC6B,KAAM+C,GAAc1U,KAAKmY,MAAMxG,OAGnCc,EAAO,CACH3C,QAAS4E,GAAcjC,EAAK3C,SAC5B6B,KAAM+C,GAAcjC,EAAKd,OAG7BkI,EAAgB7Z,KAAKma,iBAAiB1H,EAAK3C,QAAQ3J,OAAQnG,KAAKmY,MAAMrI,QAAQ3J,OAAQsL,EAAmBzR,KAAKoa,mBAC9GN,EAAa9Z,KAAKma,iBAAiB1H,EAAKd,KAAKxL,OAAQnG,KAAKmY,MAAMxG,KAAKxL,OAAQuL,EAAgB1R,KAAKka,gBAE9Fla,KAAKkY,eAAiB,IACtBlY,KAAKkY,gBAAkB,GAGtBlY,KAAKiY,cACNhX,EAAOjB,KAAKqa,eAAe,CACvBC,cAAe7H,EAAK3C,QAAQ3J,OAAON,OACnC0U,WAAY9H,EAAKd,KAAKxL,OAAON,OAC7BgU,cAAeA,EACfC,WAAYA,EACZ7Y,KAAMA,KAIY,QAAtBjB,KAAKiZ,eACL9S,EAASsM,EAAK3C,QAAQ3J,OACtBQ,EAAW3G,KAAKoa,mBAChBL,EAAaS,GAAa/H,EAAK3C,QAAS9P,KAAKmY,MAAMrI,QAASnJ,MAGxDqT,EAAa,UACbvH,EAAK3C,QAAUiK,EAkpB/B,SAA4BU,EAAcC,EAAcH,EAAY5T,EAAU1F,GAC1E,IAAI0Z,EAAW9I,EAAQ+I,EACnBN,EAAgBG,EAAa5U,OAC7BgV,EAAsBC,GAAaJ,EAAc/T,GACjDoU,EAAiBpU,EAASd,QAAU,EAExC,IAAKgM,EAAS,EAAGA,EAAS0I,EAAY1I,IAClC,IAAK8I,EAAY,EAAGA,EAAYL,EAAeK,IAC3CC,EAAUI,GAAWP,EAAaE,GAAYD,GAAgBK,EAC9DH,GAAWD,EAAYI,EAEvB9Z,EAAK4Q,EAASyI,EAAgBK,GAAWtL,QAAUwC,EAASgJ,EAAsBD,CAG9F,CA/pBgBK,CAAmB9U,EAAQ4T,EAAW5T,OAAQsM,EAAKd,KAAKxL,OAAON,OAAQc,EAAU1F,GAC5EjB,KAAKiY,cACNhX,EAAOjB,KAAKqa,eAAe,CACvBC,cAAeQ,GAAarI,EAAK3C,QAAQ3J,OAAQQ,GACjD4T,WAAY9H,EAAKd,KAAKxL,OAAON,OAC7B5E,KAAMA,OAIW,WAAtBjB,KAAKiZ,gBACZ9S,EAASsM,EAAKd,KAAKxL,OACnBQ,EAAW3G,KAAKka,gBAChBH,EAAaS,GAAa/H,EAAKd,KAAM3R,KAAKmY,MAAMxG,KAAMhL,MAGlDqT,EAAa,OACbvH,EAAKd,KAAOoI,EAipB5B,SAAyBU,EAAcC,EAAcJ,EAAe3T,EAAU1F,GAC1E,IAAI0Z,EAAW9I,EAAQ+I,EACnBL,EAAaE,EAAa5U,OAC1BkV,EAAiBpU,EAASd,QAAU,EAExC,IAAKgM,EAAS,EAAGA,EAAS0I,EAAY1I,IAKlC,IAJA+I,EAAUI,GAAWP,EAAa5I,GAAS6I,GAC3CE,GAAWG,EACXH,GAAW/I,EAASkJ,EAEfJ,EAAY,EAAGA,EAAYL,EAAeK,IAC3C1Z,EAAK4Q,EAASyI,EAAgBK,GAAWtL,QAAUuL,EAAUN,EAAgBK,CAGzF,CA9pBgBO,CAAgB/U,EAAQ4T,EAAW5T,OAAQsM,EAAK3C,QAAQ3J,OAAON,OAAQc,EAAU1F,GAE5EjB,KAAKiY,cACNhX,EAAOjB,KAAKqa,eAAe,CACvBC,cAAeQ,GAAarI,EAAKd,KAAKxL,OAAQQ,GAC9C4T,WAAY9H,EAAK3C,QAAQ3J,OAAON,OAChC5E,KAAMA,OAMtBjB,KAAKiZ,cAAgB,KAErB,IAAI7S,EAASpG,KAAKmb,WAAW1I,EAAMxR,EAAM+Y,GAGzC,OAFAha,KAAKmY,MAAQ/R,EAAOqM,KAEbrM,EAAOnF,IAClB,EAEAma,UAAW,SAASna,GAChB,IAAIwR,EAAOzS,KAAKwI,OAAOiK,KAAKxR,GACxBoa,EAAUrb,KAAKwI,OAAOvH,KAAKA,GAM/B,OAJIjB,KAAKiY,cACLjY,KAAKuY,SAAW8C,GAGbrb,KAAK0Z,eAAe2B,EAAS5I,EACxC,EAEA6I,aAAc,SAAS5V,EAAOd,EAAS2W,GACnC,IAGIzP,EAAWC,EACX7H,EAAM+H,EACND,EACA/E,EACAhD,EACAD,EARA+B,EAAUL,EAAMK,QAChBF,EAASE,EAAQF,OACjB2F,EAAO,CAAEzF,QAAS,IAOlBH,EAAM,EAMV,IAJIhB,IACAiB,GAAU,GAGPD,EAAMC,EAAQD,IACjB5B,EAAS+B,EAAQH,GACjBmG,EAAWyP,OAAOxX,EAAO+H,UAEzB7H,EAAOF,EAAOE,KACd+H,EAAajI,EAAOiI,WACpBhI,EAAUD,EAAOC,SAAWC,EAC5B8H,EAAchI,EAAOgI,YACrB/E,EAAYjD,EAAOiD,UACnB6E,EAAY9H,EAAO8H,UAEfyP,IACAtX,EAAU,MACO,IAAb8H,EACAE,EAAajI,EAAOE,KAEpB6H,GAAY,EAGhBC,GAAc,EACd9H,EAAO+C,EAAY6E,EAAYG,GAGnCT,EAAKzF,QAAQO,KAAK,CACdpC,KAAMA,EACN4B,SAAU,GACV7B,QAASA,EACT6H,UAAWA,EACXC,SAAUA,EAASpK,WACnBqK,YAAaA,EACb/E,UAAWA,EACXgF,WAAasP,EAAyB,GAAbtP,IAWjC,OAPIrH,GACA4G,EAAKzF,QAAQO,KAAK,CACdpC,KAAMU,EAAQV,KACd4B,SAAU,KAIX0F,CACX,EAEAiQ,SAAU,SAASC,EAAQC,EAAQ7W,GAC/B,GAAI6W,EAAO9V,OACP,OAAOuB,GAAkBuU,EAAQD,GAAQhW,MAU7C,IAPA,IACI1B,EACAa,EAGAkH,EALAhG,EAAU2V,EAAO3V,QAIjB6V,GAAS,EAGJhW,EAAM,EAAGC,EAASE,EAAQF,OAAQD,EAAMC,EAAQD,IAKrD,GAJA5B,EAAS+B,EAAQH,GACjBmG,EAAWyP,OAAOxX,EAAO+H,WAAa,EACtClH,EAAaC,EAAYc,KAEN,IAAbmG,GAAmBlH,GAAcb,EAAOE,OAAS8C,GAAQnC,IAAe,CAC1E+W,GAAS,EACT,KACJ,CAGJ,OAAOA,CACX,EAEAT,WAAY,SAASU,EAAY5a,EAAM+Y,GACnC,IAGI8B,EAAY3V,EAHZ4V,EAAiB/b,KAAKoa,kBACtB4B,EAAchc,KAAKka,eACnBzH,EAAOzS,KAAKyS,OAGZwJ,EAAgBnB,GAAarI,EAAKd,KAAKxL,OAAQ6V,GAC/CE,EAAgBL,EAAWlK,KAAKxL,OAAON,OAEvCsW,EAAmBrB,GAAarI,EAAK3C,QAAQ3J,OAAQ4V,GACrDK,EAAmBP,EAAW/L,QAAQ3J,OAAON,OAE/B,WAAdmU,GACAoC,EAAmBD,EACnBhW,EAAS0V,EAAW/L,QAAQ3J,QAG5BlF,EAi2BZ,SAA8BkF,EAAQlF,GAClC,IAAKkF,IAAWA,EAAON,OACnB,OAAO5E,EAGX,IAIIiP,EAAamM,EAAUC,EAAWC,EAJlCnW,EAAS,GACToW,EAAUC,GAAiBtW,GAC3BmU,EAAgBkC,EAAQ3W,OACxB0U,EAAamC,KAAKjS,IAAIxJ,EAAK4E,OAASyU,EAAe,GAGvD,IAAK+B,EAAW,EAAGA,EAAW9B,EAAY8B,IAEtC,IADAC,EAAYhC,EAAgB+B,EACvBnM,EAAc,EAAGA,EAAcoK,EAAepK,IAC/CqM,EAAYC,EAAQtM,GAAeoM,EACnClW,EAAOkW,EAAYpM,GAAejP,EAAKsb,IAAc,CAAEjY,MAAO,GAAIG,SAAU,GAAI4K,QAASkN,GAIjG,OAAOnW,CACX,CAr3BmBuW,CADPxW,EAASyW,GAAYf,EAAW/L,QAAQ3J,OAAQ4V,GACZ9a,GAGxC,IAAI4b,EAAgBC,GAAYrK,EAAK3C,QAAQ3J,OAAQA,EAAQ4V,GAE3C,QAAd/B,GACAkC,EAAgBpB,GAAae,EAAWlK,KAAKxL,OAAQ6V,GACrD7V,EAAS0V,EAAWlK,KAAKxL,QAGzBlF,EA+zBZ,SAA2BkF,EAAQlF,GAC/B,IAAKkF,IAAWA,EAAON,OACnB,OAAO5E,EAGX,IAIIob,EAAUnM,EAAa6M,EAAaC,EACpCT,EALAnW,EAAS,GACToW,EAAUC,GAAiBtW,GAC3BoU,EAAaiC,EAAQ3W,OACrByU,EAAgBoC,KAAKjS,IAAIxJ,EAAK4E,OAAS0U,EAAY,GAIvD,IAAK8B,EAAW,EAAGA,EAAW9B,EAAY8B,IAGtC,IAFAU,EAAczC,EAAgB+B,EAC9BW,EAAc1C,EAAgBkC,EAAQH,GACjCnM,EAAc,EAAGA,EAAcoK,EAAepK,IAC/CqM,EAAYU,SAASD,EAAc9M,EAAa,IAChD9J,EAAO6W,SAASF,EAAc7M,EAAa,KAAOjP,EAAKsb,IAAc,CAAEjY,MAAO,GAAIG,SAAU,GAAI4K,QAASkN,GAIjH,OAAOnW,CACX,CAr1BmB8W,CADP/W,EAASyW,GAAYf,EAAWlK,KAAKxL,OAAQ6V,GACZ/a,GAErC,IAAIkc,EAAaL,GAAYrK,EAAKd,KAAKxL,OAAQA,EAAQ6V,GAKvD,GAHAvJ,EAAK3C,QAAQ3J,OAAS0W,EAAc1W,OACpCsM,EAAKd,KAAKxL,OAASgX,EAAWhX,OAE1BgW,IAAqBrB,GAAarI,EAAK3C,QAAQ3J,OAAQ4V,GAAiB,CAExED,EAAae,EAAchQ,MAAQuQ,GAAcP,EAAcQ,WAAYR,EAAcS,YAAavB,GACtG,IAAIwB,EAASpB,EAAmBC,EAChCnb,EAAOjB,KAAKwd,iBAAiBvc,EAAM6a,EAAYI,EAAeE,EAAkBmB,EACpF,MAAWtB,IAAkBnB,GAAarI,EAAKd,KAAKxL,OAAQ6V,KAExDF,EAAaqB,EAAWtQ,MAAQuQ,GAAcD,EAAWE,WAAYF,EAAWG,YAAatB,GAC7F/a,EAAOjB,KAAKyd,cAAcxc,EAAM6a,EAAYI,EAAeE,IAO/D,OAJmC,IAA/B3J,EAAK3C,QAAQ3J,OAAON,QAA4C,IAA5B4M,EAAKd,KAAKxL,OAAON,SACrD5E,EAAO,IAGJ,CACHwR,KAAMA,EACNxR,KAAMA,EAEd,EAEAuc,iBAAkB,SAASnC,EAASnL,EAAaqK,EAAYD,EAAeiD,GACxE,IACIlB,EAAUxP,EAAiB6Q,EAD3Bzc,EAAOjB,KAAKiB,OAAO0c,SACFC,EAAO,EACxB7B,EAAiBW,KAAKjS,IAAIzK,KAAKoa,kBAAkBvU,OAAQ,GAU7D,IARA0U,EAAamC,KAAKjS,IAAI8P,EAAY,GAE9BtZ,EAAK4E,OAAS,IAEd+X,EAAO7B,EACPwB,GAAUxB,GAGTM,EAAW,EAAGA,EAAW9B,EAAY8B,IACtCxP,EAAQqD,EAAemM,EAAWkB,GAClCG,EAAQrC,EAAQwC,OAAO,EAAGvD,IACpBuD,OAAO,EAAGD,GAChB,GAAGC,OAAO/P,MAAM7M,EAAM,CAAC4L,EAAO,GAAGgB,OAAO6P,IAG5C,OAAOzc,CACX,EAEAwc,cAAe,SAASpC,EAASgB,EAAU9B,EAAYD,GACnD,IACI1U,EAAK0W,EAAWoB,EADhBzc,EAAOjB,KAAKiB,OAAO0c,SAEnB3B,EAAcU,KAAKjS,IAAIzK,KAAKka,eAAerU,OAAQ,GASvD,IAPAyU,EAAgBoC,KAAKjS,IAAI6P,EAAe,GACpCrZ,EAAK4E,OAAS,IAEd0U,GAAcyB,EACdX,EAAQwC,OAAO,EAAGvD,EAAgB0B,IAGjCpW,EAAM,EAAGA,EAAM2U,EAAY3U,IAC5B8X,EAAQrC,EAAQwC,OAAO,EAAGvD,GAC1BgC,EAAaD,EAAW/B,EAAkB1U,EAAM0U,EAChD,GAAGuD,OAAO/P,MAAM7M,EAAM,CAACqb,EAAW,GAAGzO,OAAO6P,IAGhD,OAAOzc,CACX,EAEAmZ,gBAAiB,WACb,IAAIzT,EAAW3G,KAAK2G,WAChBoV,EAAiB,GAUrB,MAR4B,YAAxB/b,KAAKwR,iBACyB,IAA1BxR,KAAK8P,UAAUjK,QAERc,EAASd,OAAS,KADzBkW,EAAiBpV,GAMlBoV,CACX,EAEA7B,aAAc,WACV,IAAIvT,EAAW3G,KAAK2G,WAChBqV,EAAc,GAUlB,MAR4B,SAAxBhc,KAAKwR,iBACsB,IAAvBxR,KAAK2R,OAAO9L,QAELc,EAASd,OAAS,KADzBmW,EAAcrV,GAMfqV,CACX,EAEAzC,iBAAkB,SAAStY,EAAM2G,GACzB5H,KAAKiY,cACDrQ,IACA5H,KAAK4Z,aAAehS,GAExB3G,EAAOjB,KAAK0Z,eAAezY,IAG/BjB,KAAK8U,MAAQ9U,KAAK8d,SAAS7c,GAE3BjB,KAAK+d,QAAU,GACf/d,KAAKge,UAAUhe,KAAK8U,OAEpB9U,KAAKie,OAASje,KAAK8U,MAAMjP,OACzB7F,KAAKke,eAAiBle,KAAKie,OAC3Bje,KAAKmZ,SAASnZ,KAAK8U,MACvB,EAEA7T,KAAM,SAASqD,GAEX,GAAIA,IAAU5D,EAQV,OATOV,KASK8U,MAPZ9U,KAAKyI,cAAgBnE,EAAMc,MAAM,GACjCpF,KAAKuZ,iBAAiBjV,EAAO,CACrBwL,QAAS9P,KAAK8P,UACd6B,KAAM3R,KAAK2R,OACXhL,SAAU3G,KAAK2G,YAK/B,EAEAwT,iBAAkB,SAAShU,EAAQwV,EAAQ7W,EAAa6B,GACpD,IAMIjB,EAAOyY,EAAWC,EANlBvY,EAASc,EAASd,QAAU,EAC5BD,EAAM,EAENyY,EAAQ,GACRC,EAAU,CAAC,EACX1S,EAAa,EAGjB,GAAKzF,EAAON,OAAZ,CAIA,GAAI7F,KAAKkY,gBAAkB,IAAMlY,KAAKyb,SAAStV,EAAO,GAAIwV,EAAQ7W,GAAc,CAE5E,IADA9E,KAAKkY,eAAiB,EACftS,EAAMC,EAAQD,IACjByY,EAAM/X,KAAKtG,KAAKsb,aAAanV,EAAO,GAAIQ,EAASf,IAAM,IACvD0Y,EAAQ1Y,GAAOA,EAGnBO,EAAO0X,OAAO/P,MAAM3H,EAAQ,CAAC,EAAGA,EAAON,QAAQgI,OAAOwQ,GAAOxQ,OAAO1H,IACpEP,EAAMC,CACV,CAEA,GAAIc,EAASd,OAIT,IAHAuY,EAAO1Y,EAAQS,EAAOP,GACtBuY,EAAYzY,EAAMK,QAAQF,OAAS,EAE5BH,GAAO,CAcV,GAbIkG,GAAc/F,IACd+F,EAAa,GAGblG,EAAMK,QAAQoY,GAAWja,OAASyC,EAASiF,GAAY1H,OACvDiC,EAAO0X,OAAOjY,EAAK,EAAG5F,KAAKsb,aAAa5V,EAAOiB,EAASiF,KACxD0S,EAAQ1Y,GAAOA,GAInBgG,GAAc,EACdlG,EAAQS,EAFRP,GAAO,GAIHC,EAAS+F,KAAgBlG,GAAS6Y,GAAUH,EAAMD,EAAY,KAAOI,GAAU7Y,EAAOyY,EAAY,IAAK,CACvG,KAAOvS,EAAa/F,EAAQ+F,IACxBzF,EAAO0X,OAAOjY,EAAK,EAAG5F,KAAKsb,aAAa8C,EAAMzX,EAASiF,KACvD0S,EAAQ1Y,GAAOA,EACfA,GAAO,EAEXF,EAAQS,EAAOP,EACnB,CACAwY,EAAO1Y,CACX,CAGJ,OAAO4Y,CA3CP,CA4CJ,EAEAE,qBAAsB,SAASpY,EAAQqY,GACnC,KAAOA,EAAS3E,WAAWmD,SAAS7W,EAAOP,OAAS4Y,EAASnE,cAAe,OAAS5Z,GACjF,IAAK,IAAIkF,EAAM,EAAGA,EAAM6Y,EAASnE,cAAe1U,IAC5CQ,EAASsY,GAAiBtY,GAIlC,KAAOqY,EAAS5E,cAAczT,EAAOP,OAAS4Y,EAASnE,iBAAmB5Z,GACtE0F,EAASsY,GAAiBtY,GAG9B,OAAOA,CACX,EAEAuY,mBAAoB,SAASvY,EAAQ/B,EAAUoa,GAC3C,IAAIG,EAAcH,EAASG,YAE3B,IAAKva,EACD,OAAOqa,GAAiBtY,GAG5B,GAAK/B,EAASgL,QAAUuP,EAAe,EAGnC,IAFAA,GAAe,EAERA,EAAcva,EAASgL,SAAWjJ,EAAOP,OAAS4Y,EAAS5Y,QAC9DO,EAASpG,KAAKwe,qBAAqBE,GAAiBtY,GAASqY,GAC7DG,GAAe,EAOvB,OAHAva,EAASgL,QAAUjJ,EAAOP,OAC1BO,EAAOA,EAAOP,QAAUxB,EAEjB+B,CACX,EAEAiU,eAAgB,SAASpP,GACrB,IAEI5G,EAEAua,EACA/Y,EALA5E,EAAOgK,EAAQhK,KACf2Z,EAAU,EAEVxU,EAAS,GAYb,GARA6E,EAAQ2T,YAAc,EACtB3T,EAAQ4O,cAAgB5O,EAAQ4O,eAAiB,CAAC,EAClD5O,EAAQ6O,WAAa7O,EAAQ6O,YAAc,CAAC,EAC5C7O,EAAQqP,cAAgBrP,EAAQqP,eAAiB,EACjDrP,EAAQsP,WAAatP,EAAQsP,YAAc,EAC3CtP,EAAQpF,OAASoF,EAAQqP,cAAgBrP,EAAQsP,WACjD1U,EAASoF,EAAQpF,OAEb5E,EAAK4E,SAAWA,EAChB,OAAO5E,EAGX,KAAOmF,EAAOP,OAASA,IACnBxB,EAAWpD,EAAK2Z,QAEZgE,EAAcva,EAASgL,SAG3BjJ,EAASpG,KAAK2e,mBAAmB3e,KAAKwe,qBAAqBpY,EAAQ6E,GAAU5G,EAAU4G,GAEvFA,EAAQ2T,YAAcA,EAG1B,OAAOxY,CACX,EAEAwM,SAAU,SAAS3H,EAAS4T,GACxB,IAAIvW,EAAOtI,KACP2S,EAAYrK,EAAKqK,UAErB,OAAOlS,EAAEsV,UAAS,SAAS1N,GACvBsK,EAAUC,SAAS7Q,EAAO,CACtBiR,QAAS,SAASiD,GACfA,EAAW3N,EAAKE,OAAOhC,MAAMyP,GAExB3N,EAAK4O,oBAAoBjB,KAIzB4I,IACA5I,EAAW4I,EAAU5I,IAEzB5N,EAASuB,QAAQqM,GACrB,EACAE,MAAO,SAASF,EAAUmB,EAAQjB,GAC9B9N,EAASgP,OAAOpB,GAChB3N,EAAK6N,MAAMF,EAAUmB,EAAQjB,EACjC,GACDlL,GACP,IAAGoL,UAAUrB,MAAK,WACd1M,EAAKqB,QAAQ,eACjB,GACJ,EAEA8M,eAAgB,WACZ,IAAInO,EAAOtI,KAEX,OAAOsI,EAAKsK,SAAS,CACjB3R,KAAM,CACFkW,QAAS,iBACTG,aAAc,CACVC,YAAajP,EAAKqK,UAAUM,UAC5BuE,SAAUlP,EAAKqK,UAAUQ,WAGlC,SAAS8C,GACR,OAAO3N,EAAKE,OAAO7B,SAASsP,EAChC,GACJ,EAEAS,WAAY,WACR,IAAIpO,EAAOtI,KAEX,OAAOsI,EAAKsK,SAAS,CACjB3R,KAAM,CACFkW,QAAS,aACTG,aAAc,CACVC,YAAajP,EAAKqK,UAAUM,UAC5BuE,SAAUlP,EAAKqK,UAAUQ,WAGlC,SAAS8C,GACR,OAAO3N,EAAKE,OAAOmO,KAAKV,EAC5B,GACJ,EAEAW,iBAAkB,WACd,IAAItO,EAAOtI,KAEX,OAAOsI,EAAKsK,SAAS,CACjB3R,KAAM,CACFkW,QAAS,mBACTG,aAAc,CACVC,YAAajP,EAAKqK,UAAUM,UAC5BuE,SAAUlP,EAAKqK,UAAUQ,WAGlC,SAAS8C,GACR,OAAO3N,EAAKE,OAAO0C,WAAW+K,EAClC,GACJ,EAEAY,kBAAmB,SAASY,GACxB,IAAInP,EAAOtI,KAEX,OAAOsI,EAAKsK,SAAS,CACjB3R,KAAM,CACFkW,QAAS,oBACTG,aAAc,CACVC,YAAajP,EAAKqK,UAAUM,UAC5BuE,SAAUlP,EAAKqK,UAAUQ,OACzBuE,oBAAqBD,MAG9B,SAASxB,GACR,OAAO3N,EAAKE,OAAOgL,YAAYyC,EACnC,GACJ,EAEAa,aAAc,SAASa,GACnB,IAAIrP,EAAOtI,KAEX,OAAOsI,EAAKsK,SAAS,CACjB3R,KAAM,CACFkW,QAAS,eACTG,aAAc,CACVC,YAAajP,EAAKqK,UAAUM,UAC5BuE,SAAUlP,EAAKqK,UAAUQ,OACzByE,oBAAqBD,MAG9B,SAAS1B,GACR,OAAO3N,EAAKE,OAAOiL,OAAOwC,EAC9B,GACJ,EAEAc,YAAa,WACT,IAAIzO,EAAOtI,KAEX,OAAOsI,EAAKsK,SAAS,CACjB3R,KAAM,CACFkW,QAAS,cACTG,aAAc,CACVC,YAAajP,EAAKqK,UAAUM,cAGrC,SAASgD,GACR,OAAO3N,EAAKE,OAAO8K,MAAM2C,EAC7B,GACJ,EAEAe,eAAgB,WACZ,IAAI1O,EAAOtI,KAEX,OAAOsI,EAAKsK,SAAS,CACjB3R,KAAM,CACFkW,QAAS,oBAEd,SAASlB,GACR,OAAO3N,EAAKE,OAAO+K,SAAS0C,EAChC,GACJ,EAEAgB,cAAe,SAASK,GACpB,IAAIhP,EAAOtI,KACPgT,EAAW,SAASsE,GACpB,OAAO,SAASrB,GACZ,OAAO3N,EAAKE,OAAOzC,QAAQkQ,EAAUqB,EACzC,CACJ,CAJc,CAIZA,GAEF,OAAOhP,EAAKsK,SAAS,CACjB3R,KAAM,CACFkW,QAAS,gBACTG,aAAcvV,EAAO,CAClBwV,YAAajP,EAAKqK,UAAUM,UAC5BuE,SAAUlP,EAAKqK,UAAUQ,QAC1BmE,KAEPtE,EACP,EAEA8C,QAAS,SAAS7U,GACVjB,KAAKyY,iBACLzY,KAAKmY,MAAQ,CAAC,EACdnY,KAAK8U,MAAQ9U,KAAK8d,SAAS,IAC3B9d,KAAKyY,gBAAiB,EACtBzY,KAAK2J,QAAQnH,IAGjB,IAAIyI,EAAU9J,EAAWyS,GAAGkC,QAAQ/Q,KAAK/E,KAAMiB,GAa/C,OAXAgK,EAAUlJ,EAAO,CACb4E,SAAU3G,KAAK2G,WACf6K,aAAcxR,KAAKwR,eACnB1B,QAAS9P,KAAK8P,UACd6B,KAAM3R,KAAK2R,QACZ1G,GAECjL,KAAKiY,cACLjY,KAAK4Z,aAAe3O,GAGjBA,CACX,IAGJ,SAAS2B,GAAYkD,GAEjB,IADA,IAAI1J,EAAS,GACJR,EAAM,EAAGA,EAAMkK,EAAQjK,OAAQD,IACpCQ,EAAOE,KAAKwJ,EAAQlK,IAChBkK,EAAQlK,GAAKE,WACbM,EAASA,EAAOyH,OAAOjB,GAAYkD,EAAQlK,GAAKE,YAIxD,OAAOM,CACX,CAEA,SAASsG,GAAchF,EAAOwH,EAAO4P,GACjC,IAAK,IAAIjV,EAAI,EAAGA,EAAIqF,EAAMrJ,OAAQgE,IAC1BqF,EAAMrF,GAAG/D,UAAYoJ,EAAMrF,GAAG/D,SAASD,QACvC6G,GAAchF,EAAOwH,EAAMrF,GAAG/D,SAAUgZ,GAG5C5P,EAAM,GAAGjD,YAAcvE,IAG3BwH,EAAQA,EAAM3F,KAAKuV,GACvB,CAEA,SAASrS,GAAayC,EAAOpN,GACzB,IAAK,IAAI+H,EAAI,EAAGA,EAAIqF,EAAMrJ,OAAQgE,IAAK,CACnC,IAAIkV,EAAcjd,EAAIoN,EAAMrF,GAAG3F,MAE/B,IAAKzD,EAAE2M,cAAc2R,EAAY5O,aAAc,CAE3C,IAAK,IAAIjM,KADTgL,EAAMrF,GAAG/D,SAAW,GACHiZ,EAAY5O,YACzBjB,EAAMrF,GAAG/D,SAASQ,KAAK7F,EAAEsB,OAAO,CAAC,EAAG,CAAEmC,KAAMA,EAAM+H,WAAYnK,EAAIoC,GAAM+H,cAG5EQ,GAAayC,EAAMrF,GAAG/D,SAAUhE,EACpC,CACJ,CACJ,CAEA,SAAS4c,GAAiBtY,GAEtB,OADAA,EAAOA,EAAOP,QAAU,CAAEvB,MAAO,GAAIG,SAAU,GAAI4K,QAASjJ,EAAOP,QAC5DO,CACX,CAEA,SAASoU,GAAawE,EAAStY,EAAMC,GACjC,GAAIqY,EAAQ7Y,OAAON,OAASiV,GAAapU,EAAKP,OAAQQ,GAElD,OAAOD,CAIf,CAkCA,SAASsU,GAAWtV,EAAOuZ,GACvB,OAAO7X,GAAkB6X,EAAYvZ,GAAOmH,KAChD,CAEA,SAASiO,GAAa3U,EAAQQ,GAC1B,IAAKR,EAAON,OACR,OAAO,EAOX,IAJA,IAAIqZ,EAAQ/Y,EAAOf,QACf2H,EAAUmS,EAAMC,QAChB/Y,EAAS,EAEN2G,GACCA,EAAQhH,QACR,GAAGO,KAAKwH,MAAMoR,EAAOnS,EAAQhH,SACtBgH,EAAQjH,WACViH,EAAQnI,UACTwB,GAAU2G,EAAQjH,SAASD,QAE/B,GAAGS,KAAKwH,MAAMoR,EAAOnS,EAAQjH,WAGjCiH,EAAUmS,EAAMC,QAOpB,OAJIxY,EAASd,SACTO,GAAkBO,EAASd,QAGxBO,CACX,CAEA,SAASsO,GAAchO,GAWnB,OAVKA,IACDA,EAAO,CACHP,OAAQ,KAIXO,EAAKP,SACNO,EAAKP,OAAS,IAGXO,CACX,CAEA,SAAS0W,GAAc1X,EAAO4X,EAAa3W,GACvC,IAAKjB,EACD,OAAO,EAYX,IATA,IAAIqV,EAAiB2B,KAAKjS,IAAI9D,EAASd,OAAQ,GAC3CM,EAAST,EAAMK,QAAQX,MAAM,EAAGkY,GAChCvQ,EAAU5G,EAAOgZ,QAKjBC,EAAUrE,EAEPhO,GACCA,EAAQ7I,OAAS3B,EAGjB6c,GAAYrE,EAAiB,EACtBhO,EAAQjH,SAEf,GAAGQ,KAAKwH,MAAM3H,EAAQ4G,EAAQjH,WAG9BsZ,IACA,GAAG9Y,KAAKwH,MAAM3H,EAAQ4G,EAAQhH,UAGlCgH,EAAU5G,EAAOgZ,QAGrB,OAAOC,CACX,CAEA,SAAStC,GAAYpB,EAAQC,EAAQhV,GACjC,IAAKgV,EAAO,GACR,MAAO,CACH0B,WAAY,KACZlX,OAAQuV,EACR4B,YAAa,EACbzQ,MAAO,GAIf,IAAIzG,EAASgB,GAAkBsU,EAAQC,EAAO,IAE9C,IAAKvV,EAAOV,MACR,MAAO,CACH2X,WAAY,KACZlX,OAAQwV,EACR2B,YAAa,EACbzQ,MAAO,GAIf,IAAIwS,EAAgBjZ,EAAOV,MAAMK,QAC7BuZ,EAAgB3D,EAAO,GAAG5V,QAC1BuX,GAAe,EAEnB,GAAI+B,EAAcxZ,SAAWyZ,EAAczZ,OACvC,MAAO,CACHwX,WAAY,KACZlX,OAAQwV,EACR2B,YAAa,EACbzQ,MAAO,GAIf,IAAK,IAAIjH,EAAM,EAAGC,EAASwZ,EAAcxZ,OAAQD,EAAMC,EAAQD,KACtDyZ,EAAczZ,GAAKhB,SAAW0a,EAAc1Z,GAAKE,SAAS,MACvC,GAAhBwX,GAAqBgC,EAAc1Z,GAAKE,SAASD,SACjDyX,EAAc1X,GAGlByZ,EAAczZ,GAAKE,SAAWwZ,EAAc1Z,GAAKE,UAMzD,OAFAa,EAAW+V,KAAKjS,IAAI9D,EAASd,OAAQ,GAE9B,CACHwX,WAAYjX,EAAOV,MACnBmH,MAAOzG,EAAOyG,MAAQlG,EACtB2W,YAAaA,EACbnX,OAAQuV,EAEhB,CAEA,SAAS6D,GAAYC,EAAOC,GACxB,IACI7Z,EAAKC,EADL6Z,GAAQ,EAMZ,IAHAF,EAAQA,EAAMzZ,QACd0Z,EAASA,EAAO1Z,QAEXH,EAAM,EAAGC,EAAS2Z,EAAM3Z,OAAQD,EAAMC,EAAQD,IAC3C4Z,EAAM5Z,GAAKhB,SAAW6a,EAAO7Z,GAAKhB,UAItC8a,EAAQA,GAAU1Y,GAAQwY,EAAM5Z,MAAUoB,GAAQyY,EAAO7Z,KAG7D,OAAO8Z,CACX,CAEA,SAAStY,GAAkBjB,EAAQwZ,GAC/B,IAAI/Z,EAAKC,EAAQH,EAAOoB,EACpBwW,EAAasC,EAAe5b,EADDob,EAAU,EAGzC,IAAKxZ,EAAM,EAAGC,EAASM,EAAON,OAAQD,EAAMC,EAAQD,IAAO,CAEvD,GAAI2Z,GADJ7Z,EAAQS,EAAOP,GACQ+Z,GACnB,MAAO,CACHja,MAAOA,EACPmH,MAAOuS,GAMf,IAFAA,IAEK9B,EAAc,EAAGsC,EAAgBla,EAAMK,QAAQF,OAAQyX,EAAcsC,EAAetC,IAErF,KADAtZ,EAAS0B,EAAMK,QAAQuX,IACZ1Y,UAKXwa,IADAtY,EAAQM,GAAkBpD,EAAO8B,SAAU6Z,IAC1B9S,MACb/F,EAAMpB,OACN,MAAO,CACHA,MAAOoB,EAAMpB,MACbmH,MAAOuS,EAIvB,CAEA,MAAO,CACHvS,MAAOuS,EAEf,CAEA,SAASS,GAAW9Z,EAASjE,GACzB,IAAIkC,EAAQ6F,EAAGiW,EAAK7P,EAAO,GAC3B,IAAKpG,EAAI,EAAGiW,EAAM/Z,EAAQF,OAAQgE,EAAIiW,EAAKjW,IAGlC/H,EADLmO,IADAjM,EAAS+B,EAAQ8D,IACF3F,QAEXpC,EAAImO,GAAQjM,EAGxB,CAGA,SAAS+b,GAAiBra,EAAO5D,GAC7B,IACI+H,EAAGiW,EAAK9b,EAERgc,EAHAja,EAAUL,EAAMK,QACAkK,EAAO,GACvBgQ,EAAa,GAGjB,IAAKpW,EAAI,EAAGiW,EAAM/Z,EAAQF,OAAQgE,EAAIiW,EAAKjW,IAAK,CAE5C,GADA7F,EAAS+B,EAAQ8D,GACbmW,EAAc,CACd,GAAIle,EAAImO,EAAOjM,EAAOE,MAAO,CAEzB8b,EAAele,EADfmO,GAAQjM,EAAOE,MAEf,QACJ,CAAO,OAAIpC,EAAImO,EAAOjM,EAAOiI,YAClBnK,EAAImO,EAAOjM,EAAOiI,YAClBnK,EAAIme,EAAajc,EAAOiI,YACxBnK,EAAIme,EAAajc,EAAOiI,YAExBnK,EAAIme,EAEnB,CAKA,GAHAhQ,GAAQjM,EAAOE,OACf8b,EAAele,EAAIkC,EAAOiI,gBAGtB+T,EAAele,EAAImO,IAEf,OAAO,KAIX+P,IACAC,GAAcD,EAAa9b,KAEnC,CAEA,OAAO8b,CACX,CAgBA,SAASE,GAAuBxa,EAAOmH,GACnC,KAAIA,EAAQ,GAAZ,CAGA,IAAI7I,EAAS,CACTE,KAAM3B,EACNqC,SAAS,EACTkB,SAAU,CACNrF,EAAEsB,OAAO,CAAEgE,QAAS,GAAIuW,UAAW5W,EAAM4W,WAAa5W,EAAMK,QAAQ8G,MAG5EnH,EAAMK,QAAQ8X,OAAOhR,EAAO,EAAG7I,GAC/B0B,EAAM4W,UAAY5b,CATlB,CAUJ,CAEA,SAASkc,GAAYzW,EAAQQ,GACzB,GAAIR,EAAON,OAAS,EAChB,MAAO,GAMX,IAJA,IAAIO,EAAS,GACTtE,EAAM,CAAE,EACRqe,EAnCR,SAAyBza,EAAOiB,GAC5B,GAAwB,IAApBA,EAASd,OACT,OAAQ,EAKZ,IAFA,IAAIjB,EAAU+B,EAAS,GACnBZ,EAAUL,EAAMK,QACXH,EAAM,EAAGka,EAAM/Z,EAAQF,OAAQD,EAAMka,EAAKla,IAC/C,GAAIG,EAAQH,GAAK1B,MAAQU,EAAQV,KAC7B,OAAO0B,CAGnB,CAuBuBwa,CAAgBja,EAAO,GAAIQ,GAErCkD,EAAI,EAAGA,EAAI1D,EAAON,OAAQgE,IAAK,CACpC,IAAInE,EAAQS,EAAO0D,GAGnBnE,EAAM4W,UAAYzS,EAElBqW,GAAuBxa,EAAOya,GAC9B,IAAIH,EAAeD,GAAiBra,EAAO5D,GAEvCke,EACIG,EAAe,IAAMH,EAAapb,QAClCob,EAAala,SAASQ,KAAKZ,GAE3Bsa,EAAala,SAASQ,KAAKZ,EAAMK,QAAQoa,GAAcra,SAAS,IAGpEM,EAAOE,KAAKZ,GAGhBma,GAAWna,EAAMK,QAASjE,EAC9B,CAEA,OAAOsE,CACX,CAgDA,SAASqW,GAAiBtW,GAMtB,IAJA,IAEIP,EAAKC,EAAQwa,EAAava,EAAU9B,EAFpCoC,EAAS,GACTV,GAFJS,EAASA,EAAOf,SAEG+Z,QAGZzZ,GAAO,CAOV,IALIA,EAAM4W,YAAc5b,GACpB0F,EAAOE,KAAKZ,EAAM4W,WAGtB+D,EAAc,EACTza,EAAM,EAAGC,EAASH,EAAMK,QAAQF,OAAQD,EAAMC,EAAQD,IAEvDE,GADA9B,EAAS0B,EAAMK,QAAQH,IACLE,SACd9B,EAAOY,QACP,GAAGiZ,OAAO/P,MAAM3H,EAAQ,CAAC,EAAG,GAAG0H,OAAO/H,IAEtC,GAAG+X,OAAO/P,MAAM3H,EAAQ,CAACka,EAAa,GAAGxS,OAAO/H,IAEpDua,GAAeva,EAASD,OAG5BH,EAAQS,EAAOgZ,OACnB,CAEA,OAAO/Y,CACX,CAgCA,SAASka,GAAkBC,GACvB,IAAI9U,EAAQ8U,EAAWxW,MAAM,KAC7B,OAAI0B,EAAM5F,OAAS,EACR4F,EAAM,GAAK,IAAMA,EAAM,GAE3B8U,CACX,CAEA,SAASC,GAAuBjT,EAAOhE,GACnC,IAEIkX,EAFA7a,EAAM2H,EAAM1H,OAAS,EACrB3B,EAAOqJ,EAAM3H,GAajB,OAVA6a,EAaJ,SAAiClX,EAAMvF,GACnC,IAAK,IAAI4B,EAAM,EAAGC,EAAS0D,EAAK1D,OAAQD,EAAMC,EAAQD,IAClD,GAAwC,IAApC5B,EAAOsB,QAAQiE,EAAK3D,GAAK8B,OACzB,OAAO6B,EAAK3D,GAGpB,OAAO,IACX,CApBqB8a,CAAwBnX,EAAMrF,GAE3Cuc,GAAkBA,EAAe3W,IACjC5F,EAAO,SAAWA,EAAO,aAAeuc,EAAe/Y,MAAQ,iCAAmC+Y,EAAe3W,IAAM,IAEvH5F,GAAQ,YAGZqJ,EAAM3H,GAAO1B,EAENqJ,CACX,CAWA,SAASoT,GAAUpT,GACf,IACIqT,EADAxa,EAAS,cAcb,OAXImH,EAAM1H,OAAS,GACf+a,EAAIrT,EAAMvD,MACV5D,GAAUua,GAAUpT,KAEpBnH,GAAUmH,EAAM4R,QAChByB,EAAIrT,EAAMvD,OAGd5D,GAAU,MACVA,GAAUwa,EACVxa,GAAU,IAEd,CAEA,SAASya,GAAiB9a,EAASY,GAC/B,IAAIma,EAAM/a,EAAQX,MAAM,GAMxB,OAJIuB,EAASd,OAAS,GAClBib,EAAIxa,KAAK,IAAMya,GAAapa,GAAU8G,KAAK,KAAO,KAG/CkT,GAAUG,EACrB,CAEA,SAASC,GAAapa,GAMlB,IALA,IAGI/B,EAHAgB,EAAM,EACNC,EAASc,EAASd,OAClBO,EAAS,GAGNR,EAAMC,EAAQD,IACjBhB,EAAU+B,EAASf,GACnBQ,EAAOE,KAAK1B,EAAQV,OAASxD,EAAckE,EAAQV,KAAOU,GAG9D,OAAOwB,CACX,CAEA,SAASd,GAAQpB,EAAMgL,GACnB,IAAItJ,EAAKC,EAAQgH,GAAS,EAE1B,IAAKjH,EAAM,EAAGC,EAASqJ,EAAMrJ,OAAQD,EAAMC,EAAQD,IAC/C,GAAIoB,GAAQkI,EAAMtJ,MAAU1B,EAAM,CAC9B2I,EAAQjH,EACR,KACJ,CAEJ,OAAOiH,CACX,CAEA,SAAS7F,GAAQ9C,GAOb,OANAA,EAAOA,EAAKA,MAAQA,EAEQ,mBAAxBvC,EAASoD,KAAKb,KACdA,EAAOA,EAAKA,EAAK2B,OAAS,IAGvB3B,CACX,CAEA,SAAS4M,GAAa/K,GAKlB,IAJA,IAAIF,EAASE,EAAQF,OACjB0H,EAAQ,GACR3H,EAAM,EAEHA,EAAMC,EAAQD,IACjB2H,EAAMjH,KAAKP,EAAQH,GAAK1B,KAAK,IAGjC,OAAOqJ,CACX,CAEA,SAASwD,GAASxD,EAAOjC,GACrB,IAAIpH,EACA8c,EAEAja,EACAnB,EAAM,EACNC,EAAS0H,EAAM1H,OACfob,EAAa3V,EAAUzF,OAI3B,IAFAyF,EAAYA,EAAUlG,MAAM,GAErBQ,EAAMC,EAAQD,IAGjB,IAFA1B,EAAOqJ,EAAM3H,GAERmB,EAAI,EAAGA,EAAIka,EAAYla,IAGxB,GAFAia,EAAWV,GAAkBhV,EAAUvE,KAEP,IAA5B7C,EAAKoB,QAAQ0b,GAAkB,CAC/B1V,EAAUvE,GAAK7C,EACf,KACJ,CAIR,MAAO,CACHqJ,MAAOjC,EACPkC,YAAazG,EACbuG,WAAYhC,EAAUlG,MAAM,EAAG2B,EAAI,GAAG0G,KAAK,IAEnD,CAEA,SAASoD,GAAiB9K,GAetB,IAdA,IAGI/B,EAEA+C,EAAGma,EAIHhd,EACAyT,EAEA7Q,EAZArD,EAAW,GACX0d,EAAQ,GACR3V,EAAO,GAIP5F,EAAM,EACNC,EAASE,EAAQF,OAOdD,EAAMC,EAAQD,IASjB,GAPA1B,GADAF,EAAS+B,EAAQH,IACH1B,KACd4C,GAAQ,EAEoB,mBAAxBnF,EAASoD,KAAKb,KACdF,EAAOE,KAAOA,EAAO,CAACA,IAGtBA,EAAK2B,OAAS,EACdsb,EAAM7a,KAAKtC,OACR,CAGH,IAFA2T,EAAgB2I,GAAkBpc,EAAK,IAElC6C,EAAI,EAAGma,EAAI1V,EAAK3F,OAAQkB,EAAIma,EAAGna,IAChC,GAA+C,IAA3CyE,EAAKzE,GAAG7C,KAAK,GAAGoB,QAAQqS,GAAsB,CAC9C7Q,GAAQ,EACR,KACJ,CAGCA,GACD0E,EAAKlF,KAAKtC,GAGVA,EAAOmB,QACP1B,EAAS6C,KAAKtC,EAEtB,CAKJ,MAAO,CACHwH,KAAMA,EACN/H,SAJJA,EAAWA,EAASoK,OAAOsT,GAM/B,CAEA,SAASC,GAAiBrb,EAASY,EAAU4C,GACzC,IAeIgX,EAfApJ,EAAU,GAIV1T,EAAWoN,GAFf9K,EAAUA,GAAW,IAKjBuF,EAAYwF,GAFLrN,EAAS+H,MAGhB6V,EAAoB,GAIpBxb,GAFJpC,EAAWA,EAASA,UAEEoC,OAClBD,EAAM,EAGN2H,EAAQ,GAEZ,GAAIjC,EAAUzF,OAAS,GAAKc,EAASd,OAAS,EAAG,CAG7C,IAFAwb,EAAkB/a,KAAKua,GAAiBvV,EAAW3E,IAE5Cf,EAAMC,EAAQD,IAEjB2H,EAAQwD,GADRwP,EAAaC,GAAuB/c,EAASmC,GAAK1B,KAAMqF,GAC3B+B,GAAWiC,MAExC8T,EAAkB/a,KAAKua,GAAiBtT,EAAO5G,IAGnDwQ,GAAWkK,EAAkB5T,KAAK,IACtC,KAAO,CACH,KAAO7H,EAAMC,EAAQD,IACjB2a,EAAaC,GAAuB/c,EAASmC,GAAK1B,KAAMqF,GACxDgE,EAAMjH,KAAKia,EAAW,IAG1BpJ,GAAW7L,EAAUuC,OAAON,GAAOE,KAAK,IAC5C,CAEA,OAAO0J,CACX,CA1QA/D,GAAkBzG,OAAS,SAAS1B,GAGhC,IAAIqW,GAFJrW,EAAUA,GAAWA,EAAQ3E,KAAO,CAAErF,KAAMgK,GAAYA,IAE5B,CAAC,EACzBhK,EAAOqgB,EAAWrgB,KAItB,GAFAqgB,EAAWrgB,KAAOA,IAEZqgB,aAAsBlO,KAAsBkO,aAAsBjiB,EAAM4B,KAAKE,WAC/E,MAAM,IAAIsP,MAAM,2EAGpB,OAAO6Q,aAAsBlO,GAAoBkO,EAAa,IAAIlO,GAAkBkO,EACxF,EAEAtJ,GAAgBrL,OAAS,SAAS1B,GAG9B,IAAIqW,GAFJrW,EAAUA,GAAWA,EAAQ3E,KAAO,CAAErF,KAAMgK,GAAYA,IAE5B,CAAC,EACzBhK,EAAOqgB,EAAWrgB,KAItB,GAFAqgB,EAAWrgB,KAAOA,IAEZqgB,aAAsBtJ,KAAoBsJ,aAAsBjiB,EAAM4B,KAAKE,WAC7E,MAAM,IAAIsP,MAAM,2EAGpB,OAAO6Q,aAAsBtJ,GAAkBsJ,EAAa,IAAItJ,GAAgBsJ,EACpF,EAgPA,IAAIC,GAAwB,CACxBC,SAAU,sDACVC,eAAgB,kDAChBC,WAAY,4DACZC,SAAU,6DACVC,GAAI,6CACJC,IAAK,8CAGT,SAASC,GAAoBC,GACzB,IAAI5K,EAAU,GACV7S,EAAQyd,EAAWzd,MACnBoD,EAAQqa,EAAWra,MACnByJ,EAAW4Q,EAAW5Q,SAc1B,MAZgB,MAAZA,GACAgG,GAAW,IACXA,GAAW7S,EACX6S,GAAW,MAEXA,GAAuB,OAAZhG,GAAiC,kBAAZA,EAA+B,IAAM,GACrEgG,GAAW,UACXA,GAAWzP,EAAQ,WACnByP,GAAW9X,EAAM6K,OAAOqX,GAAsBpQ,GAAWzJ,EAAOpD,GAChE6S,GAAW,KAGRA,CACX,CAyBA,SAAS6K,GAAiBC,EAAehX,EAASiX,GAC9C,IAAI9b,EAAS,GAEb,GAAI6E,EAAS,CAET,IAAI3G,EACJ,IAAK,IAAIpB,KAFTkD,GAAU,IAAM6b,EAAgB,IAEhBhX,EAAS,CACrB3G,EAAQ2G,EAAQ/H,GAChB,IAAIif,EAAWjf,EACXgf,IACAC,EAAWA,EAASC,QAAQ,yCAA0C,OAAOC,cAAcD,QAAQ,KAAM,KAE7Ghc,GAAU,IAAM+b,EAAW,IAAM7d,EAAQ,KAAO6d,EAAW,GAC/D,CACA/b,GAAU,KAAO6b,EAAgB,GACrC,MACI7b,GAAU,IAAM6b,EAAgB,KAEpC,OAAO7b,CACX,CAEA,IAAIkc,GAAuB,CACvBvL,YAAa,iBACbC,eAAgB,oBAChBP,eAAgB,oBAChBG,iBAAkB,sBAClBC,kBAAmB,uBACnBC,aAAc,kBACdG,cAAe,mBACfP,WAAY,iBAGZ6L,GAAgB,CAChB1P,KAAM,SAAS5H,GACX,IAAIkM,EAAU,0JAEdA,GAAW,qBAEX,IAAIrH,EAAU7E,EAAQ6E,SAAW,GAC7B6B,EAAO1G,EAAQ0G,MAAQ,GAEvBhL,EAAWsE,EAAQtE,UAAY,GAC/B4K,EAA2C,SAAzBtG,EAAQuG,aAC1BjI,EAAO0B,EAAQ1B,MAAQ,GA8C3B,OA5CKuG,EAAQjK,QAAU8L,EAAK9L,UAAYc,EAASd,QAAWc,EAASd,QAAU0L,KAC3EzB,EAAU6B,EACVA,EAAO,GACPJ,GAAkB,GAGjBzB,EAAQjK,QAAW8L,EAAK9L,SACzB0L,GAAkB,GAGlBzB,EAAQjK,OACRsR,GAAWiK,GAAiBtR,EAAUyB,EAA6B,GAAX5K,EAAe4C,GAChE5C,EAASd,SAAW0L,IAC3B4F,GAAW4J,GAAapa,GAAU8G,KAAK,MAG3C0J,GAAW,8EAEPxF,EAAK9L,QAAW0L,GAAmB5K,EAASd,OAAS,KACrDsR,GAAW,gBAEPxF,EAAK9L,OACLsR,GAAWiK,GAAiBzP,EAAMJ,EAAkB5K,EAAW,GAAI4C,GAEnE4N,GAAW4J,GAAapa,GAAU8G,KAAK,KAG3C0J,GAAW,2EAGXlM,EAAQ7B,QACR+N,GAAW,SACXA,GAAW,IACXA,GArGZ,SAA0B/N,EAAQ+J,GAC9B,IAAkBpG,EAGdnH,EAHAuR,EAAU,GACVjG,EAAU9H,EAAO8H,QACjBrL,EAASqL,EAAQrL,OAGrB,IAAKD,EAAMC,EAAS,EAAGD,GAAO,EAAGA,IAE7BmH,EAAU,WACVA,GAAW+U,GAAoB5Q,EAAQtL,IACvCmH,GAAW,SAIPoK,EAFAvR,GAAOC,EAAS,EAChBkH,GAAW,UAAYoG,EAAO,IAGpBpG,EAAU,WAAaoK,EAAU,KAInD,OAAOA,CACX,CAgFuBqL,CAAiBvX,EAAQ7B,OAAQ6B,EAAQiI,WAAWC,MAC/DgE,GAAW,KAEXA,GAAW,UAAYlM,EAAQiI,WAAWC,KAAO,IAG9B,GAAnBxM,EAASd,QAAeiK,EAAQjK,SAChCsR,GAAW,WAAa4J,GAAapa,GAAU8G,KAAK,KAAO,MAG/D0J,GAAW,4DAA8DlM,EAAQiI,WAAWD,QAAU,uGACvFmP,QAAQ,MAAO,QAClC,EACAxP,SAAU,SAAS3H,GAGf,IAAIkM,EAAU,uIAcd,OAbAA,GAAW,iBAAmBmL,IAH9BrX,EAAUA,GAAW,CAAC,GAGqCkM,UAAYlM,EAAQkM,SAAW,iBAE1FA,GAAW,iBAAmB6K,GAAiB,kBAAmB/W,EAAQqM,cAAc,GAAQ,kBAE5FrM,EAAQiI,YAAcjI,EAAQiI,WAAWD,UACzChI,EAAQwX,WAAahiB,EAAEsB,OAAO,CAAC,EAAG,CAC9B2gB,QAASzX,EAAQiI,WAAWD,SAC7BhI,EAAQwX,aAGftL,GAAW,eAAiB6K,GAAiB,eAAgB/W,EAAQwX,YAAc,gBAEnFtL,GAAW,+BAEf,GAGAwL,GAAgBtjB,EAAM4B,KAAK2hB,gBAAgB7gB,OAAO,CAClDiJ,KAAM,SAASC,GACX,IAAI4X,EAAkB5X,EAEtBA,EAAUjL,KAAKiL,QAAUlJ,GAAO,EAAM,CAAC,EAAG/B,KAAKiL,QAASA,GAExD5L,EAAM4B,KAAK2hB,gBAAgB7d,KAAK/E,KAAMiL,GAElChJ,EAAW4gB,EAAgBjQ,UAC3B5S,KAAK4S,SAAWiQ,EAAgBjQ,SACW,iBAA7BiQ,EAAgBjQ,SAC9B5S,KAAKiL,QAAQ2H,SAAW,CACpBkQ,IAAKD,EAAgBjQ,UAEjBiQ,EAAgBjQ,WACxB5S,KAAKiL,QAAQ2H,SAAW5S,KAAKiL,QAAQ4H,KAE7C,EACAkQ,MAAO,SAAS9X,EAAShG,GAIrB,OAHAgG,EAAQhK,KAAOgK,EAAQhK,MAAQ,CAAC,EAChCR,EAAEsB,QAAO,EAAMkJ,EAAQhK,KAAM,CAAEiS,WAAYlT,KAAKiL,QAAQiI,aAEjD7T,EAAM4B,KAAK2hB,gBAAgBhP,GAAGmP,MAAMhe,KAAK/E,KAAMiL,EAAShG,EACnE,EACAgG,QAAS,CACL4H,KAAM,CACFmQ,SAAU,OACVC,YAAa,WACbhe,KAAM,QAEV2N,SAAU,CACNoQ,SAAU,OACVC,YAAa,WACbhe,KAAM,QAEVie,aAAc,SAASjY,EAAShG,GAC5B,OAAOsd,GAActd,GAAMgG,EAAQhG,EACvC,GAGJ2N,SAAU,SAAS3H,GACf,OAAOxK,EAAE0iB,KAAKnjB,KAAK+iB,MAAM9X,EAAS,YACtC,IAGA8I,GAAkBhT,EAAMgB,OAAO,CAC/BiJ,KAAM,SAASC,GACXA,EAAUjL,KAAKiL,QAAUlJ,GAAO,EAAM,CAAC,EAAG/B,KAAKiL,QAASA,EAC5D,EACA8X,MAAO,SAAS9X,GACZ,OAAOxK,EAAEsB,QAAO,EAAMkJ,GAAW,CAAC,EAAG,CAAEiI,WAAYlT,KAAKiL,QAAQiI,YACpE,EACAL,KAAM,SAAS5H,GACX,IACI+H,EACAmD,EAFA7N,EAAOtI,KAIPojB,EAAe9a,EAAKya,MAAM9X,EAAQhK,KAAMkB,GAE5C6Q,EAAU/H,EAAQ+H,SAAWvS,EAAE4iB,KAC/BlN,EAAQlL,EAAQkL,OAAS1V,EAAE4iB,KAEvBpY,EAAQiY,eACRE,EAAe9a,EAAK4a,aAAaE,EAAcjhB,IAEnD,MAAMmhB,EAA8C,iBAAtBhb,EAAK2C,QAAQ4H,MAAqBvK,EAAK2C,QAAQ4H,KAAKiQ,IAAMxa,EAAK2C,QAAQ4H,KAAO,CAAEiQ,IAAKxa,EAAK2C,QAAQ4H,MAEhItS,EAAmCgjB,EAAED,EAAgBF,GACpDI,KAAKjjB,EAAmCkjB,GACxCD,MAAK,SAASxN,GACXhD,EAAQgD,EACZ,IACC0N,OAAM,SAAStN,GAAOD,EAAMC,EAAM,GACvC,EAEAnD,QAAS,SAASlL,GACd,IAAIkD,EAAUjL,KAAKiL,SAAW,CAAC,EAE/B,GAAIlD,IAAQrH,EACR,OAAQuK,EAAQiI,YAAc,CAAC,GAAGD,QAItC,IAAIC,EAAajI,EAAQiI,YAAc,CAAC,EACxCA,EAAWD,QAAUlL,EAErB/H,KAAKiL,QAAQiI,WAAaA,EAC1BzS,EAAEsB,OAAO/B,KAAK2S,UAAU1H,QAAS,CAAEiI,WAAYA,GACnD,EACAC,KAAM,SAASpL,GACX,IAAIkD,EAAUjL,KAAKiL,SAAW,CAAC,EAE/B,GAAIlD,IAAQrH,EACR,OAAQuK,EAAQiI,YAAc,CAAC,GAAGC,KAGtC,IAAID,EAAajI,EAAQiI,YAAc,CAAC,EACxCA,EAAWC,KAAOpL,EAElB/H,KAAKiL,QAAQiI,WAAaA,EAC1BnR,GAAO,EAAM/B,KAAK2S,UAAU1H,QAAS,CAAEiI,WAAYA,GACvD,EAEAN,SAAU,SAAS3H,GACf,OAAO1K,EAAmCojB,EAAE,CAAEb,IAAK9iB,KAAKiL,QAAQ4H,MAAQ5H,EAC5E,IAGJ,SAAS2Y,GAAQC,GACb,OAAc,MAAVA,EACO,GAIE,mBADFliB,EAASoD,KAAK8e,GAEd,CAACA,GAGLA,CACX,CAEA,SAASC,GAAcpd,GAWnB,IAVA,IAAIN,EAAS,CAAED,OAAQ,IACnBA,EAASyd,GAAQvkB,EAAMoI,OAAO,gBAAgB,EAA7BpI,CAAmCqH,IACpDqd,EAAgB1kB,EAAMoI,OAAO,oBAC7Buc,EAAc3kB,EAAMoI,OAAO,kBAC3Bwc,EAAkB5kB,EAAMoI,OAAO,kBAC/Byc,EAAiB7kB,EAAMoI,OAAO,iBAC9B0c,EAAiB9kB,EAAMoI,OAAO,iCAAiC,GAC/D2c,EAAkB/kB,EAAMoI,OAAO,kBAC/B4c,EAAmBhlB,EAAMoI,OAAO,+BAA+B,GAE1D7B,EAAM,EAAGA,EAAMO,EAAON,OAAQD,IAAO,CAG1C,IAFA,IAAIG,EAAU,GACV/B,EAAS4f,GAAQzd,EAAOP,GAAK0e,QACxBnG,EAAY,EAAGA,EAAYna,EAAO6B,OAAQsY,IAC/CpY,EAAQO,KAAK,CACTR,SAAU,GACV7B,QAAS8f,EAAc/f,EAAOma,IAC9Bja,KAAM8f,EAAYhgB,EAAOma,IACzBrS,UAAWmY,EAAgBjgB,EAAOma,IAClCpS,SAAUmY,EAAelgB,EAAOma,IAChCnS,YAAaiR,SAASkH,EAAengB,EAAOma,IAAa,IAAM,EAC/DlS,WAAYoY,EAAiBrgB,EAAOma,IACpClX,UAAWmd,EAAgBpgB,EAAOma,MAI1C/X,EAAOD,OAAOG,KAAK,CAAEP,QAASA,GAClC,CACA,OAAOK,CACX,CAEA,IAAIme,GAAsB,CACtBjR,MAAO,CACHpP,KAAM7E,EAAMoI,OAAO,sBAAsB,GACzCxD,QAAS5E,EAAMoI,OAAO,yBAAyB,GAC/C+c,YAAanlB,EAAMoI,OAAO,wBAAwB,GAClDxC,KAAM5F,EAAMoI,OAAO,sBAAsB,IAE7C8L,SAAU,CACNrP,KAAM7E,EAAMoI,OAAO,yBAAyB,GAC5C+c,YAAanlB,EAAMoI,OAAO,wBAAwB,IAEtDd,SAAU,CACNzC,KAAM7E,EAAMoI,OAAO,yBAAyB,GAC5CxD,QAAS5E,EAAMoI,OAAO,4BAA4B,GAClDoD,WAAYxL,EAAMoI,OAAO,gCAAgC,GACzD+c,YAAanlB,EAAMoI,OAAO,wBAAwB,GAClDmI,WAAYvQ,EAAMoI,OAAO,+BAA+B,GACxDgd,UAAWplB,EAAMoI,OAAO,8BAA8B,GACtDid,cAAerlB,EAAMoI,OAAO,mCAAmC,GAC/Dkd,cAAetlB,EAAMoI,OAAO,kCAAkC,IAElEkP,KAAM,CACFzS,KAAM7E,EAAMoI,OAAO,qBAAqB,GACxCxD,QAAS5E,EAAMoI,OAAO,wBAAwB,GAC9CnD,MAAOjF,EAAMoI,OAAO,sBAAsB,GAC1Cmd,KAAMvlB,EAAMoI,OAAO,qBAAqB,GACxC2P,OAAQ/X,EAAMoI,OAAO,uBAAuB,GAC5Cod,MAAOxlB,EAAMoI,OAAO,sBAAsB,GAC1Cqd,cAAezlB,EAAMoI,OAAO,+BAA+B,GAC3Dsd,aAAc1lB,EAAMoI,OAAO,8BAA8B,GACzD+c,YAAanlB,EAAMoI,OAAO,4BAA4B,GACtDgd,UAAWplB,EAAMoI,OAAO,8BAA8B,IAE1DyD,WAAY,CACRhH,KAAM7E,EAAMoI,OAAO,2BAA2B,GAC9CxD,QAAS5E,EAAMoI,OAAO,8BAA8B,GACpD+c,YAAanlB,EAAMoI,OAAO,wBAAwB,GAClDoD,WAAYxL,EAAMoI,OAAO,kCAAkC,GAC3D8N,iBAAkBlW,EAAMoI,OAAO,8BAA8B,GAC7DxC,KAAM5F,EAAMoI,OAAO,2BAA2B,IAIlD+L,YAAa,CACTtP,KAAM7E,EAAMoI,OAAO,2BAA2B,GAC9CxD,QAAS5E,EAAMoI,OAAO,8BAA8B,GACpD+c,YAAanlB,EAAMoI,OAAO,wBAAwB,GAClDoD,WAAYxL,EAAMoI,OAAO,kCAAkC,GAC3DiQ,oBAAqBrY,EAAMoI,OAAO,kCAAkC,GACpEid,cAAerlB,EAAMoI,OAAO,qCAAqC,GACjEqR,OAAQzZ,EAAMoI,OAAO,6BAA6B,GAClDud,cAAe3lB,EAAMoI,OAAO,2BAA2B,IAE3DgM,OAAQ,CACJvP,KAAM7E,EAAMoI,OAAO,uBAAuB,GAC1CxD,QAAS5E,EAAMoI,OAAO,0BAA0B,GAChD+c,YAAanlB,EAAMoI,OAAO,wBAAwB,GAClDoD,WAAYxL,EAAMoI,OAAO,8BAA8B,GACvDiQ,oBAAqBrY,EAAMoI,OAAO,kCAAkC,GACpEid,cAAerlB,EAAMoI,OAAO,iCAAiC,GAC7Dwd,iBAAkB5lB,EAAMoI,OAAO,oCAAoC,GACnEqR,OAAQzZ,EAAMoI,OAAO,yBAAyB,GAC9CmQ,oBAAqBvY,EAAMoI,OAAO,kCAAkC,IAExE1B,QAAS,CACL7B,KAAM7E,EAAMoI,OAAO,wBAAwB,GAC3CxD,QAAS5E,EAAMoI,OAAO,2BAA2B,GACjDoD,WAAYxL,EAAMoI,OAAO,+BAA+B,GACxDiQ,oBAAqBrY,EAAMoI,OAAO,kCAAkC,GACpEmQ,oBAAqBvY,EAAMoI,OAAO,kCAAkC,GACpEkO,gBAAiBtW,EAAMoI,OAAO,8BAA8B,GAC5DmO,oBAAqBvW,EAAMoI,OAAO,iCAAiC,KAIvEyd,GAAoB,CAAC,OAAQ,WAAY,QAAS,aAAc,cAAe,SAAU,YAEzFC,GAAiB9lB,EAAM4B,KAAKmkB,cAAcrjB,OAAO,CACjDiJ,KAAM,SAASC,GACX5L,EAAM4B,KAAKmkB,cAAcrgB,KAAK/E,KAAMiL,GAEpCjL,KAAKqlB,QAAQpa,EACjB,EACAoa,QAAS,SAASpa,GAMd,IALA,IAEIqa,EACAC,EAHA3f,EAAM,EACNC,EAASqf,GAAkBrf,OAIxBD,EAAMC,EAAQD,KAEjB2f,EAASta,EADTqa,EAAaJ,GAAkBtf,MAGjB2f,IAAW3jB,IACrB5B,KAAKslB,GAAcC,EAG/B,EACA/e,MAAO,SAASgf,GACZ,IAAIpf,EAAS/G,EAAM4B,KAAKmkB,cAAcxR,GAAGpN,MAAMgf,EAAIpD,QAAQ,kBAAmB,QAC9E,OAAO/iB,EAAMoI,OAAO,wBAAwB,EAArCpI,CAA2C+G,EACtD,EACAqf,OAAQ,SAASja,GACb,IAAIka,EAAQrmB,EAAMoI,OAAO,aAAa,EAA1BpI,CAAgCmM,GAC5C,OAAIka,EACO,CAAC,CACJC,YAAatmB,EAAMoI,OAAO,wBAAwB,EAArCpI,CAA2CqmB,GACxDE,UAAWvmB,EAAMoI,OAAO,sBAAsB,EAAnCpI,CAAyCqmB,KAGrD,IACX,EACAjT,KAAM,SAASjH,GACXA,EAAOnM,EAAMoI,OAAO,kCAAoC,EAAjDpI,CAAuDmM,GAU9D,IARA,IACI9E,EADA+L,EAAOmR,GAAQvkB,EAAMoI,OAAO,aAAa,EAA1BpI,CAAgCmM,IAG/CpF,EAAS,CACT0J,QAAS,CAAC,EACV6B,KAAM,CAAC,GAGF/L,EAAM,EAAGA,EAAM6M,EAAK5M,OAAQD,IAGG,gBAFpCc,EAAO+L,EAAK7M,IAEH,SAAS4K,gBACTpK,EAAO0J,QAAQ3J,OAGhBC,EAAOuL,KAAOmS,GAAcpd,GAF5BN,EAAO0J,QAAUgU,GAAcpd,IAO3C,OAAON,CACX,EACAnF,KAAM,SAASuK,GACXA,EAAOnM,EAAMoI,OAAO,kCAAoC,EAAjDpI,CAAuDmM,GAS9D,IAPA,IAAIqa,EAAQjC,GAAQvkB,EAAMoI,OAAO,iBAAiB,EAA9BpI,CAAoCmM,IAEpDpF,EAAS,GACT0f,EAAgBzmB,EAAMoI,OAAO,oBAC7Bse,EAAc1mB,EAAMoI,OAAO,kBAC3Bue,EAAiB3mB,EAAMoI,OAAO,qBAEzB7B,EAAM,EAAGA,EAAMigB,EAAMhgB,OAAQD,IAClCQ,EAAOE,KAAK,CACRhC,MAAOyhB,EAAYF,EAAMjgB,IACzBnB,SAAUuhB,EAAeH,EAAMjgB,IAC/ByJ,QAAS4N,SAAS6I,EAAcD,EAAMjgB,IAAO,MAIrD,OAAOQ,CACX,EACA6f,WAAY,SAASza,EAAM+D,GACvB/D,EAAOnM,EAAMoI,OAAO,mCAAqC,EAAlDpI,CAAwDmM,GAK/D,IAJA,IAAImG,EAAOiS,GAAQvkB,EAAMoI,OAAO,OAAO,EAApBpI,CAA0BmM,IAEzCpF,EAAS,GAEJR,EAAM,EAAGA,EAAM+L,EAAK9L,OAAQD,IAAO,CACxC,IAAIsgB,EAAM,CAAC,EACX,IAAK,IAAIhjB,KAAOqM,EACZ2W,EAAIhjB,GAAOqM,EAAQrM,GAAKyO,EAAK/L,IAEjCQ,EAAOE,KAAK4f,EAChB,CAEA,OAAO9f,CACX,EACAO,SAAU,SAAS6E,GACf,OAAOxL,KAAKimB,WAAWza,EAAM+Y,GAAoB5d,SACrD,EACAgQ,KAAM,SAASnL,GACX,OAAOxL,KAAKimB,WAAWza,EAAM+Y,GAAoB5N,KACrD,EACAnD,YAAa,SAAShI,GAClB,OAAOxL,KAAKimB,WAAWza,EAAM+Y,GAAoB/Q,YACrD,EACAC,OAAQ,SAASjI,GACb,OAAOxL,KAAKimB,WAAWza,EAAM+Y,GAAoB9Q,OACrD,EACAvI,WAAY,SAASM,GACjB,OAAOxL,KAAKimB,WAAWza,EAAM+Y,GAAoBrZ,WACrD,EACAoI,MAAO,SAAS9H,GACZ,OAAOxL,KAAKimB,WAAWza,EAAM+Y,GAAoBjR,MACrD,EACAC,SAAU,SAAS/H,GACf,OAAOxL,KAAKimB,WAAWza,EAAM+Y,GAAoBhR,SACrD,EACAxN,QAAS,SAASyF,GACd,OAAOxL,KAAKimB,WAAWza,EAAM+Y,GAAoBxe,QACrD,IAGJhE,GAAO,EAAM1C,EAAM4B,KAAM,CACtB+W,gBAAiBA,GACjB5E,kBAAmBA,GACnBuP,cAAeA,GACfwC,eAAgBA,GAChBpa,iBAAkBA,GAClBob,WAAY,CACRC,KAAMzD,IAEV0D,QAAS,CACLD,KAAMjB,MAIb,IAcImB,GAAa,SAASC,EAAariB,GAGnC,IAFA,IAAIkC,EAAS,GAEJR,EAAM,EAAGC,EAAS0gB,EAAY1gB,OAAQD,EAAMC,EAAQD,IACrD2gB,EAAY3gB,GAAK8B,QAAUxD,GAC3BkC,EAAOE,KAAKigB,EAAY3gB,IAIhC,OAAOQ,CACX,EAEA/G,EAAMuB,GAAG4lB,mBAAqBtlB,EAAOa,OAAO,CACxCiJ,KAAM,SAASyb,EAASxb,GACpB,IAAI3C,EAAOtI,KAWX,GATAkB,EAAO0S,GAAG5I,KAAKjG,KAAKuD,EAAMme,EAASxb,GAEnC3C,EAAKme,QAAQC,SAAS,mBAEtBpe,EAAKgZ,WAAajiB,EAAM4B,KAAK+W,gBAAgBrL,OAAO1B,EAAQqW,YAE5DhZ,EAAKqe,gBAAkBre,EAAKse,QAAQhc,KAAKtC,GACzCA,EAAKgZ,WAAW9B,MAAMpd,EAAQkG,EAAKqe,kBAE9B1b,EAAQ4b,SAAU,CACnB,IAAIC,EAAU,GAEVxe,EAAK2C,QAAQ8b,UACbD,EAAU,gDAAgDznB,EAAMuB,GAAG8C,KAAK,eAG5E4E,EAAK2C,QAAQ4b,SAAY5lB,GACnB,mFAAmF5B,EAAM2nB,WAAW/lB,EAAKiD,MAAQjD,6DAE5EA,EAAKiD,MAAQjD,+CAEZ6lB,EALV,gBAOtC,CAEAxe,EAAKue,SAAWxnB,EAAMwnB,SAASve,EAAK2C,QAAQ4b,UAC5Cve,EAAK2e,cAAgB5nB,EAAMwnB,SAASve,EAAK2C,QAAQgc,eAEjD3e,EAAK4e,YAEL5e,EAAKme,QAAQU,GAAG,QAAUxkB,EAAI,sBAAuB,SAASgI,GAC1D,IAAI+Q,EAASjb,EAAEkK,EAAE+Q,QAAQ0L,QAAQ,kBAC7BC,EAAS3L,EAAO0L,QAAQ,kBACxBljB,EAAOwX,EAAO0L,QAAQ,IAAM/nB,EAAMioB,KAAK,QAAU,KACnCA,KAAKjoB,EAAMioB,KAAK,SAElC,GAAKpjB,EAIL,GAAImjB,EAAOE,SAAS,oBAChBjf,EAAKkf,OAAOtjB,QAIhB,KAAIwX,EAAO0L,QAAQ,mBAAmBvhB,OAAS,IAI3CyC,EAAK2C,QAAQwc,SAAU,CACvB,IAAIC,EAAgBjnB,EAAEkK,EAAEgd,eAAeP,QAAQ,kBAAkBQ,KAAK,+CAA+C/hB,OAAS,OAAS,MAEvIyC,EAAKiB,KAAK,CACN7B,MAAOxD,EACP4F,IAAK4d,GAEb,CACJ,KAEIzc,EAAQ4c,YAAc5c,EAAQwc,YAC9Bnf,EAAKwf,UAAY,IAAIlnB,EAAGmnB,eAAezf,EAAKme,QAAS,CACjDuB,SAAU1f,EAAK2C,QAAQ+c,SAASF,UAChC1e,OAAQ,uBACRye,WAAY5c,EAAQ4c,WACpBJ,SAAUxc,EAAQwc,SAClBnG,WAAYhZ,EAAKgZ,cAIzBhZ,EAAKse,SACT,EAEA3b,QAAS,CACL/G,KAAM,qBACN2iB,SAAU,KACVgB,YAAY,EACZJ,UAAU,EACVR,cAAgBhmB,GAAS,wBAAwBA,UACjDgnB,QAAS,UACTlB,SAAS,EACTiB,SAAU,CACNE,MAAO,qBAGfC,cAAe,SAAS7G,GACpBthB,KAAKshB,WAAW8G,OAAOhmB,EAAQpC,KAAK2mB,iBACpC3mB,KAAKshB,WAAathB,KAAKiL,QAAQqW,WAAaA,EAExCthB,KAAK8nB,WACL9nB,KAAK8nB,UAAUK,cAAc7G,GAEjCA,EAAW9B,MAAMpd,EAAQpC,KAAK2mB,iBAE9B3mB,KAAK4mB,SACT,EAEAM,UAAW,WACP,IAAI5e,EAAOtI,KAEPsI,EAAK2C,QAAQ8b,UACb/mB,KAAKynB,SAAWznB,KAAKymB,QAAQ4B,cAAc,CACvCC,YAAatoB,KAAKiL,QAAQqd,YAC1BC,KAAMjgB,EAAK2C,QAAQsd,KACnBnf,OAAQ,mBACRof,OAAQ,OACRC,MAAO,SAAS9d,GACZA,EAAEtB,KAAKM,QAAQ,SAASA,QAAQ,OACpC,EACA+e,OAAQ,SAAS/d,GACb,IAAIzG,EAAOyG,EAAEtB,KAAKie,KAAKjoB,EAAMioB,KAAK,SAElB,WAAZ3c,EAAE0c,OACF/e,EAAKqgB,IAAIzkB,GACU,UAAZyG,EAAE0c,OACT/e,EAAKkf,OAAOtjB,GACO,QAAZyG,EAAE0c,QACT/e,EAAKsgB,KAAK1kB,EAAMyG,EAAEke,SAE1B,IACD5nB,KAAK,iBAEhB,EAEA6nB,OAAQ,SAAS7nB,GACb,MAAqB,QAAdA,EAAKgE,MAAkBhE,EAAK2D,OACvC,EAEAmkB,SAAU,SAAS9nB,GACf,IAAI+nB,EAA0B,GAAb/nB,EAAKgE,MAAa,eAAgBhE,GAAQjB,KAAK8oB,OAAO7nB,GAEvE,GAAI+nB,EACA,MAAgC,aAAzBhpB,KAAKiL,QAAQgd,QAGxB,GAA6B,aAAzBjoB,KAAKiL,QAAQgd,QACb,OAAOe,EAGX,IAAI9Z,EAAQlP,KAAKshB,WAAWthB,KAAKiL,QAAQgd,WACrC/jB,EAAOjD,EAAKsU,kBAAoBtU,EAAK4J,WACzC,QAAIvF,GAAQpB,EAAMgL,IAAU,MAKxB5J,GAAQpB,EADZgL,EAAQlP,KAAKshB,WAAoC,YAAzBthB,KAAKiL,QAAQgd,QAAwB,OAAS,eAC1C,EAKhC,EAEAU,IAAK,SAASzkB,GACV,IAAIgL,EAAQlP,KAAKshB,WAAWthB,KAAKiL,QAAQgd,WACrCpe,EAAI,EAIJqX,GAFJhd,EAAO+kB,MAAMC,QAAQhlB,GAAQA,EAAKkB,MAAM,GAAK,CAAClB,IAEjC2B,OAEb,KAAOgE,EAAIqX,IAC0B,IAA7B5b,GAAQpB,EAAK2F,GAAIqF,KACjBhL,EAAK2Z,OAAOhU,EAAG,GACfA,GAAK,EACLqX,GAAK,GAETrX,IAGA3F,EAAK2B,SACLqJ,EAAQA,EAAMrB,OAAO3J,GACrBlE,KAAKshB,WAAWthB,KAAKiL,QAAQgd,SAAS/Y,GAE9C,EAEA0Z,KAAM,SAAS1kB,EAAM2I,GACjB,IAAIqC,EAAQlP,KAAKshB,WAAWthB,KAAKiL,QAAQgd,WACrCriB,EAAMN,GAAQpB,EAAMgL,GAEpBtJ,GAAO,IACP1B,EAAOgL,EAAM2O,OAAOjY,EAAK,GAAG,GAE5BsJ,EAAM2O,OAAOhR,EAAO,EAAG3I,GAEvBlE,KAAKshB,WAAWthB,KAAKiL,QAAQgd,SAAS/Y,GAE9C,EAEAsY,OAAQ,SAAStjB,GACb,IAAIgL,EAAQlP,KAAKshB,WAAWthB,KAAKiL,QAAQgd,WACrCriB,EAAMN,GAAQpB,EAAMgL,GACpBia,EAAkBnpB,KAAKshB,WAAW/X,OAClCH,EAASpJ,KAAKshB,WAAWlY,SAEzBxD,GAAO,IACHwD,IACAA,EAAO8H,QAAUoV,GAAWld,EAAO8H,QAAShN,GAC5ClE,KAAKshB,WAAWtQ,QAAQE,QAAU9H,EAAO8H,QACpC9H,EAAO8H,QAAQrL,SAChB7F,KAAKshB,WAAWtQ,QAAU,OAG9BmY,IACAA,EAAkB7C,GAAW6C,EAAiBjlB,GAC9ClE,KAAKshB,WAAW8H,MAAQD,GAE5Bja,EAAM2O,OAAOjY,EAAK,GAClB5F,KAAKshB,WAAWthB,KAAKiL,QAAQgd,SAAS/Y,GAE9C,EAEA3F,KAAM,SAAS0H,GACX,IAAIwW,EAAWznB,KAAKiL,QAAQwc,SAExB4B,IAD2B,IAAb5B,GAAqBA,EAAS6B,cACL,QAAbrY,EAAKnH,IAE/Byc,EAAevmB,KAAKshB,WAAW/X,QAAU,GACzCnD,EAASkgB,GAAWC,EAAatV,EAAKvJ,OAEtC2hB,GAAY9C,EAAY1gB,SAAWO,EAAOP,SAC1CoL,EAAO,MAGPA,GACA7K,EAAOE,KAAK2K,GAGhBjR,KAAKshB,WAAW/X,KAAKnD,EACzB,EAEAwgB,QAAS,WACL,IAIIvd,EAJAkgB,EAAO,GACPra,EAAQlP,KAAKshB,WAAWthB,KAAKiL,QAAQgd,WACrCpiB,EAASqJ,EAAMrJ,OACfD,EAAM,EAGV,GAAIC,EACA,KAAOD,EAAMC,EAAQD,IAEjByD,GADAA,EAAO6F,EAAMtJ,IACD1B,OAASxD,EAAc,CAAEwD,KAAMmF,GAASA,EAEpDkgB,GAAQvpB,KAAK6mB,SAAS9kB,EAAO,CAAEynB,SAAUxpB,KAAKypB,UAAUpgB,EAAKnF,OAASmF,SAG1EkgB,EAAOvpB,KAAKinB,cAAcjnB,KAAKiL,QAAQ+c,SAASE,OAGpDloB,KAAKymB,QAAQ8C,KAAKA,EACtB,EAEAxW,QAAS,WACL7R,EAAO0S,GAAGb,QAAQhO,KAAK/E,MAEvBA,KAAKshB,WAAW8G,OAAOhmB,EAAQpC,KAAK2mB,iBACpC3mB,KAAKymB,QAAQiD,IAAI/mB,GAEb3C,KAAKynB,UACLznB,KAAKynB,SAAS1U,UAGd/S,KAAK8nB,WACL9nB,KAAK8nB,UAAU/U,UAGnB/S,KAAKymB,QAAU,KACfzmB,KAAK2mB,gBAAkB,IAC3B,EAEA8C,UAAW,SAASvlB,GAChB,IACI+M,EA7SG,SAASsV,EAAariB,GACjC,IAAKqiB,EACD,OAAO,KAGX,IAAK,IAAI3gB,EAAM,EAAGC,EAAS0gB,EAAY1gB,OAAQD,EAAMC,EAAQD,IACzD,GAAI2gB,EAAY3gB,GAAK8B,QAAUxD,EAC3B,OAAOqiB,EAAY3gB,GAI3B,OAAO,IACX,CAiSmB+jB,CADO3pB,KAAKshB,WAAW/X,OACDvC,GAAQ9C,IACrCR,EAAO,GAMX,OAJIuN,IACAvN,EAAO,QAAUuN,EAAKnH,KAGnBpG,CACX,IAGJrE,EAAMuB,GAAGgpB,qBAAuB1oB,EAAOa,OAAO,CAC1CiJ,KAAM,SAASyb,EAASxb,GACpB,IAAI3C,EAAOtI,KAEXkB,EAAO0S,GAAG5I,KAAKjG,KAAKuD,EAAMme,EAASxb,GAEnC3C,EAAKgZ,WAAajiB,EAAM4B,KAAKmS,kBAAkBzG,OAAO1B,EAAQqW,YAE9DhZ,EAAKqe,gBAAkBre,EAAKse,QAAQhc,KAAKtC,GACzCA,EAAKgZ,WAAW9B,MAAMpd,EAAQkG,EAAKqe,iBAEnCre,EAAKue,SAAWxnB,EAAMwnB,SAASve,EAAK2C,QAAQ4b,UAE5Cve,EAAK4e,YAEL5e,EAAKme,QAAQU,GAAG,QAAUxkB,EAAI,mCAAmC,SAASgI,GACtE,IACIkf,EADSppB,EAAEkK,EAAE+Q,QAAQ0L,QAAQ,kBACbA,QAAQ,WACxBljB,EAAO2lB,EAAOjC,KAAK,iBAAiBkC,OAEnC5lB,IAILoE,EAAKkf,OAAOtjB,GACZ2lB,EAAOrC,SACPlf,EAAKqB,QAAQ,SAAU,CAAEzF,KAAMA,IACnC,IAEIoE,EAAK2C,QAAQ8e,aACbzhB,EAAKme,QAAQU,GAAG,UAAYxkB,EAAI,WAAW,SAASqnB,GAChD,IAAIC,EAAOxpB,EAAEupB,EAAGtO,QACZxY,EAAM8mB,EAAGE,QACThmB,EAAO+lB,EAAKrC,KAAK,iBAAiBkC,OAEtC,GAAI5mB,IAAQlB,EAAKmoB,QAAUjnB,IAAQlB,EAAKooB,UAAW,CAC/C,MAAMrN,EAAczU,EAAK2C,QAAQof,uBAAyB/hB,EAAK2C,QAAQof,uBAAuBC,SAAShlB,QAAQ2kB,EAAK,KAAO,EAE3H,GADAA,EAAKrC,KAAK,mCAAmCje,QAAQ,UAChDrB,EAAK2C,QAAQof,uBACd,OAGJ/hB,EAAK2C,QAAQof,uBAAuBE,aAChCjiB,EAAK2C,QAAQof,uBAAuBC,SAASvN,EAAc,GAEnE,MAAO,GAAI7Z,IAAQlB,EAAKwoB,MAAQR,EAAGS,OAC/BR,EAAKrC,KAAK,6CAA6Cje,QAAQ,cAC5D,GAAIqgB,EAAGU,SAAWV,EAAGW,SACxB,GAAIznB,GAAOlB,EAAK4oB,KAAM,CAGlB,GAFAtiB,EAAKsgB,KAAK1kB,EAAMwY,KAAKjS,IAAI,EAAGwf,EAAKpd,QAAU,KAEtCvE,EAAK2C,QAAQof,uBACd,OAGJ/hB,EAAK2C,QAAQof,uBAAuBE,aAChCjiB,EAAKme,QAAQmB,KAAK,yBACbxe,QAAO,CAACyhB,EAAKC,IAAOrqB,EAAEqqB,GAAIhB,QAAU5lB,IACpCkjB,QAAQ,WAAW,GAEhC,MAAO,GAAIlkB,GAAOlB,EAAK+oB,MAAO,CAG1B,GAFAziB,EAAKsgB,KAAK1kB,EAAMwY,KAAKlS,IAAIyf,EAAKpd,QAAU,EAAGod,EAAKJ,SAASjC,KAAK,aAAa/hB,OAAS,KAE/EyC,EAAK2C,QAAQof,uBACd,OAGJ/hB,EAAK2C,QAAQof,uBAAuBE,aAChCjiB,EAAKme,QAAQmB,KAAK,yBACbxe,QAAO,CAACyhB,EAAKC,IAAOrqB,EAAEqqB,GAAIhB,QAAU5lB,IACpCkjB,QAAQ,WAAW,GAEhC,MAAO,GAAKlkB,GAAOlB,EAAKgpB,IAA8B,QAAxB1iB,EAAK2C,QAAQgd,SACtC/kB,GAAOlB,EAAKwoB,MAAgC,WAAxBliB,EAAK2C,QAAQgd,QAAuB,CAEzD,IAAIgD,EAAc3iB,EAAKmf,SAASxc,QAAQqd,YAAYrnB,KAAK,6BACzD,IAAKgqB,EACD,OAKJ,GAFA3iB,EAAKkf,OAAOtjB,GACZ+mB,EAAYtC,IAAIzkB,IACXoE,EAAK2C,QAAQof,uBACd,OAGJ/hB,EAAK2C,QAAQof,uBAAuBE,aAChCU,EAAYxE,QAAQmB,KAAK,WAAWxJ,OAAO,GAEnD,CAER,IAGJ9V,EAAKwf,UAAY,IAAIlnB,EAAGsqB,iBAAiB5iB,EAAKme,QAAS,CACnDuB,SAAU1f,EAAK2C,QAAQ+c,SAASF,UAChCD,WAAY5c,EAAQ4c,WACpBze,OAAQ,4CACRqe,SAAUxc,EAAQwc,SAClBnG,WAAYhZ,EAAKgZ,WACjB2G,QAAShd,EAAQgd,UAGrB3f,EAAKse,SACT,EAEAuE,OAAQ,CAAC,UAETlgB,QAAS,CACL/G,KAAM,uBACN2iB,SAAU,KACVgB,YAAY,EACZJ,UAAU,EACVQ,QAAS,UACTlB,SAAS,EACTiB,SAAU,CACNE,MAAO,qBAGfC,cAAe,SAAS7G,GACpBthB,KAAKshB,WAAW8G,OAAOhmB,EAAQpC,KAAK2mB,iBACpC3mB,KAAKshB,WAAathB,KAAKiL,QAAQqW,WAAaA,EAExCthB,KAAK8nB,WACL9nB,KAAK8nB,UAAUK,cAAc7G,GAEjCA,EAAW9B,MAAMpd,EAAQpC,KAAK2mB,iBAE9B3mB,KAAK4mB,SACT,EAEAwE,YAAa,WACLprB,KAAKqrB,aAAe3qB,IACpBV,KAAKshB,WAAW8H,MAAQppB,KAAKqrB,WAC7BrrB,KAAKqrB,WAAa3qB,GAGlBV,KAAKsrB,eAAiB5qB,IACtBV,KAAKshB,WAAWtQ,QAAUhR,KAAKsrB,aAC/BtrB,KAAKsrB,aAAe5qB,GAGxBV,KAAKshB,WAAW,IAAMthB,KAAKiL,QAAQgd,SAAoC,aAAzBjoB,KAAKiL,QAAQgd,QAAyBtjB,EAAkB3E,KAAKurB,aAAermB,EAAiBlF,KAAKurB,YACpJ,EAEAC,eAAgB,WACZxrB,KAAKqrB,WAAa3qB,EAClBV,KAAKsrB,aAAe5qB,EACpBV,KAAKurB,YAAclsB,EAAMosB,WAAW,GAAIzrB,KAAK0rB,eAC7C1rB,KAAK2rB,SACT,EAEAC,OAAQ,SAASC,EAAUC,GACvB,IAAIxjB,EAAOtI,KAEX,IAAK6rB,EACD,OAAOvjB,EAAKijB,aAAe,GAEtBjjB,EAAKijB,cAAeO,IACrBxjB,EAAKojB,cAAgBrsB,EAAMosB,WAAW,GAAII,IAE9CvjB,EAAKijB,YAAclsB,EAAMosB,WAAW,GAAII,EAEhD,EAEA3E,UAAW,WACP,IAAI5e,EAAOtI,KAEXA,KAAKynB,SAAWznB,KAAKymB,QAAQ4B,cAAc,CACvCC,YAAatoB,KAAKiL,QAAQqd,YAC1BC,KAAMjgB,EAAK2C,QAAQsd,KACnBnf,OAAQ,mBACRof,OAAQ,OACRC,MAAO,SAAS9d,GACZA,EAAEtB,KAAKM,QAAQ,SAASoiB,MAC5B,EACArD,OAAQ,SAAS/d,GACb,IAAIzG,EAAOyG,EAAEtB,KAAKue,KAAK,iBAAiBkC,OAExB,WAAZnf,EAAE0c,OACF/e,EAAKqgB,IAAIzkB,GACU,UAAZyG,EAAE0c,OACT/e,EAAKkf,OAAOtjB,GACO,QAAZyG,EAAE0c,QACT/e,EAAKsgB,KAAK1kB,EAAMyG,EAAEke,SAE1B,IACD5nB,KAAK,gBACZ,EAEA0nB,IAAK,SAASzkB,GACV,IAAIgL,EAAQlP,KAAK4rB,SACb/hB,EAAI,EAIJqX,GAFJhd,EAAO+kB,MAAMC,QAAQhlB,GAAQA,EAAKkB,MAAM,GAAK,CAAClB,IAEjC2B,OACb,KAAOgE,EAAIqX,IAC0B,IAA7B5b,GAAQpB,EAAK2F,GAAIqF,KACjBhL,EAAK2Z,OAAOhU,EAAG,GACfA,GAAK,EACLqX,GAAK,GAETrX,IAGA3F,EAAK2B,SACLqJ,EAAQA,EAAMrB,OAAO3J,GACrBlE,KAAK4rB,OAAO1c,GACZlP,KAAK2rB,UAEb,EAEA/C,KAAM,SAAS1kB,EAAM2I,GACjB,IAAIqC,EAAQlP,KAAK4rB,SACbhmB,EAAMN,GAAQpB,EAAMgL,GAEpBtJ,GAAO,IACP1B,EAAOgL,EAAM2O,OAAOjY,EAAK,GAAG,GAE5BsJ,EAAM2O,OAAOhR,EAAO,EAAG3I,GAEvBlE,KAAK4rB,OAAO1c,GACZlP,KAAK2rB,UAEb,EAEAnE,OAAQ,SAAStjB,GACb,IAAIgL,EAAQlP,KAAK4rB,SACbhmB,EAAMN,GAAQpB,EAAMgL,GACpBia,EAAkBnpB,KAAKshB,WAAW/X,OAClCH,EAASpJ,KAAKshB,WAAWlY,SAEzBxD,GAAO,IACHwD,IACAA,EAAO8H,QAAUoV,GAAWld,EAAO8H,QAAShN,GAC5ClE,KAAKgsB,aAAehsB,KAAKshB,WAAWtQ,QACpChR,KAAKgsB,aAAa9a,QAAU9H,EAAO8H,QAC9B9H,EAAO8H,QAAQrL,SAChB7F,KAAKgsB,aAAe,OAGxB7C,IACAA,EAAkB7C,GAAW6C,EAAiBjlB,GAC9ClE,KAAKqrB,WAAalC,GAEtBja,EAAM2O,OAAOjY,EAAK,GAClB5F,KAAK4rB,OAAO1c,GACZlP,KAAK2rB,UAEb,EAEAM,YAAa,SAASC,GAEdA,EADOlsB,KAEFymB,QAAQ8C,KAAKvpB,KAAKiL,QAAQ+c,SAASE,OACnCxB,SAAS,0BACTyF,YAAY,eAJVnsB,KAMFymB,QACA0F,YAAY,0BACZzF,SAAS,cAEtB,EAEAiF,QAAS,WACL,IAAIzc,EAAQlP,KAAK4rB,UAAY,GAC7B5rB,KAAKisB,aAAa/c,EAAMrJ,QACpBqJ,EAAMrJ,QACN7F,KAAKymB,QAAQ8C,KAAKvpB,KAAKosB,aAAald,GAE5C,EAEAkd,aAAc,SAASld,GACnB,IAAI7F,EACAkgB,EAAO,GACP3jB,EAAM,EAGV,GAAIsJ,EAAMrJ,OACN,KAAOD,EAAMsJ,EAAMrJ,OAAQD,IAEvByD,GADAA,EAAO6F,EAAMtJ,IACD1B,OAASxD,EAAc,CAAEwD,KAAMmF,GAASA,EAEpDkgB,GAAQvpB,KAAK6mB,SAAS,CAAE3iB,KAAMmF,EAAKnF,KAAMmoB,YAPnC,OAUd,OAAO9C,CACX,EAEA3C,QAAS,WACL,IAAI5mB,KAAKshB,WAAWpL,gBAApB,CAGA,IAAIhH,EAAQlP,KAAKshB,WAAWthB,KAAKiL,QAAQgd,WACzCjoB,KAAK4rB,OAAO1c,GAAO,GACnBlP,KAAKisB,aAAajsB,KAAK4rB,SAAS/lB,QAC5BqJ,EAAMrJ,QACN7F,KAAKymB,QAAQ8C,KAAKvpB,KAAKosB,aAAald,GALxC,CAOJ,EAEA6D,QAAS,WACL7R,EAAO0S,GAAGb,QAAQhO,KAAK/E,MAEvBA,KAAKshB,WAAW8G,OAAOhmB,EAAQpC,KAAK2mB,iBACpC3mB,KAAKymB,QAAQiD,IAAI/mB,GAEb3C,KAAKynB,UACLznB,KAAKynB,SAAS1U,UAGd/S,KAAK8nB,WACL9nB,KAAK8nB,UAAU/U,UAGnB/S,KAAKymB,QAAU,KACfzmB,KAAK2mB,gBAAkB,IAC3B,IAGJ,IAAI2F,GAA0BprB,EAAOa,OAAO,CACxCiJ,KAAM,SAASyb,EAASxb,GACpB,IAAI3C,EAAOtI,KACXkB,EAAO0S,GAAG5I,KAAKjG,KAAKuD,EAAMme,EAASxb,GACnC3C,EAAKme,QAAUhmB,EAAEgmB,GAEjBne,EAAKikB,WACLjkB,EAAKkkB,eACT,EAEAvhB,QAAS,CACL/G,KAAM,0BACN4lB,KAAM,kBACN2C,aAAc,IAGlB1Z,QAAS,WACL/S,KAAKymB,QAAQiD,IAAI/mB,EACrB,EAEA+pB,WAAY,SAASzhB,GAEjB5L,EAAMosB,WADKzrB,KACWiL,QAASA,GAC/BjL,KAAKgL,KAAKhL,KAAKymB,QAASzmB,KAAKiL,QACjC,EAEA0hB,OAAQ,WACJ,IAIIC,EAJAtF,EAAOjoB,EAAMioB,KAAK,QAClBuF,EAAU7sB,KAAKymB,QACdW,QAAQ,IAAME,EAAO,oBACrBM,KAAK,IAAMN,EAAO,iBAGvB7mB,EAAE,IAAMT,KAAKiL,QAAQwhB,cAAcK,YAAY,YAE3CD,EAAQhnB,UACR+mB,EAAQC,EAAQE,uBACVC,mBACNJ,EAAMK,oBAEd,EAEAT,cAAe,WACXxsB,KAAKymB,QAAQU,GAAG,QAAUxkB,EAAI3C,KAAK2sB,OAAO/hB,KAAK5K,MACnD,EAEAusB,SAAU,WACN,IAAIthB,EAAUjL,KAAKiL,QACnBjL,KAAKymB,QAAQC,SAAS,mCACtB1mB,KAAKymB,QAAQ8C,KAAKlqB,EAAM6K,OAAO,sBAAsBe,EAAQ6e,KAAMzqB,EAAMuB,GAAG8C,KAAK,SACrF,IAGAwpB,GAAiBhsB,EAAOa,OAAO,CAC/BiJ,KAAM,SAASyb,EAASxb,GACpB,IAAI3C,EAAOtI,KACXkB,EAAO0S,GAAG5I,KAAKjG,KAAKuD,EAAMme,EAASxb,GACnC3C,EAAKme,QAAUhmB,EAAEgmB,GACjBne,EAAK2C,QAAUA,EAGf3C,EAAK6kB,aACT,EAEAliB,QAAS,CACL/G,KAAM,iBACNkpB,qBAAsB,QAG1BV,WAAY,SAASzhB,GAEjB5L,EAAMosB,WADKzrB,KACWiL,QAASA,GAC/BjL,KAAKgL,KAAKhL,KAAKymB,QAASzmB,KAAKiL,QACjC,EAEAkiB,YAAa,WACT,IACIE,EADApiB,EAAUjL,KAAKiL,QAInB,OAFAjL,KAAKymB,QAAQ0F,YAAY,qEAEjBlhB,EAAQmiB,sBACZ,IAAK,QAYL,QACIC,EAAY,mBAVhB,IAAK,OACDA,EAAY,qBACZ,MACJ,IAAK,SACDA,EAAY,gBACZ,MACJ,IAAK,MACDA,EAAY,wBAMpBrtB,KAAKymB,QACAC,SAAS,2BACTA,SAAS2G,EAClB,IAGAC,GAAcpsB,EAAOa,OAAO,CAC5BiJ,KAAM,SAASyb,EAASxb,GACpB,IAAI3C,EAAOtI,KAEXkB,EAAO0S,GAAG5I,KAAKjG,KAAKuD,EAAMme,EAASxb,GAEnC3C,EAAKilB,cAELjlB,EAAKklB,oBAELllB,EAAKmlB,QAAUnlB,EAAKme,QAAQa,KAAK,OAASjoB,EAAMquB,OAChDplB,EAAKqlB,WAELrlB,EAAKslB,sBAAwBntB,EAAE,kDAC/B6H,EAAKulB,mBAAqBptB,EAAE,+CAC5B6H,EAAKwlB,gBAAkBrtB,EAAE,0CAEzB6H,EAAKylB,QAAQC,OAAO1lB,EAAKslB,uBACzBtlB,EAAKylB,QAAQC,OAAO1lB,EAAKulB,oBACzBvlB,EAAKylB,QAAQC,OAAO1lB,EAAKwlB,iBAEzBxlB,EAAK2lB,eAAiB,IAAIC,GAAkB,CAAErH,SAAU7mB,KAAKiL,QAAQkjB,qBAAsB1b,KAAM,UAAW2b,OAAQ9lB,EAAKmlB,UACzHnlB,EAAK+lB,YAAc,IAAIH,GAAkB,CAAErH,SAAU7mB,KAAKiL,QAAQqjB,kBAAmB7b,KAAM,OAAQ2b,OAAQ9lB,EAAKmlB,UAChHnlB,EAAKimB,gBAAkB,IAAIC,GAAkB,CACzCC,iBAAkBzuB,KAAKiL,QAAQwjB,kBAAoBjqB,EACnDkqB,kBAAmB1uB,KAAKiL,QAAQyjB,mBAAqBtqB,EACrDuqB,iBAAkB3uB,KAAKiL,QAAQ0jB,kBAAoBpqB,EACnDoC,SAAU3G,KAAKshB,WAAWlN,UAC1Bga,OAAQ9lB,EAAKmlB,UAGjBnlB,EAAKsmB,cACLtmB,EAAKulB,mBACAlF,IAAIrgB,EAAKslB,uBACTzG,GAAG,QAAS,+BAA+B,WACxC,IAAI0H,EAASpuB,EAAET,MACXiQ,EAAO4e,EAAOhF,SAASvC,KAAKjoB,EAAMioB,KAAK,QACvC7jB,EAAWorB,EAAOC,GAAG,uCACrBC,EAA8D,IAAtDF,EAAOzH,QAAQ,4BAA4BvhB,OACnDmpB,EAAQ/e,EAAKlG,MAAM,KACnBklB,EAAYxrB,EAAWE,EAAiBZ,EAE5C,IAAIuF,EAAKqB,QAAQslB,EAAW,CAAEhf,KAAM+e,EAAOtoB,KAAMqoB,EAAQ,OAAS,YAAlE,CAIA,IAAIG,EAAiB,CACjBjqB,KAAM,wBACNkqB,QAASH,EACTI,KAAML,EAAQzmB,EAAK+lB,YAAYgB,UAAY/mB,EAAK2lB,eAAeoB,WAE/DC,EAAcP,EAAQzmB,EAAKgZ,WAAWrN,MAAQ3L,EAAKgZ,WAAWtN,SAC9Dub,EAAahvB,EAAmCsJ,EAAEylB,EAAaJ,GAEnE5mB,EAAKgZ,WAAWpL,iBAAkB,EAClC5N,EAAK2lB,eAAeuB,YAAc,CAAC,EACnClnB,EAAK+lB,YAAYmB,YAAc,CAAC,EAE5BT,EACAzmB,EAAKgZ,WAAW3P,KAAK4d,GAErBjnB,EAAKgZ,WAAWxR,QAAQyf,EAjB5B,CAmBH,IAEDjnB,EAAK2C,QAAQwkB,UACbnnB,EAAKgZ,WAAW1M,QAGpBtM,EAAKonB,QAEDpnB,EAAK2C,QAAQ8e,aACbzhB,EAAKqnB,2BAGTrnB,EAAKsnB,cAELvwB,EAAMwwB,OAAOvnB,EACjB,EAEA6iB,OAAQ,CACJtoB,EACAC,EACAC,EACAY,GAGJsH,QAAS,CACL/G,KAAM,cACNurB,UAAU,EACVK,OAAQ,KACRC,YAAa,KACbtD,aAAc,GACd0B,qBAAsB,KACtBG,kBAAmB,KACnBG,iBAAkB,KAClBC,kBAAmB,KACnBC,iBAAkB,KAClB3G,SAAU,CACNgI,eAAgB,yBAIxBjd,QAAS,WACL,IAAIzK,EAAOtI,KACXkB,EAAO0S,GAAGb,QAAQhO,KAAKuD,GAEnBA,EAAK2nB,QACL3nB,EAAK2nB,OAAOld,UAGZzK,EAAK4nB,uBACLzvB,EAAEE,QAAQ+oB,IAAIxnB,EAASS,EAAI2F,EAAK4nB,sBAChC5nB,EAAK4nB,qBAAuB,KAEpC,EAEAR,MAAO,WACQ1vB,KACNymB,QAAQa,KAAK,OAAQ,OAC9B,EAEAa,cAAe,SAAS7G,GACpBthB,KAAKiL,QAAQqW,WAAaA,EAE1BthB,KAAKutB,cAELvtB,KAAKwtB,oBAEDxtB,KAAKiL,QAAQwkB,UACbnO,EAAW1M,OAEnB,EAEAgb,YAAa,SAAS3kB,GAClB,IAAI3C,EAAOtI,KACPmwB,EAAiB,CACbC,KAAM,SACNpI,SAAU,CAAEqI,UAAW,iBAE/BF,EAAiB1vB,EAAEsB,OAAO,CAAC,EAAGouB,EAAgBllB,GAE9C,MAAMglB,EAASxvB,EAAE,eAAe6vB,YAAYH,GAAgBlvB,KAAK,eAEjEqH,EAAK2nB,OAASA,EACd3nB,EAAKioB,iBAAmB/vB,EAA+BgwB,EAAE5lB,KAAKtC,EAClE,EAGAqnB,yBAA0B,WACtB,IAAIrnB,EAAOtI,KAEXsI,EAAKmoB,WAAa,IAAIlwB,EAAmCmwB,EAAE,CAAEC,SAAU,IACvEroB,EAAKmoB,WAAWG,eAAeC,QAAQhvB,EAAI,SAASivB,EAASC,EAAKC,GAC9D,IAAKD,EAAIvlB,KACL,OAIJ,IAAIylB,EAAOF,EAAIvlB,KAAK0lB,mBACdD,GAAQA,aAAgBE,cAGzBF,EAAKG,QAAQ,yCACdH,EAAOA,EAAKC,oBAEZD,GAAQA,aAAgBE,aAAeF,EAAKG,QAAQ,yCAC/CL,EAAIvlB,KAAK6lB,aAAcN,EAAIvlB,KAAK6lB,WAAWC,cAAc,uCAC1DL,EAAKM,QAETC,YAAW,KACP,GAAIT,EAAIvlB,KAAK6lB,WAAY,CACrB,MAAMI,EAAaV,EAAIvlB,KAAK6lB,WAAWC,cAAc,sFACjDG,aAAsBN,cACtBM,EAAWC,aAAa,WAAYC,OAAOZ,EAAIJ,WAC/Cc,EAAWG,QAEnB,IACD,IAEX,EACAtpB,EAAKmoB,WAAWhI,MAAMngB,EAAKme,QAAQ,IAEnC,MAAMoL,EAAYvpB,EAAKmoB,WAAWjR,MAE9BqS,GACAA,EAAUH,aAAa,WAAY,IAE3C,EAEAI,qBAAsB,SAAS/D,GAC3B,IAAIzlB,EAAOtI,KACX,MAAM+xB,EAAgBhE,EAAQiE,iBAC1B,6CAEEC,EAAiBF,EAAc,GAAU9I,MAAMiJ,KAAKH,EAAc,GAAGjsB,UAAUqsB,QACjF,CAACC,EAAKC,IAAUD,GAAwC,OAAjCC,EAAKC,aAAa,YAAuBD,EAAKC,aAAa,WAAa,IAC/F,GAFsC,GAIpCC,EAAgBxE,EAAQiE,iBAC1B,kCAEEQ,EAAiBzE,EAAQiE,iBAC3B,kCAEES,EAAkB1E,EAAQiE,iBAAiB,0BAC3CU,EAAY3E,EAAQuD,cAAc,2BAExCoB,EAAUhB,aAAa,eAAgBa,EAAc1sB,OAAOlE,YAC5D+wB,EAAUhB,aAAa,eAAgBO,EAActwB,YAErD,MAAMgxB,EAAqBJ,EAAc,GACnCK,EAA6BD,EAA0B1J,MAAMiJ,KAAKS,EAAmB7sB,UACtFhE,KAAIgpB,GAAMA,EAAGwH,aAAa,QAC1B7kB,KAAK,KAF8C,GAGpDklB,GACAA,EAAmBjB,aACf,YACA,GAAGgB,EAAUJ,aAAa,SAASM,KAI3Cb,EAAcc,SAAQ,CAACnkB,EAAK7B,KACxB,MAAMimB,EAAgBxqB,EAAKyqB,aACvB9J,MAAMiJ,KAAKO,IACXxpB,IACI,MAAM+pB,EAAU/pB,EAAEqpB,aAAa,MAAMvoB,MAAM,KAC3C,OAAOipB,EAAQA,EAAQntB,OAAS,MAAQgH,EAAQ,GAAGlL,UAAU,IAEjEsH,GAAKA,EAAEqpB,aAAa,QAGxB5jB,EAAIgjB,aAAa,YAAaoB,EAAcrlB,KAAK,KAAK,IAG1DglB,EAAgBI,SAAQI,IACpB,MAAMD,EAAUC,EAAKX,aAAa,MAAMvoB,MAAM,KACxCmpB,GAAgBF,EAAQA,EAAQntB,OAAS,GACzCstB,EAAoB7qB,EAAKyqB,aAC3B9J,MAAMiJ,KAAKM,IACXvpB,IACI,MAAM+pB,EAAU/pB,EAAEqpB,aAAa,MAAMvoB,MAAM,KACrCqpB,GAAsBJ,EAAQA,EAAQntB,OAAS,GAC/CwtB,GAAqBpqB,EAAEqpB,aAAa,WAO1C,OANwBY,IAAiBE,GAErCC,EAAoB,GACpBD,EAAqBF,GACrBE,EAAqBC,EAAoB,GAAKH,CAEW,IAEjEjqB,GAAKA,EAAEqpB,aAAa,QAGxBW,EAAKvB,aAAa,mBAAoByB,EAAkB1lB,KAAK,KAAK,GAE1E,EAEAslB,aAAc,SAASO,EAAKC,EAAWC,GACnC,OAAOF,EAAInB,QACP,CAACC,EAAKC,IAAUkB,EAAUlB,GAAQ,IAAID,EAAKoB,EAAOnB,IAASD,GAC3D,GAER,EAEA7E,YAAa,WACT,IAAIjlB,EAAOtI,KACPshB,EAAahZ,EAAK2C,QAAQqW,WAE9BA,EAAa2H,MAAMC,QAAQ5H,GAAc,CAAErgB,KAAMqgB,GAAeA,EAE5DhZ,EAAKgZ,YAActhB,KAAK2mB,gBACxBre,EAAKgZ,WAAW8G,OAAOhmB,EAAQkG,EAAKqe,iBACpByB,OAAO9lB,EAAUgG,EAAKmrB,kBACtBrL,OAAO/lB,EAAOiG,EAAKorB,gBAEnCprB,EAAKqe,gBAAkBre,EAAKse,QAAQhc,KAAKtC,GACzCA,EAAKmrB,iBAAmBnrB,EAAKqrB,cAAc/oB,KAAKtC,GAChDA,EAAKorB,cAAgBprB,EAAKsrB,OAAOhpB,KAAKtC,IAG1CA,EAAKgZ,WAAajiB,EAAM4B,KAAKmS,kBAAkBzG,OAAO2U,GAC9B1W,KAAKxI,EAAQkG,EAAKqe,iBAClB/b,KAAKtI,EAAUgG,EAAKmrB,kBACpB7oB,KAAKvI,EAAOiG,EAAKorB,cAC7C,EAEAG,QAAS,WACL,IA3oJAC,EADAC,EA4oJW/zB,KACN+tB,QAAQ,GAAGiG,MAAMC,YAAY,0BAA2B50B,EAAM6K,OAAO,SA7oJ1E6pB,EAAY,EAEZG,UAAYA,SAASC,iBACrBL,EAAMI,SAASC,cAAc,QAEzBH,MAAMI,QAAU,oEACpBN,EAAIO,UAAY,SAChBH,SAASI,KAAKC,YAAYT,GAE1BC,EAAYD,EAAIU,YAAcV,EAAIW,YAElCP,SAASI,KAAKI,YAAYZ,IAGvBC,IAgoJP,EAEAnF,YAAa,WACT,IAAItmB,EAAOtI,KACP20B,EAAgBrsB,EAAKslB,sBACrBgH,EAAatsB,EAAKulB,mBAEtBvlB,EAAKurB,UACLvrB,EAAK4nB,qBAAuB5nB,EAAKurB,QAAQjpB,KAAKtC,GAE9CA,EAAKwlB,gBAAgB+G,QAAO,WACxBx1B,EAAMy1B,WAAWH,EAAe30B,KAAK80B,YACrCF,EAAWG,UAAU/0B,KAAK+0B,UAC9B,IAEAH,EAAWhqB,KAAK,iBAAmBjI,EAAK,cAAgBA,EAAI2F,EAAK0sB,aAAapqB,KAAKtC,IACnF7H,EAAEE,QAAQwmB,GAAGjlB,EAASS,EAAI2F,EAAK4nB,qBACnC,EAEA8E,aAAc,SAASrqB,GACnB,IAAIA,EAAE+f,QAAN,CAIA,IAAIuK,EAAQ51B,EAAM61B,YAAYvqB,GAC1BoqB,EAAY/0B,KAAK8tB,gBAAgBiH,YAEjCE,IACAtqB,EAAEwqB,iBACF10B,EAAEkK,EAAEgd,eAAeyN,IAAI,QAAUzyB,GAAI,GAErC3C,KAAK6tB,mBAAmBkH,UAAUA,GAAcE,GAChDj1B,KAAK8tB,gBAAgBiH,UAAUA,GAAcE,GAVjD,CAYJ,EAEAtH,SAAU,WACN,IAAImC,EAAS9vB,KAAKiL,QAAQ6kB,OAE1B9vB,KAAK+tB,QAAU/tB,KAAKymB,QAAQC,SAAS,eACrC,IAAIgM,EAAYjyB,EAAE,4CAA4CT,KAAKytB,mEAAmEztB,KAAKiL,QAAQ+c,SAASgI,gCAC5JhwB,KAAK+tB,QAAQC,OAAO0E,GAEhB5C,GACA9vB,KAAK+tB,QAAQsH,IAAI,SAAUvF,EAEnC,EAEAwF,UAAW,SAAS3I,GACZ3sB,KAAKu1B,UACLv1B,KAAKuwB,iBAAiB5D,EAAQ,CAAE6I,QAAS,iBAEzCn2B,EAAMuB,GAAG60B,SAASz1B,KAAK+tB,QAASpB,EAExC,EAEAiH,OAAQ,WACJ5zB,KAAKs1B,WAAU,EACnB,EAEA3B,cAAe,WACX3zB,KAAKs1B,WAAU,EACnB,EAEArI,kBAAmB,WACf,IAAI3kB,EAAOtI,KACXsI,EAAKylB,QAAQsH,IAAI,CACb,wBAAyBh2B,EAAM6K,OAAO,YAAa5B,EAAKulB,mBAAmBjG,KAAK,sBAAsB,GAAG4M,aACzG,qBAAsBn1B,EAAM6K,OAAO,YAAa5B,EAAKslB,sBAAsBhG,KAAK,sBAAsB,GAAG8N,eAEjH,EAEA1I,iBAAkB,WACd,GAAKhtB,KAAKiL,QAAQ8kB,YAAlB,CAGA,IAAI4F,EAAe31B,KAAK8tB,gBAAgBlG,KAAK,SACzCgO,EAAc51B,KAAK4tB,sBAAsB9nB,SAAS,SAClD+vB,EAAW71B,KAAK6tB,mBAAmB/nB,SAAS,SAEhD6vB,EAAahN,IAAIiN,GAAajN,IAAIkN,GAAUjO,KAAK,OAAOkO,MAAM91B,KAAKiL,QAAQ8kB,YAL3E,CAMJ,EAEAvC,kBAAmB,WACf,IAAIf,EAAezsB,KAAKiL,QAAQwhB,aAC5BA,GACAhsB,EAAEgsB,GAAcsJ,yBAAyB,gBAAiB/1B,KAAKshB,WAEvE,EAEA0U,kBAAmB,SAASvP,GAGxB,OAFAA,EAAUhmB,EAAEgmB,GAELzmB,KAAKi2B,SAASxP,EAAQ5Z,QAAS4Z,EAAQoD,OAAO,MAAMhd,QAC/D,EAEAopB,SAAU,SAAS/lB,EAAamM,GAC5B,IACIC,EACAjY,EAFA6xB,EAAiBl2B,KAAKuuB,gBAI1B,OAAIre,GAAegmB,EAAeC,cAAgBjmB,EAAc,GAC5DmM,GAAY6Z,EAAeE,WAAa/Z,EAAW,EAC5C,MAGXC,EAAYD,EAAW6Z,EAAeC,aAAejmB,EAG9C,CACHmmB,aAHJhyB,EAAW6xB,EAAeI,KAAKha,EAAY,EAAI,EAAIA,IAGzB+Z,YACtBE,SAAUlyB,EAASkyB,SACnBlyB,SAAUA,EAASpD,MAE3B,EAEA2lB,QAAS,WACL,IAAIte,EAAOtI,KAEPshB,EAAahZ,EAAKgZ,WACtB,IAAIhZ,EAAKqB,QAAQ9G,EAAa,CAAEwkB,OAAQ,WAAxC,CAIA,IAAImP,EAAoBn3B,EAAMo3B,iBAAmBp3B,EAAMo3B,iBAAiBxzB,GAAK,KACzEyzB,EAAyBpuB,EAAKylB,QAAQnG,KAAK,gBAAgBN,KAAK,MA0BpE,GAzBAhf,EAAK2lB,eAAe0I,UAAUrV,EAAWzJ,eACzCvP,EAAKslB,sBAAsBrE,KAAKjhB,EAAK2lB,eAAe2I,SAEpDtuB,EAAK+lB,YAAYsI,UAAUrV,EAAWxJ,YACtCxP,EAAKulB,mBAAmBtE,KAAKjhB,EAAK+lB,YAAYuI,SAE9CtuB,EAAKimB,gBAAgBsI,iBAAiB,CAClCC,kBAAmBxuB,EAAK2lB,eAAe8I,iBACvCC,eAAgB1uB,EAAK+lB,YAAY0I,iBACjCE,oBAAqB3uB,EAAK2lB,eAAeiJ,aACzCC,eAAgB7uB,EAAK+lB,YAAY6I,aACjCj2B,KAAMqgB,EAAWvJ,QAGrBzP,EAAKwlB,gBAAgBvE,KAAKjhB,EAAKimB,gBAAgBqI,SAG/CtuB,EAAK0kB,mBACL1kB,EAAK2kB,oBAEL3kB,EAAKgtB,WAAU,GAEfhtB,EAAKqB,QAAQ7G,GACbwF,EAAKwpB,qBAAqBxpB,EAAKylB,QAAQ,IAElCzlB,EAAKmoB,WAAV,CAIA,GAAIiG,GAA0BpuB,EAAKme,QAAQmB,KAAK,IAAI8O,KAA0B7wB,OAAS,EACnFyC,EAAKme,QAAQmB,KAAK,IAAI8O,KAA0BpP,KAAK,WAAY,SAC9D,CACH,MAAMuK,EAAYvpB,EAAKmoB,WAAWjR,MAE9BqS,GACAA,EAAUH,aAAa,WAAY,IAE3C,CAEI8E,GAAgE,GAA3CA,EAAkBlxB,QAAQgD,EAAKmlB,UACpDnlB,EAAKmoB,WAAWlG,aAAajiB,EAAKme,QAAQmB,KAAK,IAAI4O,KAAqB,GAb5E,CA/BA,CA8CJ,IAGJ51B,EAAGw2B,OAAO9K,IACV1rB,EAAGw2B,OAAOlK,IACVtsB,EAAGw2B,OAAO9J,IAEV,IAAI+J,GAAYn2B,EAAOa,OAAO,CAC1BiJ,KAAM,SAASyb,EAASxb,GACpB,IACIqsB,EACAC,EAFAjvB,EAAOtI,KAIXkB,EAAO0S,GAAG5I,KAAKjG,KAAKuD,EAAMme,EAASxb,GAEnCnH,EAA2BzE,EAAMm4B,QAAQC,MAAMnvB,EAAKme,SAAW,iBAAmB,kBAElFne,EAAKilB,cAELjlB,EAAKklB,oBAELllB,EAAKqlB,WACLrlB,EAAKovB,gBAELpvB,EAAK2lB,eAAiBqJ,EAAgB,IAAIK,GAC1CrvB,EAAK+lB,YAAckJ,EAAa,IAAIK,GACpCtvB,EAAKimB,gBAAkB,IAAIsJ,GAE3BvvB,EAAKwvB,aAELxvB,EAAKqsB,cACAhM,IAAIrgB,EAAKssB,YACTzN,GAAG,QAAS,+BAA+B,WACxC,IAGI8H,EAHAJ,EAASpuB,EAAET,MACX+3B,EAAUT,EACVjQ,EAAS,eAETpX,EAAO4e,EAAOvH,KAAKjoB,EAAMioB,KAAK,SAC9B0Q,EAAY,CACZtxB,KAAM,UACNuJ,KAAM1J,KAAKC,MAAMyJ,IAGjB4e,EAAOhF,SAASiF,GAAG,QACnBiJ,EAAUR,EACVlQ,EAAS,YACT2Q,EAAUtxB,KAAO,QAGrB,IAAIjD,EAAWorB,EAAOC,GAAGjrB,GACrB4a,EAAWsZ,EAAQtZ,SAASxO,GAC5BgoB,EAAUxZ,EAAShb,WAAa/C,EAEpCuuB,EAAYxrB,EAAWE,EAAiBZ,EACxCi1B,EAAUE,eAAiBzZ,EAAS0Z,YAAc1Z,EAAS3Y,SAEvDwC,EAAKqB,QAAQslB,EAAW+I,KAI5BD,EAAQtZ,SAASxO,GAAMxM,UAAYA,EACnCpE,EAAMuB,GAAG8C,KAAKmrB,EAAO,CAAEnrB,KAAOD,EAAqCK,EAA1BF,KAEpCH,GAAYw0B,EACb3vB,EAAKgZ,WAAW+F,GAAQ2Q,EAAU/nB,MAElC3H,EAAKse,UAEb,IAEJte,EAAKsmB,cAEDtmB,EAAK2C,QAAQwkB,UACbnnB,EAAKgZ,WAAW1M,QAGpBvV,EAAMwwB,OAAOvnB,EACjB,EAEA6iB,OAAQ,CACJtoB,EACAC,EACAC,EACAY,GAGJsH,QAAS,CACL/G,KAAM,YACNurB,UAAU,EACV2I,aAAa,EACbvQ,YAAY,EACZJ,UAAU,EACVsC,aAAa,EACb+F,OAAQ,KACRC,YAAa,IACbtD,aAAc,GACd0B,qBAAsB,KACtBG,kBAAmB,KACnBG,iBAAkB,KAClBC,kBAAmB,KACnBC,iBAAkB,KAClB3G,SAAU,CACNqQ,cAAe,wBACfC,aAAc,0BACdC,UAAW,0BAInBT,WAAY,WACR,IAAIU,EAAiBx4B,KAAKiL,QAAQkjB,qBAC9BsK,EAAcz4B,KAAKiL,QAAQqjB,kBAC3BoK,EAAe14B,KAAKiL,QAAQwjB,iBAC5BC,EAAoB1uB,KAAKiL,QAAQyjB,kBACjCC,EAAmB3uB,KAAKiL,QAAQ0jB,iBAEpC3uB,KAAKiuB,eAAepH,SAAWxnB,EAAMwnB,SAAS2R,GAAkBz0B,EAAiB,CAAE40B,eAAgBH,IACnGx4B,KAAKuuB,gBAAgBmK,aAAer5B,EAAMwnB,SAAS6R,GAAgBl0B,EAAmB,CAAEm0B,eAAgBD,IACxG14B,KAAKuuB,gBAAgBG,kBAAoBrvB,EAAMwnB,SAAS6H,GAAqBtqB,EAAoB,CAAEu0B,eAAgBjK,IACnH1uB,KAAKuuB,gBAAgBI,iBAAmBtvB,EAAMwnB,SAAS8H,GAAoBpqB,EAAmB,CAAEo0B,eAAgBhK,IAChH3uB,KAAKquB,YAAYxH,SAAWxnB,EAAMwnB,SAAS4R,GAAe10B,EAAiB,CAAE40B,eAAgBF,GACjG,EAEAjL,kBAAmB,WACf,IAAIf,EAAezsB,KAAKiL,QAAQwhB,aAC5BA,GACAhsB,EAAEgsB,GAAcmM,uBAAuB,gBAAiB54B,KAAKshB,WAErE,EAEA0U,kBAAmB,SAASvP,GAGxB,OAFAA,EAAUhmB,EAAEgmB,GAELzmB,KAAKi2B,SAASxP,EAAQ5Z,QAAS4Z,EAAQoD,OAAO,MAAMhd,QAC/D,EAEAopB,SAAU,SAAS/lB,EAAamM,GAC5B,IAGIC,EAHA4Z,EAAiBl2B,KAAKuuB,gBACtBsK,EAAa3C,EAAerc,cAAc3J,GAAe,GACzD4oB,EAAU5C,EAAepc,WAAWuC,GAAY,GAGpD,OAAKwc,GAAeC,GAIpBxc,EAAawc,EAAQjsB,MAAQqpB,EAAelnB,UAAa6pB,EAAWhsB,MAE7D,CACHwpB,YAAawC,EAAWnzB,MACxB6wB,SAAUuC,EAAQpzB,MAClBd,QAASi0B,EAAWj0B,SAAWk0B,EAAQl0B,QACvCP,SAAUrE,KAAKshB,WAAWyX,OAAOzc,KAT1B,IAWf,EAEA6L,cAAe,SAAS7G,GACpBthB,KAAKiL,QAAQqW,WAAaA,EAE1BthB,KAAKutB,cAEDvtB,KAAKg5B,gBACLh5B,KAAKg5B,eAAe7Q,cAAc7G,GAGlCthB,KAAKi5B,YACLj5B,KAAKi5B,WAAW9Q,cAAc7G,GAG9BthB,KAAKk5B,eACLl5B,KAAKk5B,cAAc/Q,cAAc7G,GAGrCthB,KAAKwtB,oBAEDxtB,KAAKiL,QAAQwkB,UACbnO,EAAW1M,OAEnB,EAEA8X,WAAY,SAASzhB,GACjB/J,EAAO0S,GAAG8Y,WAAW3nB,KAAK/E,KAAMiL,GAEhCjL,KAAK83B,YACT,EAEA/kB,QAAS,WACL7R,EAAO0S,GAAGb,QAAQhO,KAAK/E,MAEvBm5B,aAAan5B,KAAKo5B,qBACtB,EAEA7L,YAAa,WACT,IAAIjlB,EAAOtI,KACPshB,EAAahZ,EAAK2C,QAAQqW,WAE9BA,EAAa2H,MAAMC,QAAQ5H,GAAc,CAAErgB,KAAMqgB,GAAeA,EAE5DhZ,EAAKgZ,YAActhB,KAAK2mB,gBACxBre,EAAKgZ,WAAW8G,OAAOhmB,EAAQkG,EAAKqe,iBACpByB,OAAO5lB,EAAY8F,EAAK+wB,oBACxBjR,OAAO9lB,EAAUgG,EAAKmrB,kBACtBrL,OAAO/lB,EAAOiG,EAAKorB,gBAEnCprB,EAAKqe,gBAAkBre,EAAKse,QAAQhc,KAAKtC,GACzCA,EAAKmrB,iBAAmBnrB,EAAKqrB,cAAc/oB,KAAKtC,GAChDA,EAAK+wB,mBAAqB/wB,EAAKgxB,YAAY1uB,KAAKtC,GAChDA,EAAKorB,cAAgBprB,EAAKsrB,OAAOhpB,KAAKtC,IAG1CA,EAAKgZ,WAAajiB,EAAM4B,KAAK+W,gBAAgBrL,OAAO2U,GAC5B1W,KAAKxI,EAAQkG,EAAKqe,iBAClB/b,KAAKtI,EAAUgG,EAAKmrB,kBACpB7oB,KAAKpI,EAAY8F,EAAK+wB,oBACtBzuB,KAAKvI,EAAOiG,EAAKorB,cAC7C,EAEAE,OAAQ,WACJ5zB,KAAKs1B,WAAU,EACnB,EAEA3B,cAAe,WACX3zB,KAAKs1B,WAAU,EACnB,EAEAgE,YAAa,WACTt5B,KAAKiuB,eAAesL,QACpBv5B,KAAKquB,YAAYkL,OACrB,EAEA5L,SAAU,WACN,IAAImC,EAAS9vB,KAAKiL,QAAQ6kB,OAE1B9vB,KAAK+tB,QAAU/tB,KAAKymB,QAAQC,SAAS,WAEjCoJ,GACA9vB,KAAK+tB,QAAQsH,IAAI,SAAUvF,EAEnC,EAEA0J,eAAgB,WACZx5B,KAAKq4B,cAAgB53B,EAAEiC,GAAKgkB,SAAS,8DAErC1mB,KAAKg5B,eAAiBh5B,KAAKy5B,qBAAqBz5B,KAAKq4B,cAAe,CAChEpQ,QAAS,WACTD,SAAU,CACNE,MAAOloB,KAAKiL,QAAQ+c,SAASqQ,gBAGzC,EAEAoB,qBAAsB,SAAShT,EAASxb,GACpC,IAAI4b,EACA6S,EAAe15B,KAAKiL,QAYxB,OAVA4b,EAAW,EAAG2C,WAAUtlB,UAClB,gGAAgG7E,EAAM2nB,WAAW9iB,6DAE5EA,+DAv+JnD,SAAkBslB,EAAUve,EAASyuB,GACjC,IAAIjS,EAAWxc,EAAQwc,SACnBI,EAAa5c,EAAQ4c,WACrBuQ,EAAcsB,EAAatB,YAC3BhyB,EAAS,GAab,OAXIqhB,IACArhB,GAAUojB,EAAW,+BAA+BnqB,EAAMuB,GAAG8C,KAAK8lB,EAAW,gBAAkB,KAG/F3B,GAAcJ,KACdrhB,GAAU,mDAAmD/G,EAAMuB,GAAG8C,KAAK,2BAE3E00B,IACAhyB,GAAU,gDAAgD/G,EAAMuB,GAAG8C,KAAK,eAGrE0C,CACX,CAw9JsBuzB,CAASnQ,EAAUve,EAASyuB,GANP,iBAU5B,IAAIr6B,EAAMuB,GAAG4lB,mBAAmBC,EAAShmB,EAAEsB,OAAO,CACrDuf,WAAYthB,KAAKshB,WACjBuF,SAAUA,EACVI,cAAgBhmB,GAAS,yBAAyBA,WAClD8lB,QAAS/mB,KAAKiL,QAAQmtB,aACvBntB,GACP,EAEA2uB,oBAAqB,WACjB55B,KAAKk5B,cAAgBl5B,KAAKy5B,qBAAqBz5B,KAAKs4B,aAAc,CAC9DhQ,YAAatoB,KAAKu4B,UAClBtQ,QAAS,UACTJ,WAAY7nB,KAAKiL,QAAQ4c,WACzBJ,SAAUznB,KAAKiL,QAAQwc,SACvBO,SAAU,CACNE,MAAOloB,KAAKiL,QAAQ+c,SAASsQ,aAC7BxQ,UAAW9nB,KAAKiL,QAAQ+c,SAASF,aAIzC9nB,KAAKi5B,WAAaj5B,KAAKy5B,qBAAqBz5B,KAAKu4B,UAAW,CACxDjQ,YAAatoB,KAAKs4B,aAClBrQ,QAAS,OACTJ,WAAY7nB,KAAKiL,QAAQ4c,WACzBJ,SAAUznB,KAAKiL,QAAQwc,SACvBO,SAAU,CACNE,MAAOloB,KAAKiL,QAAQ+c,SAASuQ,UAC7BzQ,UAAW9nB,KAAKiL,QAAQ+c,SAASF,YAG7C,EAEA4P,cAAe,WACX,IAAIpvB,EAAOtI,KACP65B,EAAcp5B,EAjyKP,4IAkyKPq5B,EAAgBD,EAAYjS,KAAK,uBACjCmS,EAAiBF,EAAYjS,KAAK,kBAClCoS,EAAcv5B,EAAEiC,GAAKgkB,SAAS,UAElCpe,EAAKkxB,iBACLlxB,EAAKgwB,aAAe73B,EAAEiC,GAAKgkB,SAAS,6DAEpCpe,EAAKiwB,UAAY93B,EAAEiC,GAAKgkB,SAAS,0DACjCpe,EAAKqsB,cAAgBl0B,EAAE,sCACEw5B,KAAK,iCAE9B3xB,EAAKqsB,cAAc9K,SAASwL,IAAI,gBAAiBh2B,EAAMm4B,QAAQzD,aAE/DzrB,EAAKssB,WAAan0B,EAAE,+BACpB6H,EAAK4xB,QAAUz5B,EAAE,kCAEjBq5B,EAAc9L,OAAO1lB,EAAK+vB,eAC1ByB,EAAc9L,OAAO1lB,EAAKiwB,WAC1BuB,EAAc9L,OAAO1lB,EAAKssB,YAE1BoF,EAAYhM,OAAO1lB,EAAKqsB,cAAc9K,UACtCmQ,EAAYhM,OAAO1lB,EAAK4xB,SAExBH,EAAe/L,OAAO1lB,EAAKgwB,cAC3ByB,EAAe/L,OAAOgM,GAEtB1xB,EAAKylB,QAAQC,OAAO6L,GAEpBvxB,EAAK6xB,kBAAoB,IAAI96B,EAAM+6B,IAAIC,KAAK/xB,EAAKqsB,cAAc,IAC/DrsB,EAAKgyB,eAAiB,IAAIj7B,EAAM+6B,IAAIC,KAAK/xB,EAAKssB,WAAW,IACzDtsB,EAAKiyB,YAAc,IAAIl7B,EAAM+6B,IAAIC,KAAK/xB,EAAK4xB,QAAQ,IAEnD5xB,EAAKsxB,qBACT,EAEAtE,UAAW,SAAS3I,GAChBttB,EAAMuB,GAAG60B,SAASz1B,KAAK+tB,QAASpB,EACpC,EAEAkH,QAAS,WACD7zB,KAAKk6B,QAAQ,GAAGM,aAChBx6B,KAAKy6B,oBACLz6B,KAAK06B,qBACL16B,KAAKgtB,mBACLhtB,KAAK26B,oBACL36B,KAAK46B,sBAEb,EAEAA,oBAAqB,WACjB,IAAIhF,EAAc51B,KAAK20B,cAAc7uB,SAAS,SAEzCzG,EAAMm4B,QAAQqD,QAAQC,UAI3B3B,aAAan5B,KAAKo5B,sBAElBxD,EAAYP,IAAI,eAAgB,QAEhCr1B,KAAKo5B,qBAAuB5H,YAAW,WACnCoE,EAAYP,IAAI,eAAgB,GACpC,IACJ,EAEAoF,kBAAmB,WACf,IAEI3E,EAFAlB,EAAa50B,KAAK40B,WAClBmG,EAAanG,EAAW/K,OAAO,uBAAuBiM,MAAMrzB,GAGhEqzB,EAAQpZ,KAAKjS,IAAIrJ,EAAWpB,KAAKq4B,eAAgBj3B,EAAWpB,KAAKu4B,YACjEzC,EAAQpZ,KAAKjS,IAAImqB,EAAW9uB,SAAS,SAASgwB,QAASA,GAEvDiF,EAAWjF,MAAMA,EACrB,EAEA4E,mBAAoB,WAChB,IAAIM,EAAsBh7B,KAAKq4B,cAAcvI,OAAOrtB,GAAMqtB,SACtDmL,EAAqBj7B,KAAKs4B,aAAaxI,OAAOrtB,GAAMqtB,SACpDoL,EAAkBl7B,KAAKu4B,UAAUzI,OAAOrtB,GAAM04B,cAC9CC,EAAgBp7B,KAAK20B,cAAc7E,OAAOrtB,GAAM04B,cAEhDE,EAAUH,EAAkBl7B,KAAKu4B,UAAUzI,SAE3CwL,EAAiBL,EAAqBD,EAAsBC,EAAqBD,EACjFO,EAAkBH,EAAgBF,EAAkBE,EAAgBF,EAExEl7B,KAAKq4B,cAAcvI,OAAOwL,GAC1Bt7B,KAAKs4B,aAAaxI,OAAOwL,GACzBt7B,KAAKu4B,UAAUzI,OAAOyL,EAAkBF,GACxCr7B,KAAK20B,cAAc7E,OAAOyL,EAC9B,EAEAvO,iBAAkB,WACd,IAAI2I,EAAe31B,KAAKk6B,QAAQtS,KAAK,SACjCgO,EAAc51B,KAAK20B,cAAc7uB,SAAS,SAI1C01B,EAFY7F,EAAa7vB,SAAS,YAAYA,WAAWD,OAE3B7F,KAAKiL,QAAQ8kB,YAC3C0L,EAAW/e,KAAKgf,KAAMF,EAAkBx7B,KAAKk6B,QAAQpE,QAAW,KAEhE2F,EAAW,MACXA,EAAW,KAGf9F,EAAahN,IAAIiN,GAAaP,IAAI,QAASoG,EAAW,KAEtDz7B,KAAK27B,cAAc/F,EACvB,EAEA+E,kBAAmB,WACf,IAAIryB,EAAOtI,KACPk6B,EAAU5xB,EAAK4xB,QACftF,EAAatsB,EAAKssB,WAClBuG,EAAc7yB,EAAKylB,QAAQoN,cAC3BpH,EAAY10B,EAAMm4B,QAAQzD,YAC1B6H,EAAgB1B,EAAQ,GAAGxE,eAAiBwE,EAAQ,GAAG2B,aACvD/L,EAASxnB,EAAK2C,QAAQ6kB,OAE1B,GAAIxnB,EAAKylB,QAAQe,GAAG,YAAa,CAC7B,IAAKqM,IAAgBrL,EAOjB,OANI8L,IACA7H,EAAY,GAGhBmG,EAAQpK,OAAO,aACf8E,EAAW9E,OAAOoK,EAAQpK,SAAWiE,GAIzCoH,GAAe75B,EAAYgH,EAAKgwB,eAChC6C,GAAe75B,EAAYgH,EAAKqsB,cAAc9K,YAEf,EAAZkK,IACfoH,EAA0B,EAAZpH,EAAgB,EACzB6H,IACDT,GAAepH,IAIvBmG,EAAQpK,OAAOqL,GAEXS,IACA7H,EAAY,GAGhBa,EAAW9E,OAAOqL,EAAcpH,EACpC,CACJ,EAEA4H,cAAe,SAAS/F,GACpB,IAAIttB,EAAOtI,KACPizB,EAAO2C,EAAY9vB,SAAS,SAASA,WAAW0Z,QAAQ1Z,WAAW0Z,QAEnElX,EAAKwzB,WAAap7B,IAClB4H,EAAKwzB,SAAW7I,EAAK3L,KAAK,YAG9B2L,EAAK3L,KAAK,UAAW,GAErB6R,aAAa7wB,EAAKyzB,gBAElBzzB,EAAKyzB,eAAiBvK,YAAW,WAC7ByB,EAAK3L,KAAK,UAAWhf,EAAKwzB,UAC1BxzB,EAAKwzB,SAAWp7B,CACpB,GACJ,EAEAs7B,cAAe,SAASt1B,GACpB,IAAIN,EAAS,GACTkb,EAAathB,KAAKshB,WAClB3a,EAAW2a,EAAW3a,WACtBs1B,EAAat1B,EAASd,OAAS,GAAMc,EAAS,IAAMA,EAAS,GAAG1B,KAQpE,OANIqc,EAAW9P,iBAAmB9K,IACI,IAA9B4a,EAAW5a,KAAQb,QAAgBo2B,KACnC71B,EAASO,GAIVP,CACX,EAEA8I,MAAO,WACH,MAAO,EACX,EAEA0X,QAAS,WACL,IAUIsV,EACAluB,EAXA1F,EAAOtI,KACPshB,EAAahZ,EAAKgZ,WAElB7O,EAAO6O,EAAW7O,OAClB3C,GAAW2C,EAAK3C,SAAW,CAAC,GAAG3J,QAAU,GACzCwL,GAAQc,EAAKd,MAAQ,CAAC,GAAGxL,QAAU,GAEnCmxB,EAAgBhvB,EAAK2lB,eACrBsJ,EAAajvB,EAAK+lB,YAKtB,IAAI/lB,EAAKqB,QAAQ9G,EAAa,CAAEwkB,OAAQ,WAAxC,CA0BA,GAtBAiQ,EAAc3wB,SAAW2B,EAAK0zB,cAr+Kf,WAs+KfzE,EAAW5wB,SAAW2B,EAAK0zB,cAv+Kf,QAy+KZ1zB,EAAK6xB,kBAAkBgC,OAAO7E,EAAcV,MAAM9mB,IAClDxH,EAAKgyB,eAAe6B,OAAO5E,EAAWX,MAAMjlB,IAE5CuqB,EAAa,CACT5d,QAASgZ,EAAc8E,SACvBz1B,SAAU2wB,EAAc3wB,SACxB8X,SAAU6Y,EAAc7Y,UAG5BzQ,EAAU,CACNsQ,QAASiZ,EAAW6E,SACpBz1B,SAAU4wB,EAAW5wB,SACrB8X,SAAU8Y,EAAW9Y,UAGzBnW,EAAKiyB,YAAY4B,OAAO7zB,EAAKimB,gBAAgBqI,MAAMtV,EAAWyX,OAAQmD,EAAYluB,IAElF1F,EAAKurB,UAEDvrB,EAAK+zB,cACL/zB,EAAK+zB,cAAcC,qBAChB,CACH,IAAID,EAAgBh9B,EAAMg9B,cAAc/zB,EAAK4xB,SAEzCmC,GAAiBA,EAAcE,UAC/Bj0B,EAAK+zB,cAAgBA,EAErBA,EAAcE,QAAQ3xB,KAAK,UAAU,SAASD,GAC1CtL,EAAMy1B,WAAWxsB,EAAKqsB,eAAgBhqB,EAAE6xB,OAAOC,GAC/Cn0B,EAAKssB,WAAWG,WAAWpqB,EAAE6xB,OAAOE,EACxC,IAER,CAEAp0B,EAAKgtB,WAAU,GAEfhtB,EAAKqB,QAAQ7G,EAzCb,CA0CJ,EAEA8rB,YAAa,WACT,IAAItmB,EAAOtI,KACP20B,EAAgBrsB,EAAKqsB,cACrBC,EAAatsB,EAAKssB,WAEtBtsB,EAAK4xB,QAAQ/S,GAAG,UAAU,WACtB9nB,EAAMy1B,WAAWH,EAAe30B,KAAK80B,YACrCF,EAAWG,UAAU/0B,KAAK+0B,UAC9B,IAEAH,EAAWzN,GAAG,iBAAmBxkB,EAAK,cAAgBA,EAAI2F,EAAK0sB,aAAapqB,KAAKtC,GACrF,EAEA0sB,aAAc,SAASrqB,GACnB,IAAIA,EAAE+f,QAAN,CAIA,IAAIuK,EAAQ51B,EAAM61B,YAAYvqB,GAC1BoqB,EAAY/0B,KAAKk6B,QAAQnF,YAEzBE,IACAtqB,EAAEwqB,iBAEF10B,EAAEkK,EAAEgd,eAAeP,QAAQ,kBAAkBgO,IAAI,QAAUzyB,GAAI,GAE/D3C,KAAK40B,WAAWG,UAAUA,GAAcE,GACxCj1B,KAAKk6B,QAAQnF,UAAUA,GAAcE,GAXzC,CAaJ,IAGAxO,GAAUpnB,EAAM+6B,IAAI3T,QACpBkW,GAAWt9B,EAAM+6B,IAAI7Q,KAErBqT,GAAiB,SAAS7wB,EAAUoS,GACrC,MAAO,CACFga,YAAa,EACbryB,SAAU,EACV+2B,WAAY,EACZ92B,QAAS,EACTY,SAAU,EACVoF,SAAUA,EACViU,aAA4B,IAAd7B,EAEtB,EAEIlY,GAAY,SAASP,EAAOmH,GAI5B,IAHA,IAAIoD,EAAO,GACPrK,EAAM,EAEHA,GAAOiH,EAAOjH,IACjBqK,EAAK3J,KAAKZ,EAAMK,QAAQH,GAAK1B,MAGjC,OAAO+L,CACX,EAEIsO,GAAY,SAAS7Y,EAAOmH,GAI5B,IAHA,IAAI3I,EAAO,GACP0B,EAAM,EAEHA,GAAOiH,EAAOjH,IACjB1B,GAAQwB,EAAMK,QAAQH,GAAK1B,KAG/B,OAAOA,CACX,EAEIsqB,GAAmBztB,EAAMgB,OAAO,CAChCiJ,KAAM,SAASC,GACXjL,KAAKyuB,iBAAmBpvB,EAAMwnB,SAAS5b,EAAQwjB,kBAC/CzuB,KAAK0uB,kBAAoBrvB,EAAMwnB,SAAS5b,EAAQyjB,mBAChD1uB,KAAK2uB,iBAAmBtvB,EAAMwnB,SAAS5b,EAAQ0jB,kBAC/C3uB,KAAK2G,SAAWsE,EAAQtE,SACxB3G,KAAKouB,OAASnjB,EAAQmjB,OACtBpuB,KAAKs2B,KAAO,EAChB,EAEAO,iBAAkB,SAAS5rB,GACvBjL,KAAKiB,KAAOgK,EAAQhK,KACpBjB,KAAK82B,kBAAoB7rB,EAAQ6rB,kBACjC92B,KAAKg3B,eAAiB/rB,EAAQ+rB,eAC9Bh3B,KAAKi3B,oBAAsBhsB,EAAQgsB,oBACnCj3B,KAAKm3B,eAAiBlsB,EAAQksB,eAC9Bn3B,KAAKs2B,KAAKzwB,OAAS,CACvB,EAEAi3B,eAAgB,SAASpyB,GAGrB,IAFA,IAAI6e,EAAO,GAEF1c,EAAQ,EAAGA,EAAQnC,EAAOmC,IAC/B0c,GAAQ,QAGZvpB,KAAK+8B,MAAMnV,KAAK,YAAYoG,OAAOzE,EACvC,EAEAyT,eAAgB,SAAS/7B,GAKrB,IAJA,IAEIyN,EADA4lB,EADOt0B,KACK+8B,MAAMnV,KAAK,SAGlB/a,EAAQ,EAAGA,EAAQ5L,EAAK4E,OAAQgH,IACrC6B,EAAMjO,EAAE,2DACR6zB,EAAKtG,OAAOtf,GANL1O,KAOFi9B,aAAavuB,EAAKzN,EAAK4L,GAAQA,GAGxC7M,KAAKo2B,UAAYn1B,EAAK4E,MAC1B,EAEAq3B,aAAc,SAASjK,EAAMhoB,GAEzB,IAAIkyB,EAEJ,MAAMC,EAAcnK,EAAKoD,YAAYtwB,QAC/Bs3B,EAAcD,EAAYA,EAAYv3B,OAAS,GAC/CjB,EALO5E,KAKQ2G,UALR3G,KAKyB2G,SAASihB,MAAMhjB,GAAYA,EAAQV,OAASm5B,EAAYn5B,OACxFo5B,EAA0B,OAAdrK,EAAKhyB,KAAgBgyB,EAAKhyB,KAAKqD,MAAQ2uB,EAAKhyB,KAE1D2D,GAAWA,EAAQK,OACnBk4B,EAAcv4B,EAAQK,MAG1B,IAAI4hB,EAAW7mB,KAAKyuB,iBACpB,GAAIzuB,KAAK2G,UAAYw2B,GAA6B,KAAdG,EAIhC,OAHKryB,EAAQ5G,WACT4G,EAAQ5G,SAAW,CAAEC,MAAO0D,MAAMwT,OAAO8hB,IAAcA,EAAY9hB,OAAO8hB,KAEtEH,GACJ,IAAK,SACHtW,EAAW7mB,KAAK0uB,kBAChB,MACF,IAAK,QACH7H,EAAW7mB,KAAK2uB,iBAK1B,OAAO9H,EAAS5b,EAEpB,EAEAgyB,aAAc,SAASM,EAAOC,EAASnhB,GAEnC,IADA,IACSxP,EAAQ,EAAGA,EAAQ2wB,EAAQ3X,MAAMhgB,OAAQgH,IAAS,CACvD,IAAIomB,EAAOuK,EAAQ3X,MAAMhZ,GACzB,GAAIomB,EAAM,CACN,IAAIwK,EAASh9B,EAAE,WAJZT,KAI4BouB,eAAe/R,EAAW,KAAKxP,EAAQ,sDAClE7M,KAAKg3B,eAAe3a,GAAUqhB,OAAS19B,KAAK82B,kBAAkBjqB,GAAO6wB,QACrED,EAAO/W,SAAS,qBAGpB+W,EAAOzP,OATJhuB,KASgBk9B,aAAajK,EAAM,CAClC5uB,SAAU4uB,EAAKhyB,KACfs1B,SAAUtD,EAAKsD,SACfF,YAAapD,EAAKoD,eAEtBr2B,KAAKs2B,KAAKhwB,KAAK2sB,GACfsK,EAAMvP,OAAOyP,EACjB,CACJ,CACJ,EAEA7G,MAAO,WACH,IAAI31B,EAAOV,EAAmCo9B,GAAG39B,KAAKiB,MAAQ,IAAImE,QAASpF,KAAK82B,kBAAmB92B,KAAKg3B,eAAgBh3B,KAAKi3B,oBAAqBj3B,KAAKm3B,gBACnJ7uB,EAAOtI,KAEP+8B,EAAQt8B,EAAE,mJAQd,OANA6H,EAAKy0B,MAAQA,EACbz0B,EAAKw0B,eAAe98B,KAAK82B,kBAAkBjxB,QAC3CyC,EAAK00B,eAAe/7B,GACpBjB,KAAKo2B,UAAYn1B,EAAK4E,OACtB7F,KAAKm2B,aAAen2B,KAAK82B,kBAAkBjxB,OAEpCyC,EAAKy0B,KAChB,IAGA7O,GAAmBntB,EAAMgB,OAAO,CAChCiJ,KAAM,SAASC,GACXjL,KAAKmG,OAAS8E,EAAQ9E,OACtBnG,KAAKyS,KAAOxH,EAAQwH,KACpBzS,KAAKouB,OAASnjB,EAAQmjB,OACtBpuB,KAAK49B,eAAiBv+B,EAAMwnB,SAAS7jB,GACrChD,KAAKwvB,YAAc,CAAC,EAChBvkB,EAAQ4b,WACR7mB,KAAK6mB,SAAWxnB,EAAMwnB,SAAS5b,EAAQ4b,UAE/C,EAEA8P,UAAW,SAASxwB,GAChBnG,KAAKmG,OAASA,CAClB,EAEA22B,eAAgB,SAASpyB,GAGrB,IAFA,IAAI6e,EAAO,GAEF1c,EAAQ,EAAGA,EAAQnC,EAAOmC,IAC/B0c,GAAQ,QAGZvpB,KAAK+8B,MAAMnV,KAAK,YAAYoG,OAAOzE,EACvC,EAEAyT,eAAgB,SAASa,GAKrB,IAJA,IAEInvB,EADA4lB,EADOt0B,KACK+8B,MAAMnV,KAAK,SAGlB/a,EAAQ,EAAGA,EAAQgxB,EAAiBh4B,OAAQgH,IACjD6B,EAAMjO,EAAE,gDACR6zB,EAAKtG,OAAOtf,GANL1O,KAOFi9B,aAAavuB,EAAKmvB,EAAiBhxB,GAAQA,EAExD,EAEAixB,eAAgB,SAASzhB,EAAU4W,EAAM8K,GAGjC9K,EAAKnnB,UAAUkyB,MAFH,iBAGZ/K,EAAKhvB,QAAUgvB,EAAKhvB,QAAQoe,eAG3BriB,KAAKwvB,YAAYnT,GAGlBrc,KAAKwvB,YAAYnT,GAAUvW,SAASQ,KAAK2sB,GAFzCjzB,KAAKwvB,YAAYnT,GAAY,CAAEvW,SAAU,CAACmtB,GAAOxM,QAASsX,EAIlE,EAEAd,aAAc,SAASM,EAAOC,EAASnhB,GAKnC,IAJA,IACIohB,EACAxK,EAFA3qB,EAAOtI,KAIF6M,EAAQ,EAAGA,EAAQ2wB,EAAQ3X,MAAMhgB,OAAQgH,IAE9C,GADAomB,EAAOuK,EAAQ3X,MAAMhZ,GACX,CACN7M,KAAK89B,eAAezhB,EAAU4W,EAAMsK,GACpC,MAAM95B,EAAWwvB,EAAKntB,UAAYmtB,EAAKntB,SAASD,OAAS,EACzD43B,EAASh9B,EAAE6H,EAAKs1B,eAAe,CAC3B36B,GAAI,GAAGqF,EAAK8lB,UAAuB,WAAb9lB,EAAKmK,KAAoB,KAAO,QAAQ4J,EAAW,KAAKxP,EAAQ,IACtFxJ,QAAS4vB,EAAKgL,QACd76B,QAAS6vB,EAAKiL,QACdh7B,IAAK+vB,EAAKhjB,KAAKxC,KAAK,MAAQwlB,EAAKyK,MAAQ,WAAa,IACtDn6B,UAAY0vB,EAAKntB,UAAYmtB,EAAKntB,SAASD,OAAU,KAAO,OAC5DvC,WAAY2vB,EAAKjnB,cAAgBinB,EAAKyK,MACtCj6B,SAAUA,EAAW,OAAS,QAC9BN,YAAa9D,EAAM6K,OAAO,yBAA0B+oB,EAAKyK,MAAQ,4BAA8B,GAAsB,IAAlBzK,EAAKlnB,SAAiB,2BAA6B,IACtJvI,KAAmB,WAAb8E,EAAKmK,KAAoB,eAAiB,eAEhDhP,GACAg6B,EAAO/W,SAAS,wBAGpB,MAAMyX,EAAsB,0CAA0ClL,EAAKhvB,iBAE3Ew5B,EAAOzP,OAAO1lB,EAAKue,SAAWve,EAAKue,SAAS,CAAE7iB,OAAQivB,IAAUkL,GAChEZ,EAAMvP,OAAOyP,EACjB,CAER,EAEA7G,MAAO,WACH,IAAIxH,EAAO7uB,EAAmCwG,GAAG/G,KAAKmG,QAAU,IAAIf,SAChEg5B,EAAwB,WAAbp+B,KAAKyS,KAAoBlS,EAAmC8F,EAAE+oB,GAAQ7uB,EAAmC2gB,EAAEkO,GACtHiP,EAAaD,EAAS,GACtBE,EAAcF,EAAS,GACvBG,EAAUH,EAAS,GACnBI,EAAmBJ,EAAS,GAC5B91B,EAAOtI,KACXsI,EAAKm2B,MAAQrP,EACb9mB,EAAKo2B,SAAWH,EAChBj2B,EAAKq2B,aAAeL,EAEpB,IAAIvB,EAAQt8B,EAAE,+IAMd,OAJA6H,EAAKy0B,MAAQA,EACbz0B,EAAKw0B,eAA4B,WAAb98B,KAAKyS,KAAoB6rB,EAAYz4B,OAAS24B,GAClEl2B,EAAK00B,eAAeqB,GAEb/1B,EAAKy0B,KAChB,EAEA1N,QAAS,WACL,OAAOrvB,KAAKy+B,KAChB,EAEAvH,WAAY,WACR,OAAOl3B,KAAK0+B,QAChB,EAEA3H,eAAgB,WACZ,OAAO/2B,KAAK2+B,YAChB,IAGAhH,GAAgB52B,EAAMgB,OAAO,CAC7BiJ,KAAM,WACFhL,KAAK2G,SAAW,EAChB3G,KAAKye,SAAW,CAAC,CACrB,EAEAmY,MAAO,SAASzwB,GACZ,IAAIy4B,EAAQ5+B,KAAK6+B,OAAO14B,GACpB24B,EAAW9+B,KAAK++B,YAEpB,MAAO,CACHtY,GAAQ,QAAS,CAAE4G,UAAW3oB,GAA2B,CAACo6B,EAAUF,IAE5E,EAEArF,MAAO,WACHv5B,KAAKye,SAAW,CAAC,CACrB,EAEAsgB,UAAW,WAKP,IAJA,IAAIl5B,EAAS7F,KAAKg/B,aACdl5B,EAAW,GACXF,EAAM,EAEHA,EAAMC,EAAQD,IACjBE,EAASQ,KAAKmgB,GAAQ,MAAO,OAGjC,OAAOA,GAAQ,WAAY,KAAM3gB,EACrC,EAEA+4B,OAAQ,SAAS14B,GACb,IAAIqF,EAAOrF,EAAO,GAelB,OAbAnG,KAAK8B,IAAM,CAAC,EACZ9B,KAAK2R,KAAO,GACZ3R,KAAKyF,UAAY+F,EAEjBxL,KAAKo8B,SAAW,GAEZ5wB,GACAxL,KAAKi/B,WAAWzzB,EAAM,GACtBxL,KAAKk/B,cAELl/B,KAAK2R,KAAKrL,KAAKmgB,GAAQ,KAAM,CAAE4G,UAAW3oB,GAAwB,CAAE+hB,GAAQ,KAAM,CAAE4G,UAAW3oB,GAAuB,CAAEi4B,GAAS,eAG9HlW,GAAQ,QAAS,CAAE4G,UAAW3oB,GAAqB1E,KAAK2R,KACnE,EAEAutB,WAAY,WAWR,IAVA,IAGIxwB,EAEAywB,EACAC,EACAvZ,EACAoN,EARAthB,EAAO3R,KAAK2R,KACZ4I,EAAa5I,EAAK9L,OAClBgM,EAAS,EAQNA,EAAS0I,EAAY1I,IAGxB,GAAoB,KAFpBnD,EAAMiD,EAAKE,IAEHosB,QASR,IAHAmB,EAAU,EACVD,GAHAtZ,EAAQnX,EAAI5I,UAGQD,OAEbu5B,EAAUD,EAAaC,KAC1BnM,EAAOpN,EAAMuZ,IAEJC,WACLpM,EAAK3L,KAAK2W,QAAUvvB,EAAIuvB,QAIxC,EAEAqB,UAAW,SAAS5wB,GAKhB,IAJA,IAAIiD,EAAO3R,KAAK2R,KACZ9L,EAAS8L,EAAK9L,OACdD,EAAM,EAEHA,EAAMC,GACL8L,EAAK/L,KAAS8I,EADD9I,KAMrB,OAAOA,CACX,EAEAo5B,WAAY,WACR,IAAInZ,EAAQ7lB,KAAK2R,KAAK,GAAK3R,KAAK2R,KAAK,GAAG7L,SAAW,GAC/CD,EAASggB,EAAMhgB,OACfmJ,EAAY,EACZpJ,EAAM,EAEV,GAAIC,EACA,KAAOD,EAAMC,EAAQD,IACjBoJ,GAAa6W,EAAMjgB,GAAK0hB,KAAK4W,SAAW,EAQhD,OAJKlvB,IACDA,EAAYhP,KAAK2G,UAGdqI,CACX,EAEAuwB,KAAM,SAAS75B,EAAOyY,EAAW6B,GAC7B,IAIIwf,EACA15B,EALAkb,EAAWhhB,KAAKyF,UAAUM,QAAQoY,GAAWja,KAC7C6H,EAAWrG,EAAMK,QAAQoY,GAAWpS,SACpC0zB,EAASze,EAAWjV,EACpBjK,EAAM9B,KAAK8B,IAIX4M,EAAM5M,EAAI29B,GAkCd,OAhCK/wB,GAuBDA,EAAIgxB,UAAW,EAEVhxB,EAAIsR,cAAgBtR,EAAIsR,eAAiBA,IAC1CtR,EAAIsR,aAAeA,EACnBtR,EAAIixB,UAAY,EAChBjxB,EAAIwvB,QAAU,MA3BlBxvB,EAAM+X,GAAQ,KAAM,CAAE4G,UAAW3oB,GAAwB,KAErDsb,aAAeA,EACnBtR,EAAIixB,UAAY,EAChBjxB,EAAIwvB,QAAU,EACdxvB,EAAIuvB,QAAU,EAEdn8B,EAAI29B,GAAU/wB,GACd8wB,EAAY19B,EAAIkf,GAAYxF,OAAOzP,GAAY,QAG3CjG,EAAW05B,EAAU15B,UAER,KAAuD,IAAjDA,EAAS,GAAGwhB,KAAK+F,UAAU/nB,QAAQ,SAClDoJ,EAAIgxB,UAAW,EAEfhxB,EAAIgxB,SAAWF,EAAUE,UAIjC1/B,KAAK2R,KAAKkM,OAAO7d,KAAKs/B,UAAUE,GAAa,EAAG,EAAG9wB,IAWhDA,CACX,EAEA0F,UAAW,SAASzN,EAAUjB,EAAO2nB,GACjC,IAEIzoB,EAFA9C,EAAM9B,KAAK8B,IACX4M,EAAM5M,EAAI89B,WAGTlxB,IACDA,EAAM+X,GAAQ,KAAM,CAAE4G,UAAW3oB,GAAwB,IACzD5C,EAAI89B,WAAalxB,EACjB1O,KAAK2R,KAAKrL,KAAKoI,IAGnB,IAAK,IAAI9I,EAAM,EAAGC,EAASc,EAASd,OAAQD,EAAMC,EAAQD,IACtDhB,EAAU+B,EAASf,GACnB8I,EAAI5I,SAASQ,KAAKtG,KAAK6/B,MAAOxS,GAAa,GAAK,CAACrtB,KAAK8/B,SAASl7B,EAASc,IAASd,IAGrF,OAAOiB,CACX,EAEAi6B,SAAU,SAAS97B,EAAQ0B,GACvB,OAAOi3B,GAAS38B,KAAK6mB,SAAS,CAC1B7iB,OAAQA,EACR0B,MAAOA,KACP,EACR,EAEAm6B,MAAO,SAASxS,EAAWvnB,EAAU9B,GACjC,IAAIivB,EAAOxM,GAAQ,KAAM,CAAE4G,UAAW3oB,EAAqB,IAAM2oB,GAAavnB,GAE9E,OADAmtB,EAAK3uB,MAAQN,EAAOC,SAAWD,EAAOE,KAC/B+uB,CACX,EAEAgM,WAAY,SAASv5B,EAAOyY,EAAW6B,GACnC,IAIItR,EAAKqxB,EAAUj6B,EAAUk6B,EACzB/M,EAAMgN,EAENhwB,EAGAwO,EAEAyf,EAZAn4B,EAAUL,EAAMK,QAChB/B,EAAS+B,EAAQoY,GACjB+hB,EAAan6B,EAAQoY,EAAY,GAIjCgiB,EAAe,GAGfv6B,EAAM,EAIN+5B,EAAY,EACZS,EAAkB,EAEtB,IAAIp8B,EAAOY,QAAX,CAsBA,GAjBAqL,EAAO5Q,EAAM2G,UAAUC,GAAUP,EAAOyY,IACxCzP,EAAM1O,KAAKu/B,KAAK75B,EAAOyY,EAAW6B,GAGlCggB,GADAl6B,EAAW9B,EAAO8B,UACQD,QAE1B4Y,EAAWze,KAAKye,SAASxO,MAErBjQ,KAAKye,SAASxO,GAAQwO,EAAWme,GAAephB,OAAOxX,EAAO+H,UAAWoS,GACzEM,EAAS4hB,aAAe7kB,OAAOxb,KAAKyF,UAAUM,QAAQoY,GAAWpS,WAGrE/L,KAAKo8B,SAAS91B,KAAK,CACf2J,KAAMA,EACNvK,MAAOA,IAGP1B,EAAOgI,YAAa,EACM,IAAtByS,EAAShb,WACTk8B,EAAYlhB,EAAS0Z,YACrBzpB,EAAIixB,WAAaA,EAEjBlhB,EAAS3Y,SAAW,EACpBk6B,EAAiB,GAGrB,IAAIM,EAAa7/B,EAAE,iBACnB6/B,EAAWhZ,KAAKjoB,EAAMioB,KAAK,QAASrX,GAEpCkwB,EAAa75B,KAAKjH,EAAM+6B,IAAI7Q,KAAKlqB,EAAMuB,GAAG8C,KAAK48B,EAAY,CAAE58B,KAAMs8B,EAAiBp8B,EAA0BE,KAA6B,GAC/I,CAQA,GANAq8B,EAAa75B,KAAKtG,KAAK8/B,SAAS97B,EAAQ0B,IACxCutB,EAAOjzB,KAAK6/B,MAAOnxB,EAAIgxB,SAAW,WAAa,GAAKS,EAAcn8B,GAElE0K,EAAI5I,SAASQ,KAAK2sB,GAClBvkB,EAAIwvB,SAAW,EAEX8B,EAAgB,CAIhB,IAHAC,EAAUjgC,KAAK6/B,MAAM,SAAU,CAAC7/B,KAAK8/B,SAAS97B,EAAQ0B,IAAS1B,GAC/D0K,EAAI5I,SAASQ,KAAK25B,GAEXr6B,EAAMo6B,EAAgBp6B,IACzBm6B,EAAW//B,KAAKi/B,WAAWn5B,EAASF,GAAMuY,EAAWna,GAGzDk6B,EAAU6B,EAAS7B,QACnByB,EAAYI,EAASJ,UAErB1M,EAAK3L,KAAK4W,QAAUA,EAEpBzf,EAAS3Y,SAAWo4B,EACpBzf,EAAS1Y,QAAU,EAEnB2I,EAAIwvB,SAAWA,EACfxvB,EAAIixB,WAAaA,EACjBjxB,EAAIuvB,QAAU8B,EAAS9B,QAAU,EAE7BiC,IACIA,EAAWt7B,QACXs5B,EAAUl+B,KAAKoU,UAAU8rB,EAAWp6B,SAAUJ,EAAO,WAGrDw4B,GADA6B,EAAW//B,KAAKi/B,WAAWv5B,EAAOyY,EAAY,IAC3B+f,QAEnBxvB,EAAIixB,WAAaI,EAASJ,UAC1BS,EAAkBL,EAASJ,WAG/BM,EAAQ3Y,KAAK4W,QAAUA,EACvBA,GAAW,EAEXzf,EAAS1Y,SAAWm4B,EACpBxvB,EAAIwvB,SAAWA,EAEvB,MAAWgC,IACHA,EAAWt7B,QACXs5B,EAAUl+B,KAAKoU,UAAU8rB,EAAWp6B,SAAUJ,IAG9Cw4B,GADA6B,EAAW//B,KAAKi/B,WAAWv5B,EAAOyY,EAAY,IAC3B+f,QAEnBxvB,EAAIixB,WAAaI,EAASJ,UAC1BS,EAAkBL,EAASJ,WAG/BlhB,EAAS1Y,QAAUm4B,EAEfA,EAAU,IACVjL,EAAK3L,KAAK4W,QAAUA,EACpBxvB,EAAIwvB,SAAWA,EAAU,IAgBjC,OAZIzf,EAASoe,WAAcpe,EAAS1Y,QAAUq6B,IAC1C3hB,EAASoe,WAAape,EAAS1Y,QAAUq6B,GAG7Ct6B,EAAW2Y,EAAS3Y,SAAW65B,EAE3BlhB,EAAS0Z,YAAcryB,IACvB2Y,EAAS0Z,YAAcryB,IAG1Bm6B,GAAWhN,GAAMoM,UAAW,EAEtB3wB,CA5GP,CAFI1O,KAAKoU,UAAUpQ,EAAO8B,SAAUJ,EA+GxC,IAGAkyB,GAAa72B,EAAMgB,OAAO,CAC1BiJ,KAAM,WACFhL,KAAKye,SAAW,CAAC,CACrB,EAEAmY,MAAO,SAASzwB,GACZ,IAAIy4B,EAAQ5+B,KAAK6+B,OAAO14B,GACpB24B,EAAW9+B,KAAK++B,YAEpB,MAAO,CACHtY,GAAQ,QAAS,CAAE4G,UAAW3oB,GAAqB,CAACo6B,EAAUF,IAEtE,EAEArF,MAAO,WACHv5B,KAAKye,SAAW,CAAC,CACrB,EAEAugB,WAAY,WAOR,IANA,IAAIl5B,EAAW9F,KAAK2R,KAAK,GAAG7L,SACxBD,EAAS,EACTD,EAAM,EAENqtB,EAAOntB,EAASF,GAEbqtB,GACHptB,GAAWotB,EAAK3L,KAAK4W,SAAW,EAChCjL,EAAOntB,IAAWF,GAGtB,OAAOC,CACX,EAEAk5B,UAAW,WAKP,IAJA,IAAIl5B,EAAS7F,KAAKg/B,aACdl5B,EAAW,GACXF,EAAM,EAEHA,EAAMC,EAAQD,IACjBE,EAASQ,KAAKmgB,GAAQ,MAAO,OAGjC,OAAOA,GAAQ,WAAY,KAAM3gB,EACrC,EAEA+4B,OAAQ,SAAS14B,GACb,IAAIqF,EAAOrF,EAAO,GAelB,OAbAnG,KAAKyF,UAAY+F,EACjBxL,KAAK2R,KAAO,GACZ3R,KAAK8B,IAAM,CAAC,EAEZ9B,KAAKo8B,SAAW,GAEZ5wB,GACAxL,KAAKi/B,WAAWzzB,EAAM,GACtBxL,KAAKk/B,cAELl/B,KAAK2R,KAAKrL,KAAKmgB,GAAQ,KAAM,CAAE4G,UAAW3oB,GAAwB,CAAE+hB,GAAQ,KAAM,CAAE4G,UAAW3oB,GAAyB,CAAEi4B,GAAS,eAGhIlW,GAAQ,QAAS,CAAE4G,UAAW3oB,GAAqB1E,KAAK2R,KACnE,EAEAutB,WAAY,WAgBR,IAfA,IASIxwB,EACAukB,EACAsN,EAEAC,EAbA7uB,EAAO3R,KAAK2R,KACZ4I,EAAa5I,EAAK9L,OAClBgM,EAAS,EAET9L,EAAU/F,KAAKyF,UAAUM,QACzB06B,EAAkB16B,EAAQ,GAAG7B,KAC7B0b,EAAgB7Z,EAAQF,OACxBsY,EAAY,EAKZrc,EAAM9B,KAAK8B,IAGR+P,EAAS0I,EAAY1I,IAGxB,IAFAnD,EAAMiD,EAAKE,GAENsM,EAAY,EAAGA,EAAYyB,EAAezB,IAC3CoiB,EAAavgC,KAAK+F,EAAQoY,GAAWja,OACrC+uB,EAAOvkB,EAAIwvB,QAAQ,MAAQ/f,KAEf8U,EAAKiL,QAAUqC,IACvBtN,EAAK3L,KAAK4W,QAAWqC,EAAatN,EAAKiL,QAAW,GAK9DxvB,EAAM5M,EAAI2+B,GACVD,EAAS1+B,EAAI2+B,EAAkB,OAE3B/xB,IACAA,EAAI5I,SAAS,GAAGwhB,KAAK+F,UAAY3oB,EAAwB,YAGzD87B,IACAA,EAAO16B,SAAS,GAAGwhB,KAAK+F,WAAa,YAAc3oB,EAE3D,EAEA66B,KAAM,SAASz5B,GACX,IAAI4I,EAAM+X,GAAQ,KAAM,CAAE4G,UAAW3oB,GAAwBoB,GAM7D,OALA4I,EAAIuvB,QAAU,EACdvvB,EAAIwvB,QAAU,CAAC,EAEfl+B,KAAK2R,KAAKrL,KAAKoI,GAERA,CACX,EAEAoxB,SAAU,SAAS97B,EAAQ0B,GACvB,OAAOi3B,GAAS38B,KAAK6mB,SAAS,CAC1B7iB,OAAQA,EACR0B,MAAOA,KACP,EACR,EAEAm6B,MAAO,SAASxS,EAAWvnB,EAAU9B,GACjC,IAAIivB,EAAOxM,GAAQ,KAAM,CAAE4G,UAAW3oB,EAAwB,IAAM2oB,GAAavnB,GAEjF,OADAmtB,EAAK3uB,MAAQN,EAAOC,SAAWD,EAAOE,KAC/B+uB,CACX,EAEAgM,WAAY,SAASv5B,EAAOyY,GACxB,IACIlO,EAiBAgjB,EAAMgN,EACNF,EAAUS,EACV/hB,EACA4O,EAGAznB,EAxBA9D,EAAM9B,KAAK8B,IAGXiE,EAAUL,EAAMK,QAChB/B,EAAS+B,EAAQoY,GACjB+hB,EAAan6B,EAAQoY,EAAY,GAEjCrY,EAAW9B,EAAO8B,SAClBk6B,EAAiBl6B,EAASD,OAE1BkG,EAAWyP,OAAOxX,EAAO+H,UACzBiV,EAAWhhB,KAAKyF,UAAUM,QAAQoY,GAAWja,KAC7Cw8B,EAAYz6B,GAAUP,EAAOyY,EAAY,GAAG1Q,KAAK,IACjD4yB,EAAe7kB,OAAOxb,KAAKyF,UAAUM,QAAQoY,GAAWpS,UACxDE,EAAay0B,GAAaL,IAAiBt0B,EAAW,GAAM/H,EAAOiI,YAAc,IACjFyC,EAAM5M,EAAImK,EAAa,QAAUnK,EAAImK,GACrCiyB,EAAUnyB,EAAW,EAMrBo0B,EAAe,GAUnB,IANKzxB,GAAOA,EAAIiyB,SACZjyB,EAAM1O,KAAKu/B,OAEX7wB,EAAIiyB,UAAW,EAGf38B,EAAOY,QAAS,CAMhB,IALAyoB,EAAY3e,EAAIuxB,QAAU,gBAAkB,GAC5CvxB,EAAI5I,SAASQ,KAAKtG,KAAK6/B,MAAMxS,EAAW,CAAErtB,KAAK8/B,SAASh6B,EAAS,GAAIJ,IAAUI,EAAS,KAExF4I,EAAIuvB,QAAU+B,EAETp6B,EAAM,EAAGA,EAAMo6B,EAAgBp6B,IAChC5F,KAAKu/B,KAAK,CAAEv/B,KAAK6/B,MAAMxS,EAAW,CAAErtB,KAAK8/B,SAASh6B,EAASF,GAAMF,IAAUI,EAASF,MAGxF,OAAO8I,CACX,CAiBA,GAfA5M,EAAI4+B,EAAY18B,EAAOE,MAAQwK,EAE/BuB,EAAO5Q,EAAM2G,UAAUC,GAAUP,EAAOyY,KAExCM,EAAWze,KAAKye,SAASxO,MAErBjQ,KAAKye,SAASxO,GAAQwO,EAAWme,GAAe7wB,EAAUoS,GAC1DM,EAAS4hB,aAAeA,GAG5BrgC,KAAKo8B,SAAS91B,KAAK,CACf2J,KAAMA,EACNvK,MAAOA,IAGP1B,EAAOgI,YAAa,EACM,IAAtByS,EAAShb,WACTu8B,EAAiB,EACjBvhB,EAAS3Y,SAAW,GAGxB,IAAIw6B,EAAa7/B,EAAE,iBACnB6/B,EAAWhZ,KAAKjoB,EAAMioB,KAAK,QAASrX,GAEpCkwB,EAAa75B,KAAKjH,EAAM+6B,IAAI7Q,KAAKlqB,EAAMuB,GAAG8C,KAAK48B,EAAY,CAAE58B,KAAMs8B,EAAiBp8B,EAA0BE,KAA6B,GAC/I,CAeA,GAbAq8B,EAAa75B,KAAKtG,KAAK8/B,SAAS97B,EAAQ0B,IAExC2nB,EAAY3e,EAAIuxB,UAAYD,EAAiB,gBAAkB,IAC/D/M,EAAOjzB,KAAK6/B,MAAMxS,EAAW8S,EAAcn8B,IACtCk6B,QAAUA,EAEfxvB,EAAI5I,SAASQ,KAAK2sB,GAClBvkB,EAAIwvB,QAAQ,MAAQ/f,GAAa8U,IAE5BjzB,KAAKghB,IAAahhB,KAAKghB,GAAYkd,KACpCl+B,KAAKghB,GAAYkd,GAGjB8B,EAAgB,CAIhB,IAHAtxB,EAAIuxB,SAAU,EACdvxB,EAAIiyB,UAAW,EAEV/6B,EAAM,EAAGA,EAAMo6B,EAAgBp6B,IAG5B8I,KAFJqxB,EAAW//B,KAAKi/B,WAAWn5B,EAASF,GAAMuY,MAGtCzP,EAAIuvB,SAAW8B,EAAS9B,SAI5BvvB,EAAIuvB,QAAU,IACdhL,EAAK3L,KAAK2W,QAAUvvB,EAAIuvB,SAG5Bxf,EAAS3Y,SAAW4I,EAAIuvB,SAExBgC,EAAUjgC,KAAK6/B,MAAM,gBAAiB,CAAC7/B,KAAK8/B,SAAS97B,EAAQ0B,IAAS1B,IAC9Dk6B,QAAUA,GAElBsC,EAASxgC,KAAKu/B,KAAK,CAAEU,KACd/B,QAAQ,MAAQ/f,GAAa8hB,EACpCO,EAAOP,SAAU,EAEjBn+B,EAAI4+B,EAAY18B,EAAOE,KAAO,OAASs8B,EAEnCN,IACAH,EAAW//B,KAAKi/B,WAAWv5B,EAAOyY,EAAY,GAC9C8hB,EAAQ3Y,KAAK2W,QAAU8B,EAAS9B,SAGpCvvB,EAAIuvB,SAAWuC,EAAOvC,QAEtBxf,EAAS1Y,QAAUy6B,EAAOvC,OAE9B,MAAWiC,IACPxxB,EAAIiyB,UAAW,EACf3gC,KAAKi/B,WAAWv5B,EAAOyY,EAAY,IAElC8hB,GAAWhN,GAAM3L,KAAK2W,QAAUvvB,EAAIuvB,QAErCxf,EAAS1Y,QAAU2I,EAAIuvB,SAW3B,OARIxf,EAAS0Z,YAAc1Z,EAAS3Y,WAChC2Y,EAAS0Z,YAAc1Z,EAAS3Y,UAGhC2Y,EAASoe,WAAape,EAAS1Y,UAC/B0Y,EAASoe,WAAape,EAAS1Y,SAG5B2I,CACX,IAGAmpB,GAAiB92B,EAAMgB,OAAO,CAC9BiJ,KAAM,WACFhL,KAAKk8B,WAAa,CAAC,EACnBl8B,KAAKgO,QAAU,CAAC,CACpB,EAEA4oB,MAAO,SAAS31B,EAAMi7B,EAAYluB,GAC9B,IAAInB,EAAQqvB,EAAW5d,QAAQ,GAC3BG,EAAWyd,EAAWzd,SAAS5R,EAAQA,EAAMoD,KAAOvP,GAExDV,KAAKk8B,WAAaA,EAClBl8B,KAAKgO,QAAUA,EAEfhO,KAAKiB,KAAOA,EAEZjB,KAAKgP,UAAYyP,EAAWA,EAAS0Z,YAAc1Z,EAASoe,WAAaX,EAAWv1B,SAASd,QAAU,EAElG7F,KAAKgP,YACNhP,KAAKgP,UAAY,GAGrB,IAAI4vB,EAAQ5+B,KAAK6+B,SACbC,EAAW9+B,KAAK++B,YAEpB,MAAO,CACHtY,GAAQ,QAAS,CAAE4G,UAAW3oB,GAA4B,CAACo6B,EAAUF,IAE7E,EAEAG,UAAW,WACP,IAAIl5B,EAAS7F,KAAKk8B,WAAWv1B,SAASd,QAAU,EAC5CC,EAAW,GACXF,EAAM,EAMV,IAJI5F,KAAK2R,KAAK,KACV9L,EAAS7F,KAAK2R,KAAK,GAAG7L,SAASD,QAG5BD,EAAMC,EAAQD,IACjBE,EAASQ,KAAKmgB,GAAQ,MAAO,OAGjC,OAAOA,GAAQ,WAAY,KAAM3gB,EACrC,EAEA+4B,OAAQ,WAYJ,OAXA7+B,KAAK2R,KAAO,GAER3R,KAAKiB,KAAK,IACVjB,KAAK6Z,cAAgB7Z,KAAKo8B,SAASp8B,KAAKk8B,WAAYl8B,KAAKgP,WACzDhP,KAAK8Z,WAAa9Z,KAAKo8B,SAASp8B,KAAKgO,QAAS0O,KAAKgf,KAAK17B,KAAKiB,KAAK4E,OAAS7F,KAAKgP,YAEhFhP,KAAKi/B,cAELj/B,KAAK2R,KAAKrL,KAAKmgB,GAAQ,KAAM,CAAE4G,UAAW3oB,GAAwB,CAAE+hB,GAAQ,KAAM,CAAE4G,UAAW3oB,GAAyB,CAAEi4B,GAAS,eAGhIlW,GAAQ,QAAS,CAAE4G,UAAW3oB,GAAqB1E,KAAK2R,KACnE,EAEAyqB,SAAU,SAASwE,EAAUlD,GACzB,IACImD,EAMA9zB,EAMAnB,EAGA9F,EACAg7B,EAjBA16B,EAAS,GAETkY,EAAUsiB,EAAStiB,QACnBG,EAAWmiB,EAASniB,SACpB9X,EAAWi6B,EAASj6B,SACpBoU,EAAiBpU,EAASd,QAAU,EAGpC+U,EAAU,EACVmmB,EAAa,EAEbn7B,EAAM,EACNC,EAASyY,EAAQzY,OAOrB,IAAKA,EAAQ,CACT,IAAK+F,EAAa,EAAGA,EAAamP,EAAgBnP,IAC9CxF,EAAOwF,GAAc,CACjBiB,MAAOjB,EACPhH,QAAS+B,EAASiF,GAClBlG,MAAO,MAIf,OAAOU,CACX,CAEA,KAAOR,EAAMC,EAAQD,IAAO,CAkBxB,GAdAk7B,EAAe,GADfh7B,GADAiH,EAAU0R,GADVoiB,EAAiBviB,EAAQ1Y,IACSqK,OACfnK,SAAWiH,EAAQhH,WAIlCD,GAAYiV,IAGS,IAArBhO,EAAQtJ,UAAsBsJ,EAAQjH,WAAaiH,EAAQorB,cAC3D2I,EAAe/zB,EAAQorB,aAGvBprB,EAAQiT,cAAgBjT,EAAQhB,WAAagB,EAAQszB,eACrDv6B,GAAY,GAGZA,GAAY,EAAG,CACf,IAAK8F,EAAa,EAAGA,EAAamP,EAAgBnP,IAEzCmB,EAAQjH,UACAi7B,EAGb36B,EAAON,EAAWi7B,EAAan1B,GAAc,CACzC9F,SAAUA,EACV+G,MAAO+N,EACPhW,QAAS+B,EAASiF,GAClBlG,MAAOm7B,EAAen7B,OAE1BkV,GAAW,EAGf,KAAOxU,EAAO26B,KAAgBrgC,GAC1BqgC,GAAc,CAEtB,CAEA,GAAIA,IAAerD,EACf,MAGJ9iB,GAAWkmB,CACf,CAEA,OAAO16B,CACX,EAEA64B,WAAY,WAKR,IAJA,IAAInlB,EAAa9Z,KAAK8Z,WAClBjU,EAASiU,EAAWjU,OACpBD,EAAM,EAEHA,EAAMC,EAAQD,IAAO,CACxB,IAAIyW,EAAWvC,EAAWlU,GACtByW,GACArc,KAAK2R,KAAKrL,KAAKtG,KAAKghC,UAAU3kB,GAEtC,CACJ,EAEA2kB,UAAW,SAASlI,GAYhB,IAXA,IAGID,EAIAoI,EACAhO,EAAMiO,EACN5Z,EAAMjjB,EAAUO,EAThBu8B,EAAWrI,EAAQjsB,MAAQ7M,KAAKgP,UAChC6K,EAAgB7Z,KAAK6Z,cACrBhU,EAASgU,EAAchU,OAEvBggB,EAAQ,GACRjgB,EAAM,EAMHA,EAAMC,EAAQD,KACjBizB,EAAahf,EAAcjU,MAERlF,IAInB4mB,EAAO,CAAE+F,UAAW3oB,GAChBm0B,EAAW/yB,WACXwhB,EAAK+F,WAAa,UAGtB6T,EAAc,GACd78B,EAAWrE,KAAKiB,KAAKkgC,EAAWtI,EAAWhsB,OAC3CjI,EAAUi0B,EAAWj0B,SAAWk0B,EAAQl0B,QAExCq8B,EAAe,CACX5K,YAAawC,EAAWnzB,MACxB6wB,SAAUuC,EAAQpzB,MAClBd,QAASA,EACTP,SAAUA,GAGS,KAAnBA,EAASC,OAAgBM,GAAWA,EAAQK,OACvB,WAAjBL,EAAQK,KACRi8B,EAAclhC,KAAK0uB,kBAAkBuS,GACb,UAAjBr8B,EAAQK,OACfi8B,EAAclhC,KAAK2uB,iBAAiBsS,KAIvCC,IACDA,EAAclhC,KAAK04B,aAAauI,KAGpChO,EAAOxM,GAAQ,KAAMa,EAAM,CAAEqV,GAASuE,MACjC58B,MAAQD,EAASC,MACtBuhB,EAAMvf,KAAK2sB,IAQf,OALA3L,EAAO,CAAE+F,UAAW3oB,GAChBo0B,EAAQhzB,WACRwhB,EAAK+F,WAAa,kBAGf5G,GAAQ,KAAMa,EAAMzB,EAC/B,IAGJjlB,EAAGw2B,OAAOC,IAEVh4B,EAAM+hC,mBAAqB/hC,EAAM0B,MAAMgB,OAAO,CAC1CiJ,KAAM,SAASC,GACXjL,KAAKiL,QAAUA,EAEfjL,KAAKqhC,OAASp2B,EAAQo2B,OACtBrhC,KAAKshB,WAAathB,KAAKqhC,OAAO/f,UAClC,EAEAtN,SAAU,WACN,IAQIpO,EARA07B,EAAoBthC,KAAKqhC,OAAOlH,kBAAkBr0B,SAAS,GAC3Dy7B,EAAiBvhC,KAAKqhC,OAAO/G,eAAex0B,SAAS,GAErD07B,EAAqBF,EAAkBx7B,SAAS,GAAGA,SAASD,OAC5D47B,EAAkBF,EAAez7B,SAAS,GAAGA,SAASD,OAEtDiwB,EAAQ91B,KAAKqhC,OAAOp2B,QAAQ8kB,YAC5B3pB,EAAS,GAGb,GAAIq7B,GAAmBzhC,KAAKshB,WAAWrgB,OAAO,GAC1C,IAAK2E,EAAM,EAAGA,EAAM67B,EAAiB77B,IACjCQ,EAAOE,KAAK,CACRo7B,WAAW,IAKvB,IAAK97B,EAAM,EAAGA,EAAM47B,EAAoB57B,IACpCQ,EAAOE,KAAK,CACRo7B,WAAW,EACX5L,MAAOA,IAIf,OAAO1vB,CACX,EAEAu7B,OAAQ,SAAShwB,EAAM1M,EAAM4P,GAUzB,IATA,IAKIsqB,EACAzwB,EAAKmX,EACL9e,EAAGksB,EAPH7sB,EAAS,GAETyD,EAAI,EACJhE,EAAS8L,EAAK9L,OAMXgE,EAAIhE,EAAQgE,IAAK,CAKpB,IAJA6E,EAAM,GAENywB,GADAtZ,EAAQlU,EAAK9H,GAAG/D,UACID,OAEfkB,EAAI,EAAGA,EAAIo4B,EAAap4B,IACzBksB,EAAOpN,EAAM9e,GAEb2H,EAAIpI,KAAK,CACLs7B,WAAY,UACZC,MAAO,OACPv9B,MAAO2uB,EAAK3uB,MACZ45B,QAASjL,EAAK3L,KAAK4W,SAAW,EAC9BD,QAAShL,EAAK3L,KAAK2W,SAAW,IAIlCppB,GACAA,EAASnG,EAAK7E,GAGlBzD,EAAOE,KAAK,CACRuf,MAAOnX,EACPzJ,KAAMA,GAEd,CAEA,OAAOmB,CACX,EAEA6N,MAAO,WACH,IAAIqtB,EAAoBthC,KAAKqhC,OAAOlH,kBAAkBr0B,SAAS,GAC3Dy7B,EAAiBvhC,KAAKqhC,OAAO/G,eAAex0B,SAAS,GAErD07B,EAAqBF,EAAkBx7B,SAAS,GAAGA,SAASD,OAC5D47B,EAAkBF,EAAez7B,SAAS,GAAGA,SAASD,OAEtDg4B,EAAmByD,EAAkBx7B,SAAS,GAAGA,SACjDisB,EAAgBwP,EAAez7B,SAAS,GAAGA,SAC3Cg8B,EAAc9hC,KAAKqhC,OAAO9G,YAAYz0B,SAAS,GAAGA,SAAS,GAAGA,SAE9Di8B,EAAa/hC,KAAK2hC,OAAO9D,EAAkB,UAE3C4D,GACAM,EAAW,GAAGlc,MAAMhI,OAAO,EAAG,EAAG,CAC7B+jB,WAAY,UACZC,MAAO,OACPv9B,MAAO,GACP45B,QAASuD,EACTxD,QAASJ,EAAiBh4B,SAIlC,IAuBIm8B,EAAUhiC,KAAK2hC,OAAO5P,EAAe,QAvBtB,SAASrjB,EAAK7B,GAK7B,IAJA,IACIomB,EAAM3uB,EADNyC,EAAI,EAEJ8e,EAAQic,EAAYj1B,GAAO/G,SAExBiB,EAAIy6B,EAAoBz6B,IAC3BksB,EAAOpN,EAAM9e,GACbzC,EAAQkX,OAAOyX,EAAK3uB,OAEhB0D,MAAM1D,KACNA,EAAQ2uB,EAAK3uB,OAGjBoK,EAAIpI,KAAK,CACLs7B,WAAY,UACZC,MAAO,OACPv9B,MAAOA,EACP45B,QAAS,EACTD,QAAS,GAGrB,IAIA,OAAO8D,EAAWl0B,OAAOm0B,EAC7B,EAEAC,YAAa,WACT,IAAIX,EAAoBthC,KAAKqhC,OAAOlH,kBAAkBr0B,SAAS,GAM/D,MAAO,CACHo8B,SANiBliC,KAAKqhC,OAAO/G,eAAex0B,SAAS,GAEpBA,SAAS,GAAGA,SAASD,OAKtDs8B,SAJmBb,EAAkBx7B,SAAS,GAAGA,SAItBD,OAEnC,EAEAu8B,WAAY,WACR,MAAMd,EAAoBthC,KAAKqhC,OAAOpT,eAAe8O,MAAM,GACrDwE,EAAiBvhC,KAAKqhC,OAAOhT,YAAY0O,MAAM,GAE/CyE,EAAqBF,EAAkBx7B,SAAS,GAAGA,SAASD,OAC5D47B,EAAkBF,EAAez7B,SAAS,GAAGA,SAASD,OAEtDiwB,EAAQ91B,KAAKqhC,OAAOp2B,QAAQ8kB,YAC5B3pB,EAAS,GAEf,GAAIq7B,GAAmBzhC,KAAKshB,WAAWrgB,OAAO,GAC1C,IAAK,IAAI2E,EAAM,EAAGA,EAAM67B,EAAiB77B,IACrCQ,EAAOE,KAAK,CACRo7B,WAAW,IAKvB,IAAK,IAAI97B,EAAM,EAAGA,EAAM47B,EAAoB57B,IACxCQ,EAAOE,KAAK,CACRo7B,WAAW,EACX5L,MAAOA,IAIf,OAAO1vB,CACX,EAEAi8B,SAAU,SAAS1wB,EAAM1M,EAAM4P,GAC3B,MAAMzO,EAAS,GAETP,EAASy8B,OAAOtgC,KAAK2P,GAAM9L,OAEjC,IAAK,IAAIgE,EAAI,EAAGA,EAAIhE,EAAQgE,IAAK,CAC7B,MAAM6E,EAAM,GACNmX,EAAQlU,EAAK9H,GAAG/D,SAChBq5B,EAActZ,EAAMhgB,OAE1B,IAAK,IAAIkB,EAAI,EAAGA,EAAIo4B,EAAap4B,IAAK,CAClC,MAAMksB,EAAOpN,EAAM9e,GAEnB2H,EAAIpI,KAAK,CACLs7B,WAAY,UACZC,MAAO,OACPv9B,MAAO2uB,EAAKhvB,QACZi6B,QAASjL,EAAKiL,SAAW,EACzBD,QAAShL,EAAKgL,SAAW,GAEjC,CAEIppB,GACAA,EAASnG,EAAK7E,GAGlBzD,EAAOE,KAAK,CACRuf,MAAOnX,EACPzJ,KAAMA,GAEd,CAEA,OAAOmB,CACX,EAEAm8B,QAAS,WACL,MAAMjB,EAAoBthC,KAAKqhC,OAAOpT,eAAe8O,MAAM,GACrDwE,EAAiBvhC,KAAKqhC,OAAOhT,YAAY0O,MAAM,GAE/CyE,EAAqBF,EAAkBx7B,SAAS,GAAGA,SAASD,OAC5D47B,EAAkBF,EAAez7B,SAAS,GAAGA,SAASD,OAEtDg4B,EAAmB79B,KAAKqhC,OAAOpT,eAAeuB,YAC9CuC,EAAgB/xB,KAAKqhC,OAAOhT,YAAYmB,YACxCgT,EAAexiC,KAAKqhC,OAAO9S,gBAAgB+H,KAE3CyL,EAAa/hC,KAAKqiC,SAASxE,EAAkB,UAE/C4D,GACAM,EAAW,GAAGlc,MAAMhI,OAAO,EAAG,EAAG,CAC7B+jB,WAAY,UACZC,MAAO,OACPv9B,MAAO,GACP45B,QAASuD,EACTxD,QAASqE,OAAOtgC,KAAK67B,GAAkBh4B,SAI/C,MAwBMm8B,EAAUhiC,KAAKqiC,SAAStQ,EAAe,QAxBxB,SAASrjB,EAAK7B,GAC/B,MACM41B,GAAY51B,EAAQ,GAAK20B,EAE/B,IAAK,IAAIz6B,EAHa8F,EAAQ20B,EAGFz6B,EAAI07B,EAAU17B,IAAK,CAC3C,MAAMksB,EAAOuP,EAAaz7B,GAEpBu2B,EAA0B,OAAdrK,EAAKhyB,KAAgBgyB,EAAKhyB,KAAKqD,MAAQ2uB,EAAKhyB,KAC9D,IAAIqD,EAAQkX,OAAO8hB,GAEft1B,MAAM1D,KACNA,EAAQg5B,GAGZ5uB,EAAIpI,KAAK,CACLs7B,WAAY,UACZC,MAAO,OACPv9B,MAAOA,EACP45B,QAAS,EACTD,QAAS,GAEjB,CACJ,IAIA,OAAO8D,EAAWl0B,OAAOm0B,EAC7B,EAGAU,cAAe,WACX,MAAMpB,EAAoBthC,KAAKqhC,OAAOpT,eAAe8O,MAAM,GAM3D,MAAO,CACHmF,SANmBliC,KAAKqhC,OAAOhT,YAAY0O,MAAM,GAEdj3B,SAAS,GAAGA,SAASD,OAKxDs8B,SAJqBb,EAAkBx7B,SAAS,GAAGA,SAASD,OAMpE,EAEA88B,UAAW,WAGP,IAFa3iC,KAEHiL,QAAQ23B,MAAM/a,WACpB,OAAO,KAGX,MAAMyZ,EAAoBthC,KAAKqhC,OAAOpT,eAAe8O,MAAM,GAGrD0E,EAFiBzhC,KAAKqhC,OAAOhT,YAAY0O,MAAM,GAEdj3B,SAAS,GAAGA,SAASD,OAK5D,MAAO,CACHqsB,KAAMuP,EACNoB,GANuBvB,EAAkBx7B,SAAS,GAAGA,SAASD,QAE3C47B,EAAkB,GAM7C,EAGAqB,SAAU,WACN,IAAIzsB,EA6BJ,OAPIrW,KAAKshB,WAAWyX,OAAO,IACvB1iB,EAAU5V,EAAEsV,YACJnM,UAERyM,EAAUrW,KAAKshB,WAAW1M,QAGvByB,EAAQmN,KA5BC,WACR,MAAiC,gBAA7BxjB,KAAKqhC,OAAOp2B,QAAQ/G,KACb,CACH6+B,OAAQ,CAAE,CACNjzB,QAAS9P,KAAKoiC,aACdzwB,KAAM3R,KAAKuiC,UACXS,WAAYhjC,KAAK0iC,gBACjBt5B,OAAQpJ,KAAK2iC,eAIlB,CACHI,OAAQ,CAAE,CACNjzB,QAAS9P,KAAKgU,WACdrC,KAAM3R,KAAKiU,QACX+uB,WAAYhjC,KAAKiiC,cACjB74B,OAAQ,OAGpB,EAS0BwB,KAAK5K,MACvC,IAGJ,IAAIijC,GAAkB,CAClBlhC,OAAQ,SAASmhC,GACdA,EAAM/X,OAAO7kB,KAAK,eAClB48B,EAAMj4B,QAAQ23B,MAAQniC,EAAEsB,OAAOmhC,EAAMj4B,QAAQ23B,MAAO5iC,KAAKiL,SACzDi4B,EAAMC,YAAcnjC,KAAKmjC,WAC5B,EACAl4B,QAAS,CACLm4B,SAAU,GACVvb,YAAY,EACZwb,SAAU,eAEdF,YAAa,WACT,IAAIP,EAAQ5iC,KAAKiL,QAAQ23B,OAAS,CAAC,EAE/BU,EAAW,IAAIjkC,EAAM+hC,mBAAmB,CACxCC,OAAQrhC,KACR4iC,UAGA5iC,KAAKs1B,YACLt1B,KAAKu1B,WAAY,EACjBv1B,KAAKs1B,WAAU,IAuBnBgO,EAASR,WAAWtf,KApBJ,SAAS+f,GAChBvjC,KAAK2J,QAAQ,cAAe,CAAEm5B,SAAUS,KAC1B,IAAIlkC,EAAMmkC,MAAMC,SAASF,GAE/BG,iBAAiBlgB,MAAK,SAASmgB,GACpCtkC,EAAMukC,OAAO,CACTD,QAASA,EACTN,SAAUE,EAAKF,UAAYT,EAAMS,SACjCD,SAAUR,EAAMQ,SAChBS,WAAYjB,EAAMiB,YAE1B,IAAGC,QAAO,KACF9jC,KAAKs1B,YACLt1B,KAAKs1B,WAAU,GACft1B,KAAKu1B,WAAY,EACrB,GAGZ,EAEmC3qB,KAAK5K,MAC5C,GAGJX,EAAM4jC,gBAAkBA,GAEpB5jC,EAAMmkC,OAASnkC,EAAMmkC,MAAMC,UAC3BR,GAAgBlhC,OAAOs1B,GAAU0M,WAGjC1kC,EAAMmkC,OAASnkC,EAAMmkC,MAAMC,UAC3BR,GAAgBlhC,OAAOurB,GAAYyW,WAGnC1kC,EAAM2kC,WACN3kC,EAAM2kC,SAASjiC,OAAOs1B,GAAU0M,WAEhC1M,GAAUzjB,GAAGqwB,SAAW,WACpB,OAAOjkC,KAAKkkC,eAAe,CACvBpO,MAAO91B,KAAK+tB,QAAQ+H,SACrB,CACCqO,WAAYnkC,KAAKiL,QAAQm5B,IAAID,YAErC,GAGA9kC,EAAM2kC,WACN3kC,EAAM2kC,SAASjiC,OAAOurB,GAAYyW,WAElCzW,GAAYyW,UAAUM,WAAahlC,EAAM2kC,SAASM,UAElDhX,GAAY1Z,GAAG0wB,UAAY,WACnBtkC,KAAKs1B,YACLt1B,KAAKu1B,WAAY,EACjBv1B,KAAKs1B,WAAU,IAEnBt1B,KAAKqkC,aAAaP,QAAO,KACjB9jC,KAAKs1B,YACLt1B,KAAKs1B,WAAU,GACft1B,KAAKu1B,WAAY,EACrB,GAER,EAEAjI,GAAY1Z,GAAGqwB,SAAW,WACtB,OAAOjkC,KAAKkkC,eAAe,CACvBpO,MAAO91B,KAAK+tB,QAAQ+H,SACrB,CACCqO,WAAYnkC,KAAKiL,QAAQm5B,IAAID,YAErC,GAGJxjC,OAAOtB,MAAMklC,UAAY5jC,OAAOtB,MAAMklC,WAAa,CAAC,EACpD5jC,OAAOtB,MAAMklC,UAAUC,OAAS,CAC5BC,OAAQlkC,EAAmCkO,EAC3Ci2B,oBAAqBnkC,EAAmCsB,EACxD8iC,iBAAkBpkC,EAAmCgK,EACrDq6B,iBAAkBrkC,EAAmCskC,EACrDC,cAAevkC,EAAmCwkC,EAClDC,YAAazkC,EAAmCqgB,EAChDqkB,oBAAqB1kC,EAAmCiwB,EACxD0U,sBAAuB3kC,EAAmC4kC,EAC1DC,gBAAiB7kC,EAAmCkjB,EACpD4hB,eAAgB9kC,EAAmC0I,EACnDq8B,mBAAoB/kC,EAAmCglC,EACvDC,2BAA4BjlC,EAAmCk8B,EAC/DgJ,qBAAsBllC,EAAmCmJ,EACzDg8B,kBAAmBnlC,EAAmCm8B,EACtDiJ,aAAcplC,EAAmCqlC,EACjDC,iBAAkBtlC,EAAmCulC,EACrDC,UAAWxlC,EAAmCgjB,EAC9CyiB,cAAezlC,EAAmCojB,EAClDsiB,eAAgB1lC,EAAmCsJ,EACnDq8B,aAAc3lC,EAAmCyE,EACjDmhC,WAAY5lC,EAAmC6lC,EAC/CC,aAAc9lC,EAAmCgH,EACjD++B,cAAe/lC,EAAmCgmC,EAClDC,SAAUjmC,EAAmCkmC,EAC7CC,WAAYnmC,EAAmComC,EAC/CC,UAAWrmC,EAAmCsmC,EAC9CC,QAASvmC,EAAmCwmC,EAC5CC,aAAczmC,EAAmC8J,EACjD48B,UAAW1mC,EAAmC8F,EAC9C6gC,OAAQ3mC,EAAmCo9B,EAC3CwJ,OAAQ5mC,EAAmC2gB,EAC3CkmB,OAAQ7mC,EAAmCwG,EAGlD,CAhnOD,CAgnOGpG,OAAOtB,MAAMgoC,QAChB,IAAIC,EAAUjoC,MAEdP,EAAQyoC,SAtpOS,CACbtkC,GAAI,YACJiB,KAAM,YACNsjC,SAAU,MACVhjB,YAAa,qDACbijB,QAAS,CAAC,MAAO,OAAQ,WAAY,WAAY,QAAS,SAAU,uBAAwB,6BAA8B,yBAC1HC,SAAU,CAAC,CACPzkC,GAAI,yBACJiB,KAAM,eACNsgB,YAAa,4FACbijB,QAAS,CAAE,uBACZ,CACCxkC,GAAI,sBACJiB,KAAM,YACNsgB,YAAa,wBACbijB,QAAS,CAAE,oBACZ,CACCxkC,GAAI,yBACJiB,KAAM,eACNsgB,YAAa,8CACbijB,QAAS,CAAE,UACZ,CACCxkC,GAAI,uBACJiB,KAAM,aACNsgB,YAAa,gCACbijB,QAAS,CAAE,MAAO,YACnB,CACCxkC,GAAI,kBACJiB,KAAM,kBACNsgB,YAAa,iDACbijB,QAAS,CAAE,sBAynOnB3oC,EAAQ6oC,QAAUL,EAElBhF,OAAOsF,eAAe9oC,EAAS,aAAc,CAAEwF,OAAO,GAEzD","ignoreList":[],"sourcesContent":["(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('kendo.dom.js'), require('kendo.data.js'), require('kendo.icons.js'), require('kendo.loader.js'), require('kendo.html.loadercontainer.js'), require('kendo.sortable.js'), require('kendo.pivotgrid-common.cmn.chunk.js'), require('kendo.loaderContainer.chunk.js')) :\n    typeof define === 'function' && define.amd ? define(['exports', 'kendo.dom', 'kendo.data', 'kendo.icons', 'kendo.loader', 'kendo.html.loadercontainer', 'kendo.sortable', 'kendo.pivotgrid-common.cmn.chunk', 'kendo.loaderContainer.chunk'], factory) :\n    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory((global.kendo = global.kendo || {}, global.kendo._globals = global.kendo._globals || {}, global.kendo._globals.Pivotgrid = {}), global.kendo._globals.Dom, global.kendo._globals.Data, global.kendo._globals.Icons, global.kendo._globals.Loader, global.kendo._globals.HtmlLoadercontainer, global.kendo._globals.Sortable, global.kendo._globals.PivotgridCommonCmnChunk, global.kendo._globals.LoaderContainerChunk));\n})(this, (function (exports, kendo_dom_js, kendo_data_js, kendo_icons_js, kendo_loader_js, kendo_html_loadercontainer_js, kendo_sortable_js, kendo_pivotgridCommon_cmn_chunk_js, kendo_loaderContainer_chunk_js) {\n    const __meta__ = {\n        id: \"pivotgrid\",\n        name: \"PivotGrid\",\n        category: \"web\",\n        description: \"The PivotGrid widget is a data summarization tool.\",\n        depends: [\"dom\", \"data\", \"data.xml\", \"sortable\", \"icons\", \"loader\", \"html.loadercontainer\", \"pivotgrid-common.cmn.chunk\", \"loaderContainer.chunk\"],\n        features: [{\n            id: \"pivotgrid-configurator\",\n            name: \"Configurator\",\n            description: \"The PivotConfigurator widget allows the user to select data slices displayed in PivotGrid\",\n            depends: [ \"pivot.configurator\" ]\n        }, {\n            id: \"pivotgrid-filtering\",\n            name: \"Filtering\",\n            description: \"Support for filtering\",\n            depends: [ \"pivot.fieldmenu\" ]\n        }, {\n            id: \"pivotgrid-excel-export\",\n            name: \"Excel export\",\n            description: \"Export pivot grid data as Excel spreadsheet\",\n            depends: [ \"ooxml\" ]\n        }, {\n            id: \"pivotgrid-pdf-export\",\n            name: \"PDF export\",\n            description: \"Export pivot grid data as PDF\",\n            depends: [ \"pdf\", \"drawing\" ]\n        }, {\n            id: \"mobile-scroller\",\n            name: \"Mobile scroller\",\n            description: \"Support for kinetic scrolling in mobile device\",\n            depends: [ \"mobile.scroller\" ]\n        }]\n    };\n\n\n    (function($, undefined$1) {\n        var kendo = window.kendo,\n            ui = kendo.ui,\n            encode = kendo.htmlEncode,\n            Class = kendo.Class,\n            Comparer = kendo.data.Comparer,\n            Widget = ui.Widget,\n            DataSource = kendo.data.DataSource,\n            outerWidth = kendo._outerWidth,\n            outerHeight = kendo._outerHeight,\n            normalizeFilter = kendo.data.Query.normalizeFilter,\n            normalizeSort = kendo.data.Query.normalizeSort,\n            toString = {}.toString,\n            identity = function(o) { return o; },\n            map = $.map,\n            extend = $.extend,\n            keys = kendo.keys,\n            isFunction = kendo.isFunction,\n            RESIZE = \"resize\",\n            READ = \"read\",\n            CHANGE = \"change\",\n            ERROR = \"error\",\n            REQUESTSTART = \"requestStart\",\n            PROGRESS = \"progress\",\n            REQUESTEND = \"requestEnd\",\n            MEASURES = \"Measures\",\n            STATERESET = \"stateReset\",\n            AUTO = \"auto\",\n            DIV = \"<div></div>\",\n            NS = \".kendoPivotGrid\",\n            ROW_TOTAL_KEY = \"__row_total__\",\n            DATABINDING = \"dataBinding\",\n            DATABOUND = \"dataBound\",\n            EXPANDMEMBER = \"expandMember\",\n            HEADERTEMPLATE = ({ id, key, headerClass, colspan, rowspan, expandable, iconClass, role, expanded }) => `<th id=\"${id}\" role=\"${role}\" ${expandable ? `aria-expanded=\"${expanded}\"` : ''}  data-key=\"${encode(key)}\" class=\"${encode(headerClass)}\" ${colspan ? 'colspan=\"' + encode(colspan) + '\"' : ''} ${rowspan ? 'rowspan=\"' + encode(rowspan) + '\"' : ''}>` +\n                                        `${expandable ? kendo.ui.icon($('<span role=\"presentation\" class=\"k-pivotgrid-toggle\"></span>'), { icon: `chevron-${encode(iconClass)}` }) : ''}` +\n                                    '</th>',\n            COLLAPSEMEMBER = \"collapseMember\",\n            STATE_EXPANDED_ICONNAME = \"caret-alt-down\",\n            STATE_EXPANDED_SELECTOR = `.k-i-${STATE_EXPANDED_ICONNAME},.k-svg-i-${STATE_EXPANDED_ICONNAME}`,\n            STATE_COLLAPSED_ICONNAME = \"caret-alt-right\",\n            HEADER_TEMPLATE = ({ member }) => `<span>${encode(member.caption || member.name)}</span>`,\n            PIVOTGRID_TREND_ICONS_MAP = {\n                \"kpi-trend-decrease\": \"caret-alt-down\",\n                \"kpi-trend-increase\": \"caret-alt-up\",\n                \"kpi-trend-equal\": \"minus\",\n            },\n            KPISTATUS_TEMPLATE = ({ dataItem }) => kendo.ui.icon($(`<span title=\"${encode(dataItem.value)}\"></span>`), { icon: `kpi-status-${dataItem.value > 0 ? \"open\" : dataItem.value < 0 ? \"deny\" : \"hold\"}` }),\n            KPITREND_TEMPLATE = ({ dataItem }) => kendo.ui.icon($(`<span title=\"${encode(dataItem.value)}\"></span>`), { icon: PIVOTGRID_TREND_ICONS_MAP[`kpi-trend-${dataItem.value > 0 ? \"increase\" : dataItem.value < 0 ? \"decrease\" : \"equal\"}`] }),\n            DATACELL_TEMPLATE = ({ dataItem }) => (dataItem ? dataItem.fmtValue || dataItem.value ? `<span class=\"k-pivotgrid-content\">${encode(dataItem.fmtValue || dataItem.value)}</span>` : \"&nbsp;\" : \"&nbsp;\"),\n            LAYOUT_TABLE = '<table class=\"k-pivot-layout\">' +\n                                '<tr>' +\n                                    '<td>' +\n                                        '<div class=\"k-pivot-rowheaders\"></div>' +\n                                    '</td>' +\n                                    '<td>' +\n                                        '<div class=\"k-pivot-table\"></div>' +\n                                    '</td>' +\n                                '</tr>' +\n                            '</table>';\n            var AXIS_ROWS = \"rows\";\n            var AXIS_COLUMNS = \"columns\";\n\n            var tableStyles = {\n                tableRow: \"k-table-row\",\n                header: \"k-header k-table-th\",\n                headerTable: \"k-grid-header-table k-table k-table-md\",\n                table: \"k-table k-table-md\",\n                contentTable: \"k-grid-table k-table k-table-md\",\n                tbody: \"k-table-tbody\",\n                tableCell: \"k-table-td\"\n            };\n\n        function normalizeMeasures(measure) {\n            var descriptor = typeof measure === \"string\" ? [{ name: measure }] : measure;\n            var descriptors = toString.call(descriptor) === \"[object Array]\" ? descriptor : (descriptor !== undefined$1 ? [descriptor] : []);\n\n            return map(descriptors, function(d) {\n                if (typeof d === \"string\") {\n                    return { name: d };\n                }\n                return $.extend(true, d, { name: d.name, type: d.type });\n            });\n        }\n\n        function normalizeMembers(member) {\n            var descriptor = typeof member === \"string\" ? [{ name: [member], expand: false }] : member;\n            var descriptors = toString.call(descriptor) === \"[object Array]\" ? descriptor : (descriptor !== undefined$1 ? [descriptor] : []);\n\n            return map(descriptors, function(d) {\n                if (typeof d === \"string\") {\n                    return { name: [d], expand: false };\n                }\n                return { name: (toString.call(d.name) === \"[object Array]\" ? d.name.slice() : [d.name]), expand: d.expand };\n            });\n        }\n\n        function normalizeName(name) {\n            if (name.indexOf(\" \") !== -1) {\n                name = '[\"' + name + '\"]';\n            }\n\n            return name;\n        }\n\n        function accumulateMembers(accumulator, rootTuple, tuple, level) {\n            var idx, length;\n            var children;\n            var member;\n\n            if (!tuple) {\n                tuple = rootTuple;\n            }\n\n            if (!level) {\n                level = 0;\n            }\n\n            member = tuple.members[level];\n\n            if (!member || member.measure) { //return if no member or measure\n                return;\n            }\n\n            children = member.children;\n            length = children.length;\n\n            if (tuple === rootTuple) {\n                accumulator[kendo.stringify([member.name])] = !!length;\n            } else if (length) {\n                accumulator[kendo.stringify(buildPath(tuple, level))] = true;\n            }\n\n            if (length) {\n                for (idx = 0; idx < length; idx++) {\n                    accumulateMembers(accumulator, rootTuple, children[idx], level);\n                }\n            }\n\n            accumulateMembers(accumulator, rootTuple, tuple, level + 1);\n        }\n\n        function descriptorsForAxes(tuples) {\n            var result = {};\n\n            if (tuples.length) {\n                accumulateMembers(result, tuples[0]);\n            }\n\n            var descriptors = [];\n            for (var k in result) {\n                descriptors.push({ name: JSON.parse(k), expand: result[k] });\n            }\n\n            return descriptors;\n        }\n\n        function addMissingPathMembers(members, axis) {\n            var tuples = axis.tuples || [];\n            var firstTuple = tuples[0];\n\n            if (firstTuple && members.length < firstTuple.members.length) {\n                var tupleMembers = firstTuple.members;\n\n                for (var idx = 0; idx < tupleMembers.length; idx++) {\n                    if (tupleMembers[idx].measure) {\n                        continue;\n                    }\n\n                    var found = false;\n                    for (var j = 0; j < members.length; j++) {\n                        if (getName(members[j]).indexOf(tupleMembers[idx].hierarchy) === 0) {\n                            found = true;\n                            break;\n                        }\n                    }\n\n                    if (!found) {\n                        members.push({ name: [tupleMembers[idx].name], expand: false }); //calling normalize here to make name from string to array\n                    }\n                }\n            }\n        }\n\n        function tupleToDescriptors(tuple) {\n            var result = [];\n            var members = tuple.members;\n\n            for (var idx = 0; idx < members.length; idx++) {\n                if (members[idx].measure) {\n                    continue;\n                }\n\n                //make tuple name an array\n                result.push({ name: [members[idx].name], expand: members[idx].children.length > 0 });\n            }\n\n            return result;\n        }\n\n        function descriptorsForMembers(axis, members, measures) {\n            axis = axis || {};\n\n            addMissingPathMembers(members, axis);\n\n            if (measures.length > 1) {\n                members.push({\n                    name: MEASURES,\n                    measure: true,\n                    children: normalizeMembers(measures)\n                });\n            }\n\n            var tupletoSearch = {\n                members: members\n            };\n\n            if (axis.tuples) {\n                var result = findExistingTuple(axis.tuples, tupletoSearch);\n                if (result.tuple) {\n                    members = tupleToDescriptors(result.tuple);\n                }\n            }\n\n            return members;\n        }\n\n        function createAggregateGetter(m) {\n            var measureGetter = kendo.getter(m.field, true);\n            return function(aggregatorContext, state) {\n                return m.aggregate(measureGetter(aggregatorContext.dataItem), state, aggregatorContext);\n            };\n        }\n\n        function isNumber(val) {\n            return typeof val === \"number\" && !isNaN(val);\n        }\n\n        function isDate(val) {\n            return val && val.getTime;\n        }\n\n        function getScollWidth() {\n            var scrollbar = 0;\n            var div;\n            if (document && document.createElement) {\n                div = document.createElement('div');\n\n                div.style.cssText = 'overflow:scroll;overflow-x:hidden;zoom:1;clear:both;display:block';\n                div.innerHTML = '&nbsp;';\n                document.body.appendChild(div);\n\n                scrollbar = div.offsetWidth - div.scrollWidth;\n\n                document.body.removeChild(div);\n            }\n\n            return scrollbar;\n        }\n\n        function loadLocalData(data, params, deferred) {\n            const that = this;\n            const originalData = (that.reader.data(data) || []).slice(0);\n            if (originalData && !that._pristineData) {\n                that._pristineData = originalData;\n            }\n            const columnSettings = that._createSettings(params.columnAxes);\n            const rowSettings = that._createSettings(params.rowAxes);\n            const measures = that.measures();\n            const dataTree = kendo_pivotgridCommon_cmn_chunk_js.c(originalData, rowSettings, columnSettings, measures, { dataField: \"aggregate\", columnsData: \"columns\" }, that.filter() || []);\n\n            const stateArgs = {\n                dataTree: dataTree,\n                columnSettings: columnSettings,\n                rowSettings: rowSettings,\n                columnAxes: params.columnAxes,\n                rowAxes: params.rowAxes,\n                measures: measures.map(function(item) { return item; }),\n                fields: { dataField: \"aggregate\", columnsData: \"columns\" },\n                sort: flattenSortDescriptors(params.sort || [])\n            };\n\n            that._saveState(kendo_pivotgridCommon_cmn_chunk_js.a(stateArgs));\n            that.trigger(CHANGE);\n            deferred.resolve();\n        }\n\n        function flattenSortDescriptors(descriptors) {\n            var result = [];\n            for (var i = 0; i < descriptors.length; i++) {\n                result.push({\n                    dir: descriptors[i].dir,\n                    field: descriptors[i].field.split(\".\").pop()\n                });\n            }\n            return result;\n        }\n\n        function createLocalMeasure(field, key, format, aggregate) {\n            var formatFunc = function(value) { return kendo.format(this.format, value); };\n            var measureMap = {\n                \"sum\": kendo_pivotgridCommon_cmn_chunk_js.s,\n                \"average\": kendo_pivotgridCommon_cmn_chunk_js.b,\n                \"min\": kendo_pivotgridCommon_cmn_chunk_js.m,\n                \"max\": kendo_pivotgridCommon_cmn_chunk_js.d,\n                \"count\": kendo_pivotgridCommon_cmn_chunk_js.e,\n            };\n            var valueFunc = function(item) { return item[this.field]; };\n            var measure = {\n                    value: valueFunc.bind({ field: field }),\n                    aggregate: measureMap[aggregate],\n                    caption: key,\n                    uniqueName: key,\n                    type: 2,\n                    name: [key]\n                };\n            if (format) {\n                measure.aggregate.format = formatFunc.bind({ format: format });\n            }\n\n            return measure;\n        }\n\n        function getIcons(sortIcon, options, pivotOptions) {\n            var sortable = options.sortable,\n                filterable = options.filterable,\n                reorderable = pivotOptions.reorderable,\n                result = \"\";\n\n            if (sortable) {\n                result += sortIcon ? `<span class=\"k-chip-action\">${kendo.ui.icon(sortIcon + \"-sm\")}</span>` : '';\n            }\n\n            if (filterable || sortable) {\n                result += `<span class=\"k-setting-fieldmenu k-chip-action\">${kendo.ui.icon(\"more-vertical\")}</span>`;\n            }\n            if (reorderable) {\n                result += `<span class=\"k-setting-delete k-chip-action\">${kendo.ui.icon(\"x\")}</span>`;\n            }\n\n            return result;\n        }\n\n        var functions = {\n            sum: function(value, state) {\n                var accumulator = state.accumulator;\n\n                if (!isNumber(accumulator)) {\n                    accumulator = value;\n                } else if (isNumber(value)) {\n                    accumulator += value;\n                }\n\n                return accumulator;\n            },\n            count: function(value, state) {\n                return (state.accumulator || 0) + 1;\n            },\n            average: {\n                aggregate: function(value, state) {\n                    var accumulator = state.accumulator;\n\n                    if (state.count === undefined$1) {\n                        state.count = 0;\n                    }\n\n                    if (!isNumber(accumulator)) {\n                        accumulator = value;\n                    } else if (isNumber(value)) {\n                        accumulator += value;\n                    }\n\n                    if (isNumber(value)) {\n                        state.count++;\n                    }\n\n                    return accumulator;\n                },\n                result: function(state) {\n                    var accumulator = state.accumulator;\n\n                    if (isNumber(accumulator)) {\n                        accumulator = accumulator / state.count;\n                    }\n\n                    return accumulator;\n                }\n            },\n            max: function(value, state) {\n                var accumulator = state.accumulator;\n\n                if (!isNumber(accumulator) && !isDate(accumulator)) {\n                    accumulator = value;\n                }\n\n                if (accumulator < value && (isNumber(value) || isDate(value))) {\n                    accumulator = value;\n                }\n                return accumulator;\n            },\n            min: function(value, state) {\n                var accumulator = state.accumulator;\n\n                if (!isNumber(accumulator) && !isDate(accumulator)) {\n                    accumulator = value;\n                }\n\n                if (accumulator > value && (isNumber(value) || isDate(value))) {\n                    accumulator = value;\n                }\n                return accumulator;\n            }\n        };\n\n        var PivotCubeBuilder = Class.extend({\n            init: function(options) {\n                this.options = extend({}, this.options, options);\n                this.dimensions = this._normalizeDescriptors(\"field\", this.options.dimensions);\n                this.measures = this._normalizeDescriptors(\"name\", this.options.measures);\n            },\n\n            _normalizeDescriptors: function(keyField, descriptors) {\n                descriptors = descriptors || {};\n                var fields = {};\n                var field;\n\n                if (toString.call(descriptors) === \"[object Array]\") {\n                    for (var idx = 0, length = descriptors.length; idx < length; idx++) {\n                        field = descriptors[idx];\n                        if (typeof field === \"string\") {\n                            fields[field] = {};\n                        } else if (field[keyField]) {\n                            fields[field[keyField]] = field;\n                        }\n                    }\n                    descriptors = fields;\n                }\n\n                return descriptors;\n            },\n\n            _rootTuples: function(rootNames, measureAggregators) {\n                var aggregatorsLength = measureAggregators.length || 1;\n                var dimensionsSchema = this.dimensions || [];\n                var root, name, parts;\n                var measureIdx = 0;\n                var idx;\n\n                var rootNamesLength = rootNames.length;\n                var result = [];\n                var keys = [];\n\n                if (rootNamesLength || measureAggregators.length) {\n                    for (measureIdx = 0; measureIdx < aggregatorsLength; measureIdx++) {\n\n                        root = { members: [] };\n\n                        for (idx = 0; idx < rootNamesLength; idx++) {\n                            name = rootNames[idx];\n                            parts = name.split(\"&\");\n\n                            root.members[root.members.length] = {\n                                children: [],\n                                caption: (dimensionsSchema[name] || {}).caption || \"All\",\n                                name: name,\n                                levelName: name,\n                                levelNum: \"0\",\n                                hasChildren: true,\n                                parentName: parts.length > 1 ? parts[0] : undefined$1,\n                                hierarchy: name\n                            };\n                        }\n\n                        if (aggregatorsLength > 1) {\n                            root.members[root.members.length] = {\n                                children: [],\n                                caption: (measureAggregators[measureIdx]).caption,\n                                name: measureAggregators[measureIdx].descriptor.name,\n                                levelName: \"MEASURES\",\n                                levelNum: \"0\",\n                                hasChildren: false,\n                                parentName: undefined$1,\n                                hierarchy: \"MEASURES\"\n                            };\n                        }\n\n                        result[result.length] = root;\n                    }\n\n                    keys.push(ROW_TOTAL_KEY);\n                }\n\n                return {\n                    keys: keys,\n                    tuples: result\n                };\n            },\n\n            _sortMap: function(map, sortDescriptors) {\n                var sortedMaps = [];\n                var sortTree = [];\n                var flattenTree = [];\n                var mapItem;\n                var key;\n\n                for (key in map) {\n                    if (!map[key].directParentName) {\n                        sortTree.push($.extend({}, { name: key, parentName: map[key].parentName }));\n                    }\n                }\n\n                //if there are no root this means that something is expanding\n                //and we should only sort that part of the tree\n                if (!sortTree.length) {\n                    for (key in map) {\n                        sortTree.push($.extend({}, { name: key, parentName: map[key].parentName }));\n                    }\n                }\n\n                fillSortTree(sortTree, map);\n\n                // fill tree recursive\n                for (var i = 0; i < sortDescriptors.length; i++) {\n                    sortItemsTree(sortDescriptors[i].field.split(\".\").pop(), sortTree, Comparer.create({ field: \"name\", dir: sortDescriptors[i].dir }));\n                }\n\n                flattenTree = flatColumns(sortTree);\n\n                //we need to flatten the structure so the tuples can build correctly\n                for (var j = 0; j < flattenTree.length; j++) {\n                    mapItem = map[flattenTree[j].name];\n                    mapItem.index = j;\n                    sortedMaps[j] = mapItem;\n                }\n\n                return sortedMaps;\n            },\n\n            _expandedTuples: function(map, expanded, measureAggregators, sortDescriptors) {\n                var aggregatorsLength = measureAggregators.length || 1;\n                var dimensionsSchema = this.dimensions || [];\n                var measureIdx;\n                var tuple;\n\n                var key;\n                var mapItem;\n                var current;\n                var currentKeys;\n                var accumulator = [];\n                var accumulatorKeys = [];\n                var memberInfo;\n\n                var expandedNames;\n                var parts;\n                var name;\n                var idx;\n\n                if (sortDescriptors && sortDescriptors.length && !$.isEmptyObject(map)) {\n                    map = this._sortMap(map, sortDescriptors);\n                }\n\n                for (key in map) {\n                    mapItem = map[key];\n                    memberInfo = this._findExpandedMember(expanded, mapItem.uniquePath);\n\n                    current = accumulator[memberInfo.index] || [];\n                    currentKeys = accumulatorKeys[memberInfo.index] || [];\n\n                    expandedNames = memberInfo.member.names;\n\n                    for (measureIdx = 0; measureIdx < aggregatorsLength; measureIdx++) {\n                        tuple = { members: [] };\n                        for (idx = 0; idx < expandedNames.length; idx++) {\n                            if (idx === memberInfo.member.expandedIdx) {\n                                tuple.members[tuple.members.length] = {\n                                    children: [],\n                                    caption: mapItem.value,\n                                    name: mapItem.name,\n                                    hasChildren: false,\n                                    levelNum: 1,\n                                    levelName: mapItem.parentName + mapItem.name,\n                                    parentName: mapItem.parentName,\n                                    hierarchy: mapItem.parentName + mapItem.name\n                                };\n\n                                if (measureIdx === 0) {\n                                    currentKeys.push(buildPath(tuple, idx).join(\"\"));\n                                }\n                            } else {\n                                name = expandedNames[idx];\n                                parts = name.split(\"&\");\n                                tuple.members[tuple.members.length] = {\n                                    children: [],\n                                    caption: (dimensionsSchema[name] || {}).caption || \"All\",\n                                    name: name,\n                                    levelName: name,\n                                    levelNum: \"0\",\n                                    hasChildren: true,\n                                    parentName: parts.length > 1 ? parts[0] : undefined$1,\n                                    hierarchy: name\n                                };\n                            }\n                        }\n\n                        if (aggregatorsLength > 1) {\n                            tuple.members[tuple.members.length] = {\n                                children: [],\n                                caption: measureAggregators[measureIdx].caption,\n                                name: measureAggregators[measureIdx].descriptor.name,\n                                levelName: \"MEASURES\",\n                                levelNum: \"0\",\n                                hasChildren: true,\n                                parentName: undefined$1,\n                                hierarchy: \"MEASURES\"\n                            };\n                        }\n\n                        current[current.length] = tuple;\n                    }\n\n                    accumulator[memberInfo.index] = current;\n                    accumulatorKeys[memberInfo.index] = currentKeys;\n                }\n\n                return {\n                    keys: accumulatorKeys,\n                    tuples: accumulator\n                };\n            },\n\n            _findExpandedMember: function(members, parentName) {\n                for (var idx = 0; idx < members.length; idx++) {\n                    if (members[idx].uniquePath === parentName) {\n                        return {\n                            member: members[idx],\n                            index: idx\n                        };\n                    }\n                }\n            },\n\n            _asTuples: function(map, descriptor, measureAggregators, sortDescriptors) {\n                measureAggregators = measureAggregators || [];\n\n                var rootInfo = this._rootTuples(descriptor.root, measureAggregators);\n                var expandedInfo = this._expandedTuples(map, descriptor.expanded, measureAggregators, sortDescriptors);\n\n                return {\n                    keys: [].concat.apply(rootInfo.keys, expandedInfo.keys),\n                    tuples: [].concat.apply(rootInfo.tuples, expandedInfo.tuples)\n                };\n            },\n\n            _measuresInfo: function(measures, rowAxis) {\n                var idx = 0;\n                var length = measures && measures.length;\n\n                var aggregateNames = [];\n                var resultFuncs = {};\n                var formats = {};\n\n                var descriptors = (this.measures || {});\n                var measure;\n                var name;\n\n                for (; idx < length; idx++) {\n                    name = measures[idx].descriptor.name;\n                    measure = descriptors[name] || {};\n\n                    aggregateNames.push(name);\n\n                    if (measure.result) {\n                        resultFuncs[name] = measure.result;\n                    }\n\n                    if (measure.format) {\n                        formats[name] = measure.format;\n                    }\n                }\n\n                return {\n                    names: aggregateNames,\n                    formats: formats,\n                    resultFuncs: resultFuncs,\n                    rowAxis: rowAxis\n                };\n            },\n\n            _toDataArray: function(map, measuresInfo, rowKeys, columnKeys) {\n                var result = [];\n\n                var aggregates;\n                var name, i, j, k, n;\n                var row, column, columnKey;\n\n                var rowMeasureNamesLength = 1;\n                var rowMeasureNames = [];\n                var columnMeasureNames;\n\n                var rowLength = rowKeys.length || 1;\n                var columnLength = columnKeys.length || 1;\n\n                if (measuresInfo.rowAxis) {\n                    rowMeasureNames = measuresInfo.names;\n                    rowMeasureNamesLength = rowMeasureNames.length;\n                } else {\n                    columnMeasureNames = measuresInfo.names;\n                }\n\n                for (i = 0; i < rowLength; i++) {\n                    row = map[rowKeys[i] || ROW_TOTAL_KEY];\n\n                    for (n = 0; n < rowMeasureNamesLength; n++) {\n                        if (measuresInfo.rowAxis) {\n                            columnMeasureNames = [rowMeasureNames[n]];\n                        }\n\n                        for (j = 0; j < columnLength; j++) {\n                            columnKey = columnKeys[j] || ROW_TOTAL_KEY;\n                            column = row.items[columnKey];\n\n                            if (columnKey === ROW_TOTAL_KEY) {\n                                aggregates = row.aggregates;\n                            } else {\n                                aggregates = column ? column.aggregates : {};\n                            }\n\n                            for (k = 0; k < columnMeasureNames.length; k++) {\n                                name = columnMeasureNames[k];\n                                this._addData(result, aggregates[name], measuresInfo.formats[name], measuresInfo.resultFuncs[name]);\n                            }\n                        }\n                    }\n                }\n\n                return result;\n            },\n\n            _addData: function(result, value, format, resultFunc) {\n                var fmtValue = \"\";\n                var ordinal;\n\n                if (value) {\n                    value = resultFunc ? resultFunc(value) : value.accumulator;\n                    fmtValue = format ? kendo.format(format, value) : value;\n                }\n\n                ordinal = result.length;\n\n                result[ordinal] = {\n                    ordinal: ordinal,\n                    value: value || \"\",\n                    fmtValue: fmtValue\n                };\n            },\n\n            _matchDescriptors: function(dataItem, descriptor, getters) {\n                var parts;\n                var parentField;\n                var expectedValue;\n\n                var names = descriptor.names;\n                var idx = descriptor.expandedIdx;\n                var value;\n\n                while (idx > 0) {\n                    parts = names[--idx].split(\"&\");\n                    if (parts.length > 1) {\n                        parentField = parts[0];\n                        expectedValue = parts[1];\n\n                        value = getters[parentField](dataItem);\n                        value = (value !== undefined$1 && value !== null) ? value.toString() : value;\n\n                        if (value != expectedValue) {\n                            return false;\n                        }\n                    }\n                }\n                return true;\n            },\n\n            _calculateAggregate: function(measureAggregators, aggregatorContext, totalItem) {\n                var result = {};\n                var state;\n                var name;\n\n                for (var measureIdx = 0; measureIdx < measureAggregators.length; measureIdx++) {\n                    name = measureAggregators[measureIdx].descriptor.name;\n                    state = totalItem.aggregates[name] || { };\n                    state.accumulator = measureAggregators[measureIdx].aggregator(aggregatorContext, state);\n                    result[name] = state;\n                }\n\n                return result;\n            },\n\n            _processColumns: function(measureAggregators, descriptors, getters, columns, aggregatorContext, rowTotal, state, updateColumn) {\n                var value;\n                var descriptor;\n                var column;\n                var totalItem;\n                var key, name, parentName, path;\n                var dataItem = aggregatorContext.dataItem;\n                var idx = 0;\n\n                for (; idx < descriptors.length; idx++) {\n                    descriptor = descriptors[idx];\n\n                    //checks whether the dataItem is relevant to the descriptors\n                    if (!this._matchDescriptors(dataItem, descriptor, getters)) {\n                        continue;\n                    }\n\n                    path = descriptor.names.slice(0, descriptor.expandedIdx).join(\"\");\n                    name = descriptor.names[descriptor.expandedIdx];\n\n\n                    value = getters[name](dataItem);\n                    value = (value !== undefined$1 && value !== null) ? value.toString() : value;\n\n                    parentName = name;\n                    name = name + \"&\" + value;\n                    key = path + name;\n\n                    column = columns[key] || {\n                        index: state.columnIndex,\n                        parentName: parentName,\n                        name: name,\n                        directParentName: path.indexOf(\"&\") !== -1 ? path : \"\",\n                        uniquePath: path + parentName,\n                        childrenMap: {},\n                        value: value\n                    };\n\n                    if (path && columns[path] && !columns[path].childrenMap[path + parentName + \"&\" + value]) {\n                        columns[path].childrenMap[path + parentName + \"&\" + value] = true;\n                    }\n\n                    totalItem = rowTotal.items[key] || {\n                        aggregates: {}\n                    };\n\n                    rowTotal.items[key] = {\n                        index: column.index,\n                        aggregates: this._calculateAggregate(measureAggregators, aggregatorContext, totalItem)\n                    };\n\n                    if (updateColumn) {\n                        if (!columns[key]) {\n                            state.columnIndex++;\n                        }\n                        columns[key] = column;\n                    }\n                }\n            },\n\n            _measureAggregators: function(options) {\n                var measureDescriptors = options.measures || [];\n                var measures = this.measures || {};\n                var aggregators = [];\n                var descriptor, measure, idx, length;\n                var defaultAggregate, aggregate;\n\n                if (measureDescriptors.length) {\n                    for (idx = 0, length = measureDescriptors.length; idx < length; idx++) {\n                        descriptor = measureDescriptors[idx];\n                        measure = measures[descriptor.name];\n                        defaultAggregate = null;\n\n                        if (measure) {\n                            aggregate = measure.aggregate;\n                            if (typeof aggregate === \"string\") {\n                                defaultAggregate = functions[aggregate.toLowerCase()];\n\n                                if (!defaultAggregate) {\n                                    throw new Error(\"There is no such aggregate function\");\n                                }\n\n                                measure.aggregate = defaultAggregate.aggregate || defaultAggregate;\n                                measure.result = defaultAggregate.result;\n                            }\n\n\n                            aggregators.push({\n                                descriptor: descriptor,\n                                caption: measure.caption,\n                                result: measure.result,\n                                aggregator: createAggregateGetter(measure)\n                            });\n                        }\n                    }\n                } else {\n                    aggregators.push({\n                        descriptor: { name: \"default\" },\n                        caption: \"default\",\n                        aggregator: function() { return 1; }\n                    });\n                }\n\n                return aggregators;\n            },\n\n            _buildGetters: function(names) {\n                var result = {};\n                var parts;\n                var name;\n\n                for (var idx = 0; idx < names.length; idx++) {\n                    name = names[idx];\n                    parts = name.split(\"&\");\n\n                    if (parts.length > 1) {\n                        result[parts[0]] = kendo.getter(parts[0], true);\n                    } else {\n                        result[name] = kendo.getter(normalizeName(name), true);\n                    }\n                }\n\n                return result;\n            },\n\n            _parseDescriptors: function(descriptors) {\n                var parsedDescriptors = parseDescriptors(descriptors);\n                var rootNames = getRootNames(parsedDescriptors.root);\n                var expanded = parsedDescriptors.expanded;\n                var result = [];\n\n                for (var idx = 0; idx < expanded.length; idx++) {\n                    result.push(mapNames(expanded[idx].name, rootNames));\n                }\n\n                return {\n                    root: rootNames,\n                    expanded: result\n                };\n            },\n\n            _filter: function(data, filter) {\n                if (!filter) {\n                    return data;\n                }\n\n                var expr;\n                var idx = 0;\n                var filters = filter.filters;\n\n                for (; idx < filters.length; idx++) {\n                    expr = filters[idx];\n\n                    if (expr.operator === \"in\") {\n                        filters[idx] = this._normalizeFilter(expr);\n                    }\n                }\n\n                return new kendo.data.Query(data).filter(filter).data;\n            },\n\n            _normalizeFilter: function(filter) {\n                var value = filter.value.split(\",\");\n                var result = [];\n\n                if (!value.length) {\n                    return value;\n                }\n\n                for (var idx = 0; idx < value.length; idx++) {\n                    result.push({\n                        field: filter.field,\n                        operator: \"eq\",\n                        value: value[idx]\n                    });\n                }\n\n                return {\n                    logic: \"or\",\n                    filters: result\n                };\n            },\n\n            process: function(data, options) {\n                data = data || [];\n                options = options || {};\n\n                data = this._filter(data, options.filter);\n\n                var measures = options.measures || [];\n\n                var measuresRowAxis = options.measuresAxis === \"rows\";\n\n                var columnDescriptors = options.columns || [];\n                var rowDescriptors = options.rows || [];\n\n                if (!columnDescriptors.length && rowDescriptors.length && (!measures.length || (measures.length && measuresRowAxis))) {\n                    columnDescriptors = rowDescriptors;\n                    rowDescriptors = [];\n                    measuresRowAxis = false;\n                }\n\n                if (!columnDescriptors.length && !rowDescriptors.length) {\n                    measuresRowAxis = false;\n                }\n\n                if (!columnDescriptors.length && measures.length) {\n                    columnDescriptors = normalizeMembers(options.measures);\n                }\n\n                columnDescriptors = this._parseDescriptors(columnDescriptors);\n                rowDescriptors = this._parseDescriptors(rowDescriptors);\n\n                var aggregatedData = {};\n                var columns = {};\n                var rows = {};\n\n                var rowValue;\n                var state = { columnIndex: 0 };\n\n                var measureAggregators = this._measureAggregators(options);\n\n                var columnGetters = this._buildGetters(columnDescriptors.root);\n                var rowGetters = this._buildGetters(rowDescriptors.root);\n\n                var processed = false;\n\n                var expandedColumns = columnDescriptors.expanded;\n                var expandedRows = rowDescriptors.expanded;\n\n                var dataItem;\n                var aggregatorContext;\n                var hasExpandedRows = expandedRows.length !== 0;\n\n                var rowIdx, rowDescriptor, rowName, rowTotal;\n                var key, path, parentName, value;\n                var columnsInfo, rowsInfo;\n                var length = data.length;\n                var idx = 0;\n\n                if (columnDescriptors.root.length || rowDescriptors.root.length) {\n                    processed = true;\n\n                    for (idx = 0; idx < length; idx++) {\n                        dataItem = data[idx];\n\n                        aggregatorContext = {\n                            dataItem: dataItem,\n                            index: idx\n                        };\n\n                        rowTotal = aggregatedData[ROW_TOTAL_KEY] || {\n                            items: {},\n                            aggregates: {}\n                        };\n\n                        this._processColumns(measureAggregators, expandedColumns, columnGetters, columns, aggregatorContext, rowTotal, state, !hasExpandedRows);\n\n                        rowTotal.aggregates = this._calculateAggregate(measureAggregators, aggregatorContext, rowTotal);\n                        aggregatedData[ROW_TOTAL_KEY] = rowTotal;\n\n                        for (rowIdx = 0; rowIdx < expandedRows.length; rowIdx++) {\n                            rowDescriptor = expandedRows[rowIdx];\n\n                            if (!this._matchDescriptors(dataItem, rowDescriptor, rowGetters)) {\n                                this._processColumns(measureAggregators, expandedColumns, columnGetters, columns, aggregatorContext, { items: {}, aggregates: {} }, state, true);\n                                continue;\n                            }\n\n                            path = rowDescriptor.names.slice(0, rowDescriptor.expandedIdx).join(\"\");\n                            rowName = rowDescriptor.names[rowDescriptor.expandedIdx];\n\n                            parentName = rowName;\n\n                            rowValue = rowGetters[rowName](dataItem);\n                            rowValue = rowValue !== undefined$1 ? rowValue.toString() : rowValue;\n\n                            rowName = rowName + \"&\" + rowValue;\n                            key = path + rowName;\n\n                            rows[key] = {\n                                uniquePath: path + parentName,\n                                parentName: parentName,\n                                name: rowName,\n                                value: rowValue\n                            };\n\n                            value = aggregatedData[key] || {\n                                items: {},\n                                aggregates: {}\n                            };\n\n                            this._processColumns(measureAggregators, expandedColumns, columnGetters, columns, aggregatorContext, value, state, true);\n\n                            value.aggregates = this._calculateAggregate(measureAggregators, aggregatorContext, value);\n                            aggregatedData[key] = value;\n                        }\n                    }\n                }\n\n                if (processed && length) {\n                    if (measureAggregators.length > 1 && (!options.columns || !options.columns.length)) {\n                        columnDescriptors = {\n                            root: [],\n                            expanded: []\n                        };\n                    }\n\n                    columnsInfo = this._asTuples(columns, columnDescriptors, measuresRowAxis ? [] : measureAggregators, options.sort ? options.sort : []);\n                    rowsInfo = this._asTuples(rows, rowDescriptors, measuresRowAxis ? measureAggregators : [], options.sort ? options.sort : []);\n\n                    columns = columnsInfo.tuples;\n                    rows = rowsInfo.tuples;\n\n                    aggregatedData = this._toDataArray(aggregatedData, this._measuresInfo(measureAggregators, measuresRowAxis), rowsInfo.keys, columnsInfo.keys);\n                } else {\n                    aggregatedData = columns = rows = [];\n                }\n\n                return {\n                    axes: {\n                        columns: { tuples: columns },\n                        rows: { tuples: rows }\n                    },\n                    data: aggregatedData\n                };\n            }\n        });\n\n        var PivotTransport = Class.extend({\n            init: function(options, transport) {\n                this.transport = transport;\n                this.options = transport.options || {};\n\n                if (!this.transport.discover) {\n                    if (isFunction(options.discover)) {\n                        this.discover = options.discover;\n                    }\n                }\n            },\n            read: function(options) {\n                return this.transport.read(options);\n            },\n            update: function(options) {\n                return this.transport.update(options);\n            },\n            create: function(options) {\n                return this.transport.create(options);\n            },\n            destroy: function(options) {\n                return this.transport.destroy(options);\n            },\n            discover: function(options) {\n                if (this.transport.discover) {\n                    return this.transport.discover(options);\n                }\n                options.success({});\n            },\n            catalog: function(val) {\n                var options = this.options || {};\n\n                if (val === undefined$1) {\n                    return (options.connection || {}).catalog;\n\n                }\n\n                var connection = options.connection || {};\n                connection.catalog = val;\n\n                this.options.connection = connection;\n                $.extend(this.transport.options, { connection: connection });\n            },\n            cube: function(val) {\n                var options = this.options || {};\n\n                if (val === undefined$1) {\n                    return (options.connection || {}).cube;\n                }\n\n                var connection = options.connection || {};\n                connection.cube = val;\n\n                this.options.connection = connection;\n                extend(true, this.transport.options, { connection: connection });\n            }\n        });\n\n        var PivotDataSourceV2 = DataSource.extend({\n            init: function(options) {\n\n                var cube = ((options || {}).schema || {}).cube;\n\n                var schema = {\n                    axes: identity,\n                    cubes: identity,\n                    catalogs: identity,\n                    measures: identity,\n                    dimensions: identity,\n                    hierarchies: identity,\n                    levels: identity,\n                    members: identity\n                };\n\n                if (cube) {\n                    this.cubeSchema = $.extend(schema, this._cubeSchema(cube));\n                }\n\n                DataSource.fn.init.call(this, extend(true, {}, {\n                    schema: this.cubeSchema\n                }, options));\n\n                var transportOptions = this.options.transport || {};\n\n                if ((this.options.type || \"xmla\").toLowerCase() === \"xmla\") {\n                    this._online = true;\n                    this.transport = new XmlaTransportV2(transportOptions);\n                } else {\n                    this.transport = new PivotTransport(this.options.transport || {}, this.transport);\n                }\n\n                this._columns = normalizeMembers(this.options.columns);\n                this._rows = normalizeMembers(this.options.rows);\n\n                var measures = this.cubeSchema ? this.cubeSchema.measures() : this.options.measures || [];\n\n                if (toString.call(measures) === \"[object Object]\") {\n                    this._measuresAxis = measures.axis || \"columns\";\n                    measures = measures.values || [];\n                }\n\n                this._measures = normalizeMeasures(measures);\n            },\n\n            options: {\n                serverSorting: true,\n                serverPaging: true,\n                serverFiltering: true,\n                serverGrouping: true,\n                serverAggregates: true\n            },\n\n            axes: function() {\n                return {\n                    columns: normalizeAxis(this.columns()),\n                    rows: normalizeAxis(this.rows())\n                };\n            },\n\n            catalog: function(val) {\n                if (val === undefined$1) {\n                    return this.transport.catalog();\n                }\n\n                this.transport.catalog(val);\n                this._mergeState({});// clears current state\n                this.read();\n            },\n\n            cube: function(val) {\n                if (val === undefined$1) {\n                    return this.transport.cube();\n                }\n\n                this.transport.cube(val);\n                this._mergeState({});// clears current state\n                this.read();\n            },\n\n            measuresAxis: function() {\n                return this._measuresAxis || \"columns\";\n            },\n\n            fetch: function(callback) {\n                var that = this;\n                if (this._data === undefined$1 || this._data.length === 0) {\n                    var fn = function() {\n                        if (isFunction(callback)) {\n                            callback.call(that);\n                        }\n                    };\n\n                    return this._query().done(fn);\n                }\n            },\n\n            _createSettings: function(axes) {\n                var settings = [];\n                var key;\n                var dimensions = this.cubeSchema.dimensionsSettings();\n                var displayValueFunc = function(item) { return item[this.key]; };\n                var sortValueFunc = function(value) { return value; };\n                for (var i = 0; i < axes.length; i++) {\n                    key = axes[i].name[0];\n                    settings.push({\n                        key: key,\n                        displayValue: displayValueFunc.bind({ key: key }),\n                        sortValue: sortValueFunc,\n                        caption: (dimensions[key] || {}).caption || key\n                    });\n                }\n                return settings;\n            },\n\n            _cubeSchema: function(cube) {\n                return {\n                    dimensionsSettings: function() {\n                        return cube.dimensions;\n                    },\n                    dimensions: function() {\n                        var result = [];\n                        var dimensions = cube.dimensions;\n\n                        for (var key in dimensions) {\n                            result.push({\n                                name: key,\n                                caption: dimensions[key].caption || key,\n                                uniqueName: key,\n                                defaultHierarchy: key,\n                                type: 1\n                            });\n                        }\n\n                        if (cube.measures) {\n                            result.push({\n                                name: MEASURES,\n                                caption: MEASURES,\n                                uniqueName: MEASURES,\n                                type: 2\n                            });\n                        }\n\n                        return result;\n                    },\n                    restoreMeasure: function(measures, measure) {\n                        for (var i = 0; i < measures.length; i++) {\n                            if (!measures[i].aggregate) {\n                                measures[i].aggregate = measure.aggregate;\n                                measures[i].value = measure.value;\n                                measures[i].caption = measure.caption;\n                                measures[i].uniqueName = measure.uniqueName;\n                                measures[i].type = 2;\n                            }\n                        }\n                    },\n                    measures: function() {\n                        var result = [];\n                        var measures = cube.measures;\n\n                        for (var key in measures) {\n                            result.push(createLocalMeasure(measures[key].field, key, measures[key].format, measures[key].aggregate));\n                        }\n\n                        return result;\n                    },\n                    memberType: function(name) {\n                        var getter = kendo.getter(normalizeName(name), true);\n                        var data = this.options.data || this._pristineData || [];\n                        if (!data.length) {\n                            return null;\n                        }\n\n                        return typeof getter(data[0]);\n                    }.bind(this),\n                    members: function(name) {\n                        var data = this.options.data || this._pristineData || [];\n                        var result = [];\n                        var distinct = {};\n                        var getter;\n                        var value;\n                        var idx = 0;\n\n                        if (name.indexOf(\"[(ALL)]\") !== -1) {\n                            return [\n                                {\n                                    caption: cube.dimensions[name.split(\".\")[0]].caption || name,\n                                    levelUniqueName: name,\n                                    name: name,\n                                    childrenCardinality: 1,\n                                    uniqueName: name\n                                }\n                            ];\n                        }\n\n                        getter = kendo.getter(normalizeName(name), true);\n\n                        for (; idx < data.length; idx++) {\n                            value = getter(data[idx]);\n                            if ((value || value === 0 || value === false) && !distinct[value]) {\n                                distinct[value] = true;\n\n                                result.push({\n                                    caption: value + \"\",\n                                    name: value + \"\",\n                                    childrenCardinality: 0,\n                                    uniqueName: value\n                                });\n                            }\n                        }\n\n                        return result;\n                    }.bind(this)\n                };\n            },\n\n            read: function(data) {\n                const that = this;\n                const isPrevented = that.trigger(REQUESTSTART, { type: READ });\n                const params = that._params(data);\n                const deferred = $.Deferred();\n                if (!isPrevented) {\n                    that.trigger(PROGRESS);\n\n                    if (that.options.data) {\n                        loadLocalData.call(that, that.options.data, params, deferred);\n                    } else if ((this.options.type || \"xmla\").toLowerCase() === \"xmla\") {\n                        that.transport.read({\n                            data: params,\n                            success: function(newDataState) {\n                                that._saveState(newDataState);\n                                that.trigger(REQUESTEND, { response: newDataState, type: READ });\n                                that.trigger(CHANGE);\n                                if (that._preventRefresh) {\n                                    that._preventRefresh = false;\n                                }\n                                deferred.resolve();\n                            },\n                            error: function(err) {\n                                that.trigger(ERROR, { error: err });\n                            }\n                        });\n                    } else {\n                        that.transport.read({\n                            success: function(data) {\n                                loadLocalData.call(that, data, params, deferred);\n                            },\n                            error: function(err) {\n                                that.trigger(ERROR, { error: err });\n                            }\n                        });\n                    }\n                }\n                return deferred.promise();\n            },\n\n            _params: function(data) {\n                var that = this;\n                var options = DataSource.fn._params.call(that, data);\n\n                options = extend({\n                    columnAxes: JSON.parse(JSON.stringify(that._columns)),\n                    rowAxes: JSON.parse(JSON.stringify(that._rows)),\n                    measuresAxis: that.measuresAxis(),\n                    measureAxes: that._measures\n                }, options);\n\n                if ((this.options.type || \"\").toLowerCase() === \"xmla\") {\n                    options.connection = that.options.transport.connection;\n                }\n\n                if (options.filter) {\n                    options.filter = normalizeFilter(options.filter);\n                    options.filter = (options.filter || {}).filters;\n                }\n\n                if (options.sort) {\n                    options.sort = normalizeSort(options.sort);\n                }\n\n                return options;\n            },\n\n            discover: function(options) {\n                const that = this;\n                const transport = that.transport;\n                const isOdata = that.options.type === \"odata\";\n\n                const converters = {\n                    \"schemaMeasures\": that.reader.measures,\n                    \"schemaKPIs\": that.reader.kpis,\n                    \"schemaDimensions\": that.reader.dimensions,\n                    \"schemaHierarchies\": that.reader.hierarchies,\n                    \"schemaLevels\": that.reader.levels,\n                    \"schemaCubes\": that.reader.cubes,\n                    \"schemaCatalogs\": that.reader.catalogs,\n                    \"schemaMembers\": that.reader.members\n                };\n\n                if (transport.discover && !isOdata) {\n                    return transport.discover(options);\n                }\n\n                return $.Deferred(function(deferred) {\n                    transport.discover(extend({\n                        success: function(response) {\n                           response = that.reader.parse(response);\n\n                            if (that._handleCustomErrors(response)) {\n                                return;\n                            }\n\n                            if (converters[options.command]) {\n                                response = converters[options.command](response);\n                            }\n                            deferred.resolve(response);\n                        },\n                        error: function(response, status, error) {\n                            deferred.reject(response);\n                            that.error(response, status, error);\n                        }\n                    }, options));\n                }).promise().done(function() {\n                    that.trigger(\"schemaChange\");\n                });\n            },\n\n            schemaMeasures: function() {\n                const that = this;\n                return that.discover(\n                    {\n                        command: \"schemaMeasures\",\n                        restrictions: {\n                            catalogName: that.transport.catalog(),\n                            cubeName: that.transport.cube()\n                        }\n                    });\n            },\n\n            schemaKPIs: function() {\n                const that = this;\n                return that.discover(\n                    {\n                        command: \"schemaKPIs\",\n                        restrictions: {\n                            catalogName: that.transport.catalog(),\n                            cubeName: that.transport.cube()\n                        }\n                    });\n                },\n\n            schemaDimensions: function() {\n                const that = this;\n                return that.discover(\n                    {\n                        command: \"schemaDimensions\",\n                        restrictions: {\n                            catalogName: that.transport.catalog(),\n                            cubeName: that.transport.cube()\n                        }\n                    });\n                },\n\n            schemaHierarchies: function(dimensionName) {\n                const that = this;\n                return that.discover({\n                    command: \"schemaHierarchies\",\n                    restrictions: {\n                        catalogName: that.transport.catalog(),\n                        cubeName: that.transport.cube(),\n                        dimensionUniqueName: dimensionName\n                    }\n                 });\n             },\n\n            schemaLevels: function(hierarchyName) {\n                const that = this;\n                return that.discover({\n                    command: \"schemaLevels\",\n                    restrictions: {\n                        catalogName: that.transport.catalog(),\n                        cubeName: that.transport.cube(),\n                        hierarchyUniqueName: hierarchyName\n                    }\n                });\n            },\n\n            schemaCubes: function() {\n                const that = this;\n                return that.discover({\n                    command: \"schemaCubes\",\n                    restrictions: {\n                        catalogName: that.transport.catalog()\n                    }\n                });\n            },\n\n\n            schemaCatalogs: function() {\n                const that = this;\n                return that.discover({\n                    command: \"schemaCatalogs\"\n                });\n            },\n\n\n            schemaMembers: function(restrictions) {\n                const that = this;\n                return that.discover({\n                    command: \"schemaMembers\",\n                    restrictions: extend({\n                       catalogName: that.transport.catalog(),\n                       cubeName: that.transport.cube()\n                    }, restrictions)\n                });\n            },\n\n            _saveState: function(state) {\n                var that = this;\n\n                that._columnTuples = state.columns;\n                that._rowTuples = state.rows;\n                that._view = that._data = state.data;\n            },\n\n            columns: function(val) {\n                if (val === undefined$1) {\n                    return this._columns;\n                }\n\n                this._columns = normalizeMembers(val);\n                this.read();\n            },\n\n            rows: function(val) {\n                if (val === undefined$1) {\n                    return this._rows;\n                }\n\n                this._rows = normalizeMembers(val);\n\n                this.read();\n            },\n\n            measures: function(val) {\n                if (val === undefined$1) {\n                    return this._measures;\n                }\n\n                this._measures = normalizeMeasures(val);\n\n                this.read();\n            },\n\n            _mergeState: function(options) {\n                options = DataSource.fn._mergeState.call(this, options);\n\n                return options;\n            },\n\n            _query: function(options) {\n                var that = this;\n                var params = extend({}, {\n                    sort: that.sort(),\n                    measuresAxis: that.measuresAxis(),\n                    filter: that.filter()\n                }, options);\n                this._mergeState(params);\n\n                return this.read();\n            },\n        });\n\n        var PivotDataSource = DataSource.extend({\n            init: function(options) {\n                var cube = ((options || {}).schema || {}).cube;\n                var measuresAxis = \"columns\";\n                var measures;\n\n                var schema = {\n                    axes: identity,\n                    cubes: identity,\n                    catalogs: identity,\n                    measures: identity,\n                    dimensions: identity,\n                    hierarchies: identity,\n                    levels: identity,\n                    members: identity\n                };\n\n                if (cube) {\n                    schema = $.extend(schema, this._cubeSchema(cube));\n                    this.cubeBuilder = new PivotCubeBuilder(cube);\n                }\n\n                DataSource.fn.init.call(this, extend(true, {}, {\n                    schema: schema\n                }, options));\n\n                this.transport = new PivotTransport(this.options.transport || {}, this.transport);\n\n                this._columns = normalizeMembers(this.options.columns);\n                this._rows = normalizeMembers(this.options.rows);\n\n                measures = this.options.measures || [];\n\n                if (toString.call(measures) === \"[object Object]\") {\n                    measuresAxis = measures.axis || \"columns\";\n                    measures = measures.values || [];\n                }\n\n                this._measures = normalizeMeasures(measures);\n                this._measuresAxis = measuresAxis;\n\n                this._skipNormalize = 0;\n                this._axes = {};\n            },\n\n            _cubeSchema: function(cube) {\n                return {\n                    dimensions: function() {\n                        var result = [];\n                        var dimensions = cube.dimensions;\n\n                        for (var key in dimensions) {\n                            result.push({\n                                name: key,\n                                caption: dimensions[key].caption || key,\n                                uniqueName: key,\n                                defaultHierarchy: key,\n                                type: 1\n                            });\n                        }\n\n                        if (cube.measures) {\n                            result.push({\n                                name: MEASURES,\n                                caption: MEASURES,\n                                uniqueName: MEASURES,\n                                type: 2\n                            });\n                        }\n\n                        return result;\n                    },\n                    hierarchies: function() {\n                        return [];\n                    },\n                    measures: function() {\n                        var result = [];\n                        var measures = cube.measures;\n\n                        for (var key in measures) {\n                            result.push({\n                                name: key,\n                                caption: key,\n                                uniqueName: key,\n                                aggregator: key\n                            });\n                        }\n\n                        return result;\n                    },\n                    members: function(response, restrictions) {\n                        var name = restrictions.levelUniqueName || restrictions.memberUniqueName;\n                        var schemaData = this.options.schema.data;\n                        var dataGetter = isFunction(schemaData) ? schemaData : kendo.getter(schemaData, true);\n                        var data = (this.options.data && dataGetter(this.options.data)) || this._rawData || [];\n                        var result = [];\n                        var getter;\n                        var value;\n                        var idx = 0;\n                        var distinct = {};\n\n                        if (name) {\n                            name = name.split(\".\")[0];\n                        }\n\n                        if (!restrictions.treeOp) {\n                            result.push({\n                                caption: cube.dimensions[name].caption || name,\n                                childrenCardinality: \"1\",\n                                dimensionUniqueName: name,\n                                hierarchyUniqueName: name,\n                                levelUniqueName: name,\n                                name: name,\n                                uniqueName: name\n                            });\n\n                            return result;\n                        }\n\n                        getter = kendo.getter(normalizeName(name), true);\n\n                        for (; idx < data.length; idx++) {\n                            value = getter(data[idx]);\n                            if ((value || value === 0) && !distinct[value]) {\n                                distinct[value] = true;\n\n                                result.push({\n                                    caption: value,\n                                    childrenCardinality: \"0\",\n                                    dimensionUniqueName: name,\n                                    hierarchyUniqueName: name,\n                                    levelUniqueName: name,\n                                    name: value,\n                                    uniqueName: value\n                                });\n                            }\n                        }\n\n                        return result;\n                    }.bind(this)\n                };\n            },\n\n            options: {\n                serverSorting: true,\n                serverPaging: true,\n                serverFiltering: true,\n                serverGrouping: true,\n                serverAggregates: true\n            },\n\n            catalog: function(val) {\n                if (val === undefined$1) {\n                    return this.transport.catalog();\n                }\n\n                this.transport.catalog(val);\n                this._mergeState({});// clears current state\n                this._axes = {};\n                this.data([]);\n            },\n\n            cube: function(val) {\n                if (val === undefined$1) {\n                    return this.transport.cube();\n                }\n\n                this.transport.cube(val);\n                this._axes = {};\n                this._mergeState({});// clears current state\n                this.data([]);\n            },\n\n            axes: function() {\n                return this._axes;\n            },\n\n            columns: function(val) {\n                if (val === undefined$1) {\n                    return this._columns;\n                }\n\n                this._skipNormalize += 1;\n                this._clearAxesData = true;\n\n                this._columns = normalizeMembers(val);\n                this.query({\n                    columns: val,\n                    rows: this.rowsAxisDescriptors(),\n                    measures: this.measures(),\n                    sort: this.sort(),\n                    filter: this.filter()\n                });\n            },\n\n            rows: function(val) {\n                if (val === undefined$1) {\n                    return this._rows;\n                }\n\n                this._skipNormalize += 1;\n                this._clearAxesData = true;\n\n                this._rows = normalizeMembers(val);\n\n                this.query({\n                    columns: this.columnsAxisDescriptors(),\n                    rows: val,\n                    measures: this.measures(),\n                    sort: this.sort(),\n                    filter: this.filter()\n                });\n            },\n\n            measures: function(val) {\n                if (val === undefined$1) {\n                    return this._measures;\n                }\n\n                this._skipNormalize += 1;\n                this._clearAxesData = true;\n\n                this.query({\n                    columns: this.columnsAxisDescriptors(),\n                    rows: this.rowsAxisDescriptors(),\n                    measures: normalizeMeasures(val),\n                    sort: this.sort(),\n                    filter: this.filter()\n                });\n            },\n\n            measuresAxis: function() {\n                return this._measuresAxis || \"columns\";\n            },\n\n            _expandPath: function(path, axis) {\n                var origin = axis === \"columns\" ? \"columns\" : \"rows\";\n                var other = axis === \"columns\" ? \"rows\" : \"columns\";\n\n                var members = normalizeMembers(path);\n                var memberToExpand = getName(members[members.length - 1]);\n\n                this._lastExpanded = origin;\n\n                members = descriptorsForMembers(this.axes()[origin], members, this.measures());\n\n                for (var idx = 0; idx < members.length; idx++) {\n                    var memberName = getName(members[idx]);\n\n                    if (memberName === memberToExpand) {\n                        if (members[idx].expand) {\n                            return;\n                        }\n                        members[idx].expand = true;\n                    } else {\n                        members[idx].expand = false;\n                    }\n                }\n\n                var descriptors = {};\n                descriptors[origin] = members;\n                descriptors[other] = this._descriptorsForAxis(other);\n\n                this._query(descriptors);\n            },\n\n            _descriptorsForAxis: function(axis) {\n                var axes = this.axes();\n                var descriptors = this[axis]() || [];\n\n                if (axes && axes[axis] && axes[axis].tuples && axes[axis].tuples[0]) {\n                    descriptors = descriptorsForAxes(axes[axis].tuples || []);\n                }\n                return descriptors;\n            },\n\n            columnsAxisDescriptors: function() {\n                return this._descriptorsForAxis(\"columns\");\n            },\n\n            rowsAxisDescriptors: function() {\n                return this._descriptorsForAxis(\"rows\");\n            },\n\n            _process: function(data, e) {\n                this._view = data;\n\n                e = e || {};\n                e.items = e.items || this._view;\n\n                this.trigger(CHANGE, e);\n            },\n\n            _query: function(options) {\n                var that = this;\n\n                if (!options) {\n                    this._skipNormalize += 1;\n                    this._clearAxesData = true;\n                }\n\n                return that.query(extend({}, {\n                    page: that.page(),\n                    pageSize: that.pageSize(),\n                    sort: that.sort(),\n                    filter: that.filter(),\n                    group: that.group(),\n                    aggregate: that.aggregate(),\n                    columns: this.columnsAxisDescriptors(),\n                    rows: this.rowsAxisDescriptors(),\n                    measures: this.measures()\n                }, options));\n            },\n\n            query: function(options) {\n                var state = this._mergeState(options);\n\n                if (this._data.length && this.cubeBuilder) {\n                    this._params(state);\n                    this._updateLocalData(this._pristineData);\n\n                    return $.Deferred().resolve().promise();\n                }\n\n                return this.read(state);\n            },\n\n            _mergeState: function(options) {\n                options = DataSource.fn._mergeState.call(this, options);\n\n                if (options !== undefined$1) {\n                    this._measures = normalizeMeasures(options.measures);\n\n                    if (options.columns) {\n                        options.columns = normalizeMembers(options.columns);\n                    } else if (!options.columns) {\n                        this._columns = [];\n                    }\n\n                    if (options.rows) {\n                        options.rows = normalizeMembers(options.rows);\n                    } else if (!options.rows) {\n                        this._rows = [];\n                    }\n                }\n                return options;\n            },\n\n            filter: function(val) {\n                if (val === undefined$1) {\n                    return this._filter;\n                }\n\n                this._skipNormalize += 1;\n                this._clearAxesData = true;\n                this._query({ filter: val, page: 1 });\n            },\n\n            expandColumn: function(path) {\n                this._expandPath(path, \"columns\");\n            },\n\n            expandRow: function(path) {\n                this._expandPath(path, \"rows\");\n            },\n\n            success: function(data) {\n                var originalData;\n                if (this.cubeBuilder) {\n                    originalData = (this.reader.data(data) || []).slice(0);\n                }\n                DataSource.fn.success.call(this, data);\n                if (originalData) {\n                    this._pristineData = originalData;\n                }\n            },\n\n            _processResult: function(data, axes) {\n                if (this.cubeBuilder) {\n                    var processedData = this.cubeBuilder.process(data, this._requestData);\n\n                    data = processedData.data;\n                    axes = processedData.axes;\n                }\n\n                var columnIndexes, rowIndexes;\n                var tuples, resultAxis, measures, axisToSkip;\n                var columnDescriptors = this.columns();\n                var rowDescriptors = this.rows();\n                var hasColumnTuples = axes.columns && axes.columns.tuples;\n\n                if (!columnDescriptors.length && rowDescriptors.length && hasColumnTuples && (this._rowMeasures().length || !this.measures().length)) {\n                    axes = {\n                        columns: {},\n                        rows: axes.columns\n                    };\n                }\n\n                if (!columnDescriptors.length && !rowDescriptors.length && this.measuresAxis() === \"rows\" && hasColumnTuples) {\n                    axes = {\n                        columns: {},\n                        rows: axes.columns\n                    };\n                }\n\n                this._axes = {\n                    columns: normalizeAxis(this._axes.columns),\n                    rows: normalizeAxis(this._axes.rows)\n                };\n\n                axes = {\n                    columns: normalizeAxis(axes.columns),\n                    rows: normalizeAxis(axes.rows)\n                };\n\n                columnIndexes = this._normalizeTuples(axes.columns.tuples, this._axes.columns.tuples, columnDescriptors, this._columnMeasures());\n                rowIndexes = this._normalizeTuples(axes.rows.tuples, this._axes.rows.tuples, rowDescriptors, this._rowMeasures());\n\n                if (this._skipNormalize > 0) {\n                    this._skipNormalize -= 1;\n                }\n\n                if (!this.cubeBuilder) {\n                    data = this._normalizeData({\n                        columnsLength: axes.columns.tuples.length,\n                        rowsLength: axes.rows.tuples.length,\n                        columnIndexes: columnIndexes,\n                        rowIndexes: rowIndexes,\n                        data: data\n                    });\n                }\n\n                if (this._lastExpanded == \"rows\") {\n                    tuples = axes.columns.tuples;\n                    measures = this._columnMeasures();\n                    resultAxis = validateAxis(axes.columns, this._axes.columns, measures);\n\n                    if (resultAxis) {\n                        axisToSkip = \"columns\";\n                        axes.columns = resultAxis;\n                        adjustDataByColumn(tuples, resultAxis.tuples, axes.rows.tuples.length, measures, data);\n                        if (!this.cubeBuilder) {\n                            data = this._normalizeData({\n                                columnsLength: membersCount(axes.columns.tuples, measures),\n                                rowsLength: axes.rows.tuples.length,\n                                data: data\n                            });\n                        }\n                    }\n                } else if (this._lastExpanded == \"columns\") {\n                    tuples = axes.rows.tuples;\n                    measures = this._rowMeasures();\n                    resultAxis = validateAxis(axes.rows, this._axes.rows, measures);\n\n                    if (resultAxis) {\n                        axisToSkip = \"rows\";\n                        axes.rows = resultAxis;\n                        adjustDataByRow(tuples, resultAxis.tuples, axes.columns.tuples.length, measures, data);\n\n                        if (!this.cubeBuilder) {\n                            data = this._normalizeData({\n                                columnsLength: membersCount(axes.rows.tuples, measures),\n                                rowsLength: axes.columns.tuples.length,\n                                data: data\n                            });\n                        }\n                    }\n                }\n\n                this._lastExpanded = null;\n\n                var result = this._mergeAxes(axes, data, axisToSkip);\n                this._axes = result.axes;\n\n                return result.data;\n            },\n\n            _readData: function(data) {\n                var axes = this.reader.axes(data);\n                var newData = this.reader.data(data);\n\n                if (this.cubeBuilder) {\n                    this._rawData = newData;\n                }\n\n                return this._processResult(newData, axes);\n            },\n\n            _createTuple: function(tuple, measure, buildRoot) {\n                var members = tuple.members;\n                var length = members.length;\n                var root = { members: [] };\n                var levelName, levelNum;\n                var name, parentName;\n                var hasChildren;\n                var hierarchy;\n                var caption;\n                var member;\n                var idx = 0;\n\n                if (measure) {\n                    length -= 1;\n                }\n\n                for (; idx < length; idx++) {\n                    member = members[idx];\n                    levelNum = Number(member.levelNum);\n\n                    name = member.name;\n                    parentName = member.parentName;\n                    caption = member.caption || name;\n                    hasChildren = member.hasChildren;\n                    hierarchy = member.hierarchy;\n                    levelName = member.levelName;\n\n                    if (buildRoot) {\n                        caption = \"All\";\n                        if (levelNum === 0) {\n                            parentName = member.name;\n                        } else {\n                            levelNum -= 1;\n                        }\n\n                        hasChildren = true;\n                        name = hierarchy = levelName = parentName;\n                    }\n\n                    root.members.push({\n                        name: name,\n                        children: [],\n                        caption: caption,\n                        levelName: levelName,\n                        levelNum: levelNum.toString(),\n                        hasChildren: hasChildren,\n                        hierarchy: hierarchy,\n                        parentName: !buildRoot ? parentName : \"\"\n                    });\n                }\n\n                if (measure) {\n                    root.members.push({\n                        name: measure.name,\n                        children: []\n                    });\n                }\n\n                return root;\n            },\n\n            _hasRoot: function(target, source, descriptors) {\n                if (source.length) {\n                    return findExistingTuple(source, target).tuple;\n                }\n\n                var members = target.members;\n                var member;\n                var descriptor;\n\n                var isRoot = true;\n                var levelNum;\n\n                for (var idx = 0, length = members.length; idx < length; idx++) {\n                    member = members[idx];\n                    levelNum = Number(member.levelNum) || 0;\n                    descriptor = descriptors[idx];\n\n                    if (!(levelNum === 0 || (descriptor && member.name === getName(descriptor)))) {\n                        isRoot = false;\n                        break;\n                    }\n                }\n\n                return isRoot;\n            },\n\n            _mergeAxes: function(sourceAxes, data, axisToSkip) {\n                var columnMeasures = this._columnMeasures();\n                var rowMeasures = this._rowMeasures();\n                var axes = this.axes();\n                var startIndex, tuples;\n\n                var oldRowsLength = membersCount(axes.rows.tuples, rowMeasures);\n                var newRowsLength = sourceAxes.rows.tuples.length;\n\n                var oldColumnsLength = membersCount(axes.columns.tuples, columnMeasures);\n                var newColumnsLength = sourceAxes.columns.tuples.length;\n\n                if (axisToSkip == \"columns\") {\n                    newColumnsLength = oldColumnsLength;\n                    tuples = sourceAxes.columns.tuples;\n                } else {\n                    tuples = parseSource(sourceAxes.columns.tuples, columnMeasures);\n                    data = prepareDataOnColumns(tuples, data);\n                }\n\n                var mergedColumns = mergeTuples(axes.columns.tuples, tuples, columnMeasures);\n\n                if (axisToSkip == \"rows\") {\n                    newRowsLength = membersCount(sourceAxes.rows.tuples, rowMeasures);\n                    tuples = sourceAxes.rows.tuples;\n                } else {\n                    tuples = parseSource(sourceAxes.rows.tuples, rowMeasures);\n                    data = prepareDataOnRows(tuples, data);\n                }\n                var mergedRows = mergeTuples(axes.rows.tuples, tuples, rowMeasures);\n\n                axes.columns.tuples = mergedColumns.tuples;\n                axes.rows.tuples = mergedRows.tuples;\n\n                if (oldColumnsLength !== membersCount(axes.columns.tuples, columnMeasures)) {\n                    //columns are expanded\n                    startIndex = mergedColumns.index + findDataIndex(mergedColumns.parsedRoot, mergedColumns.memberIndex, columnMeasures);\n                    var offset = oldColumnsLength + newColumnsLength;\n                    data = this._mergeColumnData(data, startIndex, newRowsLength, newColumnsLength, offset);\n                } else if (oldRowsLength !== membersCount(axes.rows.tuples, rowMeasures)) {\n                    //rows are expanded\n                    startIndex = mergedRows.index + findDataIndex(mergedRows.parsedRoot, mergedRows.memberIndex, rowMeasures);\n                    data = this._mergeRowData(data, startIndex, newRowsLength, newColumnsLength);\n                }\n\n                if (axes.columns.tuples.length === 0 && axes.rows.tuples.length === 0) {\n                    data = [];\n                }\n\n                return {\n                    axes: axes,\n                    data: data\n                };\n            },\n\n            _mergeColumnData: function(newData, columnIndex, rowsLength, columnsLength, offset) {\n                var data = this.data().toJSON();\n                var rowIndex, index, drop = 0, toAdd;\n                var columnMeasures = Math.max(this._columnMeasures().length, 1);\n\n                rowsLength = Math.max(rowsLength, 1);\n\n                if (data.length > 0) {\n                    //if there is already data, drop the first new data item\n                    drop = columnMeasures;\n                    offset -= columnMeasures;\n                }\n\n                for (rowIndex = 0; rowIndex < rowsLength; rowIndex++) {\n                    index = columnIndex + (rowIndex * offset);\n                    toAdd = newData.splice(0, columnsLength);\n                    toAdd.splice(0, drop);\n                    [].splice.apply(data, [index, 0].concat(toAdd));\n                }\n\n                return data;\n            },\n\n            _mergeRowData: function(newData, rowIndex, rowsLength, columnsLength) {\n                var data = this.data().toJSON();\n                var idx, dataIndex, toAdd;\n                var rowMeasures = Math.max(this._rowMeasures().length, 1);\n\n                columnsLength = Math.max(columnsLength, 1);\n                if (data.length > 0) {\n                    //if there is already data, drop the first new data item\n                    rowsLength -= rowMeasures;\n                    newData.splice(0, columnsLength * rowMeasures);\n                }\n\n                for (idx = 0; idx < rowsLength; idx++) {\n                    toAdd = newData.splice(0, columnsLength);\n                    dataIndex = (rowIndex * columnsLength) + (idx * columnsLength);\n                    [].splice.apply(data, [dataIndex, 0].concat(toAdd));\n                }\n\n                return data;\n            },\n\n            _columnMeasures: function() {\n                var measures = this.measures();\n                var columnMeasures = [];\n\n                if (this.measuresAxis() === \"columns\") {\n                    if (this.columns().length === 0) {\n                        columnMeasures = measures;\n                    } else if (measures.length > 1) {\n                        columnMeasures = measures;\n                    }\n                }\n\n                return columnMeasures;\n            },\n\n            _rowMeasures: function() {\n                var measures = this.measures();\n                var rowMeasures = [];\n\n                if (this.measuresAxis() === \"rows\") {\n                    if (this.rows().length === 0) {\n                        rowMeasures = measures;\n                    } else if (measures.length > 1) {\n                        rowMeasures = measures;\n                    }\n                }\n\n                return rowMeasures;\n            },\n\n            _updateLocalData: function(data, state) {\n                if (this.cubeBuilder) {\n                    if (state) {\n                        this._requestData = state;\n                    }\n                    data = this._processResult(data);\n                }\n\n                this._data = this._observe(data);\n\n                this._ranges = [];\n                this._addRange(this._data);\n\n                this._total = this._data.length;\n                this._pristineTotal = this._total;\n                this._process(this._data);\n            },\n\n            data: function(value) {\n                var that = this;\n                if (value !== undefined$1) {\n                    this._pristineData = value.slice(0);\n                    this._updateLocalData(value, {\n                            columns: this.columns(),\n                            rows: this.rows(),\n                            measures: this.measures()\n                        });\n                } else {\n                    return that._data;\n                }\n            },\n\n            _normalizeTuples: function(tuples, source, descriptors, measures) {\n                var length = measures.length || 1;\n                var idx = 0;\n\n                var roots = [];\n                var indexes = {};\n                var measureIdx = 0;\n                var tuple, memberIdx, last;\n\n                if (!tuples.length) {\n                    return;\n                }\n\n                if (this._skipNormalize <= 0 && !this._hasRoot(tuples[0], source, descriptors)) {\n                    this._skipNormalize = 0;\n                    for (; idx < length; idx++) {\n                        roots.push(this._createTuple(tuples[0], measures[idx], true));\n                        indexes[idx] = idx;\n                    }\n\n                    tuples.splice.apply(tuples, [0, tuples.length].concat(roots).concat(tuples));\n                    idx = length;\n                }\n\n                if (measures.length) {\n                    last = tuple = tuples[idx];\n                    memberIdx = tuple.members.length - 1;\n\n                    while (tuple) {\n                        if (measureIdx >= length) {\n                            measureIdx = 0;\n                        }\n\n                        if (tuple.members[memberIdx].name !== measures[measureIdx].name) {\n                            tuples.splice(idx, 0, this._createTuple(tuple, measures[measureIdx]));\n                            indexes[idx] = idx;\n                        }\n\n                        idx += 1;\n                        measureIdx += 1;\n                        tuple = tuples[idx];\n\n                        if (length > measureIdx && (!tuple || tupleName(last, memberIdx - 1) !== tupleName(tuple, memberIdx - 1))) {\n                            for (; measureIdx < length; measureIdx++) {\n                                tuples.splice(idx, 0, this._createTuple(last, measures[measureIdx]));\n                                indexes[idx] = idx;\n                                idx += 1;\n                            }\n                            tuple = tuples[idx];\n                        }\n                        last = tuple;\n                    }\n                }\n\n                return indexes;\n            },\n\n            _addMissingDataItems: function(result, metadata) {\n                while (metadata.rowIndexes[parseInt(result.length / metadata.columnsLength, 10)] !== undefined$1) {\n                    for (var idx = 0; idx < metadata.columnsLength; idx++) {\n                        result = addEmptyDataItem(result);\n                    }\n                }\n\n                while (metadata.columnIndexes[result.length % metadata.columnsLength] !== undefined$1) {\n                    result = addEmptyDataItem(result);\n                }\n\n                return result;\n            },\n\n            _normalizeOrdinals: function(result, dataItem, metadata) {\n                var lastOrdinal = metadata.lastOrdinal;\n\n                if (!dataItem) {\n                    return addEmptyDataItem(result);\n                }\n\n                if ((dataItem.ordinal - lastOrdinal) > 1) {\n                    lastOrdinal += 1;\n\n                    while (lastOrdinal < dataItem.ordinal && result.length < metadata.length) {\n                        result = this._addMissingDataItems(addEmptyDataItem(result), metadata);\n                        lastOrdinal += 1;\n                    }\n                }\n\n                dataItem.ordinal = result.length;\n                result[result.length] = dataItem;\n\n                return result;\n            },\n\n            _normalizeData: function(options) {\n                var data = options.data;\n                var dataIdx = 0;\n                var dataItem;\n                var result = [];\n                var lastOrdinal;\n                var length;\n\n                options.lastOrdinal = 0;\n                options.columnIndexes = options.columnIndexes || {};\n                options.rowIndexes = options.rowIndexes || {};\n                options.columnsLength = options.columnsLength || 1;\n                options.rowsLength = options.rowsLength || 1;\n                options.length = options.columnsLength * options.rowsLength;\n                length = options.length;\n\n                if (data.length === length) {\n                    return data;\n                }\n\n                while (result.length < length) {\n                    dataItem = data[dataIdx++];\n                    if (dataItem) {\n                        lastOrdinal = dataItem.ordinal;\n                    }\n\n                    result = this._normalizeOrdinals(this._addMissingDataItems(result, options), dataItem, options);\n\n                    options.lastOrdinal = lastOrdinal;\n                }\n\n                return result;\n            },\n\n            discover: function(options, converter) {\n                var that = this,\n                    transport = that.transport;\n\n                return $.Deferred(function(deferred) {\n                    transport.discover(extend({\n                        success: function(response) {\n                           response = that.reader.parse(response);\n\n                            if (that._handleCustomErrors(response)) {\n                                return;\n                            }\n\n                            if (converter) {\n                                response = converter(response);\n                            }\n                            deferred.resolve(response);\n                        },\n                        error: function(response, status, error) {\n                            deferred.reject(response);\n                            that.error(response, status, error);\n                        }\n                    }, options));\n                }).promise().done(function() {\n                    that.trigger(\"schemaChange\");\n                });\n            },\n\n            schemaMeasures: function() {\n                var that = this;\n\n                return that.discover({\n                    data: {\n                        command: \"schemaMeasures\",\n                        restrictions: {\n                            catalogName: that.transport.catalog(),\n                            cubeName: that.transport.cube()\n                        }\n                    }\n                }, function(response) {\n                    return that.reader.measures(response);\n                });\n            },\n\n            schemaKPIs: function() {\n                var that = this;\n\n                return that.discover({\n                    data: {\n                        command: \"schemaKPIs\",\n                        restrictions: {\n                            catalogName: that.transport.catalog(),\n                            cubeName: that.transport.cube()\n                        }\n                    }\n                }, function(response) {\n                    return that.reader.kpis(response);\n                });\n            },\n\n            schemaDimensions: function() {\n                var that = this;\n\n                return that.discover({\n                    data: {\n                        command: \"schemaDimensions\",\n                        restrictions: {\n                            catalogName: that.transport.catalog(),\n                            cubeName: that.transport.cube()\n                        }\n                    }\n                }, function(response) {\n                    return that.reader.dimensions(response);\n                });\n            },\n\n            schemaHierarchies: function(dimensionName) {\n                var that = this;\n\n                return that.discover({\n                    data: {\n                        command: \"schemaHierarchies\",\n                        restrictions: {\n                            catalogName: that.transport.catalog(),\n                            cubeName: that.transport.cube(),\n                            dimensionUniqueName: dimensionName\n                        }\n                    }\n                }, function(response) {\n                    return that.reader.hierarchies(response);\n                });\n            },\n\n            schemaLevels: function(hierarchyName) {\n                var that = this;\n\n                return that.discover({\n                    data: {\n                        command: \"schemaLevels\",\n                        restrictions: {\n                            catalogName: that.transport.catalog(),\n                            cubeName: that.transport.cube(),\n                            hierarchyUniqueName: hierarchyName\n                        }\n                    }\n                }, function(response) {\n                    return that.reader.levels(response);\n                });\n            },\n\n            schemaCubes: function() {\n                var that = this;\n\n                return that.discover({\n                    data: {\n                        command: \"schemaCubes\",\n                        restrictions: {\n                            catalogName: that.transport.catalog()\n                        }\n                    }\n                }, function(response) {\n                    return that.reader.cubes(response);\n                });\n            },\n\n            schemaCatalogs: function() {\n                var that = this;\n\n                return that.discover({\n                    data: {\n                        command: \"schemaCatalogs\"\n                    }\n                }, function(response) {\n                    return that.reader.catalogs(response);\n                });\n            },\n\n            schemaMembers: function(restrictions) {\n                var that = this;\n                var success = (function(restrictions) {\n                    return function(response) {\n                        return that.reader.members(response, restrictions);\n                    };\n                }(restrictions));\n\n                return that.discover({\n                    data: {\n                        command: \"schemaMembers\",\n                        restrictions: extend({\n                           catalogName: that.transport.catalog(),\n                           cubeName: that.transport.cube()\n                       }, restrictions)\n                    }\n                }, success);\n            },\n\n            _params: function(data) {\n                if (this._clearAxesData) {\n                    this._axes = {};\n                    this._data = this._observe([]);\n                    this._clearAxesData = false;\n                    this.trigger(STATERESET);\n                }\n\n                var options = DataSource.fn._params.call(this, data);\n\n                options = extend({\n                    measures: this.measures(),\n                    measuresAxis: this.measuresAxis(),\n                    columns: this.columns(),\n                    rows: this.rows()\n                }, options);\n\n                if (this.cubeBuilder) {\n                    this._requestData = options;\n                }\n\n                return options;\n            }\n        });\n\n        function flatColumns(columns) {\n            var result = [];\n            for (var idx = 0; idx < columns.length; idx++) {\n                result.push(columns[idx]);\n                if (columns[idx].children) {\n                    result = result.concat(flatColumns(columns[idx].children));\n                }\n            }\n\n            return result;\n        }\n\n        function sortItemsTree(field, items, sortFunction) {\n            for (var i = 0; i < items.length; i++) {\n                if (items[i].children && items[i].children.length) {\n                    sortItemsTree(field, items[i].children, sortFunction);\n                }\n            }\n            if (items[0].parentName != field) {\n                return;\n            }\n            items = items.sort(sortFunction);\n        }\n\n        function fillSortTree(items, map) {\n            for (var i = 0; i < items.length; i++) {\n                var currentItem = map[items[i].name];\n\n                if (!$.isEmptyObject(currentItem.childrenMap)) {\n                    items[i].children = [];\n                    for (var name in currentItem.childrenMap) {\n                        items[i].children.push($.extend({}, { name: name, parentName: map[name].parentName }));\n                    }\n\n                    fillSortTree(items[i].children, map);\n                }\n            }\n        }\n\n        function addEmptyDataItem(result) {\n            result[result.length] = { value: \"\", fmtValue: \"\", ordinal: result.length };\n            return result;\n        }\n\n        function validateAxis(newAxis, axis, measures) {\n            if (newAxis.tuples.length < membersCount(axis.tuples, measures)) {\n\n                return axis;\n            }\n\n            return;\n        }\n\n        function adjustDataByColumn(sourceTuples, targetTuples, rowsLength, measures, data) {\n            var columnIdx, rowIdx, dataIdx;\n            var columnsLength = sourceTuples.length;\n            var targetColumnsLength = membersCount(targetTuples, measures);\n            var measuresLength = measures.length || 1;\n\n            for (rowIdx = 0; rowIdx < rowsLength; rowIdx++) {\n                for (columnIdx = 0; columnIdx < columnsLength; columnIdx++) {\n                    dataIdx = tupleIndex(sourceTuples[columnIdx], targetTuples) * measuresLength;\n                    dataIdx += columnIdx % measuresLength;\n\n                    data[rowIdx * columnsLength + columnIdx].ordinal = rowIdx * targetColumnsLength + dataIdx;\n                }\n            }\n        }\n\n        function adjustDataByRow(sourceTuples, targetTuples, columnsLength, measures, data) {\n            var columnIdx, rowIdx, dataIdx;\n            var rowsLength = sourceTuples.length;\n            var measuresLength = measures.length || 1;\n\n            for (rowIdx = 0; rowIdx < rowsLength; rowIdx++) {\n                dataIdx = tupleIndex(sourceTuples[rowIdx], targetTuples);\n                dataIdx *= measuresLength;\n                dataIdx += rowIdx % measuresLength;\n\n                for (columnIdx = 0; columnIdx < columnsLength; columnIdx++) {\n                    data[rowIdx * columnsLength + columnIdx].ordinal = dataIdx * columnsLength + columnIdx;\n                }\n            }\n        }\n\n        function tupleIndex(tuple, collection) {\n            return findExistingTuple(collection, tuple).index;\n        }\n\n        function membersCount(tuples, measures) {\n            if (!tuples.length) {\n                return 0;\n            }\n\n            var queue = tuples.slice();\n            var current = queue.shift();\n            var result = 1;\n\n            while (current) {\n                if (current.members) {\n                    [].push.apply(queue, current.members);\n                } else if (current.children) {\n                    if (!current.measure) {\n                        result += current.children.length;\n                    }\n                    [].push.apply(queue, current.children);\n                }\n\n                current = queue.shift();\n            }\n\n            if (measures.length) {\n                result = result * measures.length;\n            }\n\n            return result;\n        }\n\n        function normalizeAxis(axis) {\n            if (!axis) {\n                axis = {\n                    tuples: []\n                };\n            }\n\n            if (!axis.tuples) {\n                axis.tuples = [];\n            }\n\n            return axis;\n        }\n\n        function findDataIndex(tuple, memberIndex, measures) {\n            if (!tuple) {\n                return 0;\n            }\n\n            var measuresLength = Math.max(measures.length, 1);\n            var tuples = tuple.members.slice(0, memberIndex);\n            var current = tuples.shift();\n\n            //the initial value is equal to the total number of measures\n            //as the measures member is not extracted from the members of the starting tuple\n            //but should be calculated in the final result\n            var counter = measuresLength;\n\n            while (current) {\n                if (current.name === MEASURES) {\n                    //subtract 1 as the measures member has been already counted as a single standard member\n                    //but we are interested in the total number of measures instead\n                    counter += (measuresLength - 1);\n                } else if (current.children) {\n                    //is member\n                    [].push.apply(tuples, current.children);\n                } else {\n                    //is tuple\n                    counter ++;\n                    [].push.apply(tuples, current.members);\n                }\n\n                current = tuples.shift();\n            }\n\n            return counter;\n        }\n\n        function mergeTuples(target, source, measures) {\n            if (!source[0]) {\n                return {\n                    parsedRoot: null,\n                    tuples: target,\n                    memberIndex: 0,\n                    index: 0\n                };\n            }\n\n            var result = findExistingTuple(target, source[0]);\n\n            if (!result.tuple) {\n                return {\n                    parsedRoot: null,\n                    tuples: source,\n                    memberIndex: 0,\n                    index: 0\n                };\n            }\n\n            var targetMembers = result.tuple.members;\n            var sourceMembers = source[0].members;\n            var memberIndex = -1;\n\n            if (targetMembers.length !== sourceMembers.length) {\n                return {\n                    parsedRoot: null,\n                    tuples: source,\n                    memberIndex: 0,\n                    index: 0\n                };\n            }\n\n            for (var idx = 0, length = targetMembers.length; idx < length; idx++) {\n                if (!targetMembers[idx].measure && sourceMembers[idx].children[0]) {\n                    if (memberIndex == -1 && sourceMembers[idx].children.length) {\n                        memberIndex = idx;\n                    }\n\n                    targetMembers[idx].children = sourceMembers[idx].children;\n                }\n            }\n\n            measures = Math.max(measures.length, 1);\n\n            return {\n                parsedRoot: result.tuple,\n                index: result.index * measures,\n                memberIndex: memberIndex,\n                tuples: target\n            };\n        }\n\n        function equalTuples(first, second) {\n            var equal = true;\n            var idx, length;\n\n            first = first.members;\n            second = second.members;\n\n            for (idx = 0, length = first.length; idx < length; idx++) {\n                if (first[idx].measure || second[idx].measure) {\n                    continue;\n                }\n\n                equal = equal && (getName(first[idx]) === getName(second[idx]));\n            }\n\n            return equal;\n        }\n\n        function findExistingTuple(tuples, toFind) {\n            var idx, length, tuple, found, counter = 0;\n            var memberIndex, membersLength, member;\n\n            for (idx = 0, length = tuples.length; idx < length; idx++) {\n                tuple = tuples[idx];\n                if (equalTuples(tuple, toFind)) {\n                    return {\n                        tuple: tuple,\n                        index: counter\n                    };\n                }\n\n                counter ++;\n\n                for (memberIndex = 0, membersLength = tuple.members.length; memberIndex < membersLength; memberIndex++) {\n                    member = tuple.members[memberIndex];\n                    if (member.measure) {\n                        //counter += member.children.length;\n                        continue;\n                    }\n                    found = findExistingTuple(member.children, toFind);\n                    counter += found.index;\n                    if (found.tuple) {\n                        return {\n                            tuple: found.tuple,\n                            index: counter\n                        };\n                    }\n                }\n            }\n\n            return {\n                index: counter\n            };\n        }\n\n        function addMembers(members, map) {\n            var member, i, len, path = \"\";\n            for (i = 0, len = members.length; i < len; i++) {\n                member = members[i];\n                path += member.name;\n                if (!map[path]) {\n                    map[path] = member;\n                }\n            }\n        }\n\n\n        function findParentMember(tuple, map) {\n            var members = tuple.members;\n            var i, len, member, path = \"\";\n            var parentPath = \"\";\n            var parentMember;\n\n            for (i = 0, len = members.length; i < len; i++) {\n                member = members[i];\n                if (parentMember) {\n                    if (map[path + member.name]) {\n                        path += member.name;\n                        parentMember = map[path];\n                        continue;\n                    } else if (map[path + member.parentName]) {\n                        return map[path + member.parentName];\n                    } else if (map[parentPath + member.parentName]) {\n                        return map[parentPath + member.parentName];\n                    } else {\n                        return map[parentPath];\n                    }\n                }\n\n                path += member.name;\n                parentMember = map[member.parentName];\n\n                if (!parentMember) {\n                    parentMember = map[path];\n                    if (!parentMember) {\n                        return null;\n                    }\n                }\n\n                if (parentMember) {\n                    parentPath += parentMember.name;\n                }\n            }\n\n            return parentMember;\n        }\n\n        function measurePosition(tuple, measures) {\n            if (measures.length === 0) {\n                return -1;\n            }\n\n            var measure = measures[0];\n            var members = tuple.members;\n            for (var idx = 0, len = members.length; idx < len; idx ++) {\n                if (members[idx].name == measure.name) {\n                    return idx;\n                }\n            }\n        }\n\n        function normalizeTupleMeasures(tuple, index) {\n            if (index < 0) {\n                return;\n            }\n            var member = {\n                name: MEASURES,\n                measure: true,\n                children: [\n                    $.extend({ members: [], dataIndex: tuple.dataIndex }, tuple.members[index])\n                ]\n            };\n            tuple.members.splice(index, 1, member);\n            tuple.dataIndex = undefined$1;\n        }\n\n        function parseSource(tuples, measures) {\n            if (tuples.length < 1) {\n                return [];\n            }\n            var result = [];\n            var map = { };\n            var measureIndex = measurePosition(tuples[0], measures);\n\n            for (var i = 0; i < tuples.length; i++) {\n                var tuple = tuples[i];\n\n                //keep the old data index of the tuple\n                tuple.dataIndex = i;\n\n                normalizeTupleMeasures(tuple, measureIndex);\n                var parentMember = findParentMember(tuple, map);\n\n                if (parentMember) {\n                    if (measureIndex < 0 || !parentMember.measure) {\n                        parentMember.children.push(tuple);\n                    } else {\n                        parentMember.children.push(tuple.members[measureIndex].children[0]);\n                    }\n                } else {\n                    result.push(tuple);\n                }\n\n                addMembers(tuple.members, map);\n            }\n\n            return result;\n        }\n\n        function prepareDataOnRows(tuples, data) {\n            if (!tuples || !tuples.length) {\n                return data;\n            }\n\n            var result = [];\n            var indices = buildDataIndices(tuples);\n            var rowsLength = indices.length;\n            var columnsLength = Math.max(data.length / rowsLength, 1);\n            var rowIndex, columnIndex, targetIndex, sourceIndex;\n            var calcIndex;\n\n            for (rowIndex = 0; rowIndex < rowsLength; rowIndex++) {\n                targetIndex = columnsLength * rowIndex;\n                sourceIndex = columnsLength * indices[rowIndex];\n                for (columnIndex = 0; columnIndex < columnsLength; columnIndex++) {\n                    calcIndex = parseInt(sourceIndex + columnIndex, 10);\n                    result[parseInt(targetIndex + columnIndex, 10)] = data[calcIndex] || { value: \"\", fmtValue: \"\", ordinal: calcIndex };\n                }\n            }\n\n            return result;\n        }\n\n        function prepareDataOnColumns(tuples, data) {\n            if (!tuples || !tuples.length) {\n                return data;\n            }\n\n            var result = [];\n            var indices = buildDataIndices(tuples);\n            var columnsLength = indices.length;\n            var rowsLength = Math.max(data.length / columnsLength, 1);\n            var columnIndex, rowIndex, dataIndex, calcIndex;\n\n            for (rowIndex = 0; rowIndex < rowsLength; rowIndex++) {\n                dataIndex = columnsLength * rowIndex;\n                for (columnIndex = 0; columnIndex < columnsLength; columnIndex++) {\n                    calcIndex = indices[columnIndex] + dataIndex;\n                    result[dataIndex + columnIndex] = data[calcIndex] || { value: \"\", fmtValue: \"\", ordinal: calcIndex };\n                }\n            }\n\n            return result;\n        }\n\n        function buildDataIndices(tuples) {\n            tuples = tuples.slice();\n            var result = [];\n            var tuple = tuples.shift();\n            var idx, length, spliceIndex, children, member;\n\n            while (tuple) {\n                //required for multiple measures\n                if (tuple.dataIndex !== undefined$1) {\n                    result.push(tuple.dataIndex);\n                }\n\n                spliceIndex = 0;\n                for (idx = 0, length = tuple.members.length; idx < length; idx++) {\n                    member = tuple.members[idx];\n                    children = member.children;\n                    if (member.measure) {\n                        [].splice.apply(tuples, [0, 0].concat(children));\n                    } else {\n                        [].splice.apply(tuples, [spliceIndex, 0].concat(children));\n                    }\n                    spliceIndex += children.length;\n                }\n\n                tuple = tuples.shift();\n            }\n\n            return result;\n        }\n\n        PivotDataSourceV2.create = function(options) {\n            options = options && options.push ? { data: options } : options;\n\n            var dataSource = options || {},\n                data = dataSource.data;\n\n            dataSource.data = data;\n\n            if (!(dataSource instanceof PivotDataSourceV2) && dataSource instanceof kendo.data.DataSource) {\n                throw new Error(\"Incorrect DataSource type. Only PivotDataSource instances are supported\");\n            }\n\n            return dataSource instanceof PivotDataSourceV2 ? dataSource : new PivotDataSourceV2(dataSource);\n        };\n\n        PivotDataSource.create = function(options) {\n            options = options && options.push ? { data: options } : options;\n\n            var dataSource = options || {},\n                data = dataSource.data;\n\n            dataSource.data = data;\n\n            if (!(dataSource instanceof PivotDataSource) && dataSource instanceof kendo.data.DataSource) {\n                throw new Error(\"Incorrect DataSource type. Only PivotDataSource instances are supported\");\n            }\n\n            return dataSource instanceof PivotDataSource ? dataSource : new PivotDataSource(dataSource);\n        };\n\n        function baseHierarchyPath(memberName) {\n            var parts = memberName.split(\".\");\n            if (parts.length > 2) {\n                return parts[0] + \".\" + parts[1];\n            }\n            return memberName;\n        }\n\n        function expandMemberDescriptor(names, sort) {\n            var idx = names.length - 1;\n            var name = names[idx];\n            var sortDescriptor;\n\n            sortDescriptor = sortDescriptorForMember(sort, name);\n\n            if (sortDescriptor && sortDescriptor.dir) {\n                name = \"ORDER(\" + name + \".Children,\" + sortDescriptor.field + \".CurrentMember.MEMBER_CAPTION,\" + sortDescriptor.dir + \")\";\n            } else {\n                name += \".Children\";\n            }\n\n            names[idx] = name;\n\n            return names;\n        }\n\n        function sortDescriptorForMember(sort, member) {\n            for (var idx = 0, length = sort.length; idx < length; idx++) {\n                if (member.indexOf(sort[idx].field) === 0) {\n                    return sort[idx];\n                }\n            }\n            return null;\n        }\n\n        function crossJoin(names) {\n            var result = \"CROSSJOIN({\";\n            var r;\n\n            if (names.length > 2) {\n                r = names.pop();\n                result += crossJoin(names);\n            } else {\n                result += names.shift();\n                r = names.pop();\n            }\n\n            result += \"},{\";\n            result += r;\n            result += \"})\";\n            return result;\n        }\n\n        function crossJoinCommand(members, measures) {\n            var tmp = members.slice(0);\n\n            if (measures.length > 1) {\n                tmp.push(\"{\" + measureNames(measures).join(\",\") + \"}\");\n            }\n\n            return crossJoin(tmp);\n        }\n\n        function measureNames(measures) {\n            var idx = 0;\n            var length = measures.length;\n            var result = [];\n            var measure;\n\n            for (; idx < length; idx++) {\n                measure = measures[idx];\n                result.push(measure.name !== undefined$1 ? measure.name : measure);\n            }\n\n            return result;\n        }\n\n        function indexOf(name, items) {\n            var idx, length, index = -1;\n\n            for (idx = 0, length = items.length; idx < length; idx++) {\n                if (getName(items[idx]) === name) {\n                    index = idx;\n                    break;\n                }\n            }\n            return index;\n        }\n\n        function getName(name) {\n            name = name.name || name;\n\n            if (toString.call(name) === \"[object Array]\") {\n                name = name[name.length - 1];\n            }\n\n            return name;\n        }\n\n        function getRootNames(members) {\n            var length = members.length;\n            var names = [];\n            var idx = 0;\n\n            for (; idx < length; idx++) {\n                names.push(members[idx].name[0]);\n            }\n\n            return names;\n        }\n\n        function mapNames(names, rootNames) {\n            var name;\n            var rootName;\n\n            var j;\n            var idx = 0;\n            var length = names.length;\n            var rootLength = rootNames.length;\n\n            rootNames = rootNames.slice(0);\n\n            for (; idx < length; idx++) {\n                name = names[idx];\n\n                for (j = 0; j < rootLength; j++) {\n                    rootName = baseHierarchyPath(rootNames[j]);\n\n                    if (name.indexOf(rootName) !== -1) {\n                        rootNames[j] = name;\n                        break;\n                    }\n                }\n            }\n\n            return {\n                names: rootNames,\n                expandedIdx: j,\n                uniquePath: rootNames.slice(0, j + 1).join(\"\")\n            };\n        }\n\n        function parseDescriptors(members) {\n            var expanded = [];\n            var child = [];\n            var root = [];\n            var member;\n\n            var j, l;\n            var idx = 0;\n            var length = members.length;\n\n            var name;\n            var hierarchyName;\n\n            var found;\n\n            for (; idx < length; idx++) {\n                member = members[idx];\n                name = member.name;\n                found = false;\n\n                if (toString.call(name) !== \"[object Array]\") {\n                    member.name = name = [name];\n                }\n\n                if (name.length > 1) {\n                    child.push(member);\n                } else {\n                    hierarchyName = baseHierarchyPath(name[0]);\n\n                    for (j = 0, l = root.length; j < l; j++) {\n                        if (root[j].name[0].indexOf(hierarchyName) === 0) {\n                            found = true;\n                            break;\n                        }\n                    }\n\n                    if (!found) {\n                        root.push(member);\n                    }\n\n                    if (member.expand) {\n                        expanded.push(member);\n                    }\n                }\n            }\n\n            expanded = expanded.concat(child);\n\n            return {\n                root: root,\n                expanded: expanded\n            };\n        }\n\n        function serializeMembers(members, measures, sort) {\n            var command = \"\";\n\n            members = members || [];\n\n            var expanded = parseDescriptors(members);\n            var root = expanded.root;\n\n            var rootNames = getRootNames(root);\n            var crossJoinCommands = [];\n\n            expanded = expanded.expanded;\n\n            var length = expanded.length;\n            var idx = 0;\n\n            var memberName;\n            var names = [];\n\n            if (rootNames.length > 1 || measures.length > 1) {\n                crossJoinCommands.push(crossJoinCommand(rootNames, measures));\n\n                for (; idx < length; idx++) {\n                    memberName = expandMemberDescriptor(expanded[idx].name, sort);\n                    names = mapNames(memberName, rootNames).names;\n\n                    crossJoinCommands.push(crossJoinCommand(names, measures));\n                }\n\n                command += crossJoinCommands.join(\",\");\n            } else {\n                for (; idx < length; idx++) {\n                    memberName = expandMemberDescriptor(expanded[idx].name, sort);\n                    names.push(memberName[0]); //check if this is ok\n                }\n\n                command += rootNames.concat(names).join(\",\");\n            }\n\n            return command;\n        }\n\n        var filterFunctionFormats = {\n            contains: \", InStr({0}.CurrentMember.MEMBER_CAPTION,\\\"{1}\\\") > 0\",\n            doesnotcontain: \", InStr({0}.CurrentMember.MEMBER_CAPTION,\\\"{1}\\\")\",\n            startswith: \", Left({0}.CurrentMember.MEMBER_CAPTION,Len(\\\"{1}\\\"))=\\\"{1}\\\"\",\n            endswith: \", Right({0}.CurrentMember.MEMBER_CAPTION,Len(\\\"{1}\\\"))=\\\"{1}\\\"\",\n            eq: \", {0}.CurrentMember.MEMBER_CAPTION = \\\"{1}\\\"\",\n            neq: \", {0}.CurrentMember.MEMBER_CAPTION = \\\"{1}\\\"\"\n        };\n\n        function serializeExpression(expression) {\n            var command = \"\";\n            var value = expression.value;\n            var field = expression.field;\n            var operator = expression.operator;\n\n            if (operator == \"in\") {\n                command += \"{\";\n                command += value;\n                command += \"}\";\n            } else {\n                command += operator == \"neq\" || operator == \"doesnotcontain\" ? \"-\" : \"\";\n                command += \"Filter(\";\n                command += field + \".MEMBERS\";\n                command += kendo.format(filterFunctionFormats[operator], field, value);\n                command += \")\";\n            }\n\n            return command;\n        }\n\n        function serializeFilters(filter, cube) {\n            var command = \"\", current;\n            var filters = filter.filters;\n            var length = filters.length;\n            var idx;\n\n            for (idx = length - 1; idx >= 0; idx--) {\n\n                current = \"SELECT (\";\n                current += serializeExpression(filters[idx]);\n                current += \") ON 0\";\n\n                if (idx == length - 1) {\n                    current += \" FROM [\" + cube + \"]\";\n                    command = current;\n                } else {\n                    command = current + \" FROM ( \" + command + \" )\";\n                }\n            }\n\n            return command;\n        }\n\n        function serializeOptions(parentTagName, options, capitalize) {\n            var result = \"\";\n\n            if (options) {\n                result += \"<\" + parentTagName + \">\";\n                var value;\n                for (var key in options) {\n                    value = options[key];\n                    let keyToUse = key;\n                    if (capitalize) {\n                        keyToUse = keyToUse.replace(/([A-Z]+(?=$|[A-Z][a-z])|[A-Z]?[a-z]+)/g, \"$1_\").toUpperCase().replace(/_$/, \"\");\n                    }\n                    result += \"<\" + keyToUse + \">\" + value + \"</\" + keyToUse + \">\";\n                }\n                result += \"</\" + parentTagName + \">\";\n            } else {\n                result += \"<\" + parentTagName + \"/>\";\n            }\n            return result;\n        }\n\n        var xmlaDiscoverCommands = {\n            schemaCubes: \"MDSCHEMA_CUBES\",\n            schemaCatalogs: \"DBSCHEMA_CATALOGS\",\n            schemaMeasures: \"MDSCHEMA_MEASURES\",\n            schemaDimensions: \"MDSCHEMA_DIMENSIONS\",\n            schemaHierarchies: \"MDSCHEMA_HIERARCHIES\",\n            schemaLevels: \"MDSCHEMA_LEVELS\",\n            schemaMembers: \"MDSCHEMA_MEMBERS\",\n            schemaKPIs: \"MDSCHEMA_KPIS\"\n        };\n\n        var convertersMap = {\n            read: function(options) {\n                var command = '<Envelope xmlns=\"http://schemas.xmlsoap.org/soap/envelope/\"><Header/><Body><Execute xmlns=\"urn:schemas-microsoft-com:xml-analysis\"><Command><Statement>';\n\n                command += \"SELECT NON EMPTY {\";\n\n                var columns = options.columns || [];\n                var rows = options.rows || [];\n\n                var measures = options.measures || [];\n                var measuresRowAxis = options.measuresAxis === \"rows\";\n                var sort = options.sort || [];\n\n                if (!columns.length && rows.length && (!measures.length || (measures.length && measuresRowAxis))) {\n                    columns = rows;\n                    rows = [];\n                    measuresRowAxis = false;\n                }\n\n                if (!columns.length && !rows.length) {\n                    measuresRowAxis = false;\n                }\n\n                if (columns.length) {\n                    command += serializeMembers(columns, !measuresRowAxis ? measures : [], sort);\n                } else if (measures.length && !measuresRowAxis) {\n                    command += measureNames(measures).join(\",\");\n                }\n\n                command += \"} DIMENSION PROPERTIES CHILDREN_CARDINALITY, PARENT_UNIQUE_NAME ON COLUMNS\";\n\n                if (rows.length || (measuresRowAxis && measures.length > 1)) {\n                    command += \", NON EMPTY {\";\n\n                    if (rows.length) {\n                        command += serializeMembers(rows, measuresRowAxis ? measures : [], sort);\n                    } else {\n                        command += measureNames(measures).join(\",\");\n                    }\n\n                    command += \"} DIMENSION PROPERTIES CHILDREN_CARDINALITY, PARENT_UNIQUE_NAME ON ROWS\";\n                }\n\n                if (options.filter) {\n                    command += \" FROM \";\n                    command += \"(\";\n                    command += serializeFilters(options.filter, options.connection.cube);\n                    command += \")\";\n                } else {\n                    command += \" FROM [\" + options.connection.cube + \"]\";\n                }\n\n                if (measures.length == 1 && columns.length) {\n                    command += \" WHERE (\" + measureNames(measures).join(\",\") + \")\";\n                }\n\n                command += '</Statement></Command><Properties><PropertyList><Catalog>' + options.connection.catalog + '</Catalog><Format>Multidimensional</Format></PropertyList></Properties></Execute></Body></Envelope>';\n                return command.replace(/\\&/g, \"&amp;\");\n            },\n            discover: function(options) {\n                options = options || {};\n\n                var command = '<Envelope xmlns=\"http://schemas.xmlsoap.org/soap/envelope/\"><Header/><Body><Discover xmlns=\"urn:schemas-microsoft-com:xml-analysis\">';\n                command += \"<RequestType>\" + (xmlaDiscoverCommands[options.command] || options.command) + \"</RequestType>\";\n\n                command += \"<Restrictions>\" + serializeOptions(\"RestrictionList\", options.restrictions, true) + \"</Restrictions>\";\n\n                if (options.connection && options.connection.catalog) {\n                    options.properties = $.extend({}, {\n                        Catalog: options.connection.catalog\n                    }, options.properties);\n                }\n\n                command += \"<Properties>\" + serializeOptions(\"PropertyList\", options.properties) + \"</Properties>\";\n\n                command += '</Discover></Body></Envelope>';\n                return command;\n            }\n        };\n\n        var XmlaTransport = kendo.data.RemoteTransport.extend({\n            init: function(options) {\n                var originalOptions = options;\n\n                options = this.options = extend(true, {}, this.options, options);\n\n                kendo.data.RemoteTransport.call(this, options);\n\n                if (isFunction(originalOptions.discover)) {\n                    this.discover = originalOptions.discover;\n                } else if (typeof originalOptions.discover === \"string\") {\n                    this.options.discover = {\n                        url: originalOptions.discover\n                    };\n                } else if (!originalOptions.discover) {\n                    this.options.discover = this.options.read;\n                }\n            },\n            setup: function(options, type) {\n                options.data = options.data || {};\n                $.extend(true, options.data, { connection: this.options.connection });\n\n                return kendo.data.RemoteTransport.fn.setup.call(this, options, type);\n            },\n            options: {\n                read: {\n                    dataType: \"text\",\n                    contentType: \"text/xml\",\n                    type: \"POST\"\n                },\n                discover: {\n                    dataType: \"text\",\n                    contentType: \"text/xml\",\n                    type: \"POST\"\n                },\n                parameterMap: function(options, type) {\n                    return convertersMap[type](options,type);\n                }\n            },\n\n            discover: function(options) {\n                return $.ajax(this.setup(options, \"discover\"));\n            }\n        });\n\n        var XmlaTransportV2 = Class.extend({\n            init: function(options) {\n                options = this.options = extend(true, {}, this.options, options);\n            },\n            setup: function(options) {\n                return $.extend(true, options || {}, { connection: this.options.connection });\n            },\n            read: function(options) {\n                var that = this,\n                    success,\n                    error;\n\n                var fetchOptions = that.setup(options.data, READ);\n\n                success = options.success || $.noop;\n                error = options.error || $.noop;\n\n                if (options.parameterMap) {\n                    fetchOptions = that.parameterMap(fetchOptions, READ);\n                }\n                const requestOptions = typeof that.options.read === \"object\" && that.options.read.url ? that.options.read : { url: that.options.read };\n\n                kendo_pivotgridCommon_cmn_chunk_js.f(requestOptions, fetchOptions)\n                .then(kendo_pivotgridCommon_cmn_chunk_js.g)\n                .then(function(newDataState) {\n                    success(newDataState);\n                })\n                .catch(function(err) { error(err); });\n            },\n\n            catalog: function(val) {\n                var options = this.options || {};\n\n                if (val === undefined$1) {\n                    return (options.connection || {}).catalog;\n\n                }\n\n                var connection = options.connection || {};\n                connection.catalog = val;\n\n                this.options.connection = connection;\n                $.extend(this.transport.options, { connection: connection });\n            },\n            cube: function(val) {\n                var options = this.options || {};\n\n                if (val === undefined$1) {\n                    return (options.connection || {}).cube;\n                }\n\n                var connection = options.connection || {};\n                connection.cube = val;\n\n                this.options.connection = connection;\n                extend(true, this.transport.options, { connection: connection });\n            },\n\n            discover: function(options) {\n                return kendo_pivotgridCommon_cmn_chunk_js.h({ url: this.options.read }, options);\n            }\n        });\n\n        function asArray(object) {\n            if (object == null) {\n                return [];\n            }\n\n            var type = toString.call(object);\n            if (type !== \"[object Array]\") {\n                return [object];\n            }\n\n            return object;\n        }\n\n        function translateAxis(axis) {\n            var result = { tuples: [] };\n            var tuples = asArray(kendo.getter(\"Tuples.Tuple\", true)(axis));\n            var captionGetter = kendo.getter(\"Caption['#text']\");\n            var unameGetter = kendo.getter(\"UName['#text']\");\n            var levelNameGetter = kendo.getter(\"LName['#text']\");\n            var levelNumGetter = kendo.getter(\"LNum['#text']\");\n            var childrenGetter = kendo.getter(\"CHILDREN_CARDINALITY['#text']\", true);\n            var hierarchyGetter = kendo.getter(\"['@Hierarchy']\");\n            var parentNameGetter = kendo.getter(\"PARENT_UNIQUE_NAME['#text']\", true);\n\n            for (var idx = 0; idx < tuples.length; idx++) {\n                var members = [];\n                var member = asArray(tuples[idx].Member);\n                for (var memberIdx = 0; memberIdx < member.length; memberIdx++) {\n                    members.push({\n                        children: [],\n                        caption: captionGetter(member[memberIdx]),\n                        name: unameGetter(member[memberIdx]),\n                        levelName: levelNameGetter(member[memberIdx]),\n                        levelNum: levelNumGetter(member[memberIdx]),\n                        hasChildren: parseInt(childrenGetter(member[memberIdx]), 10) > 0,\n                        parentName: parentNameGetter(member[memberIdx]),\n                        hierarchy: hierarchyGetter(member[memberIdx])\n                    });\n                }\n\n                result.tuples.push({ members: members });\n            }\n            return result;\n        }\n\n        var schemaDataReaderMap = {\n            cubes: {\n                name: kendo.getter(\"CUBE_NAME['#text']\", true),\n                caption: kendo.getter(\"CUBE_CAPTION['#text']\", true),\n                description: kendo.getter(\"DESCRIPTION['#text']\", true),\n                type: kendo.getter(\"CUBE_TYPE['#text']\", true)\n            },\n            catalogs: {\n                name: kendo.getter(\"CATALOG_NAME['#text']\", true),\n                description: kendo.getter(\"DESCRIPTION['#text']\", true)\n            },\n            measures: {\n                name: kendo.getter(\"MEASURE_NAME['#text']\", true),\n                caption: kendo.getter(\"MEASURE_CAPTION['#text']\", true),\n                uniqueName: kendo.getter(\"MEASURE_UNIQUE_NAME['#text']\", true),\n                description: kendo.getter(\"DESCRIPTION['#text']\", true),\n                aggregator: kendo.getter(\"MEASURE_AGGREGATOR['#text']\", true),\n                groupName: kendo.getter(\"MEASUREGROUP_NAME['#text']\", true),\n                displayFolder: kendo.getter(\"MEASURE_DISPLAY_FOLDER['#text']\", true),\n                defaultFormat: kendo.getter(\"DEFAULT_FORMAT_STRING['#text']\", true)\n            },\n            kpis: {\n                name: kendo.getter(\"KPI_NAME['#text']\", true),\n                caption: kendo.getter(\"KPI_CAPTION['#text']\", true),\n                value: kendo.getter(\"KPI_VALUE['#text']\", true),\n                goal: kendo.getter(\"KPI_GOAL['#text']\", true),\n                status: kendo.getter(\"KPI_STATUS['#text']\", true),\n                trend: kendo.getter(\"KPI_TREND['#text']\", true),\n                statusGraphic: kendo.getter(\"KPI_STATUS_GRAPHIC['#text']\", true),\n                trendGraphic: kendo.getter(\"KPI_TREND_GRAPHIC['#text']\", true),\n                description: kendo.getter(\"KPI_DESCRIPTION['#text']\", true),\n                groupName: kendo.getter(\"MEASUREGROUP_NAME['#text']\", true)\n            },\n            dimensions: {\n                name: kendo.getter(\"DIMENSION_NAME['#text']\", true),\n                caption: kendo.getter(\"DIMENSION_CAPTION['#text']\", true),\n                description: kendo.getter(\"DESCRIPTION['#text']\", true),\n                uniqueName: kendo.getter(\"DIMENSION_UNIQUE_NAME['#text']\", true),\n                defaultHierarchy: kendo.getter(\"DEFAULT_HIERARCHY['#text']\", true),\n                type: kendo.getter(\"DIMENSION_TYPE['#text']\", true)\n    //unknown = 0; time = 1; measure = 2; other = 3; quantitative = 5; accounts = 6; customers = 7; products = 8; scenario = 9; utility = 10; currency = 11; rates = 12; channel = 13; promotion = 14; organization = 15; billOfMaterials = 16; geography = 17;\n\n            },\n            hierarchies: {\n                name: kendo.getter(\"HIERARCHY_NAME['#text']\", true),\n                caption: kendo.getter(\"HIERARCHY_CAPTION['#text']\", true),\n                description: kendo.getter(\"DESCRIPTION['#text']\", true),\n                uniqueName: kendo.getter(\"HIERARCHY_UNIQUE_NAME['#text']\", true),\n                dimensionUniqueName: kendo.getter(\"DIMENSION_UNIQUE_NAME['#text']\", true),\n                displayFolder: kendo.getter(\"HIERARCHY_DISPLAY_FOLDER['#text']\", true),\n                origin: kendo.getter(\"HIERARCHY_ORIGIN['#text']\", true),\n                defaultMember: kendo.getter(\"DEFAULT_MEMBER['#text']\", true)\n            },\n            levels: {\n                name: kendo.getter(\"LEVEL_NAME['#text']\", true),\n                caption: kendo.getter(\"LEVEL_CAPTION['#text']\", true),\n                description: kendo.getter(\"DESCRIPTION['#text']\", true),\n                uniqueName: kendo.getter(\"LEVEL_UNIQUE_NAME['#text']\", true),\n                dimensionUniqueName: kendo.getter(\"DIMENSION_UNIQUE_NAME['#text']\", true),\n                displayFolder: kendo.getter(\"LEVEL_DISPLAY_FOLDER['#text']\", true),\n                orderingProperty: kendo.getter(\"LEVEL_ORDERING_PROPERTY['#text']\", true),\n                origin: kendo.getter(\"LEVEL_ORIGIN['#text']\", true),\n                hierarchyUniqueName: kendo.getter(\"HIERARCHY_UNIQUE_NAME['#text']\", true)\n            },\n            members: {\n                name: kendo.getter(\"MEMBER_NAME['#text']\", true),\n                caption: kendo.getter(\"MEMBER_CAPTION['#text']\", true),\n                uniqueName: kendo.getter(\"MEMBER_UNIQUE_NAME['#text']\", true),\n                dimensionUniqueName: kendo.getter(\"DIMENSION_UNIQUE_NAME['#text']\", true),\n                hierarchyUniqueName: kendo.getter(\"HIERARCHY_UNIQUE_NAME['#text']\", true),\n                levelUniqueName: kendo.getter(\"LEVEL_UNIQUE_NAME['#text']\", true),\n                childrenCardinality: kendo.getter(\"CHILDREN_CARDINALITY['#text']\", true)\n            }\n        };\n\n        var xmlaReaderMethods = [\"axes\", \"catalogs\", \"cubes\", \"dimensions\", \"hierarchies\", \"levels\", \"measures\"];\n\n        var XmlaDataReader = kendo.data.XmlDataReader.extend({\n            init: function(options) {\n                kendo.data.XmlDataReader.call(this, options);\n\n                this._extend(options);\n            },\n            _extend: function(options) {\n                var idx = 0;\n                var length = xmlaReaderMethods.length;\n                var methodName;\n                var option;\n\n                for (; idx < length; idx++) {\n                    methodName = xmlaReaderMethods[idx];\n                    option = options[methodName];\n\n                    if (option && option !== identity) {\n                        this[methodName] = option;\n                    }\n                }\n            },\n            parse: function(xml) {\n                var result = kendo.data.XmlDataReader.fn.parse(xml.replace(/<(\\/?)(\\w|-)+:/g, \"<$1\"));\n                return kendo.getter(\"['Envelope']['Body']\", true)(result);\n            },\n            errors: function(root) {\n                var fault = kendo.getter(\"['Fault']\", true)(root);\n                if (fault) {\n                    return [{\n                        faultstring: kendo.getter(\"faultstring['#text']\", true)(fault),\n                        faultcode: kendo.getter(\"faultcode['#text']\", true)(fault)\n                    }];\n                }\n                return null;\n            },\n            axes: function(root) {\n                root = kendo.getter(\"ExecuteResponse[\\\"return\\\"].root\", true)(root);\n\n                var axes = asArray(kendo.getter(\"Axes.Axis\", true)(root));\n                var axis;\n\n                var result = {\n                    columns: {},\n                    rows: {}\n                };\n\n                for (var idx = 0; idx < axes.length; idx++) {\n                    axis = axes[idx];\n\n                    if (axis[\"@name\"].toLowerCase() !== \"sliceraxis\") {\n                        if (!result.columns.tuples) {\n                            result.columns = translateAxis(axis);\n                        } else {\n                            result.rows = translateAxis(axis);\n                        }\n                    }\n                }\n\n                return result;\n            },\n            data: function(root) {\n                root = kendo.getter(\"ExecuteResponse[\\\"return\\\"].root\", true)(root);\n\n                var cells = asArray(kendo.getter(\"CellData.Cell\", true)(root));\n\n                var result = [];\n                var ordinalGetter = kendo.getter(\"['@CellOrdinal']\");\n                var valueGetter = kendo.getter(\"Value['#text']\");\n                var fmtValueGetter = kendo.getter(\"FmtValue['#text']\");\n\n                for (var idx = 0; idx < cells.length; idx++) {\n                    result.push({\n                        value: valueGetter(cells[idx]),\n                        fmtValue: fmtValueGetter(cells[idx]),\n                        ordinal: parseInt(ordinalGetter(cells[idx]), 10)\n                    });\n                }\n\n                return result;\n            },\n            _mapSchema: function(root, getters) {\n                root = kendo.getter(\"DiscoverResponse[\\\"return\\\"].root\", true)(root);\n                var rows = asArray(kendo.getter(\"row\", true)(root));\n\n                var result = [];\n\n                for (var idx = 0; idx < rows.length; idx++) {\n                    var obj = {};\n                    for (var key in getters) {\n                        obj[key] = getters[key](rows[idx]);\n                    }\n                    result.push(obj);\n                }\n\n                return result;\n            },\n            measures: function(root) {\n                return this._mapSchema(root, schemaDataReaderMap.measures);\n            },\n            kpis: function(root) {\n                return this._mapSchema(root, schemaDataReaderMap.kpis);\n            },\n            hierarchies: function(root) {\n                return this._mapSchema(root, schemaDataReaderMap.hierarchies);\n            },\n            levels: function(root) {\n                return this._mapSchema(root, schemaDataReaderMap.levels);\n            },\n            dimensions: function(root) {\n                return this._mapSchema(root, schemaDataReaderMap.dimensions);\n            },\n            cubes: function(root) {\n                return this._mapSchema(root, schemaDataReaderMap.cubes);\n            },\n            catalogs: function(root) {\n                return this._mapSchema(root, schemaDataReaderMap.catalogs);\n            },\n            members: function(root) {\n                return this._mapSchema(root, schemaDataReaderMap.members);\n            }\n        });\n\n        extend(true, kendo.data, {\n           PivotDataSource: PivotDataSource,\n           PivotDataSourceV2: PivotDataSourceV2,\n           XmlaTransport: XmlaTransport,\n           XmlaDataReader: XmlaDataReader,\n           PivotCubeBuilder: PivotCubeBuilder,\n           transports: {\n               xmla: XmlaTransport\n           },\n           readers: {\n               xmla: XmlaDataReader\n           }\n        });\n\n        var sortExpr = function(expressions, name) {\n            if (!expressions) {\n                return null;\n            }\n\n            for (var idx = 0, length = expressions.length; idx < length; idx++) {\n                if (expressions[idx].field === name) {\n                    return expressions[idx];\n                }\n            }\n\n            return null;\n        };\n\n        var removeExpr = function(expressions, name) {\n            var result = [];\n\n            for (var idx = 0, length = expressions.length; idx < length; idx++) {\n                if (expressions[idx].field !== name) {\n                    result.push(expressions[idx]);\n                }\n            }\n\n            return result;\n        };\n\n        kendo.ui.PivotSettingTarget = Widget.extend({\n            init: function(element, options) {\n                var that = this;\n\n                Widget.fn.init.call(that, element, options);\n\n                that.element.addClass(\"k-pivot-setting\");\n\n                that.dataSource = kendo.data.PivotDataSource.create(options.dataSource);\n\n                that._refreshHandler = that.refresh.bind(that);\n                that.dataSource.first(CHANGE, that._refreshHandler);\n\n                if (!options.template) {\n                    var actions = '';\n\n                    if (that.options.enabled) {\n                        actions = `<span class=\"k-setting-delete k-chip-action\">${kendo.ui.icon(\"x\")}</span>`;\n                    }\n\n                    that.options.template = (data) => ''\n                        + `<span class=\"k-chip k-chip-md k-rounded-md k-chip-solid k-chip-solid-base\" data-${kendo.ns}name=\"${data.name || data}\">`\n                            + '<span class=\"k-chip-content\">'\n                                + `<span class=\"k-chip-text\">${data.name || data}</span>`\n                            + '</span>'\n                            + '<span class=\"k-chip-actions\">' + actions + '</span>'\n                        + '</span>';\n                }\n\n                that.template = kendo.template(that.options.template);\n                that.emptyTemplate = kendo.template(that.options.emptyTemplate);\n\n                that._sortable();\n\n                that.element.on(\"click\" + NS, '.k-chip, .k-button' , function(e) {\n                    var target = $(e.target).closest(\":not(path,svg)\");\n                    var action = target.closest('.k-chip-action');\n                    var name = target.closest(\"[\" + kendo.attr(\"name\") + \"]\")\n                                     .attr(kendo.attr(\"name\"));\n\n                    if (!name) {\n                        return;\n                    }\n\n                    if (action.hasClass(\"k-setting-delete\")) {\n                        that.remove(name);\n                        return;\n                    }\n\n                    if (target.closest('.k-chip-actions').length > 0) {\n                        return;\n                    }\n\n                    if (that.options.sortable) {\n                        var sortDirection = $(e.currentTarget).closest(\":not(path,svg)\").find('.k-i-sort-asc-small,.k-svg-i-sort-asc-small').length ? 'desc' : 'asc';\n\n                        that.sort({\n                            field: name,\n                            dir: sortDirection\n                        });\n                    }\n                });\n\n                if (options.filterable || options.sortable) {\n                    that.fieldMenu = new ui.PivotFieldMenu(that.element, {\n                        messages: that.options.messages.fieldMenu,\n                        filter: \".k-setting-fieldmenu\",\n                        filterable: options.filterable,\n                        sortable: options.sortable,\n                        dataSource: that.dataSource\n                    });\n                }\n\n                that.refresh();\n            },\n\n            options: {\n                name: \"PivotSettingTarget\",\n                template: null,\n                filterable: false,\n                sortable: false,\n                emptyTemplate: (data) => `<div class='k-empty'>${data}</div>`,\n                setting: \"columns\",\n                enabled: true,\n                messages: {\n                    empty: \"Drop Fields Here\"\n                }\n            },\n            setDataSource: function(dataSource) {\n                this.dataSource.unbind(CHANGE, this._refreshHandler);\n                this.dataSource = this.options.dataSource = dataSource;\n\n                if (this.fieldMenu) {\n                    this.fieldMenu.setDataSource(dataSource);\n                }\n                dataSource.first(CHANGE, this._refreshHandler);\n\n                this.refresh();\n            },\n\n            _sortable: function() {\n                var that = this;\n\n                if (that.options.enabled) {\n                    this.sortable = this.element.kendoSortable({\n                        connectWith: this.options.connectWith,\n                        hint: that.options.hint,\n                        filter: \">*:not(.k-empty)\",\n                        cursor: \"move\",\n                        start: function(e) {\n                            e.item.trigger(\"focus\").trigger(\"blur\");\n                        },\n                        change: function(e) {\n                            var name = e.item.attr(kendo.attr(\"name\"));\n\n                            if (e.action == \"receive\") {\n                                that.add(name);\n                            } else if (e.action == \"remove\") {\n                                that.remove(name);\n                            } else if (e.action == \"sort\") {\n                                that.move(name, e.newIndex);\n                            }\n                        }\n                    }).data(\"kendoSortable\");\n                }\n            },\n\n            _isKPI: function(data) {\n                return data.type === \"kpi\" || data.measure;\n            },\n\n            validate: function(data) {\n                var isMeasure = (data.type == 2 || \"aggregator\" in data || this._isKPI(data));\n\n                if (isMeasure) {\n                    return this.options.setting === \"measures\";\n                }\n\n                if (this.options.setting === \"measures\") {\n                    return isMeasure;\n                }\n\n                var items = this.dataSource[this.options.setting]();\n                var name = data.defaultHierarchy || data.uniqueName;\n                if (indexOf(name, items) > -1) {\n                    return false;\n                }\n\n                items = this.dataSource[this.options.setting === \"columns\" ? \"rows\" : \"columns\"]();\n                if (indexOf(name, items) > -1) {\n                    return false;\n                }\n\n                return true;\n            },\n\n            add: function(name) {\n                let items = this.dataSource[this.options.setting]();\n                let i = 0;\n\n                name = Array.isArray(name) ? name.slice(0) : [name];\n\n                let l = name.length;\n\n                while (i < l) {\n                    if (indexOf(name[i], items) !== -1) {\n                        name.splice(i, 1);\n                        i -= 1;\n                        l -= 1;\n                    }\n                    i++;\n                }\n\n                if (name.length) {\n                    items = items.concat(name);\n                    this.dataSource[this.options.setting](items);\n                }\n            },\n\n            move: function(name, index) {\n                var items = this.dataSource[this.options.setting]();\n                var idx = indexOf(name, items);\n\n                if (idx > -1) {\n                    name = items.splice(idx, 1)[0];\n\n                    items.splice(index, 0, name);\n\n                    this.dataSource[this.options.setting](items);\n                }\n            },\n\n            remove: function(name) {\n                var items = this.dataSource[this.options.setting]();\n                var idx = indexOf(name, items);\n                var sortExpressions = this.dataSource.sort();\n                var filter = this.dataSource.filter();\n\n                if (idx > -1) {\n                    if (filter) {\n                        filter.filters = removeExpr(filter.filters, name);\n                        this.dataSource._filter.filters = filter.filters;\n                        if (!filter.filters.length) {\n                            this.dataSource._filter = null;\n                        }\n                    }\n                    if (sortExpressions) {\n                        sortExpressions = removeExpr(sortExpressions, name);\n                        this.dataSource._sort = sortExpressions;\n                    }\n                    items.splice(idx, 1);\n                    this.dataSource[this.options.setting](items);\n                }\n            },\n\n            sort: function(expr) {\n                var sortable = this.options.sortable;\n                var allowUnsort = sortable === true || sortable.allowUnsort;\n                var skipExpr = allowUnsort && expr.dir === \"asc\";\n\n                var expressions = (this.dataSource.sort() || []);\n                var result = removeExpr(expressions, expr.field);\n\n                if (skipExpr && expressions.length !== result.length) {\n                    expr = null;\n                }\n\n                if (expr) {\n                    result.push(expr);\n                }\n\n                this.dataSource.sort(result);\n            },\n\n            refresh: function() {\n                var html = \"\";\n                var items = this.dataSource[this.options.setting]();\n                var length = items.length;\n                var idx = 0;\n                var item;\n\n                if (length) {\n                    for (; idx < length; idx++) {\n                        item = items[idx];\n                        item = item.name === undefined$1 ? { name: item } : item;\n\n                        html += this.template(extend({ sortIcon: this._sortIcon(item.name) }, item));\n                    }\n                } else {\n                    html = this.emptyTemplate(this.options.messages.empty);\n                }\n\n                this.element.html(html);\n            },\n\n            destroy: function() {\n                Widget.fn.destroy.call(this);\n\n                this.dataSource.unbind(CHANGE, this._refreshHandler);\n                this.element.off(NS);\n\n                if (this.sortable) {\n                    this.sortable.destroy();\n                }\n\n                if (this.fieldMenu) {\n                    this.fieldMenu.destroy();\n                }\n\n                this.element = null;\n                this._refreshHandler = null;\n            },\n\n            _sortIcon: function(name) {\n                var expressions = this.dataSource.sort();\n                var expr = sortExpr(expressions, getName(name));\n                var icon = \"\";\n\n                if (expr) {\n                    icon = \"sort-\" + expr.dir;\n                }\n\n                return icon;\n            }\n        });\n\n        kendo.ui.PivotSettingTargetV2 = Widget.extend({\n            init: function(element, options) {\n                var that = this;\n\n                Widget.fn.init.call(that, element, options);\n\n                that.dataSource = kendo.data.PivotDataSourceV2.create(options.dataSource);\n\n                that._refreshHandler = that.refresh.bind(that);\n                that.dataSource.first(CHANGE, that._refreshHandler);\n\n                that.template = kendo.template(that.options.template);\n\n                that._sortable();\n\n                that.element.on(\"click\" + NS, \".k-i-x-circle,.k-svg-i-x-circle\", function(e) {\n                    var target = $(e.target).closest(\":not(path,svg)\");\n                    var parent = target.closest(\".k-chip\");\n                    var name = parent.find(\".k-chip-label\").text();\n\n                    if (!name) {\n                        return;\n                    }\n\n                    that.remove(name);\n                    parent.remove();\n                    that.trigger(\"remove\", { name: name });\n                });\n\n                if (that.options.navigatable) {\n                    that.element.on(\"keydown\" + NS, \".k-chip\", function(ev) {\n                        var chip = $(ev.target),\n                            key = ev.keyCode,\n                            name = chip.find(\".k-chip-label\").text();\n\n                        if (key === keys.DELETE || key === keys.BACKSPACE) {\n                            const targetIndex = that.options.configuratorNavigation ? that.options.configuratorNavigation.elements.indexOf(chip[0]) : -1;\n                            chip.find(\".k-i-x-circle,.k-svg-i-x-circle\").trigger(\"click\");\n                            if (!that.options.configuratorNavigation) {\n                                return;\n                            }\n\n                            that.options.configuratorNavigation.focusElement(\n                                that.options.configuratorNavigation.elements[targetIndex - 1],\n                            );\n                        } else if (key === keys.DOWN && ev.altKey) {\n                            chip.find(\".k-i-more-vertical,.k-svg-i-more-vertical\").trigger(\"click\");\n                        } else if (ev.ctrlKey && ev.shiftKey) {\n                            if (key == keys.LEFT) {\n                                that.move(name, Math.max(0, chip.index() - 1));\n\n                                if (!that.options.configuratorNavigation) {\n                                    return;\n                                }\n\n                                that.options.configuratorNavigation.focusElement(\n                                    that.element.find(\".k-chip .k-chip-label\")\n                                        .filter((ind, el) => $(el).text() == name)\n                                        .closest(\".k-chip\")[0]\n                                );\n                            } else if (key == keys.RIGHT) {\n                                that.move(name, Math.min(chip.index() + 1, chip.parent().find(\"> .k-chip\").length - 1));\n\n                                if (!that.options.configuratorNavigation) {\n                                    return;\n                                }\n\n                                that.options.configuratorNavigation.focusElement(\n                                    that.element.find(\".k-chip .k-chip-label\")\n                                        .filter((ind, el) => $(el).text() == name)\n                                        .closest(\".k-chip\")[0]\n                                );\n                            } else if ((key == keys.UP && that.options.setting == \"rows\") ||\n                                (key == keys.DOWN && that.options.setting == \"columns\")) {\n\n                                let otherTarget = that.sortable.options.connectWith.data(\"kendoPivotSettingTargetV2\");\n                                if (!otherTarget) {\n                                    return;\n                                }\n\n                                that.remove(name);\n                                otherTarget.add(name);\n                                if (!that.options.configuratorNavigation) {\n                                    return;\n                                }\n\n                                that.options.configuratorNavigation.focusElement(\n                                    otherTarget.element.find(\".k-chip\").last()[0]\n                                );\n                            }\n                        }\n                    });\n                }\n\n                that.fieldMenu = new ui.PivotFieldMenuV2(that.element, {\n                    messages: that.options.messages.fieldMenu,\n                    filterable: options.filterable,\n                    filter: \".k-i-more-vertical,.k-svg-i-more-vertical\",\n                    sortable: options.sortable,\n                    dataSource: that.dataSource,\n                    setting: options.setting\n                });\n\n                that.refresh();\n            },\n\n            events: [\"remove\"],\n\n            options: {\n                name: \"PivotSettingTargetV2\",\n                template: null,\n                filterable: false,\n                sortable: false,\n                setting: \"columns\",\n                enabled: true,\n                messages: {\n                    empty: \"Drop Fields Here\"\n                }\n            },\n            setDataSource: function(dataSource) {\n                this.dataSource.unbind(CHANGE, this._refreshHandler);\n                this.dataSource = this.options.dataSource = dataSource;\n\n                if (this.fieldMenu) {\n                    this.fieldMenu.setDataSource(dataSource);\n                }\n                dataSource.first(CHANGE, this._refreshHandler);\n\n                this.refresh();\n            },\n\n            _applyState: function() {\n                if (this._sortState !== undefined$1) {\n                    this.dataSource._sort = this._sortState;\n                    this._sortState = undefined$1;\n                }\n\n                if (this._stateFilter !== undefined$1) {\n                    this.dataSource._filter = this._stateFilter;\n                    this._stateFilter = undefined$1;\n                }\n\n                this.dataSource[\"_\" + this.options.setting] = this.options.setting === \"measures\" ? normalizeMeasures(this._savedState) : normalizeMembers(this._savedState);\n            },\n\n            _cancelChanges: function() {\n                this._sortState = undefined$1;\n                this._stateFilter = undefined$1;\n                this._savedState = kendo.deepExtend([], this._initialState);\n                this._redraw();\n            },\n\n            _state: function(newState, modifyInit) {\n                var that = this;\n\n                if (!newState) {\n                    return that._savedState || [];\n                } else {\n                    if (!that._savedState || modifyInit) {\n                        that._initialState = kendo.deepExtend([], newState);\n                    }\n                    that._savedState = kendo.deepExtend([], newState);\n                }\n            },\n\n            _sortable: function() {\n                var that = this;\n\n                this.sortable = this.element.kendoSortable({\n                    connectWith: this.options.connectWith,\n                    hint: that.options.hint,\n                    filter: \">*:not(.k-empty)\",\n                    cursor: \"move\",\n                    start: function(e) {\n                        e.item.trigger(\"focus\").blur();\n                    },\n                    change: function(e) {\n                        var name = e.item.find(\".k-chip-label\").text();\n\n                        if (e.action == \"receive\") {\n                            that.add(name);\n                        } else if (e.action == \"remove\") {\n                            that.remove(name);\n                        } else if (e.action == \"sort\") {\n                            that.move(name, e.newIndex);\n                        }\n                    }\n                }).data(\"kendoSortable\");\n            },\n\n            add: function(name) {\n                let items = this._state();\n                let i = 0;\n\n                name = Array.isArray(name) ? name.slice(0) : [name];\n\n                let l = name.length;\n                while (i < l) {\n                    if (indexOf(name[i], items) !== -1) {\n                        name.splice(i, 1);\n                        i -= 1;\n                        l -= 1;\n                    }\n                    i++;\n                }\n\n                if (name.length) {\n                    items = items.concat(name);\n                    this._state(items);\n                    this._redraw();\n                }\n            },\n\n            move: function(name, index) {\n                var items = this._state();\n                var idx = indexOf(name, items);\n\n                if (idx > -1) {\n                    name = items.splice(idx, 1)[0];\n\n                    items.splice(index, 0, name);\n\n                    this._state(items);\n                    this._redraw();\n                }\n            },\n\n            remove: function(name) {\n                var items = this._state();\n                var idx = indexOf(name, items);\n                var sortExpressions = this.dataSource.sort();\n                var filter = this.dataSource.filter();\n\n                if (idx > -1) {\n                    if (filter) {\n                        filter.filters = removeExpr(filter.filters, name);\n                        this._savedFilter = this.dataSource._filter;\n                        this._savedFilter.filters = filter.filters;\n                        if (!filter.filters.length) {\n                            this._savedFilter = null;\n                        }\n                    }\n                    if (sortExpressions) {\n                        sortExpressions = removeExpr(sortExpressions, name);\n                        this._sortState = sortExpressions;\n                    }\n                    items.splice(idx, 1);\n                    this._state(items);\n                    this._redraw();\n                }\n            },\n\n            _emptyState: function(enable) {\n                var that = this;\n                if (enable) {\n                    that.element.html(this.options.messages.empty)\n                        .addClass(\"k-settings-description\")\n                        .removeClass(\"k-chip-list\");\n                } else {\n                    that.element\n                        .removeClass(\"k-settings-description\")\n                        .addClass(\"k-chip-list\");\n                }\n            },\n\n            _redraw: function() {\n                var items = this._state() || [];\n                this._emptyState(!items.length);\n                if (items.length) {\n                    this.element.html(this._targetsHTML(items));\n                }\n            },\n\n            _targetsHTML: function(items) {\n                var item;\n                var html = \"\";\n                var idx = 0;\n                var enabled = true;\n\n                if (items.length) {\n                    for (; idx < items.length; idx++) {\n                        item = items[idx];\n                        item = item.name === undefined$1 ? { name: item } : item;\n\n                        html += this.template({ name: item.name, menuenabled: enabled });\n                    }\n                }\n                return html;\n            },\n\n            refresh: function() {\n                if (this.dataSource._preventRefresh) {\n                    return;\n                }\n                var items = this.dataSource[this.options.setting]();\n                this._state(items, true);\n                this._emptyState(!this._state().length);\n                if (items.length) {\n                    this.element.html(this._targetsHTML(items));\n                }\n            },\n\n            destroy: function() {\n                Widget.fn.destroy.call(this);\n\n                this.dataSource.unbind(CHANGE, this._refreshHandler);\n                this.element.off(NS);\n\n                if (this.sortable) {\n                    this.sortable.destroy();\n                }\n\n                if (this.fieldMenu) {\n                    this.fieldMenu.destroy();\n                }\n\n                this.element = null;\n                this._refreshHandler = null;\n            }\n        });\n\n        var PivotConfiguratorButton = Widget.extend({\n            init: function(element, options) {\n                var that = this;\n                Widget.fn.init.call(that, element, options);\n                that.element = $(element);\n\n                that._element();\n                that._attachEvents();\n            },\n\n            options: {\n                name: \"PivotConfiguratorButton\",\n                text: \"Change settings\",\n                configurator: \"\"\n            },\n\n            destroy: function() {\n                this.element.off(NS);\n            },\n\n            setOptions: function(options) {\n                var that = this;\n                kendo.deepExtend(that.options, options);\n                this.init(this.element, this.options);\n            },\n\n            toggle: function() {\n                var attr = kendo.attr(\"role\");\n                var pivotEl = this.element\n                    .closest(\"[\" + attr + \"=pivotcontainer]\")\n                    .find(\"[\" + attr + \"=pivotgridv2]\");\n                var pivot;\n\n                $(\"#\" + this.options.configurator).toggleClass(\"k-hidden\");\n\n                if (pivotEl.length) {\n                    pivot = pivotEl.getKendoPivotGridV2();\n                    pivot._setContentWidth();\n                    pivot._updateDimensions();\n                }\n            },\n\n            _attachEvents: function() {\n                this.element.on(\"click\" + NS, this.toggle.bind(this));\n            },\n\n            _element: function() {\n                var options = this.options;\n                this.element.addClass(\"k-pivotgrid-configurator-button\");\n                this.element.html(kendo.format(\"<span>{0}{1}</span>\",options.text, kendo.ui.icon('gear')));\n            }\n        });\n\n        var PivotContainer = Widget.extend({\n            init: function(element, options) {\n                var that = this;\n                Widget.fn.init.call(that, element, options);\n                that.element = $(element);\n                that.options = options;\n\n\n                that._addClasses();\n            },\n\n            options: {\n                name: \"PivotContainer\",\n                configuratorPosition: \"left\"\n            },\n\n            setOptions: function(options) {\n                var that = this;\n                kendo.deepExtend(that.options, options);\n                this.init(this.element, this.options);\n            },\n\n            _addClasses: function() {\n                var options = this.options;\n                var className;\n                this.element.removeClass(\"k-flex-row k-flex-row-reverse k-flex-column k-flex-column-reverse\");\n\n                switch (options.configuratorPosition) {\n                    case \"right\":\n                        className = \"k-flex-row\";\n                        break;\n                    case \"left\":\n                        className = \"k-flex-row-reverse\";\n                        break;\n                    case \"bottom\":\n                        className = \"k-flex-column\";\n                        break;\n                    case \"top\":\n                        className = \"k-flex-column-reverse\";\n                        break;\n                    default:\n                        className = \"k-flex-row\";\n                }\n\n                this.element\n                    .addClass(\"k-d-flex k-pos-relative\")\n                    .addClass(className);\n            }\n        });\n\n        var PivotGridV2 = Widget.extend({\n            init: function(element, options) {\n                var that = this;\n\n                Widget.fn.init.call(that, element, options);\n\n                that._dataSource();\n\n                that._bindConfigurator();\n\n                that._ariaId = that.element.attr(\"id\") || kendo.guid();\n                that._wrapper();\n\n                that._columnHeadersWrapper = $('<div class=\"k-pivotgrid-column-headers\"></div>');\n                that._rowHeadersWrapper = $('<div class=\"k-pivotgrid-row-headers\"></div>');\n                that._contentWrapper = $('<div class=\"k-pivotgrid-values\"></div>');\n\n                that.wrapper.append(that._columnHeadersWrapper);\n                that.wrapper.append(that._rowHeadersWrapper);\n                that.wrapper.append(that._contentWrapper);\n\n                that._columnBuilder = new ColumnRowBuilder( { template: this.options.columnHeaderTemplate, axes: \"columns\", ariaId: that._ariaId });\n                that._rowBuilder = new ColumnRowBuilder( { template: this.options.rowHeaderTemplate, axes: \"rows\", ariaId: that._ariaId });\n                that._contentBuilder = new ContentBuilderV2( {\n                    dataCellTemplate: this.options.dataCellTemplate || DATACELL_TEMPLATE,\n                    kpiStatusTemplate: this.options.kpiStatusTemplate || KPISTATUS_TEMPLATE,\n                    kpiTrendTemplate: this.options.kpiTrendTemplate || KPITREND_TEMPLATE,\n                    measures: this.dataSource._measures,\n                    ariaId: that._ariaId\n                });\n\n                that._scrollable();\n                that._rowHeadersWrapper\n                    .add(that._columnHeadersWrapper)\n                    .on(\"click\", \"span.k-icon,span.k-svg-icon\", function() {\n                        var button = $(this);\n                        var path = button.parent().attr(kendo.attr(\"key\"));\n                        var expanded = button.is(\".k-i-chevron-up,.k-svg-i-chevron-up\");\n                        var isRow = button.closest(\".k-pivotgrid-row-headers\").length !== 0;\n                        var paths = path.split(\",\");\n                        var eventName = expanded ? COLLAPSEMEMBER : EXPANDMEMBER;\n\n                        if (that.trigger(eventName, { path: paths, axis: isRow ? \"rows\" : \"columns\" })) {\n                            return;\n                        }\n\n                        var reducerPayLoad = {\n                            type: \"HEADERS_ACTION_TOGGLE\",\n                            payload: paths,\n                            tree: isRow ? that._rowBuilder.getTree() : that._columnBuilder.getTree()\n                        };\n                        var currentAxes = isRow ? that.dataSource._rows : that.dataSource._columns;\n                        var newHeaders = kendo_pivotgridCommon_cmn_chunk_js.i(currentAxes, reducerPayLoad);\n\n                        that.dataSource._preventRefresh = true;\n                        that._columnBuilder._exportData = {};\n                        that._rowBuilder._exportData = {};\n\n                        if (isRow) {\n                            that.dataSource.rows(newHeaders);\n                        } else {\n                            that.dataSource.columns(newHeaders);\n                        }\n                     });\n\n                if (that.options.autoBind) {\n                    that.dataSource.fetch();\n                }\n\n                that._aria();\n\n                if (that.options.navigatable) {\n                    that._initPivotGridNavigation();\n                }\n\n                that._initLoader();\n\n                kendo.notify(that);\n            },\n\n            events: [\n                DATABINDING,\n                DATABOUND,\n                EXPANDMEMBER,\n                COLLAPSEMEMBER\n            ],\n\n            options: {\n                name: \"PivotGridV2\",\n                autoBind: true,\n                height: null,\n                columnWidth: null,\n                configurator: \"\",\n                columnHeaderTemplate: null,\n                rowHeaderTemplate: null,\n                dataCellTemplate: null,\n                kpiStatusTemplate: null,\n                kpiTrendTemplate: null,\n                messages: {\n                    emptyCellLabel: \"PivotGrid Empty Cell\"\n                }\n            },\n\n            destroy: function() {\n                var that = this;\n                Widget.fn.destroy.call(that);\n\n                if (that.loader) {\n                    that.loader.destroy();\n                }\n\n                if (that._windowResizeHandler) {\n                    $(window).off(RESIZE + NS, that._windowResizeHandler);\n                    that._windowResizeHandler = null;\n                }\n            },\n\n            _aria: function() {\n                var that = this;\n                that.element.attr(\"role\", \"grid\");\n            },\n\n            setDataSource: function(dataSource) {\n                this.options.dataSource = dataSource;\n\n                this._dataSource();\n\n                this._bindConfigurator();\n\n                if (this.options.autoBind) {\n                    dataSource.fetch();\n                }\n            },\n\n            _initLoader: function(options) {\n                var that = this,\n                    defaultOptions = {\n                        size: 'medium',\n                        messages: { exporting: 'Exporting...' }\n                };\n                defaultOptions = $.extend({}, defaultOptions, options);\n\n                const loader = $(\"<div></div>\").kendoLoader(defaultOptions).data(\"kendoLoader\");\n\n                that.loader = loader;\n                that._loaderContainer = kendo_loaderContainer_chunk_js.u.bind(that);\n            },\n\n\n            _initPivotGridNavigation: function() {\n                var that = this;\n\n                that.navigation = new kendo_pivotgridCommon_cmn_chunk_js.P({ tabIndex: 0 });\n                that.navigation.keyboardEvents.keydown.o = function(_target, nav, _ev) {\n                    if (!nav.root) {\n                        return;\n                    }\n                    // FIX: ADDED manually to fix an issue where depending on the order of the config element and button\n                    // you either can open the configurator with O, or you can close the configurator with ESC\n                    let next = nav.root.nextElementSibling;\n                    if (!(next && next instanceof HTMLElement)) {\n                        return;\n                    }\n                    if (!next.matches('div.k-pivotgrid-configurator-button')) {\n                        next = next.nextElementSibling;\n                    }\n                    if (next && next instanceof HTMLElement && next.matches('div.k-pivotgrid-configurator-button')) {\n                        if (!nav.root.parentNode || nav.root.parentNode.querySelector(\".k-pivotgrid-configurator.k-hidden\")) {\n                            next.click();\n                        }\n                        setTimeout(() => {\n                            if (nav.root.parentNode) {\n                                const confHeader = nav.root.parentNode.querySelector('.k-pivotgrid-configurator-content .k-form-field .k-fields-list-wrapper .k-treeview');\n                                if (confHeader instanceof HTMLElement) {\n                                    confHeader.setAttribute('tabindex', String(nav.tabIndex));\n                                    confHeader.focus();\n                                }\n                            }\n                        }, 0);\n                    }\n                };\n                that.navigation.start(that.element[0]);\n\n                const firstCell = that.navigation.first;\n\n                if (firstCell) {\n                    firstCell.setAttribute('tabindex', '0');\n                }\n            },\n\n            _matchAriaAttributes: function(wrapper) {\n                var that = this;\n                const rowHeaderRows = wrapper.querySelectorAll(\n                    \".k-pivotgrid-row-headers .k-pivotgrid-row\"\n                );\n                const rowHeaderCols = !rowHeaderRows[0] ? [] : Array.from(rowHeaderRows[0].children).reduce(\n                    (acc, curr) => (acc += curr.getAttribute(\"colspan\") !== null ? +curr.getAttribute(\"colspan\") : 1),\n                    0\n                );\n                const colHeaderRows = wrapper.querySelectorAll(\n                    \".k-pivotgrid-column-headers tr\"\n                );\n                const colHeaderCells = wrapper.querySelectorAll(\n                    \".k-pivotgrid-column-headers th\"\n                );\n                const valueTableCells = wrapper.querySelectorAll(\".k-pivotgrid-values td\");\n                const emptyCell = wrapper.querySelector(\".k-pivotgrid-empty-cell\");\n\n                emptyCell.setAttribute(\"aria-rowspan\", colHeaderRows.length.toString());\n                emptyCell.setAttribute(\"aria-colspan\", rowHeaderCols.toString());\n\n                const firstColHeadersRow = colHeaderRows[0];\n                const firstColHeaderRowCellsIds = !firstColHeadersRow ? [] : Array.from(firstColHeadersRow.children)\n                    .map(el => el.getAttribute(\"id\"))\n                    .join(\" \");\n                if (firstColHeadersRow) {\n                    firstColHeadersRow.setAttribute(\n                        \"aria-owns\",\n                        `${emptyCell.getAttribute(\"id\")} ${firstColHeaderRowCellsIds}`\n                    );\n                }\n\n                rowHeaderRows.forEach((row, index) => {\n                    const valueCellsIds = that.filterAndMap(\n                        Array.from(valueTableCells),\n                        c => {\n                            const idParts = c.getAttribute(\"id\").split(\"-\");\n                            return idParts[idParts.length - 2] === (index + 1).toString();\n                        },\n                        c => c.getAttribute(\"id\")\n                    );\n\n                    row.setAttribute(\"aria-owns\", valueCellsIds.join(\" \"));\n                });\n\n                valueTableCells.forEach(cell => {\n                    const idParts = cell.getAttribute(\"id\").split(\"-\");\n                    const cellColIndex = +idParts[idParts.length - 1];\n                    const colHeaderCellsIds = that.filterAndMap(\n                        Array.from(colHeaderCells),\n                        c => {\n                            const idParts = c.getAttribute(\"id\").split(\"-\");\n                            const headerCellColIndex = +idParts[idParts.length - 1];\n                            const headerCellColspan = +c.getAttribute(\"colspan\");\n                            const colIndexIsEqual = cellColIndex === headerCellColIndex;\n                            const cellColIndexIsWithinHeaderCellRange =\n                                headerCellColspan > 1 &&\n                                headerCellColIndex < cellColIndex &&\n                                headerCellColIndex + headerCellColspan - 1 >= cellColIndex;\n\n                            return colIndexIsEqual || cellColIndexIsWithinHeaderCellRange;\n                        },\n                        c => c.getAttribute(\"id\")\n                    );\n\n                    cell.setAttribute(\"aria-describedby\", colHeaderCellsIds.join(\" \"));\n                });\n            },\n\n            filterAndMap: function(arr, predicate, mapper) {\n                return arr.reduce(\n                    (acc, curr) => (predicate(curr) ? [...acc, mapper(curr)] : acc),\n                    []\n                );\n            },\n\n            _dataSource: function() {\n                var that = this;\n                var dataSource = that.options.dataSource;\n\n                dataSource = Array.isArray(dataSource) ? { data: dataSource } : dataSource;\n\n                if (that.dataSource && this._refreshHandler) {\n                    that.dataSource.unbind(CHANGE, that._refreshHandler)\n                                   .unbind(PROGRESS, that._progressHandler)\n                                   .unbind(ERROR, that._errorHandler);\n                } else {\n                    that._refreshHandler = that.refresh.bind(that);\n                    that._progressHandler = that._requestStart.bind(that);\n                    that._errorHandler = that._error.bind(that);\n                }\n\n                that.dataSource = kendo.data.PivotDataSourceV2.create(dataSource)\n                                       .bind(CHANGE, that._refreshHandler)\n                                       .bind(PROGRESS, that._progressHandler)\n                                       .bind(ERROR, that._errorHandler);\n            },\n\n            _resize: function() {\n                var that = this;\n                that.wrapper[0].style.setProperty('--kendo-scrollbar-width', kendo.format(\"{0}px\", getScollWidth()));\n            },\n\n            _scrollable: function() {\n                var that = this;\n                var columnsHeader = that._columnHeadersWrapper;\n                var rowsHeader = that._rowHeadersWrapper;\n\n                that._resize();\n                that._windowResizeHandler = that._resize.bind(that);\n\n                that._contentWrapper.scroll(function() {\n                    kendo.scrollLeft(columnsHeader, this.scrollLeft);\n                    rowsHeader.scrollTop(this.scrollTop);\n                });\n\n                rowsHeader.bind(\"DOMMouseScroll\" + NS + \" mousewheel\" + NS, that._wheelScroll.bind(that));\n                $(window).on(RESIZE + NS, that._windowResizeHandler);\n            },\n\n            _wheelScroll: function(e) {\n                if (e.ctrlKey) {\n                    return;\n                }\n\n                var delta = kendo.wheelDeltaY(e);\n                var scrollTop = this._contentWrapper.scrollTop();\n\n                if (delta) {\n                    e.preventDefault();\n                    $(e.currentTarget).one(\"wheel\" + NS, false);\n\n                    this._rowHeadersWrapper.scrollTop(scrollTop + (-delta));\n                    this._contentWrapper.scrollTop(scrollTop + (-delta));\n                }\n            },\n\n            _wrapper: function() {\n                var height = this.options.height;\n\n                this.wrapper = this.element.addClass(\"k-pivotgrid\");\n                var emptyCell = $(`<span class=\"k-pivotgrid-empty-cell\" id=\"${this._ariaId}-empty-cell\" role=\"columnheader\"><span class=\"k-sr-only\">${this.options.messages.emptyCellLabel}</span></span>`);\n                this.wrapper.append(emptyCell);\n\n                if (height) {\n                    this.wrapper.css(\"height\", height);\n                }\n            },\n\n            _progress: function(toggle) {\n                if (this._isExport) {\n                    this._loaderContainer(toggle, { message: \"Exporting...\" });\n                } else {\n                    kendo.ui.progress(this.wrapper, toggle);\n                }\n            },\n\n            _error: function() {\n                this._progress(false);\n            },\n\n            _requestStart: function() {\n                this._progress(true);\n            },\n\n            _updateDimensions: function() {\n                var that = this;\n                that.wrapper.css({\n                    \"grid-template-columns\": kendo.format(\"{0}px 1fr\", that._rowHeadersWrapper.find(\".k-pivotgrid-table\")[0].offsetWidth),\n                    \"grid-template-rows\": kendo.format(\"{0}px 1fr\", that._columnHeadersWrapper.find(\".k-pivotgrid-table\")[0].offsetHeight),\n                });\n            },\n\n            _setContentWidth: function() {\n                if (!this.options.columnWidth) {\n                    return;\n                }\n                var contentTable = this._contentWrapper.find(\"table\");\n                var columnTable = this._columnHeadersWrapper.children(\"table\");\n                var rowTable = this._rowHeadersWrapper.children(\"table\");\n\n                contentTable.add(columnTable).add(rowTable).find(\"col\").width(this.options.columnWidth);\n            },\n\n            _bindConfigurator: function() {\n                var configurator = this.options.configurator;\n                if (configurator) {\n                    $(configurator).kendoPivotConfiguratorV2(\"setDataSource\", this.dataSource);\n                }\n            },\n\n            cellInfoByElement: function(element) {\n                element = $(element);\n\n                return this.cellInfo(element.index(), element.parent(\"tr\").index());\n            },\n\n            cellInfo: function(columnIndex, rowIndex) {\n                var contentBuilder = this._contentBuilder;\n                var dataIndex;\n                var dataItem;\n\n                if (columnIndex >= contentBuilder.columnsCount || columnIndex < 0 ||\n                    rowIndex >= contentBuilder.rowsCount || rowIndex < 0) {\n                    return null;\n                }\n\n                dataIndex = rowIndex * contentBuilder.columnsCount + columnIndex;\n                dataItem = contentBuilder.hash[dataIndex < 0 ? 0 : dataIndex];\n\n                return {\n                    columnTuple: dataItem.columnTuple,\n                    rowTuple: dataItem.rowTuple,\n                    dataItem: dataItem.data\n                };\n            },\n\n            refresh: function() {\n                var that = this;\n\n                var dataSource = that.dataSource;\n                if (that.trigger(DATABINDING, { action: \"rebind\" } )) {\n                    return;\n                }\n\n                var lastFocusedCellID = kendo._activeElement() ? kendo._activeElement().id : null;\n                var lastCellIdWithTabIndex = that.wrapper.find(\"[tabindex=0]\").attr(\"id\");\n                that._columnBuilder.setTuples(dataSource._columnTuples);\n                that._columnHeadersWrapper.html(that._columnBuilder.build());\n\n                that._rowBuilder.setTuples(dataSource._rowTuples);\n                that._rowHeadersWrapper.html(that._rowBuilder.build());\n\n                that._contentBuilder.setRowColumnInfo({\n                    columnHeaderLeafs: that._columnBuilder.getHeaderLeafs(),\n                    rowHeaderLeafs: that._rowBuilder.getHeaderLeafs(),\n                    columnHeaderBreadth: that._columnBuilder.getBreadth(),\n                    rowHeaderDepth: that._rowBuilder.getBreadth(),\n                    data: dataSource._view\n                });\n\n                that._contentWrapper.html(that._contentBuilder.build());\n\n\n                that._setContentWidth();\n                that._updateDimensions();\n\n                that._progress(false);\n\n                that.trigger(DATABOUND);\n                that._matchAriaAttributes(that.wrapper[0]);\n\n                if (!that.navigation) {\n                    return;\n                }\n\n                if (lastCellIdWithTabIndex && that.element.find(`#${lastCellIdWithTabIndex}`).length > 0) {\n                    that.element.find(`#${lastCellIdWithTabIndex}`).attr('tabindex', '0');\n                } else {\n                    const firstCell = that.navigation.first;\n\n                    if (firstCell) {\n                        firstCell.setAttribute('tabindex', '0');\n                    }\n                }\n\n                if (lastFocusedCellID && lastFocusedCellID.indexOf(that._ariaId) == 0) {\n                    that.navigation.focusElement(that.element.find(`#${lastFocusedCellID}`)[0]);\n                }\n            }\n        });\n\n        ui.plugin(PivotConfiguratorButton);\n        ui.plugin(PivotContainer);\n        ui.plugin(PivotGridV2);\n\n        var PivotGrid = Widget.extend({\n            init: function(element, options) {\n                var that = this;\n                var columnBuilder;\n                var rowBuilder;\n\n                Widget.fn.init.call(that, element, options);\n\n                STATE_COLLAPSED_ICONNAME = kendo.support.isRtl(that.element) ? \"caret-alt-left\" : \"caret-alt-right\";\n\n                that._dataSource();\n\n                that._bindConfigurator();\n\n                that._wrapper();\n                that._createLayout();\n\n                that._columnBuilder = columnBuilder = new ColumnBuilder();\n                that._rowBuilder = rowBuilder = new RowBuilder();\n                that._contentBuilder = new ContentBuilder();\n\n                that._templates();\n\n                that.columnsHeader\n                    .add(that.rowsHeader)\n                    .on(\"click\", \"span.k-icon,span.k-svg-icon\", function() {\n                        var button = $(this);\n                        var builder = columnBuilder;\n                        var action = \"expandColumn\";\n                        var eventName;\n                        var path = button.attr(kendo.attr(\"path\"));\n                        var eventArgs = {\n                            axis: \"columns\",\n                            path: JSON.parse(path)\n                        };\n\n                        if (button.parent().is(\"td\")) {\n                            builder = rowBuilder;\n                            action = \"expandRow\";\n                            eventArgs.axis = \"rows\";\n                        }\n\n                        var expanded = button.is(STATE_EXPANDED_SELECTOR);\n                        var metadata = builder.metadata[path];\n                        var request = metadata.expanded === undefined$1;\n\n                        eventName = expanded ? COLLAPSEMEMBER : EXPANDMEMBER;\n                        eventArgs.childrenLoaded = metadata.maxChildren > metadata.children;\n\n                        if (that.trigger(eventName, eventArgs)) {\n                            return;\n                        }\n\n                        builder.metadata[path].expanded = !expanded;\n                        kendo.ui.icon(button,{ icon: !expanded ? STATE_EXPANDED_ICONNAME : STATE_COLLAPSED_ICONNAME });\n\n                        if (!expanded && request) {\n                            that.dataSource[action](eventArgs.path);\n                        } else {\n                            that.refresh();\n                        }\n                    });\n\n                that._scrollable();\n\n                if (that.options.autoBind) {\n                    that.dataSource.fetch();\n                }\n\n                kendo.notify(that);\n            },\n\n            events: [\n                DATABINDING,\n                DATABOUND,\n                EXPANDMEMBER,\n                COLLAPSEMEMBER\n            ],\n\n            options: {\n                name: \"PivotGrid\",\n                autoBind: true,\n                reorderable: true,\n                filterable: false,\n                sortable: false,\n                navigatable: false,\n                height: null,\n                columnWidth: 100,\n                configurator: \"\",\n                columnHeaderTemplate: null,\n                rowHeaderTemplate: null,\n                dataCellTemplate: null,\n                kpiStatusTemplate: null,\n                kpiTrendTemplate: null,\n                messages: {\n                    measureFields: \"Drop Data Fields Here\",\n                    columnFields: \"Drop Column Fields Here\",\n                    rowFields: \"Drop Rows Fields Here\"\n                }\n            },\n\n            _templates: function() {\n                var columnTemplate = this.options.columnHeaderTemplate;\n                var rowTemplate = this.options.rowHeaderTemplate;\n                var dataTemplate = this.options.dataCellTemplate;\n                var kpiStatusTemplate = this.options.kpiStatusTemplate;\n                var kpiTrendTemplate = this.options.kpiTrendTemplate;\n\n                this._columnBuilder.template = kendo.template(columnTemplate || HEADER_TEMPLATE, { useWithBlock: !!columnTemplate });\n                this._contentBuilder.dataTemplate = kendo.template(dataTemplate || DATACELL_TEMPLATE, { useWithBlock: !!dataTemplate });\n                this._contentBuilder.kpiStatusTemplate = kendo.template(kpiStatusTemplate || KPISTATUS_TEMPLATE, { useWithBlock: !!kpiStatusTemplate });\n                this._contentBuilder.kpiTrendTemplate = kendo.template(kpiTrendTemplate || KPITREND_TEMPLATE, { useWithBlock: !!kpiTrendTemplate });\n                this._rowBuilder.template = kendo.template(rowTemplate || HEADER_TEMPLATE, { useWithBlock: !!rowTemplate });\n            },\n\n            _bindConfigurator: function() {\n                var configurator = this.options.configurator;\n                if (configurator) {\n                    $(configurator).kendoPivotConfigurator(\"setDataSource\", this.dataSource);\n                }\n            },\n\n            cellInfoByElement: function(element) {\n                element = $(element);\n\n                return this.cellInfo(element.index(), element.parent(\"tr\").index());\n            },\n\n            cellInfo: function(columnIndex, rowIndex) {\n                var contentBuilder = this._contentBuilder;\n                var columnInfo = contentBuilder.columnIndexes[columnIndex || 0];\n                var rowInfo = contentBuilder.rowIndexes[rowIndex || 0];\n                var dataIndex;\n\n                if (!columnInfo || !rowInfo) {\n                    return null;\n                }\n\n                dataIndex = (rowInfo.index * contentBuilder.rowLength) + columnInfo.index;\n\n                return {\n                    columnTuple: columnInfo.tuple,\n                    rowTuple: rowInfo.tuple,\n                    measure: columnInfo.measure || rowInfo.measure,\n                    dataItem: this.dataSource.view()[dataIndex]\n                };\n            },\n\n            setDataSource: function(dataSource) {\n                this.options.dataSource = dataSource;\n\n                this._dataSource();\n\n                if (this.measuresTarget) {\n                    this.measuresTarget.setDataSource(dataSource);\n                }\n\n                if (this.rowsTarget) {\n                    this.rowsTarget.setDataSource(dataSource);\n                }\n\n                if (this.columnsTarget) {\n                    this.columnsTarget.setDataSource(dataSource);\n                }\n\n                this._bindConfigurator();\n\n                if (this.options.autoBind) {\n                    dataSource.fetch();\n                }\n            },\n\n            setOptions: function(options) {\n                Widget.fn.setOptions.call(this, options);\n\n                this._templates();\n            },\n\n            destroy: function() {\n                Widget.fn.destroy.call(this);\n\n                clearTimeout(this._headerReflowTimeout);\n            },\n\n            _dataSource: function() {\n                var that = this;\n                var dataSource = that.options.dataSource;\n\n                dataSource = Array.isArray(dataSource) ? { data: dataSource } : dataSource;\n\n                if (that.dataSource && this._refreshHandler) {\n                    that.dataSource.unbind(CHANGE, that._refreshHandler)\n                                   .unbind(STATERESET, that._stateResetHandler)\n                                   .unbind(PROGRESS, that._progressHandler)\n                                   .unbind(ERROR, that._errorHandler);\n                } else {\n                    that._refreshHandler = that.refresh.bind(that);\n                    that._progressHandler = that._requestStart.bind(that);\n                    that._stateResetHandler = that._stateReset.bind(that);\n                    that._errorHandler = that._error.bind(that);\n                }\n\n                that.dataSource = kendo.data.PivotDataSource.create(dataSource)\n                                       .bind(CHANGE, that._refreshHandler)\n                                       .bind(PROGRESS, that._progressHandler)\n                                       .bind(STATERESET, that._stateResetHandler)\n                                       .bind(ERROR, that._errorHandler);\n            },\n\n            _error: function() {\n                this._progress(false);\n            },\n\n            _requestStart: function() {\n                this._progress(true);\n            },\n\n            _stateReset: function() {\n                this._columnBuilder.reset();\n                this._rowBuilder.reset();\n            },\n\n            _wrapper: function() {\n                var height = this.options.height;\n\n                this.wrapper = this.element.addClass(\"k-pivot\");\n\n                if (height) {\n                    this.wrapper.css(\"height\", height);\n                }\n            },\n\n            _measureFields: function() {\n                this.measureFields = $(DIV).addClass(\"k-pivot-toolbar k-toolbar k-toolbar-md k-settings-measures\");\n\n                this.measuresTarget = this._createSettingTarget(this.measureFields, {\n                    setting: \"measures\",\n                    messages: {\n                        empty: this.options.messages.measureFields\n                    }\n                });\n            },\n\n            _createSettingTarget: function(element, options) {\n                var template,\n                    pivotOptions = this.options;\n\n                template = ({ sortIcon, name }) => ''\n                    + `<span class=\"k-chip k-chip-md k-rounded-md k-chip-solid k-chip-solid-base\" tabindex=\"0\" data-${kendo.ns}name=\"${name}\">`\n                        + '<span class=\"k-chip-content\">'\n                            + `<span class=\"k-chip-text\">${name}</span>`\n                        + '</span>'\n                        + '<span class=\"k-chip-actions k-field-actions\">'\n                            + getIcons(sortIcon, options, pivotOptions)\n                        + '</span>'\n                    + '</span>';\n\n                return new kendo.ui.PivotSettingTarget(element, $.extend({\n                    dataSource: this.dataSource,\n                    template: template,\n                    emptyTemplate: (data) => `<span class=\"k-empty\">${data}</span>`,\n                    enabled: this.options.reorderable\n                }, options));\n            },\n\n            _initSettingTargets: function() {\n                this.columnsTarget = this._createSettingTarget(this.columnFields, {\n                    connectWith: this.rowFields,\n                    setting: \"columns\",\n                    filterable: this.options.filterable,\n                    sortable: this.options.sortable,\n                    messages: {\n                        empty: this.options.messages.columnFields,\n                        fieldMenu: this.options.messages.fieldMenu\n                    }\n                });\n\n                this.rowsTarget = this._createSettingTarget(this.rowFields, {\n                    connectWith: this.columnFields,\n                    setting: \"rows\",\n                    filterable: this.options.filterable,\n                    sortable: this.options.sortable,\n                    messages: {\n                        empty: this.options.messages.rowFields,\n                        fieldMenu: this.options.messages.fieldMenu\n                    }\n                });\n            },\n\n            _createLayout: function() {\n                var that = this;\n                var layoutTable = $(LAYOUT_TABLE);\n                var leftContainer = layoutTable.find(\".k-pivot-rowheaders\");\n                var rightContainer = layoutTable.find(\".k-pivot-table\");\n                var gridWrapper = $(DIV).addClass(\"k-grid\");\n\n                that._measureFields();\n                that.columnFields = $(DIV).addClass(\"k-pivot-toolbar k-toolbar k-toolbar-md k-settings-columns\");\n\n                that.rowFields = $(DIV).addClass(\"k-pivot-toolbar k-toolbar k-toolbar-md k-settings-rows\");\n                that.columnsHeader = $('<div class=\"k-grid-header-wrap\" />')\n                                        .wrap('<div class=\"k-grid-header\" />');\n\n                that.columnsHeader.parent().css(\"padding-right\", kendo.support.scrollbar());\n\n                that.rowsHeader = $('<div class=\"k-grid k-alt\"/>');\n                that.content = $('<div class=\"k-grid-content\" />');\n\n                leftContainer.append(that.measureFields);\n                leftContainer.append(that.rowFields);\n                leftContainer.append(that.rowsHeader);\n\n                gridWrapper.append(that.columnsHeader.parent());\n                gridWrapper.append(that.content);\n\n                rightContainer.append(that.columnFields);\n                rightContainer.append(gridWrapper);\n\n                that.wrapper.append(layoutTable);\n\n                that.columnsHeaderTree = new kendo.dom.Tree(that.columnsHeader[0]);\n                that.rowsHeaderTree = new kendo.dom.Tree(that.rowsHeader[0]);\n                that.contentTree = new kendo.dom.Tree(that.content[0]);\n\n                that._initSettingTargets();\n            },\n\n            _progress: function(toggle) {\n                kendo.ui.progress(this.wrapper, toggle);\n            },\n\n            _resize: function() {\n                if (this.content[0].firstChild) {\n                    this._setSectionsWidth();\n                    this._setSectionsHeight();\n                    this._setContentWidth();\n                    this._setContentHeight();\n                    this._columnHeaderReflow();\n                }\n            },\n\n            _columnHeaderReflow: function() {\n                var columnTable = this.columnsHeader.children(\"table\");\n\n                if (!kendo.support.browser.mozilla) {\n                    return;\n                }\n\n                clearTimeout(this._headerReflowTimeout);\n\n                columnTable.css(\"table-layout\", \"auto\");\n\n                this._headerReflowTimeout = setTimeout(function() {\n                    columnTable.css(\"table-layout\", \"\");\n                });\n            },\n\n            _setSectionsWidth: function() {\n                var rowsHeader = this.rowsHeader;\n                var leftColumn = rowsHeader.parent(\".k-pivot-rowheaders\").width(AUTO);\n                var width;\n\n                width = Math.max(outerWidth(this.measureFields), outerWidth(this.rowFields));\n                width = Math.max(rowsHeader.children(\"table\").width(), width);\n\n                leftColumn.width(width);\n            },\n\n            _setSectionsHeight: function() {\n                var measureFieldsHeight = this.measureFields.height(AUTO).height();\n                var columnFieldsHeight = this.columnFields.height(AUTO).height();\n                var rowFieldsHeight = this.rowFields.height(AUTO).innerHeight();\n                var columnsHeight = this.columnsHeader.height(AUTO).innerHeight();\n\n                var padding = rowFieldsHeight - this.rowFields.height();\n\n                var firstRowHeight = columnFieldsHeight > measureFieldsHeight ? columnFieldsHeight : measureFieldsHeight;\n                var secondRowHeight = columnsHeight > rowFieldsHeight ? columnsHeight : rowFieldsHeight;\n\n                this.measureFields.height(firstRowHeight);\n                this.columnFields.height(firstRowHeight);\n                this.rowFields.height(secondRowHeight - padding);\n                this.columnsHeader.height(secondRowHeight);\n            },\n\n            _setContentWidth: function() {\n                var contentTable = this.content.find(\"table\");\n                var columnTable = this.columnsHeader.children(\"table\");\n\n                var rowLength = contentTable.children(\"colgroup\").children().length;\n\n                var calculatedWidth = rowLength * this.options.columnWidth;\n                var minWidth = Math.ceil((calculatedWidth / this.content.width()) * 100);\n\n                if (minWidth < 100) {\n                    minWidth = 100;\n                }\n\n                contentTable.add(columnTable).css(\"width\", minWidth + \"%\");\n\n                this._resetColspan(columnTable);\n            },\n\n            _setContentHeight: function() {\n                var that = this;\n                var content = that.content;\n                var rowsHeader = that.rowsHeader;\n                var innerHeight = that.wrapper.innerHeight();\n                var scrollbar = kendo.support.scrollbar();\n                var skipScrollbar = content[0].offsetHeight === content[0].clientHeight;\n                var height = that.options.height;\n\n                if (that.wrapper.is(\":visible\")) {\n                    if (!innerHeight || !height) {\n                        if (skipScrollbar) {\n                            scrollbar = 0;\n                        }\n\n                        content.height(\"auto\");\n                        rowsHeader.height(content.height() - scrollbar);\n                        return;\n                    }\n\n                    innerHeight -= outerHeight(that.columnFields);\n                    innerHeight -= outerHeight(that.columnsHeader.parent());\n\n                    if (innerHeight <= scrollbar * 2) { // do not set height if proper scrollbar cannot be displayed\n                        innerHeight = scrollbar * 2 + 1;\n                        if (!skipScrollbar) {\n                            innerHeight += scrollbar;\n                        }\n                    }\n\n                    content.height(innerHeight);\n\n                    if (skipScrollbar) {\n                        scrollbar = 0;\n                    }\n\n                    rowsHeader.height(innerHeight - scrollbar);\n                }\n            },\n\n            _resetColspan: function(columnTable) {\n                var that = this;\n                var cell = columnTable.children(\"tbody\").children().first().children().first();\n\n                if (that._colspan === undefined$1) {\n                    that._colspan = cell.attr(\"colspan\");\n                }\n\n                cell.attr(\"colspan\", 1);\n\n                clearTimeout(that._layoutTimeout);\n\n                that._layoutTimeout = setTimeout(function() {\n                    cell.attr(\"colspan\", that._colspan);\n                    that._colspan = undefined$1;\n                });\n            },\n\n            _axisMeasures: function(axis) {\n                var result = [];\n                var dataSource = this.dataSource;\n                var measures = dataSource.measures();\n                var hasMeasure = measures.length > 1 || (measures[0] && measures[0].type);\n\n                if (dataSource.measuresAxis() === axis) {\n                    if (dataSource[axis]().length === 0 || hasMeasure) {\n                        result = measures;\n                    }\n                }\n\n                return result;\n            },\n\n            items: function() {\n                return [];\n            },\n\n            refresh: function() {\n                var that = this;\n                var dataSource = that.dataSource;\n\n                var axes = dataSource.axes();\n                var columns = (axes.columns || {}).tuples || [];\n                var rows = (axes.rows || {}).tuples || [];\n\n                var columnBuilder = that._columnBuilder;\n                var rowBuilder = that._rowBuilder;\n\n                var columnAxis = {};\n                var rowAxis = {};\n\n                if (that.trigger(DATABINDING, { action: \"rebind\" } )) {\n                    return;\n                }\n\n                columnBuilder.measures = that._axisMeasures(AXIS_COLUMNS);\n                rowBuilder.measures = that._axisMeasures(AXIS_ROWS);\n\n                that.columnsHeaderTree.render(columnBuilder.build(columns));\n                that.rowsHeaderTree.render(rowBuilder.build(rows));\n\n                columnAxis = {\n                    indexes: columnBuilder._indexes,\n                    measures: columnBuilder.measures,\n                    metadata: columnBuilder.metadata\n                };\n\n                rowAxis = {\n                    indexes: rowBuilder._indexes,\n                    measures: rowBuilder.measures,\n                    metadata: rowBuilder.metadata\n                };\n\n                that.contentTree.render(that._contentBuilder.build(dataSource.view(), columnAxis, rowAxis));\n\n                that._resize();\n\n                if (that.touchScroller) {\n                    that.touchScroller.contentResized();\n                } else {\n                    var touchScroller = kendo.touchScroller(that.content);\n\n                    if (touchScroller && touchScroller.movable) {\n                        that.touchScroller = touchScroller;\n\n                        touchScroller.movable.bind(\"change\", function(e) {\n                            kendo.scrollLeft(that.columnsHeader, -e.sender.x);\n                            that.rowsHeader.scrollTop(-e.sender.y);\n                        });\n                    }\n                }\n\n                that._progress(false);\n\n                that.trigger(DATABOUND);\n            },\n\n            _scrollable: function() {\n                var that = this;\n                var columnsHeader = that.columnsHeader;\n                var rowsHeader = that.rowsHeader;\n\n                that.content.on(\"scroll\", function() {\n                    kendo.scrollLeft(columnsHeader, this.scrollLeft);\n                    rowsHeader.scrollTop(this.scrollTop);\n                });\n\n                rowsHeader.on(\"DOMMouseScroll\" + NS + \" mousewheel\" + NS, that._wheelScroll.bind(that));\n            },\n\n            _wheelScroll: function(e) {\n                if (e.ctrlKey) {\n                    return;\n                }\n\n                var delta = kendo.wheelDeltaY(e);\n                var scrollTop = this.content.scrollTop();\n\n                if (delta) {\n                    e.preventDefault();\n                    //In Firefox DOMMouseScroll event cannot be canceled\n                    $(e.currentTarget).closest(\":not(path,svg)\").one(\"wheel\" + NS, false);\n\n                    this.rowsHeader.scrollTop(scrollTop + (-delta));\n                    this.content.scrollTop(scrollTop + (-delta));\n                }\n            }\n        });\n\n        var element = kendo.dom.element;\n        var htmlNode = kendo.dom.html;\n\n        var createMetadata = function(levelNum, memberIdx) {\n           return {\n                maxChildren: 0,\n                children: 0,\n                maxMembers: 0,\n                members: 0,\n                measures: 1,\n                levelNum: levelNum,\n                parentMember: memberIdx !== 0\n            };\n        };\n\n        var buildPath = function(tuple, index) {\n            var path = [];\n            var idx = 0;\n\n            for (; idx <= index; idx++) {\n                path.push(tuple.members[idx].name);\n            }\n\n            return path;\n        };\n\n        var tupleName = function(tuple, index) {\n            var name = \"\";\n            var idx = 0;\n\n            for (; idx <= index; idx++) {\n                name += tuple.members[idx].name;\n            }\n\n            return name;\n        };\n\n        var ContentBuilderV2 = Class.extend({\n            init: function(options) {\n                this.dataCellTemplate = kendo.template(options.dataCellTemplate);\n                this.kpiStatusTemplate = kendo.template(options.kpiStatusTemplate);\n                this.kpiTrendTemplate = kendo.template(options.kpiTrendTemplate);\n                this.measures = options.measures;\n                this.ariaId = options.ariaId;\n                this.hash = [];\n            },\n\n            setRowColumnInfo: function(options) {\n                this.data = options.data;\n                this.columnHeaderLeafs = options.columnHeaderLeafs;\n                this.rowHeaderLeafs = options.rowHeaderLeafs;\n                this.columnHeaderBreadth = options.columnHeaderBreadth;\n                this.rowHeaderDepth = options.rowHeaderDepth;\n                this.hash.length = 0;\n            },\n\n            addColElements: function(count) {\n                var html = \"\";\n\n                for (var index = 0; index < count; index++) {\n                    html += \"<col>\";\n                }\n\n                this.table.find(\"colgroup\").append(html);\n            },\n\n            addRowElements: function(data) {\n                var that = this;\n                var body = that.table.find(\"tbody\");\n                var row;\n\n                for (var index = 0; index < data.length; index++) {\n                    row = $(`<tr class=\"k-pivotgrid-row\" role='presentation'></tr>`);\n                    body.append(row);\n                    that.addColumCell(row, data[index], index);\n                }\n\n                this.rowsCount = data.length;\n            },\n\n            _getTemplate: function(cell, options) {\n                const that = this;\n                let measureType;\n\n                const cellMembers = cell.columnTuple.members;\n                const cellMeasure = cellMembers[cellMembers.length - 1];\n                const measure = that.measures && that.measures.find((measure) => measure.name === cellMeasure.name);\n                const cellValue = cell.data !== null ? cell.data.value : cell.data;\n\n                if (measure && measure.type) {\n                    measureType = measure.type;\n                }\n\n                let template = this.dataCellTemplate;\n                if (this.measures && measureType && cellValue !== \"\") {\n                    if (!options.dataItem) {\n                        options.dataItem = { value: isNaN(Number(cellValue)) ? cellValue : Number(cellValue) };\n                    }\n                    switch (measureType) {\n                        case \"status\":\n                          template = this.kpiStatusTemplate;\n                          break;\n                        case \"trend\":\n                          template = this.kpiTrendTemplate;\n                          break;\n                      }\n                }\n\n                return template(options);\n\n            },\n\n            addColumCell: function(rowEl, rowItem, rowIndex) {\n                var that = this;\n                for (var index = 0; index < rowItem.cells.length; index++) {\n                    var cell = rowItem.cells[index];\n                    if (cell) {\n                        var cellEl = $(`<td id=\"${that.ariaId}-cell-${rowIndex + 1}-${index + 1}\" class=\"k-pivotgrid-cell\" role=\"gridcell\"></td>`);\n                        if (this.rowHeaderLeafs[rowIndex].total || this.columnHeaderLeafs[index].total) {\n                            cellEl.addClass(\"k-pivotgrid-total\");\n                        }\n\n                        cellEl.append(that._getTemplate(cell, {\n                            dataItem: cell.data,\n                            rowTuple: cell.rowTuple,\n                            columnTuple: cell.columnTuple\n                        }));\n                        this.hash.push(cell);\n                        rowEl.append(cellEl);\n                    }\n                }\n            },\n\n            build: function() {\n                var data = kendo_pivotgridCommon_cmn_chunk_js.t((this.data || []).slice(), this.columnHeaderLeafs, this.rowHeaderLeafs, this.columnHeaderBreadth, this.rowHeaderDepth);\n                var that = this;\n\n                var table = $(`<table class='k-pivotgrid-table' role='presentation'><colgroup></colgroup><tbody class='k-pivotgrid-tbody' role='presentation'></tbody></table>`);\n\n                that.table = table;\n                that.addColElements(this.columnHeaderLeafs.length);\n                that.addRowElements(data);\n                this.rowsCount = data.length;\n                this.columnsCount = this.columnHeaderLeafs.length;\n\n                return that.table;\n            }\n        });\n\n        var ColumnRowBuilder = Class.extend({\n            init: function(options) {\n                this.tuples = options.tuples;\n                this.axes = options.axes;\n                this.ariaId = options.ariaId;\n                this.headerTemplate = kendo.template(HEADERTEMPLATE);\n                this._exportData = {};\n                if (options.template) {\n                    this.template = kendo.template(options.template);\n                }\n            },\n\n            setTuples: function(tuples) {\n                this.tuples = tuples;\n            },\n\n            addColElements: function(count) {\n                var html = \"\";\n\n                for (var index = 0; index < count; index++) {\n                    html += \"<col>\";\n                }\n\n                this.table.find(\"colgroup\").append(html);\n            },\n\n            addRowElements: function(columnHeaderRows) {\n                var that = this;\n                var body = that.table.find(\"tbody\");\n                var row;\n\n                for (var index = 0; index < columnHeaderRows.length; index++) {\n                    row = $('<tr class=\"k-pivotgrid-row\" role=\"row\"></tr>');\n                    body.append(row);\n                    that.addColumCell(row, columnHeaderRows[index], index);\n                }\n            },\n\n            _getExportData: function(rowIndex, cell, rowElement) {\n                const pattern = /\\[\\(All\\)\\]/;\n\n                if (cell.levelName.match(pattern)) {\n                    cell.caption = cell.caption.toUpperCase();\n                }\n\n                if (!this._exportData[rowIndex]) {\n                    this._exportData[rowIndex] = { children: [cell], element: rowElement };\n                } else {\n                    this._exportData[rowIndex].children.push(cell);\n                }\n            },\n\n            addColumCell: function(rowEl, rowItem, rowIndex) {\n                var that = this;\n                var cellEl;\n                var cell;\n\n                for (var index = 0; index < rowItem.cells.length; index++) {\n                    cell = rowItem.cells[index];\n                    if (cell) {\n                        this._getExportData(rowIndex, cell, rowEl);\n                        const expanded = cell.children && cell.children.length > 0;\n                        cellEl = $(that.headerTemplate({\n                            id: `${that.ariaId}-${that.axes == \"columns\" ? \"ch\" : \"rh\"}-${rowIndex + 1}-${index + 1}`,\n                            rowspan: cell.rowSpan,\n                            colspan: cell.colSpan,\n                            key: cell.path.join(\",\") + (cell.total ? '|[TOTAL]' : ''),\n                            iconClass: (cell.children && cell.children.length) ? \"up\" : \"down\",\n                            expandable: cell.hasChildren && !cell.total,\n                            expanded: expanded ? \"true\" : \"false\",\n                            headerClass: kendo.format(\"k-pivotgrid-cell{0}{1}\", cell.total ? \" k-pivotgrid-header-total\" : \"\", cell.levelNum === 0 ? \" k-pivotgrid-header-root\" : \"\"),\n                            role: that.axes == \"columns\" ? \"columnheader\" : \"rowheader\"\n                        }));\n                        if (expanded) {\n                            cellEl.addClass(\"k-pivotgrid-expanded\");\n                        }\n\n                        const defaultCellTemplate = `<span class=\"k-pivotgrid-header-title\">${cell.caption}</span>`;\n\n                        cellEl.append(that.template ? that.template({ member: cell }) : defaultCellTemplate);\n                        rowEl.append(cellEl);\n                    }\n                }\n            },\n\n            build: function() {\n                var tree = kendo_pivotgridCommon_cmn_chunk_js.j((this.tuples || []).slice());\n                var treeData = this.axes == \"columns\" ? kendo_pivotgridCommon_cmn_chunk_js.k(tree) : kendo_pivotgridCommon_cmn_chunk_js.l(tree);\n                var headerRows = treeData[0];\n                var headerLeafs = treeData[1];\n                var breadth = treeData[2];\n                var rowHeaderBreadth = treeData[3];\n                var that = this;\n                that._tree = tree;\n                that._breadth = breadth;\n                that._headerLeafs = headerLeafs;\n\n                var table = $(`<table class='k-pivotgrid-table' role='presentation'><colgroup></colgroup><tbody class='k-pivotgrid-tbody' role='rowgroup'></tbody></table>`);\n\n                that.table = table;\n                that.addColElements(this.axes == \"columns\" ? headerLeafs.length : rowHeaderBreadth);\n                that.addRowElements(headerRows);\n\n                return that.table;\n            },\n\n            getTree: function() {\n                return this._tree;\n            },\n\n            getBreadth: function() {\n                return this._breadth;\n            },\n\n            getHeaderLeafs: function() {\n                return this._headerLeafs;\n            }\n        });\n\n        var ColumnBuilder = Class.extend({\n            init: function() {\n                this.measures = 1;\n                this.metadata = {};\n            },\n\n            build: function(tuples) {\n                var tbody = this._tbody(tuples);\n                var colgroup = this._colGroup();\n\n                return [\n                    element(\"table\", { className: tableStyles.headerTable }, [colgroup, tbody])\n                ];\n            },\n\n            reset: function() {\n                this.metadata = {};\n            },\n\n            _colGroup: function() {\n                var length = this._rowLength();\n                var children = [];\n                var idx = 0;\n\n                for (; idx < length; idx++) {\n                    children.push(element(\"col\", null));\n                }\n\n                return element(\"colgroup\", null, children);\n            },\n\n            _tbody: function(tuples) {\n                var root = tuples[0];\n\n                this.map = {};\n                this.rows = [];\n                this.rootTuple = root;\n\n                this._indexes = [];\n\n                if (root) {\n                    this._buildRows(root, 0);\n                    this._normalize();\n                } else {\n                    this.rows.push(element(\"tr\", { className: tableStyles.tableRow }, [ element(\"th\", { className: tableStyles.header } , [ htmlNode(\"&nbsp;\") ]) ]));\n                }\n\n                return element(\"tbody\", { className: tableStyles.tbody }, this.rows);\n            },\n\n            _normalize: function() {\n                var rows = this.rows;\n                var rowsLength = rows.length;\n                var rowIdx = 0;\n                var row;\n\n                var cellsLength;\n                var cellIdx;\n                var cells;\n                var cell;\n\n                for (; rowIdx < rowsLength; rowIdx++) {\n                    row = rows[rowIdx];\n\n                    if (row.rowSpan === 1) {\n                        continue;\n                    }\n\n                    cells = row.children;\n\n                    cellIdx = 0;\n                    cellsLength = cells.length;\n\n                    for (; cellIdx < cellsLength; cellIdx++) {\n                        cell = cells[cellIdx];\n\n                        if (cell.tupleAll) {\n                            cell.attr.rowSpan = row.rowSpan;\n                        }\n                    }\n                }\n            },\n\n            _rowIndex: function(row) {\n                var rows = this.rows;\n                var length = rows.length;\n                var idx = 0;\n\n                for (; idx < length; idx++) {\n                    if (rows[idx] === row) {\n                        break;\n                    }\n                }\n\n                return idx;\n            },\n\n            _rowLength: function() {\n                var cells = this.rows[0] ? this.rows[0].children : [];\n                var length = cells.length;\n                var rowLength = 0;\n                var idx = 0;\n\n                if (length) {\n                    for (; idx < length; idx++) {\n                        rowLength += cells[idx].attr.colSpan || 1;\n                    }\n                }\n\n                if (!rowLength) {\n                    rowLength = this.measures;\n                }\n\n                return rowLength;\n            },\n\n            _row: function(tuple, memberIdx, parentMember) {\n                var rootName = this.rootTuple.members[memberIdx].name;\n                var levelNum = tuple.members[memberIdx].levelNum;\n                var rowKey = rootName + levelNum;\n                var map = this.map;\n                var parentRow;\n                var children;\n\n                var row = map[rowKey];\n\n                if (!row) {\n                    row = element(\"tr\", { className: tableStyles.tableRow }, []);\n\n                    row.parentMember = parentMember;\n                    row.collapsed = 0;\n                    row.colSpan = 0;\n                    row.rowSpan = 1;\n\n                    map[rowKey] = row;\n                    parentRow = map[rootName + (Number(levelNum) - 1)];\n\n                    if (parentRow) {\n                        children = parentRow.children;\n\n                        if (children[1] && children[1].attr.className.indexOf(\"k-alt\") === -1) {\n                            row.notFirst = true;\n                        } else {\n                            row.notFirst = parentRow.notFirst;\n                        }\n                    }\n\n                    this.rows.splice(this._rowIndex(parentRow) + 1, 0, row);\n                } else {\n                    row.notFirst = false;\n\n                    if (!row.parentMember || row.parentMember !== parentMember) {\n                        row.parentMember = parentMember;\n                        row.collapsed = 0;\n                        row.colSpan = 0;\n                    }\n                }\n\n                return row;\n            },\n\n            _measures: function(measures, tuple, className) {\n                var map = this.map;\n                var row = map.measureRow;\n                var measure;\n\n                if (!row) {\n                    row = element(\"tr\", { className: tableStyles.tableRow }, []);\n                    map.measureRow = row;\n                    this.rows.push(row);\n                }\n\n                for (var idx = 0, length = measures.length; idx < length; idx++) {\n                    measure = measures[idx];\n                    row.children.push(this._cell((className || \"\"), [this._content(measure, tuple)], measure));\n                }\n\n                return length;\n            },\n\n            _content: function(member, tuple) {\n                return htmlNode(this.template({\n                    member: member,\n                    tuple: tuple\n                }), true);\n            },\n\n            _cell: function(className, children, member) {\n                var cell = element(\"th\", { className: tableStyles.header + \" \" + className }, children);\n                cell.value = member.caption || member.name;\n                return cell;\n            },\n\n            _buildRows: function(tuple, memberIdx, parentMember) {\n                var members = tuple.members;\n                var member = members[memberIdx];\n                var nextMember = members[memberIdx + 1];\n\n                var row, childRow, children, childrenLength;\n                var cell, allCell, cellAttr;\n                var cellChildren = [];\n                var path;\n\n                var idx = 0;\n                var metadata;\n\n                var colSpan;\n                var collapsed = 0;\n                var memberCollapsed = 0;\n\n                if (member.measure) {\n                    this._measures(member.children, tuple);\n                    return;\n                }\n\n                path = kendo.stringify(buildPath(tuple, memberIdx));\n                row = this._row(tuple, memberIdx, parentMember);\n\n                children = member.children;\n                childrenLength = children.length;\n\n                metadata = this.metadata[path];\n                if (!metadata) {\n                    this.metadata[path] = metadata = createMetadata(Number(member.levelNum), memberIdx);\n                    metadata.rootLevelNum = Number(this.rootTuple.members[memberIdx].levelNum);\n                }\n\n                this._indexes.push({\n                    path: path,\n                    tuple: tuple\n                });\n\n                if (member.hasChildren) {\n                    if (metadata.expanded === false) {\n                        collapsed = metadata.maxChildren;\n                        row.collapsed += collapsed;\n\n                        metadata.children = 0;\n                        childrenLength = 0;\n                    }\n\n                    let cellIconEl = $(\"<span></span>\");\n                    cellIconEl.attr(kendo.attr(\"path\"), path);\n\n                    cellChildren.push(kendo.dom.html(kendo.ui.icon(cellIconEl, { icon: childrenLength ? STATE_EXPANDED_ICONNAME : STATE_COLLAPSED_ICONNAME }), true));\n                }\n\n                cellChildren.push(this._content(member, tuple));\n                cell = this._cell((row.notFirst ? \" k-first\" : \"\"), cellChildren, member);\n\n                row.children.push(cell);\n                row.colSpan += 1;\n\n                if (childrenLength) {\n                    allCell = this._cell(\" k-alt\", [this._content(member, tuple)], member);\n                    row.children.push(allCell);\n\n                    for (; idx < childrenLength; idx++) {\n                        childRow = this._buildRows(children[idx], memberIdx, member);\n                    }\n\n                    colSpan = childRow.colSpan;\n                    collapsed = childRow.collapsed;\n\n                    cell.attr.colSpan = colSpan;\n\n                    metadata.children = colSpan;\n                    metadata.members = 1;\n\n                    row.colSpan += colSpan;\n                    row.collapsed += collapsed;\n                    row.rowSpan = childRow.rowSpan + 1;\n\n                    if (nextMember) {\n                        if (nextMember.measure) {\n                            colSpan = this._measures(nextMember.children, tuple, \" k-alt\");\n                        } else {\n                            childRow = this._buildRows(tuple, memberIdx + 1);\n                            colSpan = childRow.colSpan;\n\n                            row.collapsed += childRow.collapsed;\n                            memberCollapsed = childRow.collapsed;\n                        }\n\n                        allCell.attr.colSpan = colSpan;\n                        colSpan -= 1;\n\n                        metadata.members += colSpan;\n                        row.colSpan += colSpan;\n                    }\n                } else if (nextMember) {\n                    if (nextMember.measure) {\n                        colSpan = this._measures(nextMember.children, tuple);\n                    } else {\n                        childRow = this._buildRows(tuple, memberIdx + 1);\n                        colSpan = childRow.colSpan;\n\n                        row.collapsed += childRow.collapsed;\n                        memberCollapsed = childRow.collapsed;\n                    }\n\n                    metadata.members = colSpan;\n\n                    if (colSpan > 1) {\n                        cell.attr.colSpan = colSpan;\n                        row.colSpan += colSpan - 1;\n                    }\n                }\n\n                if (metadata.maxMembers < (metadata.members + memberCollapsed)) {\n                    metadata.maxMembers = metadata.members + memberCollapsed;\n                }\n\n                children = metadata.children + collapsed;\n\n                if (metadata.maxChildren < children) {\n                    metadata.maxChildren = children;\n                }\n\n                (allCell || cell).tupleAll = true;\n\n                return row;\n            }\n        });\n\n        var RowBuilder = Class.extend({\n            init: function() {\n                this.metadata = {};\n            },\n\n            build: function(tuples) {\n                var tbody = this._tbody(tuples);\n                var colgroup = this._colGroup();\n\n                return [\n                    element(\"table\", { className: tableStyles.table }, [colgroup, tbody])\n                ];\n            },\n\n            reset: function() {\n                this.metadata = {};\n            },\n\n            _rowLength: function() {\n                var children = this.rows[0].children;\n                var length = 0;\n                var idx = 0;\n\n                var cell = children[idx];\n\n                while (cell) {\n                    length += (cell.attr.colSpan || 1);\n                    cell = children[++idx];\n                }\n\n                return length;\n            },\n\n            _colGroup: function() {\n                var length = this._rowLength();\n                var children = [];\n                var idx = 0;\n\n                for (; idx < length; idx++) {\n                    children.push(element(\"col\", null));\n                }\n\n                return element(\"colgroup\", null, children);\n            },\n\n            _tbody: function(tuples) {\n                var root = tuples[0];\n\n                this.rootTuple = root;\n                this.rows = [];\n                this.map = {};\n\n                this._indexes = [];\n\n                if (root) {\n                    this._buildRows(root, 0);\n                    this._normalize();\n                } else {\n                    this.rows.push(element(\"tr\", { className: tableStyles.tableRow }, [ element(\"td\", { className: tableStyles.tableCell }, [ htmlNode(\"&nbsp;\") ]) ]));\n                }\n\n                return element(\"tbody\", { className: tableStyles.tbody }, this.rows);\n            },\n\n            _normalize: function() {\n                var rows = this.rows;\n                var rowsLength = rows.length;\n                var rowIdx = 0;\n\n                var members = this.rootTuple.members;\n                var firstMemberName = members[0].name;\n                var membersLength = members.length;\n                var memberIdx = 0;\n\n                var row;\n                var cell;\n                var maxcolSpan;\n                var map = this.map;\n                var allRow;\n\n                for (; rowIdx < rowsLength; rowIdx++) {\n                    row = rows[rowIdx];\n\n                    for (memberIdx = 0; memberIdx < membersLength; memberIdx++) {\n                        maxcolSpan = this[members[memberIdx].name];\n                        cell = row.colSpan[\"dim\" + memberIdx];\n\n                        if (cell && cell.colSpan < maxcolSpan) {\n                            cell.attr.colSpan = (maxcolSpan - cell.colSpan) + 1;\n                        }\n                    }\n                }\n\n                row = map[firstMemberName];\n                allRow = map[firstMemberName + \"all\"];\n\n                if (row) {\n                    row.children[0].attr.className = tableStyles.tableCell + \" k-first\";\n                }\n\n                if (allRow) {\n                    allRow.children[0].attr.className += \" k-first \" + tableStyles.tableCell;\n                }\n            },\n\n            _row: function(children) {\n                var row = element(\"tr\", { className: tableStyles.tableRow }, children);\n                row.rowSpan = 1;\n                row.colSpan = {};\n\n                this.rows.push(row);\n\n                return row;\n            },\n\n            _content: function(member, tuple) {\n                return htmlNode(this.template({\n                    member: member,\n                    tuple: tuple\n                }), true);\n            },\n\n            _cell: function(className, children, member) {\n                var cell = element(\"td\", { className: tableStyles.tableCell + \" \" + className }, children);\n                cell.value = member.caption || member.name;\n                return cell;\n            },\n\n            _buildRows: function(tuple, memberIdx) {\n                var map = this.map;\n                var path;\n\n                var members = tuple.members;\n                var member = members[memberIdx];\n                var nextMember = members[memberIdx + 1];\n\n                var children = member.children;\n                var childrenLength = children.length;\n\n                var levelNum = Number(member.levelNum);\n                var rootName = this.rootTuple.members[memberIdx].name;\n                var tuplePath = buildPath(tuple, memberIdx - 1).join(\"\");\n                var rootLevelNum = Number(this.rootTuple.members[memberIdx].levelNum);\n                var parentName = tuplePath + (rootLevelNum === levelNum ? \"\" : (member.parentName || \"\"));\n                var row = map[parentName + \"all\"] || map[parentName];\n                var colSpan = levelNum + 1;\n\n                var cell, allCell;\n                var childRow, allRow;\n                var metadata;\n                var className;\n                var cellChildren = [];\n                var expandIconAttr;\n                var idx;\n\n                if (!row || row.hasChild) {\n                    row = this._row();\n                } else {\n                    row.hasChild = true;\n                }\n\n                if (member.measure) {\n                    className = row.allCell ? \"k-grid-footer\" : \"\";\n                    row.children.push(this._cell(className, [ this._content(children[0], tuple) ], children[0]));\n\n                    row.rowSpan = childrenLength;\n\n                    for (idx = 1; idx < childrenLength; idx++) {\n                        this._row([ this._cell(className, [ this._content(children[idx], tuple) ], children[idx]) ]);\n                    }\n\n                    return row;\n                }\n\n                map[tuplePath + member.name] = row;\n\n                path = kendo.stringify(buildPath(tuple, memberIdx));\n\n                metadata = this.metadata[path];\n                if (!metadata) {\n                    this.metadata[path] = metadata = createMetadata(levelNum, memberIdx);\n                    metadata.rootLevelNum = rootLevelNum;\n                }\n\n                this._indexes.push({\n                    path: path,\n                    tuple: tuple\n                });\n\n                if (member.hasChildren) {\n                    if (metadata.expanded === false) {\n                        childrenLength = 0;\n                        metadata.children = 0;\n                    }\n\n                    let cellIconEl = $(\"<span></span>\");\n                    cellIconEl.attr(kendo.attr(\"path\"), path);\n\n                    cellChildren.push(kendo.dom.html(kendo.ui.icon(cellIconEl, { icon: childrenLength ? STATE_EXPANDED_ICONNAME : STATE_COLLAPSED_ICONNAME }), true));\n                }\n\n                cellChildren.push(this._content(member, tuple));\n\n                className = row.allCell && !childrenLength ? \"k-grid-footer\" : \"\";\n                cell = this._cell(className, cellChildren, member);\n                cell.colSpan = colSpan;\n\n                row.children.push(cell);\n                row.colSpan[\"dim\" + memberIdx] = cell;\n\n                if (!this[rootName] || this[rootName] < colSpan) {\n                    this[rootName] = colSpan;\n                }\n\n                if (childrenLength) {\n                    row.allCell = false;\n                    row.hasChild = false;\n\n                    for (idx = 0; idx < childrenLength; idx++) {\n                        childRow = this._buildRows(children[idx], memberIdx);\n\n                        if (row !== childRow) {\n                            row.rowSpan += childRow.rowSpan;\n                        }\n                    }\n\n                    if (row.rowSpan > 1) {\n                        cell.attr.rowSpan = row.rowSpan;\n                    }\n\n                    metadata.children = row.rowSpan;\n\n                    allCell = this._cell(\"k-grid-footer\", [this._content(member, tuple)], member);\n                    allCell.colSpan = colSpan;\n\n                    allRow = this._row([ allCell ]);\n                    allRow.colSpan[\"dim\" + memberIdx] = allCell;\n                    allRow.allCell = true;\n\n                    map[tuplePath + member.name + \"all\"] = allRow;\n\n                    if (nextMember) {\n                        childRow = this._buildRows(tuple, memberIdx + 1);\n                        allCell.attr.rowSpan = childRow.rowSpan;\n                    }\n\n                    row.rowSpan += allRow.rowSpan;\n\n                    metadata.members = allRow.rowSpan;\n\n                } else if (nextMember) {\n                    row.hasChild = false;\n                    this._buildRows(tuple, memberIdx + 1);\n\n                    (allCell || cell).attr.rowSpan = row.rowSpan;\n\n                    metadata.members = row.rowSpan;\n                }\n\n                if (metadata.maxChildren < metadata.children) {\n                    metadata.maxChildren = metadata.children;\n                }\n\n                if (metadata.maxMembers < metadata.members) {\n                    metadata.maxMembers = metadata.members;\n                }\n\n                return row;\n            }\n        });\n\n        var ContentBuilder = Class.extend({\n            init: function() {\n                this.columnAxis = {};\n                this.rowAxis = {};\n            },\n\n            build: function(data, columnAxis, rowAxis) {\n                var index = columnAxis.indexes[0];\n                var metadata = columnAxis.metadata[index ? index.path : undefined$1];\n\n                this.columnAxis = columnAxis;\n                this.rowAxis = rowAxis;\n\n                this.data = data;\n\n                this.rowLength = metadata ? metadata.maxChildren + metadata.maxMembers : columnAxis.measures.length || 1;\n\n                if (!this.rowLength) {\n                    this.rowLength = 1;\n                }\n\n                var tbody = this._tbody();\n                var colgroup = this._colGroup();\n\n                return [\n                    element(\"table\", { className: tableStyles.contentTable }, [colgroup, tbody])\n                ];\n            },\n\n            _colGroup: function() {\n                var length = this.columnAxis.measures.length || 1;\n                var children = [];\n                var idx = 0;\n\n                if (this.rows[0]) {\n                    length = this.rows[0].children.length;\n                }\n\n                for (; idx < length; idx++) {\n                    children.push(element(\"col\", null));\n                }\n\n                return element(\"colgroup\", null, children);\n            },\n\n            _tbody: function() {\n                this.rows = [];\n\n                if (this.data[0]) {\n                    this.columnIndexes = this._indexes(this.columnAxis, this.rowLength);\n                    this.rowIndexes = this._indexes(this.rowAxis, Math.ceil(this.data.length / this.rowLength));\n\n                    this._buildRows();\n                } else {\n                    this.rows.push(element(\"tr\", { className: tableStyles.tableRow }, [ element(\"td\", { className: tableStyles.tableCell }, [ htmlNode(\"&nbsp;\") ]) ]));\n                }\n\n                return element(\"tbody\", { className: tableStyles.tbody }, this.rows);\n            },\n\n            _indexes: function(axisInfo, total) {\n                var result = [];\n                var axisInfoMember;\n                var indexes = axisInfo.indexes;\n                var metadata = axisInfo.metadata;\n                var measures = axisInfo.measures;\n                var measuresLength = measures.length || 1;\n\n                var current;\n                var dataIdx = 0;\n                var firstEmpty = 0;\n\n                var idx = 0;\n                var length = indexes.length;\n                var measureIdx;\n                var index;\n\n                var children;\n                var skipChildren;\n\n                if (!length) {\n                    for (measureIdx = 0; measureIdx < measuresLength; measureIdx++) {\n                        result[measureIdx] = {\n                            index: measureIdx,\n                            measure: measures[measureIdx],\n                            tuple: null\n                        };\n                    }\n\n                    return result;\n                }\n\n                for (; idx < length; idx++) {\n                    axisInfoMember = indexes[idx];\n                    current = metadata[axisInfoMember.path];\n                    children = current.children + current.members;\n                    skipChildren = 0;\n\n                    if (children) {\n                        children -= measuresLength;\n                    }\n\n                    if (current.expanded === false && current.children !== current.maxChildren) {\n                        skipChildren = current.maxChildren;\n                    }\n\n                    if (current.parentMember && current.levelNum === current.rootLevelNum) {\n                        children = -1;\n                    }\n\n                    if (children > -1) {\n                        for (measureIdx = 0; measureIdx < measuresLength; measureIdx++) {\n                            index = children + measureIdx;\n                            if (!current.children) {\n                                index += firstEmpty;\n                            }\n\n                            result[children + firstEmpty + measureIdx] = {\n                                children: children,\n                                index: dataIdx,\n                                measure: measures[measureIdx],\n                                tuple: axisInfoMember.tuple\n                            };\n                            dataIdx += 1;\n                        }\n\n                        while (result[firstEmpty] !== undefined$1) {\n                            firstEmpty += 1;\n                        }\n                    }\n\n                    if (firstEmpty === total) {\n                        break;\n                    }\n\n                    dataIdx += skipChildren;\n                }\n\n                return result;\n            },\n\n            _buildRows: function() {\n                var rowIndexes = this.rowIndexes;\n                var length = rowIndexes.length;\n                var idx = 0;\n\n                for (; idx < length; idx++) {\n                    var rowIndex = rowIndexes[idx];\n                    if (rowIndex) {\n                        this.rows.push(this._buildRow(rowIndex));\n                    }\n                }\n            },\n\n            _buildRow: function(rowInfo) {\n                var startIdx = rowInfo.index * this.rowLength;\n                var columnIndexes = this.columnIndexes;\n                var length = columnIndexes.length;\n                var columnInfo;\n                var cells = [];\n                var idx = 0;\n\n                var templateInfo;\n                var cell, cellContent;\n                var attr, dataItem, measure;\n\n                for (; idx < length; idx++) {\n                    columnInfo = columnIndexes[idx];\n\n                    if (columnInfo === undefined$1) {\n                        continue;\n                    }\n\n                    attr = { className: tableStyles.tableCell };\n                    if (columnInfo.children) {\n                        attr.className += \" k-alt\";\n                    }\n\n                    cellContent = \"\";\n                    dataItem = this.data[startIdx + columnInfo.index];\n                    measure = columnInfo.measure || rowInfo.measure;\n\n                    templateInfo = {\n                        columnTuple: columnInfo.tuple,\n                        rowTuple: rowInfo.tuple,\n                        measure: measure,\n                        dataItem: dataItem\n                    };\n\n                    if (dataItem.value !== \"\" && measure && measure.type) {\n                        if (measure.type === \"status\") {\n                            cellContent = this.kpiStatusTemplate(templateInfo);\n                        } else if (measure.type === \"trend\") {\n                            cellContent = this.kpiTrendTemplate(templateInfo);\n                        }\n                    }\n\n                    if (!cellContent) {\n                        cellContent = this.dataTemplate(templateInfo);\n                    }\n\n                    cell = element(\"td\", attr, [ htmlNode(cellContent) ]);\n                    cell.value = dataItem.value;\n                    cells.push(cell);\n                }\n\n                attr = { className: tableStyles.tableRow };\n                if (rowInfo.children) {\n                    attr.className += \" k-grid-footer\";\n                }\n\n                return element(\"tr\", attr, cells);\n            }\n        });\n\n        ui.plugin(PivotGrid);\n\n        kendo.PivotExcelExporter = kendo.Class.extend({\n            init: function(options) {\n                this.options = options;\n\n                this.widget = options.widget;\n                this.dataSource = this.widget.dataSource;\n            },\n\n            _columns: function() {\n                var columnHeaderTable = this.widget.columnsHeaderTree.children[0];\n                var rowHeaderTable = this.widget.rowsHeaderTree.children[0];\n\n                var columnHeaderLength = columnHeaderTable.children[0].children.length;\n                var rowHeaderLength = rowHeaderTable.children[0].children.length;\n\n                var width = this.widget.options.columnWidth;\n                var result = [];\n                var idx;\n\n                if (rowHeaderLength && this.dataSource.data()[0]) {\n                    for (idx = 0; idx < rowHeaderLength; idx++) {\n                        result.push({\n                            autoWidth: true\n                        });\n                    }\n                }\n\n                for (idx = 0; idx < columnHeaderLength; idx++) {\n                    result.push({\n                        autoWidth: false,\n                        width: width\n                    });\n                }\n\n                return result;\n            },\n\n            _cells: function(rows, type, callback) {\n                var result = [];\n\n                var i = 0;\n                var length = rows.length;\n\n                var cellsLength;\n                var row, cells;\n                var j, cell;\n\n                for (; i < length; i++) {\n                    row = [];\n                    cells = rows[i].children;\n                    cellsLength = cells.length;\n\n                    for (j = 0; j < cellsLength; j++) {\n                        cell = cells[j];\n\n                        row.push({\n                            background: \"#7a7a7a\",\n                            color: \"#fff\",\n                            value: cell.value,\n                            colSpan: cell.attr.colSpan || 1,\n                            rowSpan: cell.attr.rowSpan || 1\n                        });\n                    }\n\n                    if (callback) {\n                        callback(row, i);\n                    }\n\n                    result.push({\n                        cells: row,\n                        type: type\n                    });\n                }\n\n                return result;\n            },\n\n            _rows: function() {\n                var columnHeaderTable = this.widget.columnsHeaderTree.children[0];\n                var rowHeaderTable = this.widget.rowsHeaderTree.children[0];\n\n                var columnHeaderLength = columnHeaderTable.children[0].children.length;\n                var rowHeaderLength = rowHeaderTable.children[0].children.length;\n\n                var columnHeaderRows = columnHeaderTable.children[1].children;\n                var rowHeaderRows = rowHeaderTable.children[1].children;\n                var contentRows = this.widget.contentTree.children[0].children[1].children;\n\n                var columnRows = this._cells(columnHeaderRows, \"header\");\n\n                if (rowHeaderLength) {\n                    columnRows[0].cells.splice(0, 0, {\n                        background: \"#7a7a7a\",\n                        color: \"#fff\",\n                        value: \"\",\n                        colSpan: rowHeaderLength,\n                        rowSpan: columnHeaderRows.length\n                    });\n                }\n\n                var dataCallback = function(row, index) {\n                    var j = 0;\n                    var cell, value;\n                    var cells = contentRows[index].children;\n\n                    for (; j < columnHeaderLength; j++) {\n                        cell = cells[j];\n                        value = Number(cell.value);\n\n                        if (isNaN(value)) {\n                            value = cell.value;\n                        }\n\n                        row.push({\n                            background: \"#dfdfdf\",\n                            color: \"#333\",\n                            value: value,\n                            colSpan: 1,\n                            rowSpan: 1\n                        });\n                    }\n                };\n\n                var rowRows = this._cells(rowHeaderRows, \"data\", dataCallback);\n\n                return columnRows.concat(rowRows);\n            },\n\n            _freezePane: function() {\n                var columnHeaderTable = this.widget.columnsHeaderTree.children[0];\n                var rowHeaderTable = this.widget.rowsHeaderTree.children[0];\n\n                var rowHeaderLength = rowHeaderTable.children[0].children.length;\n                var columnHeaderRows = columnHeaderTable.children[1].children;\n\n                return {\n                    colSplit: rowHeaderLength,\n                    rowSplit: columnHeaderRows.length\n                };\n            },\n\n            _columnsV2: function() {\n                const columnHeaderTable = this.widget._columnBuilder.table[0];\n                const rowHeaderTable = this.widget._rowBuilder.table[0];\n\n                const columnHeaderLength = columnHeaderTable.children[0].children.length;\n                const rowHeaderLength = rowHeaderTable.children[0].children.length;\n\n                const width = this.widget.options.columnWidth;\n                const result = [];\n\n                if (rowHeaderLength && this.dataSource.data()[0]) {\n                    for (let idx = 0; idx < rowHeaderLength; idx++) {\n                        result.push({\n                            autoWidth: true\n                        });\n                    }\n                }\n\n                for (let idx = 0; idx < columnHeaderLength; idx++) {\n                    result.push({\n                        autoWidth: false,\n                        width: width\n                    });\n                }\n\n                return result;\n            },\n\n            _cellsV2: function(rows, type, callback) {\n                const result = [];\n\n                const length = Object.keys(rows).length;\n\n                for (let i = 0; i < length; i++) {\n                    const row = [];\n                    const cells = rows[i].children;\n                    const cellsLength = cells.length;\n\n                    for (let j = 0; j < cellsLength; j++) {\n                        const cell = cells[j];\n\n                        row.push({\n                            background: \"#7a7a7a\",\n                            color: \"#fff\",\n                            value: cell.caption,\n                            colSpan: cell.colSpan || 1,\n                            rowSpan: cell.rowSpan || 1\n                        });\n                    }\n\n                    if (callback) {\n                        callback(row, i);\n                    }\n\n                    result.push({\n                        cells: row,\n                        type: type\n                    });\n                }\n\n                return result;\n            },\n\n            _rowsV2: function() {\n                const columnHeaderTable = this.widget._columnBuilder.table[0];\n                const rowHeaderTable = this.widget._rowBuilder.table[0];\n\n                const columnHeaderLength = columnHeaderTable.children[0].children.length;\n                const rowHeaderLength = rowHeaderTable.children[0].children.length;\n\n                const columnHeaderRows = this.widget._columnBuilder._exportData;\n                const rowHeaderRows = this.widget._rowBuilder._exportData;\n                const contentCells = this.widget._contentBuilder.hash;\n\n                const columnRows = this._cellsV2(columnHeaderRows, \"header\");\n\n                if (rowHeaderLength) {\n                    columnRows[0].cells.splice(0, 0, {\n                        background: \"#7a7a7a\",\n                        color: \"#fff\",\n                        value: \"\",\n                        colSpan: rowHeaderLength,\n                        rowSpan: Object.keys(columnHeaderRows).length\n                    });\n                }\n\n                const dataCallback = function(row, index) {\n                    const startingIndex = index * columnHeaderLength;\n                    const endIndex = (index + 1) * columnHeaderLength;\n\n                    for (let j = startingIndex; j < endIndex; j++) {\n                        const cell = contentCells[j];\n\n                        const cellValue = cell.data !== null ? cell.data.value : cell.data;\n                        let value = Number(cellValue);\n\n                        if (isNaN(value)) {\n                            value = cellValue;\n                        }\n\n                        row.push({\n                            background: \"#dfdfdf\",\n                            color: \"#333\",\n                            value: value,\n                            colSpan: 1,\n                            rowSpan: 1\n                        });\n                    }\n                };\n\n                const rowRows = this._cellsV2(rowHeaderRows, \"data\", dataCallback);\n\n                return columnRows.concat(rowRows);\n            },\n\n\n            _freezePaneV2: function() {\n                const columnHeaderTable = this.widget._columnBuilder.table[0];\n                const rowHeaderTable = this.widget._rowBuilder.table[0];\n\n                const rowHeaderLength = rowHeaderTable.children[0].children.length;\n                const columnHeaderRows = columnHeaderTable.children[1].children.length;\n\n                return {\n                    colSplit: rowHeaderLength,\n                    rowSplit: columnHeaderRows\n                };\n            },\n\n            _filterV2: function() {\n                const that = this;\n\n                if (!that.options.excel.filterable) {\n                    return null;\n                }\n\n                const columnHeaderTable = this.widget._columnBuilder.table[0];\n                const rowHeaderTable = this.widget._rowBuilder.table[0];\n\n                const rowHeaderLength = rowHeaderTable.children[0].children.length;\n                const columnHeaderLength = columnHeaderTable.children[0].children.length;\n\n                const additionalRows = rowHeaderLength - 1;\n\n                return {\n                    from: rowHeaderLength,\n                    to: columnHeaderLength + additionalRows\n                };\n            },\n\n\n            workbook: function() {\n                var promise,\n                    resolveFn = function() {\n                        if (this.widget.options.name === \"PivotGridV2\") {\n                            return {\n                                sheets: [ {\n                                    columns: this._columnsV2(),\n                                    rows: this._rowsV2(),\n                                    freezePane: this._freezePaneV2(),\n                                    filter: this._filterV2(),\n                                } ]\n                            };\n                        }\n                        return {\n                            sheets: [ {\n                                columns: this._columns(),\n                                rows: this._rows(),\n                                freezePane: this._freezePane(),\n                                filter: null\n                            } ]\n                        };\n                    };\n\n                if (this.dataSource.view()[0]) {\n                    promise = $.Deferred();\n                    promise.resolve();\n                } else {\n                    promise = this.dataSource.fetch();\n                }\n\n                return promise.then(resolveFn.bind(this));\n            }\n        });\n\n        var PivotExcelMixin = {\n            extend: function(proto) {\n               proto.events.push(\"excelExport\");\n               proto.options.excel = $.extend(proto.options.excel, this.options);\n               proto.saveAsExcel = this.saveAsExcel;\n            },\n            options: {\n                proxyURL: \"\",\n                filterable: false,\n                fileName: \"Export.xlsx\"\n            },\n            saveAsExcel: function() {\n                var excel = this.options.excel || {};\n\n                var exporter = new kendo.PivotExcelExporter({\n                    widget: this,\n                    excel\n                });\n\n                if (this._progress) {\n                    this._isExport = true;\n                    this._progress(true);\n                }\n\n                var resolveFn = function(book) {\n                    if (!this.trigger(\"excelExport\", { workbook: book })) {\n                        var workbook = new kendo.ooxml.Workbook(book);\n\n                        workbook.toDataURLAsync().then(function(dataURI) {\n                            kendo.saveAs({\n                                dataURI: dataURI,\n                                fileName: book.fileName || excel.fileName,\n                                proxyURL: excel.proxyURL,\n                                forceProxy: excel.forceProxy\n                            });\n                        }).always(() => {\n                            if (this._progress) {\n                                this._progress(false);\n                                this._isExport = false;\n                            }\n                        });\n                    }\n                };\n\n                exporter.workbook().then(resolveFn.bind(this));\n            }\n        };\n\n        kendo.PivotExcelMixin = PivotExcelMixin;\n\n        if (kendo.ooxml && kendo.ooxml.Workbook) {\n            PivotExcelMixin.extend(PivotGrid.prototype);\n        }\n\n        if (kendo.ooxml && kendo.ooxml.Workbook) {\n            PivotExcelMixin.extend(PivotGridV2.prototype);\n        }\n\n        if (kendo.PDFMixin) {\n            kendo.PDFMixin.extend(PivotGrid.prototype);\n\n            PivotGrid.fn._drawPDF = function() {\n                return this._drawPDFShadow({\n                    width: this.wrapper.width()\n                }, {\n                    avoidLinks: this.options.pdf.avoidLinks\n                });\n            };\n        }\n\n        if (kendo.PDFMixin) {\n            kendo.PDFMixin.extend(PivotGridV2.prototype);\n\n            PivotGridV2.prototype._saveAsPDF = kendo.PDFMixin.saveAsPDF;\n\n            PivotGridV2.fn.saveAsPDF = function() {\n                if (this._progress) {\n                    this._isExport = true;\n                    this._progress(true);\n                }\n                this._saveAsPDF().always(() => {\n                    if (this._progress) {\n                        this._progress(false);\n                        this._isExport = false;\n                    }\n                });\n            };\n\n            PivotGridV2.fn._drawPDF = function() {\n                return this._drawPDFShadow({\n                    width: this.wrapper.width()\n                }, {\n                    avoidLinks: this.options.pdf.avoidLinks\n                });\n            };\n        }\n\n        window.kendo.pivotgrid = window.kendo.pivotgrid || {};\n        window.kendo.pivotgrid.common = {\n            addKPI: kendo_pivotgridCommon_cmn_chunk_js.n,\n            addMultipleMeasures: kendo_pivotgridCommon_cmn_chunk_js.o,\n            averageAggregate: kendo_pivotgridCommon_cmn_chunk_js.b,\n            buildKPIMeasures: kendo_pivotgridCommon_cmn_chunk_js.p,\n            cloneDataTree: kendo_pivotgridCommon_cmn_chunk_js.q,\n            compareAxes: kendo_pivotgridCommon_cmn_chunk_js.r,\n            configuratorReducer: kendo_pivotgridCommon_cmn_chunk_js.u,\n            createAxisDescriptors: kendo_pivotgridCommon_cmn_chunk_js.v,\n            createDataState: kendo_pivotgridCommon_cmn_chunk_js.g,\n            createDataTree: kendo_pivotgridCommon_cmn_chunk_js.c,\n            createDiscoverBody: kendo_pivotgridCommon_cmn_chunk_js.w,\n            createFlatSchemaDimensions: kendo_pivotgridCommon_cmn_chunk_js.x,\n            createLocalDataState: kendo_pivotgridCommon_cmn_chunk_js.a,\n            createRequestBody: kendo_pivotgridCommon_cmn_chunk_js.y,\n            createTuples: kendo_pivotgridCommon_cmn_chunk_js.z,\n            discoverCommands: kendo_pivotgridCommon_cmn_chunk_js.A,\n            fetchData: kendo_pivotgridCommon_cmn_chunk_js.f,\n            fetchDiscover: kendo_pivotgridCommon_cmn_chunk_js.h,\n            headersReducer: kendo_pivotgridCommon_cmn_chunk_js.i,\n            maxAggregate: kendo_pivotgridCommon_cmn_chunk_js.d,\n            mergeTrees: kendo_pivotgridCommon_cmn_chunk_js.B,\n            minAggregate: kendo_pivotgridCommon_cmn_chunk_js.m,\n            parseResponse: kendo_pivotgridCommon_cmn_chunk_js.C,\n            readData: kendo_pivotgridCommon_cmn_chunk_js.D,\n            rootFields: kendo_pivotgridCommon_cmn_chunk_js.E,\n            setFilter: kendo_pivotgridCommon_cmn_chunk_js.F,\n            setSort: kendo_pivotgridCommon_cmn_chunk_js.G,\n            sumAggregate: kendo_pivotgridCommon_cmn_chunk_js.s,\n            toColumns: kendo_pivotgridCommon_cmn_chunk_js.k,\n            toData: kendo_pivotgridCommon_cmn_chunk_js.t,\n            toRows: kendo_pivotgridCommon_cmn_chunk_js.l,\n            toTree: kendo_pivotgridCommon_cmn_chunk_js.j,\n        };\n\n    })(window.kendo.jQuery);\n    var kendo$1 = kendo;\n\n    exports.__meta__ = __meta__;\n    exports.default = kendo$1;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n\n}));\n"]}