{"version":3,"file":"kendo.excel.min.js","names":["global","factory","exports","module","require","define","amd","globalThis","self","kendo","_globals","Excel","Core","Data","OoxmlCmnChunk","this","kendo_core_js","kendo_data_js","kendo_ooxml_cmn_chunk_js","$","extend","convertedExporter","ConvertClass","E","T","register","compile","template","ExcelExporter","Class","init","options","dataSource","data","DataSource","filter","undefined","constructor","page","allPages","pageSize","groupPaging","total","sort","group","aggregate","isExcelExportRequest","length","hierarchy","i","expanded","shouldRestoreExpandedState","_data","transport","_isServerGrouped","create","_hierarchy","level","itemLevel","item","view","depth","idx","_restoreExpandedState","workbook","Deferred","d","fetch","then","groups","aggregates","resolve","bind","promise","window","excel","TemplateService","jQuery","ExcelMixin","proto","events","push","saveAsExcel","proxyURL","filterable","fileName","collapsible","deferred","exporter","columns","book","trigger","ooxml","Workbook","skipCustomHeight","toDataURLAsync","dataURI","saveAs","forceProxy","__meta__","id","name","category","advanced","mixin","depends"],"sources":["kendo.excel.js"],"mappings":"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","ignoreList":[],"sourcesContent":["(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('kendo.core.js'), require('kendo.data.js'), require('kendo.ooxml.cmn.chunk.js'), require('kendo.ooxml.js')) :\n    typeof define === 'function' && define.amd ? define(['exports', 'kendo.core', 'kendo.data', 'kendo.ooxml.cmn.chunk', 'kendo.ooxml'], factory) :\n    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory((global.kendo = global.kendo || {}, global.kendo._globals = global.kendo._globals || {}, global.kendo._globals.Excel = {}), global.kendo._globals.Core, global.kendo._globals.Data, global.kendo._globals.OoxmlCmnChunk));\n})(this, (function (exports, kendo_core_js, kendo_data_js, kendo_ooxml_cmn_chunk_js) {\n    (function($, kendo) {\n\n        var extend = $.extend;\n        let convertedExporter = kendo.ConvertClass(kendo_ooxml_cmn_chunk_js.E);\n\n        kendo_ooxml_cmn_chunk_js.T.register({\n            compile: kendo.template\n        });\n\n        kendo.ExcelExporter = kendo.Class.extend({\n            init: function(options) {\n                this.options = options;\n                var dataSource = options.dataSource;\n\n                if (dataSource instanceof kendo.data.DataSource) {\n\n                    if (!dataSource.filter()) {\n                        dataSource.options.filter = undefined;\n                    }\n\n                    this.dataSource = new dataSource.constructor(extend(\n                        {},\n                        dataSource.options,\n                        {\n                            page: options.allPages ? 0 : dataSource.page(),\n                            filter: dataSource.filter(),\n                            pageSize: (options.allPages || options.groupPaging) ? dataSource.total() : dataSource.pageSize() || dataSource.total(),\n                            sort: dataSource.sort(),\n                            group: dataSource.group(),\n                            aggregate: dataSource.aggregate(),\n                            isExcelExportRequest: true\n                        }));\n\n                    var data = dataSource.data();\n\n                    if (data.length > 0) {\n                        if (options.hierarchy) {\n                            for (var i = 0; i < data.length; i++) {\n                                if (data[i].expanded === false || data[i].expanded === undefined) {\n                                    data[i].expanded = true;\n                                    data[i].shouldRestoreExpandedState = true;\n                                }\n                            }\n                        }\n                        // Avoid toJSON() for perf and avoid data() to prevent reparenting.\n                        this.dataSource._data = data;\n\n                        var transport = this.dataSource.transport;\n                        if (dataSource._isServerGrouped() && transport.options && transport.options.data) { // clear the transport data when using aspnet-mvc transport\n                            transport.options.data = null;\n                        }\n                    }\n\n                } else {\n                    this.dataSource = kendo.data.DataSource.create(dataSource);\n                }\n            },\n\n            _hierarchy: function() {\n                var hierarchy = this.options.hierarchy;\n                var dataSource = this.dataSource;\n\n                if (hierarchy && dataSource.level) {\n                    hierarchy = {\n                        itemLevel: function(item) {\n                            return dataSource.level(item);\n                        }\n                    };\n\n                    var view = dataSource.view();\n                    var depth = 0;\n                    var level;\n\n                    for (var idx = 0; idx < view.length; idx++) {\n                        level = dataSource.level(view[idx]);\n\n                        if (level > depth) {\n                            depth = level;\n                        }\n                    }\n\n                    hierarchy.depth = depth + 1;\n                } else {\n                    hierarchy = false;\n                }\n\n                return {\n                    hierarchy: hierarchy\n                };\n            },\n\n            _restoreExpandedState: function() {\n                var options = this.options,\n                    dataSource = options.dataSource,\n                    data = dataSource.data(),\n                    hierarchy = options.hierarchy;\n\n                if (data.length > 0) {\n                    if (hierarchy) {\n                        for (var i = 0; i < data.length; i++) {\n                            if (data[i].shouldRestoreExpandedState) {\n                                data[i].expanded = false;\n                                delete data[i].shouldRestoreExpandedState;\n                            }\n                        }\n                    }\n                }\n            },\n\n            workbook: function() {\n                return $.Deferred((function(d) {\n                    this.dataSource.fetch()\n                        .then((function() {\n\n                            var workbook = new convertedExporter(extend({}, this.options, this._hierarchy(), {\n                                data: this.dataSource.view(),\n                                groups: this.dataSource.group(),\n                                aggregates: this.dataSource.aggregates()\n                            })).workbook();\n\n                            d.resolve(workbook, this.dataSource.view());\n                        }).bind(this));\n                }).bind(this)).promise();\n            }\n        });\n\n        window.kendo.excel = window.kendo.excel || {};\n        window.kendo.excel.ExcelExporter = convertedExporter;\n        window.kendo.excel.TemplateService = kendo_ooxml_cmn_chunk_js.T;\n\n    })(kendo.jQuery, kendo);\n\n    (function($, kendo) {\n\n\n    kendo.ExcelMixin = {\n        extend: function(proto) {\n           proto.events.push(\"excelExport\");\n           proto.options.excel = $.extend(proto.options.excel, this.options);\n           proto.saveAsExcel = this.saveAsExcel;\n        },\n        options: {\n            proxyURL: \"\",\n            allPages: false,\n            filterable: false,\n            fileName: \"Export.xlsx\",\n            collapsible: false\n        },\n        saveAsExcel: function(deferred) {\n            var excel = this.options.excel || {};\n\n            var exporter = new kendo.ExcelExporter({\n                columns: this.columns,\n                dataSource: this.dataSource,\n                allPages: excel.allPages,\n                filterable: excel.filterable,\n                hierarchy: excel.hierarchy,\n                collapsible: excel.collapsible\n            });\n\n            exporter.workbook().then((function(book, data) {\n                if (!this.trigger(\"excelExport\", { workbook: book, data: data })) {\n                    var workbook = new kendo.ooxml.Workbook(book);\n\n                    if (!workbook.options) {\n                        workbook.options = {};\n                    }\n                    workbook.options.skipCustomHeight = true;\n\n                    workbook.toDataURLAsync().then(function(dataURI) {\n                        kendo.saveAs({\n                            dataURI: dataURI,\n                            fileName: book.fileName || excel.fileName,\n                            proxyURL: excel.proxyURL,\n                            forceProxy: excel.forceProxy\n                        });\n\n                        if (exporter._restoreExpandedState) {\n                            exporter._restoreExpandedState();\n                        }\n\n                        if (deferred) {\n                            deferred.resolve();\n                        }\n                    });\n                }\n            }).bind(this));\n        }\n    };\n\n    })(kendo.jQuery, kendo);\n\n    const __meta__ = {\n        id: \"excel\",\n        name: \"Excel export\",\n        category: \"framework\",\n        advanced: true,\n        mixin: true,\n        depends: [\"data\", \"ooxml\", \"ooxml.cmn.chunk\"]\n    };\n\n    exports.__meta__ = __meta__;\n\n}));\n"]}