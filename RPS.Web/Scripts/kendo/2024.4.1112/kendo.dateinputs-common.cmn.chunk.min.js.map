{"version":3,"file":"kendo.dateinputs-common.cmn.chunk.min.js","names":["global","factory","exports","module","require","define","amd","globalThis","self","kendo","_globals","DateinputsCommonCmnChunk","DateMathCmnChunk","this","kendo_dateMath_cmn_chunk_js","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","prototype","hasOwnProperty","call","__extends","TypeError","String","__","constructor","create","__assign","assign","t","s","i","n","arguments","length","apply","__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","value","step","next","e","rejected","result","done","then","__classPrivateFieldGet","receiver","state","kind","f","has","get","__classPrivateFieldSet","set","SuppressedError","method","DateInputInteractionMode","_a","Mask","symbols","partMap","Constants","Key","padZero","Math","max","fill","join","unpadZero","replace","dateSymbolMap","map","part","pattern","type","isPresent","isNumber","Number","isNaN","parseToInt","parseInt","isParseableToInt","test","clamp","min","extend","args","_i","setYears","date","clone","c","areDatePartsEqualTo","year","month","day","hour","minutes","seconds","milliseconds","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","getMilliseconds","isValidDate","getTime","SHORT_PATTERN_LENGTH_REGEXP","DateObject","intlService","formatPlaceholder","format","_b","cycleTime","_c","twoDigitYearMax","_d","_e","autoCorrectParts","hours","dayperiod","leadingZero","typedMonthPart","knownParts","E","H","M","a","h","m","y","S","_value","getDefaultDate","_partiallyInvalidDate","startDate","invalidDateParts","startDateOffset","setOptions","sampleFormat","dateFormatString","setExisting","defineProperty","Date","resetInvalidDate","enumerable","configurable","localeId","cldrKeys","keys","intl","cldr","key","name","calendar","numbers","options","monthNames","allFormattedMonths","dayPeriods","allDayPeriods","setValue","modifyExisting","hasValue","_this","splitDateFormat","reduce","getExisting","getValue","createDefaultDate","g","getFormattedDate","formatDate","getTextAndFormat","customFormat","text","mask","partiallyInvalidText","formattedDate","formattedDates","getFormattedInvalidDates","symbol","getInvalidDatePartValue","partsForSegment","getPartsForSegment","datePartText","toString","merge","formattedDatesForSymbol","forEach","getInvalidDatePart","formattedInvalidDate","setFullYear","setMonth","modifyPart","offset","invalidDateFound","newValue","timeModified","isMonth","isDay","symbolExists","setDate","setHours","setMinutes","setSeconds","setMilliseconds","invalidDatePartValue","resetInvalidDateSymbol","monthValue","dayValue","abs","dateCandidate","newValueCandidate","modifyDateSymbolWithValue","dateCandidateExists","markDatePartsAsExisting","setInvalidDatePart","shouldNormalizeCentury","normalizeCentury","parsePart","currentChar","resetSegmentValue","cycleSegmentValue","rawInputValue","rawTextValue","isDeleting","originalFormat","isInCaretMode","dateParts","datePartsLiterals","filter","x","index","datePartIndex","literal","flatDateParts","datePart","j","parseResult","switchToNext","resetPart","some","hasInvalidDatePart","resetLeadingZero","rawValueStartsWithLiteral","startsWith","rawValueEndsWithLiteral","endsWith","rawValueHasConsecutiveLiterals","indexOf","baseDate","baseFormat","replaced","prefix","current","basePrefix","baseSuffix","suffix","convertedBaseFormat","hasFixedFormat","datePartStartIndex","segmentLength","lastIndexOf","formatToTextLengthDiff","parsedDate","matchMonth","dayPeriod","matchDayPeriod","isZeroCurrentChar","isAbbrMonth","incrementLeadingZero","partPattern","patternValue","patternLength","currentMaxLength","tryParse","middle","substring","middleNumber","candidateDateString","parseDate","autoCorrectedPrefixAndSuffix","isCurrentCharParsable","monthNumber","l","peekResult","isPeekDateOverflowingDatePart","useBasePrefixAndSuffix","peekedDate","parsedPeekedValue","datePartValue","textToParse","parsedValue","month_1","valueCandidate","symbolMap","hasLeadingZero","setLeadingZero","getLeadingZero","twoDigitYear","slice","cropTwoDigitYear","centuryBase","getNormalizedCenturyBase","parts","names","peek","peekValue","typedChar","toLowerCase","monthAsNum","lowerChart","am","pm","locale","dateFormatParts","dateFormatNames","partLength","push","returnValue","resultText","resultFormat","processTextSymbolsEnded","ignoreFormatSymbolsCount","formatSymbolIndex","formatSymbolIndexModifier","dateFieldName","nameType","resetInvalidDatePart","shouldResetInvalidDate","modifyDateSymbolWithOffset","partIndex","segmentPart","maskPartIndex","unshift","peekedValue","peekedDateString","patternSatisfied","KeyCode","defaultOptions","events","Observable","destroy","trigger","eventName","eventData","defaultPrevented","preventDefault","sender","DRAG_START","DROP","TOUCH_START","MOUSE_DOWN","MOUSE_UP","CLICK","INPUT","KEY_DOWN","FOCUS","BLUR","PASTE","MOUSE_SCROLL","MOUSE_WHEEL","VALUE_CHANGE","INPUT_END","BLUR_END","FOCUS_END","CHANGE","defaultDateInputOptions","hasPlaceholder","placeholder","steps","millisecond","second","minute","selectNearestSegmentOnFocus","selectPreviousSegmentOnBackspace","enableMouseWheel","allowCaretMode","autoSwitchParts","autoSwitchKeys","autoFill","DateInput","_super","element","dateObject","currentText","currentFormat","interactionMode","None","previousElementSelection","start","end","init","dateValue","formattedValue","createDateObject","setTextAndFormat","bindEvents","forceUpdate","unbindEvents","onElementDragStart","bind","addEventListener","onElementDrop","onElementClick","onElementMouseDown","onElementMouseUp","onElementInput","onElementKeyDown","onElementFocus","onElementBlur","onElementChange","onElementPaste","onElementMouseWheel","removeEventListener","refresh","setDateObjectOptions","newOptions","getDateObjectOptions","resetLocale","Caret","focus","selectNearestSegment","mouseDownStarted","focusedPriorToMouseDown","isActive","switchedPartOnPreviousKeyAction","selection","detail","selectionPresent","selectionStart","selectionEnd","placeholderToggled","caret","setSelection","selectionByIndex","triggerInput","event","oldElementValue","elementValue","isPasteInProgress","updateOnPaste","keyDownEvent","isBackspaceKey","keyCode","isDeleteKey","originalInteractionMode","Selection","hasCaret","restorePreviousInputEventState","oldExistingDateValue","oldDateValue","diff","oldText","newText","formatPattern","keyEvent","oldIndex","oldTextSeparator","oldSegmentText","newSegmentText","deletedSymbol","approximateStringMatching","previousElementValue","navigationOnly","parsePartsResults","switchPart","error","parsePartResult","symbolForSelection","lastParseResult","lastParseResultHasNoValue","parsingFailedOnDelete","newExistingDateValue","hasExistingDateValueChanged","newDateValue","currentSelection","diffChar","forceUpdateWithSelection","switchDateSegment","selectionBySymbol","data","tryTriggerValueChange","oldValue","triggerInputEnd","newElementValue","triggerFocus","refreshElementValue","triggerFocusEnd","triggerBlur","triggerBlurEnd","triggerChange","triggerKeyDown","keyEventMatchesAutoSwitchKeys","isTabKey","shiftKey","getStepFromSymbol","shouldPreventDefault","altKey","ctrlKey","metaKey","modifyDateSegmentValue","triggerMouseWheel","wheelDelta","stopPropagation","inputFormat","oldDateObjectValue","writeValue","displayFormat","undefined","document","activeElement","setSelectionRange","currentSymbol","symbolCandidate","previousFormatSymbol","readonly","digits","msDigits","match","pow","triggerValueChange","elementValueLength","selectionOffset","setElementValue","restorePreviousElementValue","restorePreviousElementSelection","verifyValue","getDateObject","Error","showPlaceholder","isPosition","disabled","selectDateSegment","begin","keyObject","trim","currentDate","D","_","__meta__","id","category","description","depends","hidden","chunk"],"sources":["kendo.dateinputs-common.cmn.chunk.js"],"mappings":"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","ignoreList":[],"sourcesContent":["(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('kendo.date-math.cmn.chunk.js')) :\n  typeof define === 'function' && define.amd ? define(['exports', 'kendo.date-math.cmn.chunk'], factory) :\n  (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory((global.kendo = global.kendo || {}, global.kendo._globals = global.kendo._globals || {}, global.kendo._globals.DateinputsCommonCmnChunk = {}), global.kendo._globals.DateMathCmnChunk));\n})(this, (function (exports, kendo_dateMath_cmn_chunk_js) {\n  const __meta__ = {\n      id: \"dateinputs-common.cmn.chunk\",\n      name: \"DateinputsCommonCmnChunk\",\n      category: \"web\",\n      description: \"A reusable outputed chunk of code\",\n      depends: ['date-math.cmn.chunk'],\n      hidden: true,\n      chunk: true\n  };\n\n\n\n  /******************************************************************************\n  Copyright (c) Microsoft Corporation.\n\n  Permission to use, copy, modify, and/or distribute this software for any\n  purpose with or without fee is hereby granted.\n\n  THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\n  REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\n  AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\n  INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\n  LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\n  OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\n  PERFORMANCE OF THIS SOFTWARE.\n  ***************************************************************************** */\n  /* global Reflect, Promise, SuppressedError, Symbol, Iterator */\n\n  var extendStatics = function(d, b) {\n    extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n    return extendStatics(d, b);\n  };\n\n  function __extends(d, b) {\n    if (typeof b !== \"function\" && b !== null)\n        throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    extendStatics(d, b);\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  }\n\n  var __assign = function() {\n    __assign = Object.assign || function __assign(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n  };\n\n  function __rest(s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n  }\n\n  function __decorate(decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n  }\n\n  function __param(paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n  }\n\n  function __esDecorate(ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {\n    function accept(f) { if (f !== void 0 && typeof f !== \"function\") throw new TypeError(\"Function expected\"); return f; }\n    var kind = contextIn.kind, key = kind === \"getter\" ? \"get\" : kind === \"setter\" ? \"set\" : \"value\";\n    var target = !descriptorIn && ctor ? contextIn[\"static\"] ? ctor : ctor.prototype : null;\n    var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});\n    var _, done = false;\n    for (var i = decorators.length - 1; i >= 0; i--) {\n        var context = {};\n        for (var p in contextIn) context[p] = p === \"access\" ? {} : contextIn[p];\n        for (var p in contextIn.access) context.access[p] = contextIn.access[p];\n        context.addInitializer = function (f) { if (done) throw new TypeError(\"Cannot add initializers after decoration has completed\"); extraInitializers.push(accept(f || null)); };\n        var result = (0, decorators[i])(kind === \"accessor\" ? { get: descriptor.get, set: descriptor.set } : descriptor[key], context);\n        if (kind === \"accessor\") {\n            if (result === void 0) continue;\n            if (result === null || typeof result !== \"object\") throw new TypeError(\"Object expected\");\n            if (_ = accept(result.get)) descriptor.get = _;\n            if (_ = accept(result.set)) descriptor.set = _;\n            if (_ = accept(result.init)) initializers.unshift(_);\n        }\n        else if (_ = accept(result)) {\n            if (kind === \"field\") initializers.unshift(_);\n            else descriptor[key] = _;\n        }\n    }\n    if (target) Object.defineProperty(target, contextIn.name, descriptor);\n    done = true;\n  };\n\n  function __runInitializers(thisArg, initializers, value) {\n    var useValue = arguments.length > 2;\n    for (var i = 0; i < initializers.length; i++) {\n        value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);\n    }\n    return useValue ? value : void 0;\n  };\n\n  function __propKey(x) {\n    return typeof x === \"symbol\" ? x : \"\".concat(x);\n  };\n\n  function __setFunctionName(f, name, prefix) {\n    if (typeof name === \"symbol\") name = name.description ? \"[\".concat(name.description, \"]\") : \"\";\n    return Object.defineProperty(f, \"name\", { configurable: true, value: prefix ? \"\".concat(prefix, \" \", name) : name });\n  };\n\n  function __metadata(metadataKey, metadataValue) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\n  }\n\n  function __awaiter(thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n  }\n\n  function __generator(thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g = Object.create((typeof Iterator === \"function\" ? Iterator : Object).prototype);\n    return g.next = verb(0), g[\"throw\"] = verb(1), g[\"return\"] = verb(2), typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (g && (g = 0, op[0] && (_ = 0)), _) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n  }\n\n  var __createBinding = Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n        desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n  }) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n  });\n\n  function __exportStar(m, o) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\n  }\n\n  function __values(o) {\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\n    if (m) return m.call(o);\n    if (o && typeof o.length === \"number\") return {\n        next: function () {\n            if (o && i >= o.length) o = void 0;\n            return { value: o && o[i++], done: !o };\n        }\n    };\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n  }\n\n  function __read(o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n  }\n\n  /** @deprecated */\n  function __spread() {\n    for (var ar = [], i = 0; i < arguments.length; i++)\n        ar = ar.concat(__read(arguments[i]));\n    return ar;\n  }\n\n  /** @deprecated */\n  function __spreadArrays() {\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\n            r[k] = a[j];\n    return r;\n  }\n\n  function __spreadArray(to, from, pack) {\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n        if (ar || !(i in from)) {\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n            ar[i] = from[i];\n        }\n    }\n    return to.concat(ar || Array.prototype.slice.call(from));\n  }\n\n  function __await(v) {\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\n  }\n\n  function __asyncGenerator(thisArg, _arguments, generator) {\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\n    return i = Object.create((typeof AsyncIterator === \"function\" ? AsyncIterator : Object).prototype), verb(\"next\"), verb(\"throw\"), verb(\"return\", awaitReturn), i[Symbol.asyncIterator] = function () { return this; }, i;\n    function awaitReturn(f) { return function (v) { return Promise.resolve(v).then(f, reject); }; }\n    function verb(n, f) { if (g[n]) { i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; if (f) i[n] = f(i[n]); } }\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\n    function fulfill(value) { resume(\"next\", value); }\n    function reject(value) { resume(\"throw\", value); }\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\n  }\n\n  function __asyncDelegator(o) {\n    var i, p;\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: false } : f ? f(v) : v; } : f; }\n  }\n\n  function __asyncValues(o) {\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n    var m = o[Symbol.asyncIterator], i;\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\n  }\n\n  function __makeTemplateObject(cooked, raw) {\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\n    return cooked;\n  };\n\n  var __setModuleDefault = Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n  }) : function(o, v) {\n    o[\"default\"] = v;\n  };\n\n  var ownKeys = function(o) {\n    ownKeys = Object.getOwnPropertyNames || function (o) {\n      var ar = [];\n      for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;\n      return ar;\n    };\n    return ownKeys(o);\n  };\n\n  function __importStar(mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== \"default\") __createBinding(result, mod, k[i]);\n    __setModuleDefault(result, mod);\n    return result;\n  }\n\n  function __importDefault(mod) {\n    return (mod && mod.__esModule) ? mod : { default: mod };\n  }\n\n  function __classPrivateFieldGet(receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n  }\n\n  function __classPrivateFieldSet(receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n  }\n\n  function __classPrivateFieldIn(state, receiver) {\n    if (receiver === null || (typeof receiver !== \"object\" && typeof receiver !== \"function\")) throw new TypeError(\"Cannot use 'in' operator on non-object\");\n    return typeof state === \"function\" ? receiver === state : state.has(receiver);\n  }\n\n  function __addDisposableResource(env, value, async) {\n    if (value !== null && value !== void 0) {\n      if (typeof value !== \"object\" && typeof value !== \"function\") throw new TypeError(\"Object expected.\");\n      var dispose, inner;\n      if (async) {\n        if (!Symbol.asyncDispose) throw new TypeError(\"Symbol.asyncDispose is not defined.\");\n        dispose = value[Symbol.asyncDispose];\n      }\n      if (dispose === void 0) {\n        if (!Symbol.dispose) throw new TypeError(\"Symbol.dispose is not defined.\");\n        dispose = value[Symbol.dispose];\n        if (async) inner = dispose;\n      }\n      if (typeof dispose !== \"function\") throw new TypeError(\"Object not disposable.\");\n      if (inner) dispose = function() { try { inner.call(this); } catch (e) { return Promise.reject(e); } };\n      env.stack.push({ value: value, dispose: dispose, async: async });\n    }\n    else if (async) {\n      env.stack.push({ async: true });\n    }\n    return value;\n  }\n\n  var _SuppressedError = typeof SuppressedError === \"function\" ? SuppressedError : function (error, suppressed, message) {\n    var e = new Error(message);\n    return e.name = \"SuppressedError\", e.error = error, e.suppressed = suppressed, e;\n  };\n\n  function __disposeResources(env) {\n    function fail(e) {\n      env.error = env.hasError ? new _SuppressedError(e, env.error, \"An error was suppressed during disposal.\") : e;\n      env.hasError = true;\n    }\n    var r, s = 0;\n    function next() {\n      while (r = env.stack.pop()) {\n        try {\n          if (!r.async && s === 1) return s = 0, env.stack.push(r), Promise.resolve().then(next);\n          if (r.dispose) {\n            var result = r.dispose.call(r.value);\n            if (r.async) return s |= 2, Promise.resolve(result).then(next, function(e) { fail(e); return next(); });\n          }\n          else s |= 1;\n        }\n        catch (e) {\n          fail(e);\n        }\n      }\n      if (s === 1) return env.hasError ? Promise.reject(env.error) : Promise.resolve();\n      if (env.hasError) throw env.error;\n    }\n    return next();\n  }\n\n  function __rewriteRelativeImportExtension(path, preserveJsx) {\n    if (typeof path === \"string\" && /^\\.\\.?\\//.test(path)) {\n        return path.replace(/\\.(tsx)$|((?:\\.d)?)((?:\\.[^./]+?)?)\\.([cm]?)ts$/i, function (m, tsx, d, ext, cm) {\n            return tsx ? preserveJsx ? \".jsx\" : \".js\" : d && (!ext || !cm) ? m : (d + ext + \".\" + cm.toLowerCase() + \"js\");\n        });\n    }\n    return path;\n  }\n\n  var tslib_es6 = {\n    __extends,\n    __assign,\n    __rest,\n    __decorate,\n    __param,\n    __esDecorate,\n    __runInitializers,\n    __propKey,\n    __setFunctionName,\n    __metadata,\n    __awaiter,\n    __generator,\n    __createBinding,\n    __exportStar,\n    __values,\n    __read,\n    __spread,\n    __spreadArrays,\n    __spreadArray,\n    __await,\n    __asyncGenerator,\n    __asyncDelegator,\n    __asyncValues,\n    __makeTemplateObject,\n    __importStar,\n    __importDefault,\n    __classPrivateFieldGet,\n    __classPrivateFieldSet,\n    __classPrivateFieldIn,\n    __addDisposableResource,\n    __disposeResources,\n    __rewriteRelativeImportExtension,\n  };\n\n  var Mask = /** @class */ (function () {\n      function Mask() {\n          this.symbols = '';\n          this.partMap = [];\n      }\n      return Mask;\n  }());\n\n  var Constants = {\n      formatSeparator: \"_\",\n      twoDigitYearMax: 68,\n      defaultDateFormat: \"d\",\n      defaultLocaleId: \"en\"\n  };\n\n  var Key = {\n      DELETE: \"Delete\",\n      BACKSPACE: \"Backspace\",\n      TAB: \"Tab\",\n      ENTER: \"Enter\",\n      ESCAPE: \"Escape\",\n      ARROW_LEFT: \"ArrowLeft\",\n      ARROW_UP: \"ArrowUp\",\n      ARROW_RIGHT: \"ArrowRight\",\n      ARROW_DOWN: \"ArrowDown\",\n      SPACE: \" \",\n      END: \"End\",\n      HOME: \"Home\",\n      PAGE_UP: \"PageUp\",\n      PAGE_DOWN: \"PageDown\"\n  };\n\n  /**\n   * @hidden\n   */\n  var padZero = function (length) { return new Array(Math.max(length, 0)).fill('0').join(''); };\n  /**\n   * @hidden\n   */\n  var unpadZero = function (value) { return value.replace(/^0*/, ''); };\n  /**\n   * @hidden\n   */\n  var approximateStringMatching = function (_a) {\n      var oldText = _a.oldText, newText = _a.newText, formatPattern = _a.formatPattern, selectionStart = _a.selectionStart, isInCaretMode = _a.isInCaretMode, keyEvent = _a.keyEvent;\n      /*\n        Remove the right part of the cursor.\n        oldFormat = oldFormat.substring(0, caret + oldText.length - newText.length);\n      */\n      var oldIndex = selectionStart + oldText.length - newText.length;\n      var oldTextSeparator = oldText[oldIndex];\n      var oldSegmentText = oldText.substring(0, oldIndex);\n      var newSegmentText = newText.substring(0, selectionStart);\n      var diff = [];\n      /* Handle the typing of a single character over the same selection. */\n      if (oldSegmentText === newSegmentText && selectionStart > 0) {\n          diff.push([formatPattern[selectionStart - 1], newSegmentText[selectionStart - 1]]);\n          return diff;\n      }\n      if (oldSegmentText.indexOf(newSegmentText) === 0 && (isInCaretMode &&\n          (keyEvent.key === Key.DELETE || keyEvent.key === Key.BACKSPACE)) ||\n          (oldSegmentText.indexOf(newSegmentText) === 0 && !isInCaretMode &&\n              (newSegmentText.length === 0 ||\n                  formatPattern[newSegmentText.length - 1] !== formatPattern[newSegmentText.length]))) {\n          /* Handle Delete/Backspace. */\n          var deletedSymbol = '';\n          /*\n              The whole text is replaced by the same character.\n              A nasty patch is required to keep the selection in the first segment.\n          */\n          if (!isInCaretMode && newSegmentText.length === 1) {\n              diff.push([formatPattern[0], newSegmentText[0]]);\n          }\n          for (var i = newSegmentText.length; i < oldSegmentText.length; i++) {\n              if (formatPattern[i] !== deletedSymbol && formatPattern[i] !== Constants.formatSeparator) {\n                  deletedSymbol = formatPattern[i];\n                  diff.push([deletedSymbol, '']);\n              }\n          }\n          return diff;\n      }\n      /*\n          Handle the insertion of the text (the new text is longer than the previous one).\n          Handle the typing over a literal as well.\n      */\n      if ((isInCaretMode &&\n          (newSegmentText.indexOf(oldSegmentText) === 0 ||\n              formatPattern[selectionStart - 1] === Constants.formatSeparator)) ||\n          (!isInCaretMode &&\n              (newSegmentText.indexOf(oldSegmentText) === 0 ||\n                  formatPattern[selectionStart - 1] === Constants.formatSeparator))) {\n          var symbol = formatPattern[0];\n          for (var i = Math.max(0, oldSegmentText.length - 1); i < formatPattern.length; i++) {\n              if (formatPattern[i] !== Constants.formatSeparator) {\n                  symbol = formatPattern[i];\n                  break;\n              }\n          }\n          return [[symbol, newSegmentText[selectionStart - 1]]];\n      }\n      /* Handle the entering of a space or a separator for navigating to the next item. */\n      if ((newSegmentText[newSegmentText.length - 1] === ' ') ||\n          (newSegmentText[newSegmentText.length - 1] === oldTextSeparator && formatPattern[oldIndex] === '_')) {\n          return [[formatPattern[selectionStart - 1], Constants.formatSeparator]];\n      }\n      /* Handle typing over a correctly selected part. */\n      var result = [[formatPattern[selectionStart - 1], newSegmentText[selectionStart - 1]]];\n      return result;\n  };\n  /**\n   * @hidden\n   */\n  var dateSymbolMap = function (map, part) {\n      map[part.pattern[0]] = part.type;\n      return map;\n  };\n  /**\n   * @hidden\n   */\n  var isInRange = function (candidate, min, max) { return (candidate === null || !((min && min > candidate) || (max && max < candidate))); };\n\n  var isObject = function (value) { return value && typeof (value) === \"object\" && !Array.isArray(value); };\n  var isHtmlElement = function (element) { return element instanceof HTMLElement; };\n  var dateSetter = function (method) { return function (date, value) {\n      var clone = kendo_dateMath_cmn_chunk_js.c(date);\n      clone[method](value);\n      return clone;\n  }; };\n  /**\n   * @hidden\n   */\n  var isPresent = function (value) { return value !== undefined && value !== null; };\n  /**\n   * @hidden\n   */\n  var isDocumentAvailable = function () { return !!document; };\n  /**\n   * @hidden\n   */\n  var isNumber = function (value) { return isPresent(value) && typeof (value) === \"number\" && !Number.isNaN(value); };\n  /**\n   * @hidden\n   */\n  var parseToInt = function (value) { return parseInt(value, 10); };\n  /**\n   * @hidden\n   */\n  var isParseableToInt = function (value) { return isNumber(parseToInt(value)) && /^[0-9]+$/.test(value); };\n  /**\n   * @hidden\n   */\n  var clamp = function (value, min, max) { return Math.min(max, Math.max(min, value)); };\n  /**\n   * @hidden\n   */\n  // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n  // @ts-ignore\n  var extend = function () {\n      var args = [];\n      for (var _i = 0; _i < arguments.length; _i++) {\n          args[_i] = arguments[_i];\n      }\n      return Object.assign.apply(Object, args);\n  };\n  /**\n   * @hidden\n   */\n  var deepExtend = function (target) {\n      var _a, _b;\n      var sources = [];\n      for (var _i = 1; _i < arguments.length; _i++) {\n          sources[_i - 1] = arguments[_i];\n      }\n      if (!sources.length) {\n          return target;\n      }\n      var source = sources.shift();\n      if (isObject(target) && isObject(source)) {\n          for (var key in source) {\n              if (isHtmlElement(source[key])) {\n                  target[key] = source[key];\n              }\n              else if (isObject(source[key]) && !(source[key] instanceof Date)) {\n                  if (!target[key] || !isObject(target[key])) {\n                      extend(target, (_a = {}, _a[key] = {}, _a));\n                  }\n                  deepExtend(target[key], source[key]);\n              }\n              else {\n                  extend(target, (_b = {}, _b[key] = source[key], _b));\n              }\n          }\n      }\n      return deepExtend.apply(void 0, [target].concat(sources));\n  };\n  /**\n   * @hidden\n   */\n  var noop = function () { };\n  /**\n   * @hidden\n   */\n  var isFunction = function (fn) { return typeof (fn) === \"function\"; };\n  /**\n   * @hidden\n   */\n  var cropTwoDigitYear = function (date) {\n      if (!isPresent(date) || isNaN(date.getTime())) {\n          return 0;\n      }\n      return Number(date\n          .getFullYear()\n          .toString()\n          .slice(-2));\n  };\n  /**\n   * @hidden\n   */\n  var setYears = dateSetter('setFullYear');\n  /**\n   * @hidden\n   */\n  var millisecondDigitsInFormat = function (format) {\n      var result = format && format.match(/S+(\\1)/);\n      return result ? result[0].length : 0;\n  };\n  /**\n   * @hidden\n   */\n  var millisecondStepFor = function (digits) {\n      return Math.pow(10, 3 - digits);\n  };\n  /**\n   * @hidden\n   */\n  var areDatePartsEqualTo = function (date, year, month, day, hour, minutes, seconds, milliseconds) {\n      if (date &&\n          date.getFullYear() === year &&\n          date.getMonth() === month &&\n          date.getDate() === day &&\n          date.getHours() === hour &&\n          date.getMinutes() === minutes &&\n          date.getSeconds() === seconds &&\n          date.getMilliseconds() === milliseconds) {\n          return true;\n      }\n      return false;\n  };\n  /**\n   * @hidden\n   */\n  var isValidDate = function (value) { return isPresent(value) && value.getTime && isNumber(value.getTime()); };\n\n  var MONTH_INDEX_FEBRUARY = 1;\n  var DEFAULT_LEAP_YEAR = 2000;\n  var PREVIOUS_CENTURY_BASE = 1900;\n  var CURRENT_CENTURY_BASE = 2000;\n  var SHORT_PATTERN_LENGTH_REGEXP = /d|M|H|h|m|s/;\n  var MONTH_PART_WITH_WORDS_THRESHOLD = 2;\n  var MONTH_SYMBOL = \"M\";\n  // JS months start from 0 (January) instead of 1 (January)\n  var JS_MONTH_OFFSET = 1;\n  var DateObject = /** @class */ (function () {\n      function DateObject(_a) {\n          var intlService = _a.intlService, formatPlaceholder = _a.formatPlaceholder, format = _a.format, _b = _a.cycleTime, cycleTime = _b === void 0 ? false : _b, _c = _a.twoDigitYearMax, twoDigitYearMax = _c === void 0 ? Constants.twoDigitYearMax : _c, _d = _a.value, value = _d === void 0 ? null : _d, _e = _a.autoCorrectParts, autoCorrectParts = _e === void 0 ? true : _e;\n          this.year = true;\n          this.month = true;\n          this.date = true;\n          this.hours = true;\n          this.minutes = true;\n          this.seconds = true;\n          this.milliseconds = true;\n          this.dayperiod = true;\n          this.leadingZero = null;\n          this.typedMonthPart = '';\n          this.knownParts = 'adHhmMsEyS';\n          this.symbols = {\n              'E': 'E',\n              'H': 'H',\n              'M': 'M',\n              'a': 'a',\n              'd': 'd',\n              'h': 'h',\n              'm': 'm',\n              's': 's',\n              'y': 'y',\n              'S': 'S'\n          };\n          this._value = this.getDefaultDate();\n          this.cycleTime = false;\n          this._partiallyInvalidDate = {\n              startDate: null,\n              invalidDateParts: {\n                  'E': { value: null, date: null, startDateOffset: 0 },\n                  'H': { value: null, date: null, startDateOffset: 0 },\n                  'M': { value: null, date: null, startDateOffset: 0 },\n                  'a': { value: null, date: null, startDateOffset: 0 },\n                  'd': { value: null, date: null, startDateOffset: 0 },\n                  'h': { value: null, date: null, startDateOffset: 0 },\n                  'm': { value: null, date: null, startDateOffset: 0 },\n                  's': { value: null, date: null, startDateOffset: 0 },\n                  'y': { value: null, date: null, startDateOffset: 0 },\n                  'S': { value: null, date: null, startDateOffset: 0 }\n              }\n          };\n          this.setOptions({\n              intlService: intlService,\n              formatPlaceholder: formatPlaceholder,\n              format: format,\n              cycleTime: cycleTime,\n              twoDigitYearMax: twoDigitYearMax,\n              value: value,\n              autoCorrectParts: autoCorrectParts\n          });\n          if (!value) {\n              this._value = this.getDefaultDate();\n              var sampleFormat = this.dateFormatString(this.value, this.format).symbols;\n              for (var i = 0; i < sampleFormat.length; i++) {\n                  this.setExisting(sampleFormat[i], false);\n              }\n          }\n          else {\n              this._value = kendo_dateMath_cmn_chunk_js.c(value);\n          }\n      }\n      Object.defineProperty(DateObject.prototype, \"value\", {\n          get: function () {\n              return this._value;\n          },\n          set: function (value) {\n              if (value && !(value instanceof Date)) {\n                  // throw new Error(\"The 'value' should be a valid JavaScript Date instance.\");\n                  return;\n              }\n              this._value = value;\n              this.resetInvalidDate();\n          },\n          enumerable: true,\n          configurable: true\n      });\n      Object.defineProperty(DateObject.prototype, \"localeId\", {\n          get: function () {\n              var localeId = Constants.defaultLocaleId;\n              var cldrKeys = Object.keys(this.intl.cldr);\n              for (var i = 0; i < cldrKeys.length; i++) {\n                  var key = cldrKeys[i];\n                  var value = this.intl.cldr[key];\n                  if (value.name && value.calendar && value.numbers &&\n                      value.name !== Constants.defaultLocaleId) {\n                      localeId = value.name;\n                      break;\n                  }\n              }\n              return localeId;\n          },\n          enumerable: true,\n          configurable: true\n      });\n      /**\n       * @hidden\n       */\n      DateObject.prototype.setOptions = function (options) {\n          this.intl = options.intlService;\n          this.formatPlaceholder = options.formatPlaceholder || 'wide';\n          this.format = options.format;\n          this.cycleTime = options.cycleTime;\n          this.monthNames = this.allFormattedMonths(this.localeId);\n          this.dayPeriods = this.allDayPeriods(this.localeId);\n          this.twoDigitYearMax = options.twoDigitYearMax;\n          this.autoCorrectParts = options.autoCorrectParts;\n      };\n      DateObject.prototype.setValue = function (value) {\n          if (!value) {\n              this._value = this.getDefaultDate();\n              this.modifyExisting(false);\n          }\n          else if (!kendo_dateMath_cmn_chunk_js.i(value, this._value)) {\n              this._value = kendo_dateMath_cmn_chunk_js.c(value);\n              this.modifyExisting(true);\n          }\n          this.resetInvalidDate();\n      };\n      /**\n       * @hidden\n       */\n      DateObject.prototype.hasValue = function () {\n          var _this = this;\n          var pred = function (a, p) { return a || p.type !== 'literal' && p.type !== 'dayperiod' && _this.getExisting(p.pattern[0]); };\n          return this.intl.splitDateFormat(this.format, this.localeId).reduce(pred, false);\n      };\n      /**\n       * @hidden\n       */\n      DateObject.prototype.getValue = function () {\n          for (var i = 0; i < this.knownParts.length; i++) {\n              if (!this.getExisting(this.knownParts[i])) {\n                  return null;\n              }\n          }\n          return kendo_dateMath_cmn_chunk_js.c(this.value);\n      };\n      /**\n       * @hidden\n       */\n      DateObject.prototype.createDefaultDate = function () {\n          // use the leap year 2000 that has 29th February\n          // and a month that has 31 days\n          // so that the default date can accommodate maximum date values\n          // it is better to use a fixed date instead of new Date()\n          // as otherwise the\n          return kendo_dateMath_cmn_chunk_js.a(DEFAULT_LEAP_YEAR, 0, 31);\n      };\n      /**\n       * @hidden\n       */\n      DateObject.prototype.getDefaultDate = function () {\n          return kendo_dateMath_cmn_chunk_js.g(this.createDefaultDate());\n      };\n      /**\n       * @hidden\n       */\n      DateObject.prototype.getFormattedDate = function (format) {\n          return this.intl.formatDate(this.getValue(), format, this.localeId);\n      };\n      /**\n       * @hidden\n       */\n      DateObject.prototype.getTextAndFormat = function (customFormat) {\n          if (customFormat === void 0) { customFormat = \"\"; }\n          var format = customFormat || this.format;\n          var text = this.intl.formatDate(this.value, format, this.localeId);\n          var mask = this.dateFormatString(this.value, format);\n          if (!this.autoCorrectParts && this._partiallyInvalidDate.startDate) {\n              var partiallyInvalidText = \"\";\n              var formattedDate = this.intl.formatDate(this.value, format, this.localeId);\n              var formattedDates = this.getFormattedInvalidDates(format);\n              for (var i = 0; i < formattedDate.length; i++) {\n                  var symbol = mask.symbols[i];\n                  if (mask.partMap[i].type === \"literal\") {\n                      partiallyInvalidText += text[i];\n                  }\n                  else if (this.getInvalidDatePartValue(symbol)) {\n                      var partsForSegment = this.getPartsForSegment(mask, i);\n                      if (symbol === \"M\") {\n                          var datePartText = (parseToInt(this.getInvalidDatePartValue(symbol)) + JS_MONTH_OFFSET).toString();\n                          if (partsForSegment.length > MONTH_PART_WITH_WORDS_THRESHOLD) {\n                              partiallyInvalidText += formattedDates[symbol][i];\n                          }\n                          else {\n                              if (this.getInvalidDatePartValue(symbol)) {\n                                  var formattedDatePart = padZero(partsForSegment.length - datePartText.length) + datePartText;\n                                  partiallyInvalidText += formattedDatePart;\n                                  // add -1 as the first character in the segment is at index i\n                                  i += partsForSegment.length - 1;\n                              }\n                              else {\n                                  partiallyInvalidText += formattedDates[symbol][i];\n                              }\n                          }\n                      }\n                      else {\n                          if (this.getInvalidDatePartValue(symbol)) {\n                              var datePartText = this.getInvalidDatePartValue(symbol).toString();\n                              var formattedDatePart = padZero(partsForSegment.length - datePartText.length) + datePartText;\n                              partiallyInvalidText += formattedDatePart;\n                              // add -1 as the first character in the segment is at index i\n                              i += partsForSegment.length - 1;\n                          }\n                          else {\n                              partiallyInvalidText += formattedDates[symbol][i];\n                          }\n                      }\n                  }\n                  else {\n                      partiallyInvalidText += text[i];\n                  }\n              }\n              text = partiallyInvalidText;\n          }\n          var result = this.merge(text, mask);\n          return result;\n      };\n      /**\n       * @hidden\n       */\n      DateObject.prototype.getFormattedInvalidDates = function (customFormat) {\n          var _this = this;\n          if (customFormat === void 0) { customFormat = \"\"; }\n          var format = customFormat || this.format;\n          var formattedDatesForSymbol = {\n              'E': '',\n              'H': '',\n              'M': '',\n              'a': '',\n              'd': '',\n              'h': '',\n              'm': '',\n              's': '',\n              'y': '',\n              'S': ''\n          };\n          Object.keys(this._partiallyInvalidDate.invalidDateParts).forEach(function (key) {\n              var date = _this.getInvalidDatePart(key).date;\n              if (date) {\n                  var formattedInvalidDate = _this.intl.formatDate(date, format, _this.localeId);\n                  formattedDatesForSymbol[key] = formattedInvalidDate;\n              }\n          });\n          return formattedDatesForSymbol;\n      };\n      DateObject.prototype.modifyExisting = function (value) {\n          var sampleFormat = this.dateFormatString(this.value, this.format).symbols;\n          for (var i = 0; i < sampleFormat.length; i++) {\n              this.setExisting(sampleFormat[i], value);\n          }\n      };\n      /**\n       * @hidden\n       */\n      DateObject.prototype.getExisting = function (symbol) {\n          switch (symbol) {\n              case 'y': return this.year;\n              case 'M':\n              case 'L': return this.month;\n              case 'd': return this.date;\n              case 'E': return this.date && this.month && this.year;\n              case 'h':\n              case 'H': return this.hours;\n              case 't':\n              case 'a': return this.dayperiod;\n              case 'm': return this.minutes;\n              case 's': return this.seconds;\n              case \"S\": return this.milliseconds;\n              default:\n                  return true;\n          }\n      };\n      DateObject.prototype.setExisting = function (symbol, value) {\n          switch (symbol) {\n              case 'y':\n                  // allow 2/29 dates\n                  this.year = value;\n                  if (value === false) {\n                      this._value.setFullYear(DEFAULT_LEAP_YEAR);\n                  }\n                  break;\n              case 'M':\n                  // make sure you can type 31 in the day part\n                  this.month = value;\n                  if (value === false) {\n                      if (this.autoCorrectParts) {\n                          this._value.setMonth(0);\n                      }\n                  }\n                  break;\n              case 'd':\n                  this.date = value;\n                  break;\n              case 'h':\n              case 'H':\n                  this.hours = value;\n                  break;\n              case 't':\n              case 'a':\n                  this.dayperiod = value;\n                  break;\n              case 'm':\n                  this.minutes = value;\n                  break;\n              case 's':\n                  this.seconds = value;\n                  break;\n              case \"S\":\n                  this.milliseconds = value;\n                  break;\n              default:\n                  break;\n          }\n          if (this.getValue()) {\n              this.resetInvalidDate();\n          }\n      };\n      DateObject.prototype.modifyPart = function (symbol, offset) {\n          if (!isPresent(symbol) || !isPresent(offset) || offset === 0) {\n              return;\n          }\n          var newValue = kendo_dateMath_cmn_chunk_js.c(this.value);\n          var timeModified = false;\n          var invalidDateFound;\n          var isMonth = symbol === \"M\";\n          var isDay = symbol === \"d\" || symbol === \"E\";\n          var symbolExists = this.getExisting(symbol);\n          if (!this.autoCorrectParts && (isDay || isMonth)) {\n              var invalidDateParts = this._partiallyInvalidDate.invalidDateParts || {};\n              var invalidDatePartValue = this.getInvalidDatePartValue(symbol);\n              var year = invalidDateParts.y.value || newValue.getFullYear();\n              var month = invalidDateParts.M.value || newValue.getMonth();\n              var day = invalidDateParts.d.value || invalidDateParts.E.value || newValue.getDate();\n              var hour = invalidDateParts.h.value || invalidDateParts.H.value || newValue.getHours();\n              var minutes = invalidDateParts.m.value || newValue.getMinutes();\n              var seconds = invalidDateParts.s.value || newValue.getSeconds();\n              var milliseconds = invalidDateParts.S.value || newValue.getMilliseconds();\n              switch (symbol) {\n                  case 'y':\n                      year += offset;\n                      break;\n                  case 'M':\n                      month += offset;\n                      break;\n                  case 'd':\n                  case 'E':\n                      day += offset;\n                      break;\n                  // case 'h':\n                  // case 'H': hour += offset; break;\n                  // case 'm': minutes += offset; break;\n                  // case 's': seconds += offset; break;\n                  // case 'S': milliseconds += offset; break;\n                  default: break;\n              }\n              if (symbol === \"M\") {\n                  if ((month < 0 || month > 11)) {\n                      if (symbolExists) {\n                          this.setExisting(symbol, false);\n                          this.resetInvalidDateSymbol(symbol);\n                          return;\n                      }\n                  }\n                  if (!symbolExists) {\n                      if (month < 0) {\n                          month = clamp(11 + ((month % 11) + 1), 0, 11);\n                      }\n                      else {\n                          var monthValue = isPresent(invalidDatePartValue) ?\n                              month :\n                              ((offset - JS_MONTH_OFFSET) % 12);\n                          month = clamp(monthValue, 0, 11);\n                      }\n                      month = clamp(month, 0, 11);\n                  }\n                  month = clamp(month, 0, 11);\n              }\n              else if (symbol === \"d\") {\n                  if (symbolExists) {\n                      if (day <= 0 || day > 31) {\n                          this.setExisting(symbol, false);\n                          this.resetInvalidDateSymbol(symbol);\n                          return;\n                      }\n                  }\n                  else if (!symbolExists) {\n                      if (isPresent(invalidDatePartValue)) {\n                          if (day <= 0 || day > 31) {\n                              this.setExisting(symbol, false);\n                              this.resetInvalidDateSymbol(symbol);\n                              return;\n                          }\n                      }\n                      if (offset < 0) {\n                          var dayValue = isPresent(invalidDatePartValue) ? day : 1 + (31 - Math.abs(offset % 31));\n                          day = clamp(dayValue, 1, 31);\n                      }\n                      else {\n                          var dayValue = isPresent(invalidDatePartValue) ? day : offset % 31;\n                          day = clamp(dayValue, 1, 31);\n                      }\n                      day = clamp(day, 1, 31);\n                  }\n              }\n              var dateCandidate = kendo_dateMath_cmn_chunk_js.a(year, month, day, hour, minutes, seconds, milliseconds);\n              var newValueCandidate = isMonth || isDay ?\n                  this.modifyDateSymbolWithValue(newValue, symbol, isMonth ? month : day) :\n                  null;\n              var dateCandidateExists = areDatePartsEqualTo(dateCandidate, year, month, day, hour, minutes, seconds, milliseconds);\n              if (this.getValue() && areDatePartsEqualTo(dateCandidate, year, month, day, hour, minutes, seconds, milliseconds)) {\n                  newValue = kendo_dateMath_cmn_chunk_js.c(dateCandidate);\n                  this.markDatePartsAsExisting();\n              }\n              else if (isMonth && newValueCandidate) {\n                  if (newValueCandidate.getMonth() === month) {\n                      if (this.getExisting(\"d\")) {\n                          if (dateCandidateExists) {\n                              newValue = kendo_dateMath_cmn_chunk_js.c(dateCandidate);\n                              this.resetInvalidDateSymbol(symbol);\n                          }\n                          else {\n                              invalidDateFound = true;\n                              this.setInvalidDatePart(symbol, {\n                                  value: month,\n                                  date: kendo_dateMath_cmn_chunk_js.c(newValueCandidate),\n                                  startDateOffset: offset,\n                                  startDate: kendo_dateMath_cmn_chunk_js.c(this.value)\n                              });\n                              this.setExisting(symbol, false);\n                          }\n                      }\n                      else if (dateCandidateExists) {\n                          this.resetInvalidDateSymbol(symbol);\n                          newValue = kendo_dateMath_cmn_chunk_js.c(dateCandidate);\n                          if (this.getExisting(\"M\") && this.getExisting(\"y\")) {\n                              // changing from 28/Feb to 29/Feb to 29/March\n                              this.setExisting(\"d\", true);\n                              this.resetInvalidDateSymbol(\"d\");\n                          }\n                      }\n                      else {\n                          this.resetInvalidDateSymbol(symbol);\n                          newValue = kendo_dateMath_cmn_chunk_js.c(newValueCandidate);\n                      }\n                  }\n                  else {\n                      invalidDateFound = true;\n                      this.setInvalidDatePart(symbol, {\n                          value: month,\n                          date: kendo_dateMath_cmn_chunk_js.c(newValueCandidate),\n                          startDateOffset: offset,\n                          startDate: kendo_dateMath_cmn_chunk_js.c(this.value)\n                      });\n                      this.setExisting(symbol, false);\n                  }\n              }\n              else if (isDay && newValueCandidate) {\n                  if (newValueCandidate.getDate() === day) {\n                      if (this.getExisting(\"M\")) {\n                          if (dateCandidateExists) {\n                              newValue = kendo_dateMath_cmn_chunk_js.c(dateCandidate);\n                              this.resetInvalidDateSymbol(symbol);\n                          }\n                          else {\n                              invalidDateFound = true;\n                              this.setInvalidDatePart(symbol, {\n                                  value: day,\n                                  date: kendo_dateMath_cmn_chunk_js.c(newValueCandidate),\n                                  startDateOffset: offset,\n                                  startDate: kendo_dateMath_cmn_chunk_js.c(this.value)\n                              });\n                              this.setExisting(symbol, false);\n                          }\n                      }\n                      else if (dateCandidateExists) {\n                          newValue = kendo_dateMath_cmn_chunk_js.c(dateCandidate);\n                          this.resetInvalidDateSymbol(symbol);\n                          if (this.getExisting(\"d\") && this.getExisting(\"y\")) {\n                              // changing from 31/Jan to 31/Feb to 28/Feb\n                              this.setExisting(\"M\", true);\n                              this.resetInvalidDateSymbol(\"M\");\n                          }\n                      }\n                      else {\n                          this.resetInvalidDateSymbol(symbol);\n                          newValue = kendo_dateMath_cmn_chunk_js.c(newValueCandidate);\n                      }\n                  }\n                  else {\n                      invalidDateFound = true;\n                      this.setInvalidDatePart(symbol, {\n                          value: day,\n                          date: kendo_dateMath_cmn_chunk_js.c(this.value),\n                          startDateOffset: offset,\n                          startDate: kendo_dateMath_cmn_chunk_js.c(this.value)\n                      });\n                      this.setExisting(symbol, false);\n                  }\n              }\n          }\n          else {\n              switch (symbol) {\n                  case 'y':\n                      newValue.setFullYear(newValue.getFullYear() + offset);\n                      break;\n                  case 'M':\n                      newValue = kendo_dateMath_cmn_chunk_js.b(this.value, offset);\n                      break;\n                  case 'd':\n                  case 'E':\n                      newValue.setDate(newValue.getDate() + offset);\n                      break;\n                  case 'h':\n                  case 'H':\n                      newValue.setHours(newValue.getHours() + offset);\n                      timeModified = true;\n                      break;\n                  case 'm':\n                      newValue.setMinutes(newValue.getMinutes() + offset);\n                      timeModified = true;\n                      break;\n                  case 's':\n                      newValue.setSeconds(newValue.getSeconds() + offset);\n                      timeModified = true;\n                      break;\n                  case \"S\":\n                      newValue.setMilliseconds(newValue.getMilliseconds() + offset);\n                      break;\n                  case 'a':\n                      newValue.setHours(newValue.getHours() + (12 * offset));\n                      timeModified = true;\n                      break;\n                  default: break;\n              }\n          }\n          if (this.shouldNormalizeCentury()) {\n              newValue = this.normalizeCentury(newValue);\n          }\n          if (timeModified && !this.cycleTime && newValue.getDate() !== this._value.getDate()) {\n              // todo: blazor has this fix, but this fails a unit test\n              // newValue.setDate(this._value.getDate());\n              // newValue.setMonth(this._value.getMonth());\n              // newValue.setFullYear(this._value.getFullYear());\n          }\n          if (!invalidDateFound) {\n              this.setExisting(symbol, true);\n              this._value = newValue;\n              if (this.getValue()) {\n                  this.resetInvalidDate();\n              }\n          }\n      };\n      /**\n       * @hidden\n       */\n      DateObject.prototype.parsePart = function (_a) {\n          var symbol = _a.symbol, currentChar = _a.currentChar, resetSegmentValue = _a.resetSegmentValue, cycleSegmentValue = _a.cycleSegmentValue, rawInputValue = _a.rawTextValue, isDeleting = _a.isDeleting, originalFormat = _a.originalFormat;\n          var isInCaretMode = !cycleSegmentValue;\n          var dateParts = this.dateFormatString(this.value, this.format);\n          var datePartsLiterals = dateParts.partMap\n              .filter(function (x) { return x.type === \"literal\"; })\n              .map(function (x, index) {\n              return {\n                  datePartIndex: index,\n                  type: x.type,\n                  pattern: x.pattern,\n                  literal: \"\"\n              };\n          });\n          var flatDateParts = dateParts.partMap\n              .map(function (x) {\n              return {\n                  type: x.type,\n                  pattern: x.pattern,\n                  text: \"\"\n              };\n          });\n          for (var i = 0; i < datePartsLiterals.length; i++) {\n              var datePart = datePartsLiterals[i];\n              for (var j = 0; j < datePart.pattern.length; j++) {\n                  if (datePartsLiterals[i + j]) {\n                      datePartsLiterals[i + j].literal = datePart.pattern[j];\n                  }\n              }\n              i += datePart.pattern.length - 1;\n          }\n          for (var i = 0; i < flatDateParts.length; i++) {\n              var datePart = flatDateParts[i];\n              for (var j = 0; j < datePart.pattern.length; j++) {\n                  if (flatDateParts[i + j]) {\n                      flatDateParts[i + j].text = datePart.pattern[j];\n                  }\n              }\n              i += datePart.pattern.length - 1;\n          }\n          var shouldResetPart = isInCaretMode && symbol === \"M\" && dateParts.partMap\n              .filter(function (x) { return x.type === \"month\"; })\n              .some(function (x) { return x.pattern.length > MONTH_PART_WITH_WORDS_THRESHOLD; });\n          var parseResult = {\n              value: null,\n              switchToNext: false,\n              resetPart: shouldResetPart,\n              hasInvalidDatePart: false\n          };\n          if (!currentChar) {\n              if (isInCaretMode) {\n                  for (var i = 0; i < datePartsLiterals.length; i++) {\n                      var literal = datePartsLiterals[i].literal;\n                      var rawValueStartsWithLiteral = rawInputValue.startsWith(literal);\n                      var rawValueEndsWithLiteral = rawInputValue.endsWith(literal);\n                      var rawValueHasConsecutiveLiterals = rawInputValue.indexOf(literal + literal) >= 0;\n                      if (rawValueStartsWithLiteral || rawValueEndsWithLiteral || rawValueHasConsecutiveLiterals) {\n                          this.resetLeadingZero();\n                          this.setExisting(symbol, false);\n                          this.resetInvalidDateSymbol(symbol);\n                          return extend(parseResult, { value: null, switchToNext: false });\n                      }\n                  }\n              }\n              else {\n                  this.resetLeadingZero();\n                  this.setExisting(symbol, false);\n                  this.resetInvalidDateSymbol(symbol);\n                  return extend(parseResult, { value: null, switchToNext: false });\n              }\n          }\n          var baseDate = this.intl.formatDate(this.value, this.format, this.localeId);\n          var baseFormat = dateParts.symbols;\n          var replaced = false;\n          var prefix = '';\n          var current = '';\n          var datePartText = '';\n          var basePrefix = '';\n          var baseSuffix = '';\n          var suffix = '';\n          var convertedBaseFormat = \"\";\n          for (var i = 0; i < flatDateParts.length; i++) {\n              convertedBaseFormat += flatDateParts[i].text;\n          }\n          var hasFixedFormat = (this.format === baseFormat) ||\n              (this.format === convertedBaseFormat) ||\n              (this.format === originalFormat) ||\n              (this.format.length === originalFormat.length);\n          var datePartStartIndex = (hasFixedFormat ? convertedBaseFormat : originalFormat).indexOf(symbol);\n          var datePartEndIndex = (hasFixedFormat ? convertedBaseFormat : originalFormat).lastIndexOf(symbol);\n          var segmentLength = datePartEndIndex - datePartStartIndex + 1;\n          var formatToTextLengthDiff = originalFormat.length - rawInputValue.length;\n          if (isInCaretMode || (!isInCaretMode && !this.autoCorrectParts)) {\n              for (var i = 0; i < baseDate.length; i++) {\n                  if (baseFormat[i] === symbol) {\n                      var existing = this.getExisting(symbol);\n                      current += existing ? baseDate[i] : '0';\n                      if (formatToTextLengthDiff > 0) {\n                          if (datePartText.length + formatToTextLengthDiff < segmentLength) {\n                              datePartText += rawInputValue[i] || \"\";\n                          }\n                      }\n                      else {\n                          datePartText += rawInputValue[i] || \"\";\n                      }\n                      replaced = true;\n                  }\n                  else if (!replaced) {\n                      prefix += baseDate[i];\n                      basePrefix += baseDate[i];\n                  }\n                  else {\n                      suffix += baseDate[i];\n                      baseSuffix += baseDate[i];\n                  }\n              }\n              if (hasFixedFormat) {\n                  if (convertedBaseFormat.length < rawInputValue.length) {\n                      datePartText += currentChar;\n                  }\n                  else if (!isDeleting && originalFormat.length > rawInputValue.length) {\n                      // let the parsing to determine if the incomplete value is valid\n                  }\n                  if (datePartText.length > segmentLength) {\n                      return extend(parseResult, { value: null, switchToNext: false });\n                  }\n              }\n              if (!hasFixedFormat || (hasFixedFormat && !this.autoCorrectParts)) {\n                  current = \"\";\n                  datePartText = \"\";\n                  prefix = \"\";\n                  suffix = \"\";\n                  replaced = false;\n                  for (var i = 0; i < originalFormat.length; i++) {\n                      if (originalFormat[i] === symbol) {\n                          var existing = this.getExisting(symbol);\n                          current += existing ? baseDate[i] || \"\" : '0';\n                          if (formatToTextLengthDiff > 0) {\n                              if (datePartText.length + formatToTextLengthDiff < segmentLength) {\n                                  datePartText += rawInputValue[i] || \"\";\n                              }\n                          }\n                          else {\n                              datePartText += rawInputValue[i] || \"\";\n                          }\n                          replaced = true;\n                      }\n                      else if (!replaced) {\n                          prefix += rawInputValue[i] || \"\";\n                      }\n                      else {\n                          suffix += rawInputValue[i - formatToTextLengthDiff] || \"\";\n                      }\n                  }\n                  if (originalFormat.length < rawInputValue.length) {\n                      datePartText += currentChar;\n                  }\n              }\n          }\n          if (!isInCaretMode) {\n              if (this.autoCorrectParts) {\n                  current = \"\";\n                  datePartText = \"\";\n                  prefix = \"\";\n                  suffix = \"\";\n                  replaced = false;\n                  for (var i = 0; i < baseDate.length; i++) {\n                      if (baseFormat[i] === symbol) {\n                          var existing = this.getExisting(symbol);\n                          current += existing ? baseDate[i] : '0';\n                          replaced = true;\n                      }\n                      else if (!replaced) {\n                          prefix += baseDate[i];\n                      }\n                      else {\n                          suffix += baseDate[i];\n                      }\n                  }\n              }\n              else {\n                  current = resetSegmentValue ? datePartText : current;\n              }\n          }\n          var parsedDate = null;\n          var month = this.matchMonth(currentChar);\n          var dayPeriod = this.matchDayPeriod(currentChar, symbol);\n          var isZeroCurrentChar = currentChar === '0';\n          var leadingZero = this.leadingZero || {};\n          if (isZeroCurrentChar) {\n              if (datePartText === \"0\") {\n                  datePartText = current;\n              }\n              var valueNumber = parseToInt(resetSegmentValue ?\n                  currentChar :\n                  (isInCaretMode ? datePartText : current) + currentChar);\n              if (valueNumber === 0 && !this.isAbbrMonth(dateParts.partMap, symbol)) {\n                  this.incrementLeadingZero(symbol);\n              }\n          }\n          else {\n              this.resetLeadingZero();\n          }\n          var partPattern = this.partPattern(dateParts.partMap, symbol);\n          var patternValue = partPattern ? partPattern.pattern : null;\n          var patternLength = this.patternLength(patternValue) || patternValue.length;\n          if (isInCaretMode) {\n              if (isDeleting && !datePartText) {\n                  this.setExisting(symbol, false);\n                  return extend(parseResult, { value: null, switchToNext: false });\n              }\n          }\n          var currentMaxLength = current.length - 3;\n          var tryParse = true;\n          var middle = isInCaretMode ? datePartText : current;\n          for (var i = Math.max(0, currentMaxLength); i <= current.length; i++) {\n              if (!tryParse) {\n                  break;\n              }\n              middle = resetSegmentValue ?\n                  currentChar :\n                  isInCaretMode ?\n                      datePartText :\n                      (current.substring(i) + currentChar);\n              if (isInCaretMode || !this.autoCorrectParts) {\n                  tryParse = false;\n                  middle = unpadZero(middle);\n                  // middle = padZero(segmentLength - middle.length) + middle;\n                  middle = padZero(patternLength - middle.length) + middle;\n              }\n              var middleNumber = parseInt(middle, 10);\n              var candidateDateString = prefix + middle + suffix;\n              parsedDate = this.intl.parseDate(candidateDateString, this.format, this.localeId);\n              var autoCorrectedPrefixAndSuffix = false;\n              if (isInCaretMode && !isValidDate(parsedDate)) {\n                  // if part of the date is not available, e.g. \"d\"\n                  // but an expanded format like \"F\" is used\n                  // the element value can be \"EEEE, February 1, 2022 3:04:05 AM\"\n                  // which is not parsable by intl\n                  // use the base prefix and suffix, e.g. convert the candidate date string\n                  // to \"Thursday, February 1, 2022 3:04:05 AM\"\n                  // as \"EEEE, February...\" is not parsable\n                  if (this.autoCorrectParts) {\n                      parsedDate = this.intl.parseDate(basePrefix + middle + baseSuffix, this.format, this.localeId);\n                      autoCorrectedPrefixAndSuffix = true;\n                  }\n              }\n              var isCurrentCharParsable = !isNaN(parseInt(currentChar, 10)) || (isInCaretMode && isDeleting && currentChar === \"\");\n              if (!parsedDate && !isNaN(middleNumber) && isCurrentCharParsable && this.autoCorrectParts) {\n                  if (symbol === MONTH_SYMBOL && !month) {\n                      // JS months start from 0 (January) instead of 1 (January)\n                      var monthNumber = middleNumber - JS_MONTH_OFFSET;\n                      if (monthNumber > -1 && monthNumber < 12) {\n                          parsedDate = kendo_dateMath_cmn_chunk_js.c(this.value);\n                          parsedDate.setMonth(monthNumber);\n                          if (parsedDate.getMonth() !== monthNumber) {\n                              parsedDate = kendo_dateMath_cmn_chunk_js.l(kendo_dateMath_cmn_chunk_js.b(parsedDate, -1));\n                          }\n                      }\n                  }\n                  if (symbol === 'y') {\n                      parsedDate = kendo_dateMath_cmn_chunk_js.a(parseInt(middle, 10), this.month ? this.value.getMonth() : 0, this.date ? this.value.getDate() : 1, this.hours ? this.value.getHours() : 0, this.minutes ? this.value.getMinutes() : 0, this.seconds ? this.value.getSeconds() : 0, this.milliseconds ? this.value.getMilliseconds() : 0);\n                      if (((isInCaretMode && isValidDate(parsedDate)) ||\n                          (!isInCaretMode && parsedDate)) && this.date && parsedDate.getDate() !== this.value.getDate()) {\n                          parsedDate = kendo_dateMath_cmn_chunk_js.l(kendo_dateMath_cmn_chunk_js.b(parsedDate, -1));\n                      }\n                  }\n              }\n              if ((isInCaretMode && isValidDate(parsedDate)) || (!isInCaretMode && parsedDate)) {\n                  // move to next segment if the part will overflow with next char\n                  // when start from empty date (01, then 010), padded zeros should be trimmed\n                  var peekResult = this.isPeekDateOverflowingDatePart({\n                      useBasePrefixAndSuffix: autoCorrectedPrefixAndSuffix,\n                      middle: middle,\n                      patternValue: patternValue,\n                      basePrefix: basePrefix,\n                      baseSuffix: baseSuffix,\n                      prefix: prefix,\n                      suffix: suffix,\n                      symbol: symbol,\n                      patternLength: patternLength,\n                      leadingZero: leadingZero\n                  });\n                  var switchToNext = peekResult.switchToNext;\n                  if (this.shouldNormalizeCentury()) {\n                      parsedDate = this.normalizeCentury(parsedDate);\n                  }\n                  if (symbol === 'H' && parsedDate.getHours() >= 12) {\n                      this.setExisting('a', true);\n                  }\n                  this._value = parsedDate;\n                  this.setExisting(symbol, true);\n                  this.resetInvalidDateSymbol(symbol);\n                  if (!this.autoCorrectParts) {\n                      if (symbol === \"M\") {\n                          if (this.getExisting(\"M\") && this.getExisting(\"y\")) {\n                              // changing from 28/Feb to 29/Feb to 29/March\n                              this.setExisting(\"d\", true);\n                              this.resetInvalidDateSymbol(\"d\");\n                          }\n                      }\n                      else if (symbol === \"d\") {\n                          if (this.getExisting(\"d\") && this.getExisting(\"y\")) {\n                              // changing from 31/Jan to 31/Feb to 28/Feb\n                              this.setExisting(\"M\", true);\n                              this.resetInvalidDateSymbol(\"M\");\n                          }\n                      }\n                      if (!this.hasInvalidDatePart()) {\n                          this.markDatePartsAsExisting();\n                          if (!peekResult.peekedDate && peekResult.switchToNext && !this.autoCorrectParts) {\n                              if (symbol === \"M\") {\n                                  // skip processing the month\n                              }\n                              else if (symbol === \"d\") {\n                                  if (peekResult.parsedPeekedValue === 30 &&\n                                      this.value.getMonth() === MONTH_INDEX_FEBRUARY) {\n                                      // the peekValue cannot be constructed\n                                      // as there cannot be more than 29 days in February\n                                      // still the segment should not be switched as autoCorrectParts=\"false\"\n                                      // should allow typing \"30\"\n                                      switchToNext = false;\n                                  }\n                              }\n                          }\n                      }\n                  }\n                  return extend(parseResult, { value: this.value, switchToNext: switchToNext });\n              }\n          }\n          if (month) {\n              parsedDate = this.intl.parseDate(prefix + month + suffix, this.format, this.localeId);\n              if (parsedDate) {\n                  this._value = parsedDate;\n                  this.setExisting(symbol, true);\n                  return extend(parseResult, { value: this.value, switchToNext: false });\n              }\n          }\n          if (dayPeriod) {\n              parsedDate = this.intl.parseDate(prefix + dayPeriod + suffix, this.format) ||\n                  this.intl.parseDate(basePrefix + dayPeriod + baseSuffix, this.format);\n              if (parsedDate) {\n                  this._value = parsedDate;\n                  this.setExisting(symbol, true);\n                  return extend(parseResult, { value: this.value, switchToNext: true });\n              }\n          }\n          if (isZeroCurrentChar) {\n              this.setExisting(symbol, false);\n          }\n          if (!this.autoCorrectParts) {\n              var datePartValue = void 0;\n              var textToParse = isInCaretMode ? datePartText : middle;\n              var parsedValue = parseToInt(textToParse);\n              if (isNumber(parsedValue) && isParseableToInt(textToParse)) {\n                  if ((symbol === \"d\" && (parsedValue <= 0 || parsedValue > 31)) ||\n                      (symbol === \"M\" && (parsedValue <= 0 || parsedValue > 11))) {\n                      if (isInCaretMode) {\n                          return extend(parseResult, {\n                              value: null,\n                              switchToNext: false\n                          });\n                      }\n                      else {\n                          // the value overflows the possible value range\n                          // thus reset the segment value regardless of the \"resetSegmentValue\" flag\n                          // otherwise the input is ignored and you cannot change the value,\n                          // e.g. \"03->(press 2)->02\" will not work and the user will be blocked on \"03\"\n                          textToParse = currentChar;\n                          parsedValue = parseToInt(textToParse);\n                      }\n                  }\n                  if (!isNumber(parsedValue) || !isParseableToInt(textToParse)) {\n                      return extend(parseResult, { value: null, switchToNext: false });\n                  }\n                  datePartValue = symbol === \"M\" ?\n                      parsedValue - JS_MONTH_OFFSET :\n                      parsedValue;\n                  var isMonth = symbol === \"M\";\n                  var isDay = symbol === \"d\";\n                  var newValue = kendo_dateMath_cmn_chunk_js.c(this._value);\n                  var invalidDateParts = this._partiallyInvalidDate.invalidDateParts || {};\n                  var year = invalidDateParts.y.value || newValue.getFullYear();\n                  /* tslint:disable:no-shadowed-variable */\n                  var month_1 = isMonth ? datePartValue : invalidDateParts.M.value || newValue.getMonth();\n                  /* tslint:enable:no-shadowed-variable */\n                  var day = isDay ? datePartValue : invalidDateParts.d.value || invalidDateParts.E.value || newValue.getDate();\n                  var hour = invalidDateParts.h.value || invalidDateParts.H.value || newValue.getHours();\n                  var minutes = invalidDateParts.m.value || newValue.getMinutes();\n                  var seconds = invalidDateParts.s.value || newValue.getSeconds();\n                  var milliseconds = invalidDateParts.S.value || newValue.getMilliseconds();\n                  var dateCandidate = kendo_dateMath_cmn_chunk_js.a(year, month_1, day, hour, minutes, seconds, milliseconds);\n                  var dateCandidateExists = areDatePartsEqualTo(dateCandidate, year, month_1, day, hour, minutes, seconds, milliseconds);\n                  var newValueCandidate = isMonth || isDay ?\n                      this.modifyDateSymbolWithValue(newValue, symbol, isMonth ? month_1 : day) :\n                      null;\n                  var invalidDateFound = false;\n                  if (isMonth && newValueCandidate) {\n                      if (newValueCandidate.getMonth() === month_1) {\n                          if (this.getExisting(\"d\")) {\n                              if (dateCandidateExists) {\n                                  newValue = kendo_dateMath_cmn_chunk_js.c(dateCandidate);\n                                  this.resetInvalidDateSymbol(symbol);\n                              }\n                              else {\n                                  invalidDateFound = true;\n                                  this.setInvalidDatePart(symbol, {\n                                      value: month_1,\n                                      date: kendo_dateMath_cmn_chunk_js.c(newValueCandidate),\n                                      startDate: kendo_dateMath_cmn_chunk_js.c(this.value)\n                                  });\n                                  this.setExisting(symbol, false);\n                              }\n                          }\n                          else if (dateCandidateExists) {\n                              this.resetInvalidDateSymbol(symbol);\n                              newValue = kendo_dateMath_cmn_chunk_js.c(dateCandidate);\n                              if (this.getExisting(\"M\") && this.getExisting(\"y\")) {\n                                  // changing from 28/Feb to 29/Feb to 29/March\n                                  this.setExisting(\"d\", true);\n                                  this.resetInvalidDateSymbol(\"d\");\n                              }\n                          }\n                          else {\n                              this.resetInvalidDateSymbol(symbol);\n                              newValue = kendo_dateMath_cmn_chunk_js.c(newValueCandidate);\n                          }\n                      }\n                      else {\n                          invalidDateFound = true;\n                          this.setInvalidDatePart(symbol, {\n                              value: month_1,\n                              date: kendo_dateMath_cmn_chunk_js.c(newValueCandidate),\n                              startDate: kendo_dateMath_cmn_chunk_js.c(this.value)\n                          });\n                          this.setExisting(symbol, false);\n                      }\n                  }\n                  else if (isDay && newValueCandidate) {\n                      if (newValueCandidate.getDate() === day) {\n                          if (this.getExisting(\"M\")) {\n                              if (dateCandidateExists) {\n                                  newValue = kendo_dateMath_cmn_chunk_js.c(dateCandidate);\n                                  this.resetInvalidDateSymbol(symbol);\n                              }\n                              else {\n                                  invalidDateFound = true;\n                                  this.setInvalidDatePart(symbol, {\n                                      value: day,\n                                      date: kendo_dateMath_cmn_chunk_js.c(newValueCandidate),\n                                      startDate: kendo_dateMath_cmn_chunk_js.c(this.value)\n                                  });\n                                  this.setExisting(symbol, false);\n                              }\n                          }\n                          else if (dateCandidateExists) {\n                              newValue = kendo_dateMath_cmn_chunk_js.c(dateCandidate);\n                              this.resetInvalidDateSymbol(symbol);\n                              if (this.getExisting(\"d\") && this.getExisting(\"y\")) {\n                                  // changing from 31/Jan to 31/Feb to 28/Feb\n                                  this.setExisting(\"M\", true);\n                                  this.resetInvalidDateSymbol(\"M\");\n                              }\n                          }\n                          else {\n                              this.resetInvalidDateSymbol(symbol);\n                              newValue = kendo_dateMath_cmn_chunk_js.c(newValueCandidate);\n                          }\n                      }\n                      else {\n                          invalidDateFound = true;\n                          this.setInvalidDatePart(symbol, {\n                              value: day,\n                              date: kendo_dateMath_cmn_chunk_js.c(this.value),\n                              startDate: kendo_dateMath_cmn_chunk_js.c(this.value)\n                          });\n                          this.setExisting(symbol, false);\n                      }\n                  }\n                  if (!invalidDateFound) {\n                      this.setExisting(symbol, true);\n                      if (isInCaretMode && !isValidDate(parsedDate)) {\n                          var valueCandidate = this.intl.parseDate(basePrefix + middle + baseSuffix, this.format, this.localeId);\n                          if (isValidDate(valueCandidate)) {\n                              this._value = valueCandidate;\n                          }\n                      }\n                      else {\n                          this._value = newValue;\n                      }\n                      if (this.getValue()) {\n                          this.resetInvalidDate();\n                      }\n                  }\n                  var switchToNext = false;\n                  if (symbol === \"M\") {\n                      if (parsedValue >= 2 || textToParse.length >= 2) {\n                          switchToNext = true;\n                      }\n                      else {\n                          switchToNext = false;\n                      }\n                  }\n                  else {\n                      if (hasFixedFormat) {\n                          var peekDateSwitchToNext = this.isPeekDateOverflowingDatePart({\n                              useBasePrefixAndSuffix: !this.autoCorrectParts,\n                              middle: middle,\n                              patternValue: patternValue,\n                              basePrefix: basePrefix,\n                              baseSuffix: baseSuffix,\n                              prefix: prefix,\n                              suffix: suffix,\n                              symbol: symbol,\n                              patternLength: patternLength,\n                              leadingZero: leadingZero\n                          }).switchToNext;\n                          switchToNext = peekDateSwitchToNext;\n                      }\n                      else {\n                          switchToNext = textToParse.length > segmentLength;\n                      }\n                  }\n                  return extend(parseResult, {\n                      value: null,\n                      switchToNext: switchToNext,\n                      hasInvalidDatePart: invalidDateFound\n                  });\n              }\n          }\n          return extend(parseResult, { value: null, switchToNext: false });\n      };\n      /**\n       * @hidden\n       */\n      DateObject.prototype.symbolMap = function (symbol) {\n          return this.intl.splitDateFormat(this.format, this.localeId).reduce(dateSymbolMap, {})[symbol];\n      };\n      /**\n       * @hidden\n       */\n      DateObject.prototype.resetLeadingZero = function () {\n          var hasLeadingZero = this.leadingZero !== null;\n          this.setLeadingZero(null);\n          return hasLeadingZero;\n      };\n      DateObject.prototype.setLeadingZero = function (leadingZero) {\n          this.leadingZero = leadingZero;\n      };\n      /**\n       * @hidden\n       */\n      DateObject.prototype.getLeadingZero = function () {\n          return this.leadingZero || {};\n      };\n      /**\n       * @hidden\n       */\n      DateObject.prototype.normalizeCentury = function (date) {\n          if (!isPresent(date)) {\n              return date;\n          }\n          var twoDigitYear = cropTwoDigitYear(date);\n          var centuryBase = this.getNormalizedCenturyBase(twoDigitYear);\n          var normalizedDate = setYears(date, centuryBase + twoDigitYear);\n          return normalizedDate;\n      };\n      DateObject.prototype.incrementLeadingZero = function (symbol) {\n          var leadingZero = this.leadingZero || {};\n          leadingZero[symbol] = (leadingZero[symbol] || 0) + 1;\n          this.leadingZero = leadingZero;\n      };\n      /**\n       * @hidden\n       */\n      DateObject.prototype.isAbbrMonth = function (parts, symbol) {\n          var pattern = this.partPattern(parts, symbol);\n          return pattern.type === 'month' && pattern.names;\n      };\n      /**\n       * @hidden\n       */\n      DateObject.prototype.partPattern = function (parts, symbol) {\n          return parts.filter(function (part) { return part.pattern.indexOf(symbol) !== -1; })[0];\n      };\n      /**\n       * @hidden\n       */\n      DateObject.prototype.peek = function (value, pattern) {\n          var peekValue = value.replace(/^0*/, '') + '0';\n          return padZero(pattern.length - peekValue.length) + peekValue;\n      };\n      /**\n       * @hidden\n       */\n      DateObject.prototype.matchMonth = function (typedChar) {\n          this.typedMonthPart += typedChar.toLowerCase();\n          if (this.monthNames.length === 0) {\n              return '';\n          }\n          while (this.typedMonthPart.length > 0) {\n              for (var i = 0; i < this.monthNames.length; i++) {\n                  if (this.monthNames[i].toLowerCase().indexOf(this.typedMonthPart) === 0) {\n                      return this.monthNames[i];\n                  }\n              }\n              var monthAsNum = parseInt(this.typedMonthPart, 10);\n              /* ensure they exact match */\n              if (monthAsNum >= 1 && monthAsNum <= 12 && monthAsNum.toString() === this.typedMonthPart) {\n                  return this.monthNames[monthAsNum - 1];\n              }\n              this.typedMonthPart = this.typedMonthPart.substring(1, this.typedMonthPart.length);\n          }\n          return '';\n      };\n      /**\n       * @hidden\n       */\n      DateObject.prototype.matchDayPeriod = function (typedChar, symbol) {\n          var lowerChart = typedChar.toLowerCase();\n          if (symbol === 'a' && this.dayPeriods) {\n              if (this.dayPeriods.am.toLowerCase().startsWith(lowerChart)) {\n                  return this.dayPeriods.am;\n              }\n              else if (this.dayPeriods.pm.toLowerCase().startsWith(lowerChart)) {\n                  return this.dayPeriods.pm;\n              }\n          }\n          return '';\n      };\n      /**\n       * @hidden\n       */\n      DateObject.prototype.allFormattedMonths = function (locale) {\n          if (locale === void 0) { locale = \"en\"; }\n          var dateFormatParts = this.intl.splitDateFormat(this.format, this.localeId);\n          for (var i = 0; i < dateFormatParts.length; i++) {\n              if (dateFormatParts[i].type === 'month' && dateFormatParts[i].names) {\n                  return this.intl.dateFormatNames(locale, dateFormatParts[i].names);\n              }\n          }\n          return [];\n      };\n      /**\n       * @hidden\n       */\n      DateObject.prototype.allDayPeriods = function (locale) {\n          if (locale === void 0) { locale = \"en\"; }\n          var dateFormatParts = this.intl.splitDateFormat(this.format);\n          for (var i = 0; i < dateFormatParts.length; i++) {\n              if (dateFormatParts[i].type === \"dayperiod\" && dateFormatParts[i].names) {\n                  return this.intl.dateFormatNames(locale, dateFormatParts[i].names);\n              }\n          }\n          return null;\n      };\n      /**\n       * @hidden\n       */\n      DateObject.prototype.patternLength = function (pattern) {\n          if (pattern[0] === 'y') {\n              return 4;\n          }\n          if (SHORT_PATTERN_LENGTH_REGEXP.test(pattern)) {\n              return 2;\n          }\n          return 0;\n      };\n      /**\n       * @hidden\n       */\n      DateObject.prototype.dateFormatString = function (date, format) {\n          var dateFormatParts = this.intl.splitDateFormat(format, this.localeId);\n          var parts = [];\n          var partMap = [];\n          for (var i = 0; i < dateFormatParts.length; i++) {\n              var partLength = this.intl.formatDate(date, { pattern: dateFormatParts[i].pattern }, this.localeId).length;\n              while (partLength > 0) {\n                  parts.push(this.symbols[dateFormatParts[i].pattern[0]] || Constants.formatSeparator);\n                  partMap.push(dateFormatParts[i]);\n                  partLength--;\n              }\n          }\n          var returnValue = new Mask();\n          returnValue.symbols = parts.join('');\n          returnValue.partMap = partMap;\n          return returnValue;\n      };\n      /**\n       * @hidden\n       */\n      DateObject.prototype.merge = function (text, mask) {\n          // Important: right to left.\n          var resultText = '';\n          var resultFormat = '';\n          var format = mask.symbols;\n          var processTextSymbolsEnded = false;\n          var ignoreFormatSymbolsCount = 0;\n          var formattedDates = this.getFormattedInvalidDates(format);\n          for (var formatSymbolIndex = format.length - 1; formatSymbolIndex >= 0; formatSymbolIndex--) {\n              var partsForSegment = this.getPartsForSegment(mask, formatSymbolIndex);\n              if (this.knownParts.indexOf(format[formatSymbolIndex]) === -1 || this.getExisting(format[formatSymbolIndex])) {\n                  if (this.autoCorrectParts) {\n                      resultText = text[formatSymbolIndex] + resultText;\n                  }\n                  else {\n                      if (text.length !== format.length) {\n                          if (processTextSymbolsEnded) {\n                              resultText = text[formatSymbolIndex] + resultText;\n                          }\n                          else if (ignoreFormatSymbolsCount > 0) {\n                              resultText = text[formatSymbolIndex] + resultText;\n                              ignoreFormatSymbolsCount--;\n                              if (ignoreFormatSymbolsCount <= 0) {\n                                  processTextSymbolsEnded = true;\n                              }\n                          }\n                          else {\n                              resultText = (text[formatSymbolIndex + text.length - format.length] || \"\") + resultText;\n                          }\n                      }\n                      else {\n                          resultText = text[formatSymbolIndex] + resultText;\n                      }\n                  }\n                  resultFormat = format[formatSymbolIndex] + resultFormat;\n              }\n              else {\n                  var symbol = format[formatSymbolIndex];\n                  var formatSymbolIndexModifier = 0;\n                  if (this.autoCorrectParts || (!this.autoCorrectParts && !this.getInvalidDatePartValue(symbol))) {\n                      while (formatSymbolIndex >= 0 && symbol === format[formatSymbolIndex]) {\n                          formatSymbolIndex--;\n                      }\n                      formatSymbolIndex++;\n                  }\n                  if (this.leadingZero && this.leadingZero[symbol]) {\n                      resultText = '0' + resultText;\n                  }\n                  else {\n                      if (!this.autoCorrectParts && this.getInvalidDatePartValue(symbol)) {\n                          var datePartText = this.getInvalidDatePartValue(symbol).toString();\n                          if (symbol === \"M\") {\n                              datePartText = (parseToInt(this.getInvalidDatePartValue(symbol)) + JS_MONTH_OFFSET).toString();\n                              if (partsForSegment.length > MONTH_PART_WITH_WORDS_THRESHOLD) {\n                                  resultText = formattedDates[symbol][formatSymbolIndex] + resultText;\n                              }\n                              else {\n                                  datePartText = (parseToInt(this.getInvalidDatePartValue(symbol)) + JS_MONTH_OFFSET).toString();\n                                  var formattedDatePart = padZero(partsForSegment.length - datePartText.length) + datePartText;\n                                  resultText = formattedDatePart + resultText;\n                                  formatSymbolIndexModifier = partsForSegment.length - 1;\n                                  ignoreFormatSymbolsCount = datePartText.length - partsForSegment.length;\n                              }\n                          }\n                          else {\n                              var formattedDatePart = padZero(partsForSegment.length - datePartText.length) + datePartText;\n                              resultText = formattedDatePart + resultText;\n                              formatSymbolIndexModifier = partsForSegment.length - 1;\n                              ignoreFormatSymbolsCount = datePartText.length - partsForSegment.length;\n                          }\n                      }\n                      else {\n                          resultText = this.dateFieldName(mask.partMap[formatSymbolIndex]) + resultText;\n                      }\n                  }\n                  while (resultFormat.length < resultText.length) {\n                      resultFormat = format[formatSymbolIndex] + resultFormat;\n                  }\n                  if (formatSymbolIndexModifier !== 0) {\n                      formatSymbolIndex = (formatSymbolIndex - formatSymbolIndexModifier) + (text.length - format.length);\n                  }\n              }\n          }\n          return { text: resultText, format: resultFormat };\n      };\n      /**\n       * @hidden\n       */\n      DateObject.prototype.dateFieldName = function (part) {\n          var formatPlaceholder = this.formatPlaceholder || 'wide';\n          if (formatPlaceholder[part.type]) {\n              return formatPlaceholder[part.type];\n          }\n          if (formatPlaceholder === 'formatPattern') {\n              return part.pattern;\n          }\n          return this.intl.dateFieldName(Object.assign(part, { nameType: formatPlaceholder }));\n      };\n      /**\n       * @hidden\n       */\n      DateObject.prototype.getNormalizedCenturyBase = function (twoDigitYear) {\n          return twoDigitYear > this.twoDigitYearMax ?\n              PREVIOUS_CENTURY_BASE :\n              CURRENT_CENTURY_BASE;\n      };\n      /**\n       * @hidden\n       */\n      DateObject.prototype.shouldNormalizeCentury = function () {\n          return this.intl.splitDateFormat(this.format).some(function (part) { return part.pattern === 'yy'; });\n      };\n      DateObject.prototype.resetInvalidDate = function () {\n          var _this = this;\n          this._partiallyInvalidDate.startDate = null;\n          Object.keys(this._partiallyInvalidDate.invalidDateParts).forEach(function (key) {\n              _this.resetInvalidDatePart(key);\n          });\n      };\n      DateObject.prototype.resetInvalidDateSymbol = function (symbol) {\n          var _this = this;\n          this.resetInvalidDatePart(symbol);\n          var shouldResetInvalidDate = true;\n          Object.keys(this._partiallyInvalidDate.invalidDateParts).forEach(function (key) {\n              if (_this._partiallyInvalidDate.invalidDateParts[key] &&\n                  isPresent(_this._partiallyInvalidDate.invalidDateParts[key].value)) {\n                  shouldResetInvalidDate = false;\n              }\n          });\n          if (shouldResetInvalidDate) {\n              this.resetInvalidDate();\n          }\n      };\n      DateObject.prototype.resetInvalidDatePart = function (symbol) {\n          if (this._partiallyInvalidDate.invalidDateParts[symbol]) {\n              this._partiallyInvalidDate.invalidDateParts[symbol] = {\n                  value: null,\n                  date: null,\n                  startDateOffset: 0\n              };\n          }\n      };\n      /**\n       * @hidden\n       */\n      DateObject.prototype.getInvalidDatePart = function (symbol) {\n          var invalidDatePart = this._partiallyInvalidDate.invalidDateParts[symbol];\n          return invalidDatePart || {};\n      };\n      /**\n       * @hidden\n       */\n      DateObject.prototype.getInvalidDatePartValue = function (symbol) {\n          var invalidDatePart = this._partiallyInvalidDate.invalidDateParts[symbol];\n          return (invalidDatePart || {}).value;\n      };\n      DateObject.prototype.setInvalidDatePart = function (symbol, _a) {\n          var _b = _a.value, value = _b === void 0 ? null : _b, _c = _a.date, date = _c === void 0 ? null : _c, _d = _a.startDateOffset, startDateOffset = _d === void 0 ? 0 : _d, _e = _a.startDate, startDate = _e === void 0 ? null : _e;\n          if (this._partiallyInvalidDate.invalidDateParts[symbol]) {\n              this._partiallyInvalidDate.invalidDateParts[symbol].value = value;\n              this._partiallyInvalidDate.invalidDateParts[symbol].date = date;\n              this._partiallyInvalidDate.invalidDateParts[symbol].startDateOffset = startDateOffset;\n              this._partiallyInvalidDate.startDate = startDate;\n          }\n      };\n      /**\n       * @hidden\n       */\n      DateObject.prototype.hasInvalidDatePart = function () {\n          var _this = this;\n          var hasInvalidDatePart = false;\n          Object.keys(this._partiallyInvalidDate.invalidDateParts).forEach(function (key) {\n              if (_this._partiallyInvalidDate.invalidDateParts[key] &&\n                  isPresent(_this._partiallyInvalidDate.invalidDateParts[key].value)) {\n                  hasInvalidDatePart = true;\n              }\n          });\n          return hasInvalidDatePart;\n      };\n      /**\n       * @hidden\n       */\n      DateObject.prototype.modifyDateSymbolWithOffset = function (date, symbol, offset) {\n          var newValue = kendo_dateMath_cmn_chunk_js.c(date);\n          var timeModified = false;\n          switch (symbol) {\n              case 'y':\n                  newValue.setFullYear(newValue.getFullYear() + offset);\n                  break;\n              case 'M':\n                  newValue = kendo_dateMath_cmn_chunk_js.b(this.value, offset);\n                  break;\n              case 'd':\n              case 'E':\n                  newValue.setDate(newValue.getDate() + offset);\n                  break;\n              case 'h':\n              case 'H':\n                  newValue.setHours(newValue.getHours() + offset);\n                  timeModified = true;\n                  break;\n              case 'm':\n                  newValue.setMinutes(newValue.getMinutes() + offset);\n                  timeModified = true;\n                  break;\n              case 's':\n                  newValue.setSeconds(newValue.getSeconds() + offset);\n                  timeModified = true;\n                  break;\n              case \"S\":\n                  newValue.setMilliseconds(newValue.getMilliseconds() + offset);\n                  break;\n              case 'a':\n                  newValue.setHours(newValue.getHours() + (12 * offset));\n                  timeModified = true;\n                  break;\n              default: break;\n          }\n          return {\n              date: newValue,\n              timeModified: timeModified\n          };\n      };\n      /**\n       * @hidden\n       */\n      DateObject.prototype.modifyDateSymbolWithValue = function (date, symbol, value) {\n          var newValue = kendo_dateMath_cmn_chunk_js.c(date);\n          switch (symbol) {\n              case 'y':\n                  newValue.setFullYear(value);\n                  break;\n              case 'M':\n                  newValue = kendo_dateMath_cmn_chunk_js.b(date, value - date.getMonth());\n                  break;\n              case 'd':\n              case 'E':\n                  newValue.setDate(value);\n                  break;\n              case 'h':\n              case 'H':\n                  newValue.setHours(value);\n                  break;\n              case 'm':\n                  newValue.setMinutes(value);\n                  break;\n              case 's':\n                  newValue.setSeconds(value);\n                  break;\n              case \"S\":\n                  newValue.setMilliseconds(value);\n                  break;\n              case 'a':\n                  newValue.setHours(value);\n                  break;\n              default: break;\n          }\n          return newValue;\n      };\n      DateObject.prototype.markDatePartsAsExisting = function () {\n          this.modifyExisting(true);\n      };\n      /**\n       * @hidden\n       */\n      DateObject.prototype.getPartsForSegment = function (mask, partIndex) {\n          var segmentPart = mask.partMap[partIndex];\n          var partsForSegment = [];\n          for (var maskPartIndex = partIndex; maskPartIndex < mask.partMap.length; maskPartIndex++) {\n              var part = mask.partMap[maskPartIndex];\n              if (segmentPart.type === part.type && segmentPart.pattern === part.pattern) {\n                  partsForSegment.push(part);\n              }\n              else {\n                  break;\n              }\n          }\n          for (var maskPartIndex = partIndex - 1; maskPartIndex >= 0; maskPartIndex--) {\n              var part = mask.partMap[maskPartIndex];\n              if (segmentPart.type === part.type && segmentPart.pattern === part.pattern) {\n                  partsForSegment.unshift(part);\n              }\n              else {\n                  break;\n              }\n          }\n          return partsForSegment;\n      };\n      /**\n       * @hidden\n       */\n      DateObject.prototype.isPeekDateOverflowingDatePart = function (_a) {\n          var useBasePrefixAndSuffix = _a.useBasePrefixAndSuffix, middle = _a.middle, patternValue = _a.patternValue, basePrefix = _a.basePrefix, baseSuffix = _a.baseSuffix, prefix = _a.prefix, suffix = _a.suffix, symbol = _a.symbol, patternLength = _a.patternLength, leadingZero = _a.leadingZero;\n          // move to next segment if the part will overflow with next char\n          // when start from empty date (01, then 010), padded zeros should be trimmed\n          var peekedValue = this.peek(middle, patternValue);\n          var peekedDateString = useBasePrefixAndSuffix ?\n              \"\" + basePrefix + peekedValue + baseSuffix :\n              \"\" + prefix + peekedValue + suffix;\n          var peekedDate = this.intl.parseDate(peekedDateString, this.format, this.localeId);\n          var leadingZeroOffset = (this.leadingZero || {})[symbol] || 0;\n          var patternSatisfied = (leadingZeroOffset + unpadZero(middle).length) >= patternLength;\n          var parsedPeekedValue = parseToInt(peekedValue);\n          if (symbol === \"M\") {\n          }\n          else if (symbol === \"d\") {\n          }\n          var switchToNext = peekedDate === null ||\n              (leadingZero[symbol] ?\n                  patternValue.length <= middle.length :\n                  patternSatisfied);\n          return {\n              peekedDate: peekedDate,\n              peekedDateString: peekedDateString,\n              peekedValue: peekedValue,\n              parsedPeekedValue: parsedPeekedValue,\n              switchToNext: switchToNext\n          };\n      };\n      return DateObject;\n  }());\n\n  var KeyCode = {\n      BACKSPACE: 8,\n      DELETE: 46,\n      TAB: 9,\n      ENTER: 13,\n      ESCAPE: 27,\n      ARROW_LEFT: 37,\n      ARROW_UP: 38,\n      ARROW_RIGHT: 39,\n      ARROW_DOWN: 40,\n      SPACE: 32,\n      END: 35,\n      HOME: 36,\n      PAGE_UP: 33,\n      PAGE_DOWN: 34\n  };\n\n  var defaultOptions = {\n      events: {}\n  };\n  var Observable = /** @class */ (function () {\n      function Observable(options) {\n          this.options = extend({}, defaultOptions, options);\n      }\n      Observable.prototype.destroy = function () {\n      };\n      /**\n       * @hidden\n       */\n      Observable.prototype.trigger = function (eventName, args) {\n          if (args === void 0) { args = {}; }\n          var eventData = {\n              defaultPrevented: false,\n              preventDefault: function () {\n                  eventData.defaultPrevented = true;\n              }\n          };\n          if (isFunction(this.options.events[eventName])) {\n              this.options.events[eventName](extend(eventData, args, {\n                  sender: this\n              }));\n              return eventData.defaultPrevented;\n          }\n          return false;\n      };\n      return Observable;\n  }());\n\n  var DateInputInteractionMode;\n  (function (DateInputInteractionMode) {\n      DateInputInteractionMode[\"None\"] = \"none\";\n      DateInputInteractionMode[\"Caret\"] = \"caret\";\n      DateInputInteractionMode[\"Selection\"] = \"selection\";\n  })(DateInputInteractionMode || (DateInputInteractionMode = {}));\n\n  var _a;\n  var DEFAULT_SEGMENT_STEP = 1;\n  var DRAG_START = \"dragStart\";\n  var DROP = \"drop\";\n  var TOUCH_START = \"touchstart\";\n  var MOUSE_DOWN = \"mousedown\";\n  var MOUSE_UP = \"mouseup\";\n  var CLICK = \"click\";\n  var INPUT = \"input\";\n  var KEY_DOWN = \"keydown\";\n  var FOCUS = \"focus\";\n  var BLUR = \"blur\";\n  var PASTE = \"paste\";\n  var MOUSE_SCROLL = \"DOMMouseScroll\";\n  var MOUSE_WHEEL = \"mousewheel\";\n  var VALUE_CHANGE = \"valueChange\";\n  var INPUT_END = \"inputEnd\";\n  var BLUR_END = \"blurEnd\";\n  var FOCUS_END = \"focusEnd\";\n  var CHANGE = \"change\";\n  var defaultDateInputOptions = {\n      format: \"d\",\n      hasPlaceholder: false,\n      placeholder: null,\n      cycleTime: true,\n      locale: null,\n      steps: {\n          millisecond: DEFAULT_SEGMENT_STEP,\n          second: DEFAULT_SEGMENT_STEP,\n          minute: DEFAULT_SEGMENT_STEP,\n          hour: DEFAULT_SEGMENT_STEP,\n          day: DEFAULT_SEGMENT_STEP,\n          month: DEFAULT_SEGMENT_STEP,\n          year: DEFAULT_SEGMENT_STEP\n      },\n      formatPlaceholder: null,\n      events: (_a = {},\n          _a[VALUE_CHANGE] = null,\n          _a[INPUT] = null,\n          _a[INPUT_END] = null,\n          _a[FOCUS] = null,\n          _a[FOCUS_END] = null,\n          _a[BLUR] = null,\n          _a[BLUR_END] = null,\n          _a[KEY_DOWN] = null,\n          _a[MOUSE_WHEEL] = null,\n          _a[CHANGE] = null,\n          _a),\n      selectNearestSegmentOnFocus: false,\n      selectPreviousSegmentOnBackspace: false,\n      enableMouseWheel: false,\n      allowCaretMode: false,\n      autoSwitchParts: true,\n      autoSwitchKeys: [],\n      twoDigitYearMax: Constants.twoDigitYearMax,\n      autoCorrectParts: true,\n      autoFill: false\n  };\n  var DateInput = /** @class */ (function (_super) {\n      __extends(DateInput, _super);\n      function DateInput(element, options) {\n          var _this = _super.call(this, options) || this;\n          _this.dateObject = null;\n          // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n          // @ts-ignore\n          _this.currentText = '';\n          _this.currentFormat = '';\n          _this.interactionMode = DateInputInteractionMode.None;\n          _this.previousElementSelection = { start: 0, end: 0 };\n          _this.init(element, options);\n          return _this;\n      }\n      Object.defineProperty(DateInput.prototype, \"value\", {\n          get: function () {\n              return this.dateObject && this.dateObject.getValue();\n          },\n          enumerable: true,\n          configurable: true\n      });\n      DateInput.prototype.init = function (element, options) {\n          var dateValue = isValidDate(this.options.value) ? kendo_dateMath_cmn_chunk_js.c(this.options.value) : new Date(options.formattedValue);\n          if (!isValidDate(dateValue)) {\n              dateValue = null;\n          }\n          this.element = element;\n          // this.element._kendoWidget = this;\n          this.options = extend({}, defaultDateInputOptions, options, { steps: __assign({}, defaultDateInputOptions.steps, options.steps) });\n          this.intl = this.options.intlService;\n          this.dateObject = this.createDateObject();\n          this.dateObject.setValue(dateValue);\n          this.setTextAndFormat();\n          this.bindEvents();\n          this.resetSegmentValue = true;\n          this.interactionMode = DateInputInteractionMode.None;\n          this.forceUpdate();\n      };\n      DateInput.prototype.destroy = function () {\n          this.unbindEvents();\n          this.dateObject = null;\n          _super.prototype.destroy.call(this);\n      };\n      DateInput.prototype.bindEvents = function () {\n          this.onElementDragStart = this.onElementDragStart.bind(this);\n          this.element.addEventListener(DRAG_START, this.onElementDragStart);\n          this.onElementDrop = this.onElementDrop.bind(this);\n          this.element.addEventListener(DROP, this.onElementDrop);\n          this.onElementClick = this.onElementClick.bind(this);\n          this.element.addEventListener(CLICK, this.onElementClick);\n          this.onElementMouseDown = this.onElementMouseDown.bind(this);\n          this.element.addEventListener(MOUSE_DOWN, this.onElementMouseDown);\n          this.element.addEventListener(TOUCH_START, this.onElementMouseDown);\n          this.onElementMouseUp = this.onElementMouseUp.bind(this);\n          this.element.addEventListener(MOUSE_UP, this.onElementMouseUp);\n          this.onElementInput = this.onElementInput.bind(this);\n          this.element.addEventListener(INPUT, this.onElementInput);\n          this.onElementKeyDown = this.onElementKeyDown.bind(this);\n          this.element.addEventListener(KEY_DOWN, this.onElementKeyDown);\n          this.onElementFocus = this.onElementFocus.bind(this);\n          this.element.addEventListener(FOCUS, this.onElementFocus);\n          this.onElementBlur = this.onElementBlur.bind(this);\n          this.element.addEventListener(BLUR, this.onElementBlur);\n          this.onElementChange = this.onElementChange.bind(this);\n          this.element.addEventListener(CHANGE, this.onElementChange);\n          this.onElementPaste = this.onElementPaste.bind(this);\n          this.element.addEventListener(PASTE, this.onElementPaste);\n          this.onElementMouseWheel = this.onElementMouseWheel.bind(this);\n          this.element.addEventListener(MOUSE_SCROLL, this.onElementMouseWheel);\n          this.element.addEventListener(MOUSE_WHEEL, this.onElementMouseWheel);\n      };\n      DateInput.prototype.unbindEvents = function () {\n          this.element.removeEventListener(DRAG_START, this.onElementDragStart);\n          this.element.removeEventListener(DROP, this.onElementDrop);\n          this.element.removeEventListener(TOUCH_START, this.onElementMouseDown);\n          this.element.removeEventListener(MOUSE_DOWN, this.onElementMouseDown);\n          this.element.removeEventListener(MOUSE_UP, this.onElementMouseUp);\n          this.element.removeEventListener(CLICK, this.onElementClick);\n          this.element.removeEventListener(INPUT, this.onElementInput);\n          this.element.removeEventListener(KEY_DOWN, this.onElementKeyDown);\n          this.element.removeEventListener(FOCUS, this.onElementFocus);\n          this.element.removeEventListener(BLUR, this.onElementBlur);\n          this.element.removeEventListener(CHANGE, this.onElementChange);\n          this.element.removeEventListener(PASTE, this.onElementPaste);\n          this.element.removeEventListener(MOUSE_SCROLL, this.onElementMouseWheel);\n          this.element.removeEventListener(MOUSE_WHEEL, this.onElementMouseWheel);\n      };\n      DateInput.prototype.setOptions = function (options, refresh) {\n          if (refresh === void 0) { refresh = false; }\n          this.options = extend({}, this.options, options, { steps: __assign({}, defaultDateInputOptions.steps, options.steps) });\n          this.setDateObjectOptions();\n          if (refresh) {\n              this.unbindEvents();\n              this.init(this.element, this.options);\n          }\n      };\n      /**\n       * @hidden\n       */\n      DateInput.prototype.setDateObjectOptions = function () {\n          if (this.dateObject) {\n              var newOptions = this.getDateObjectOptions();\n              this.dateObject.setOptions(newOptions);\n          }\n      };\n      /**\n       * @hidden\n       */\n      DateInput.prototype.resetLocale = function () {\n          this.unbindEvents();\n          this.init(this.element, this.options);\n      };\n      /**\n       * @hidden\n       */\n      DateInput.prototype.isInCaretMode = function () {\n          return this.interactionMode === DateInputInteractionMode.Caret;\n      };\n      DateInput.prototype.focus = function () {\n          this.element.focus();\n          if (this.options.selectNearestSegmentOnFocus) {\n              this.selectNearestSegment(0);\n          }\n      };\n      /**\n       * @hidden\n       */\n      DateInput.prototype.onElementDragStart = function (e) {\n          e.preventDefault();\n      };\n      /**\n       * @hidden\n       */\n      DateInput.prototype.onElementDrop = function (e) {\n          e.preventDefault();\n      };\n      /**\n       * @hidden\n       */\n      DateInput.prototype.onElementMouseDown = function () {\n          this.mouseDownStarted = true;\n          this.focusedPriorToMouseDown = this.isActive;\n      };\n      /**\n       * @hidden\n       */\n      DateInput.prototype.onElementMouseUp = function (e) {\n          this.mouseDownStarted = false;\n          e.preventDefault();\n      };\n      /**\n       * @hidden\n       */\n      DateInput.prototype.onElementClick = function (e) {\n          this.mouseDownStarted = false;\n          this.switchedPartOnPreviousKeyAction = false;\n          var selection = this.selection;\n          if (this.isInCaretMode()) {\n              // explicitly refresh the input element value\n              // caret mode can change the number of symbols in the element\n              // thus clicking on a segment can result in incorrect selection\n              this.forceUpdate();\n          }\n          if (e.detail === 3) {\n              // when 3 clicks occur, leave the native event to handle the change\n              // this results in selecting the whole element value\n          }\n          else {\n              if (this.isActive && this.options.selectNearestSegmentOnFocus) {\n                  var selectionPresent = this.element.selectionStart !== this.element.selectionEnd;\n                  var placeholderToggled = isPresent(this.options.placeholder) &&\n                      !this.dateObject.hasValue() &&\n                      !this.focusedPriorToMouseDown;\n                  // focus first segment if the user hasn't selected something during mousedown and if the placeholder was just toggled\n                  var selectFirstSegment = !selectionPresent && placeholderToggled;\n                  var index = selectFirstSegment ? 0 : this.caret()[0];\n                  this.selectNearestSegment(index);\n              }\n              else {\n                  this.setSelection(this.selectionByIndex(selection.start));\n              }\n          }\n      };\n      /**\n       * @hidden\n       */\n      DateInput.prototype.onElementInput = function (e) {\n          this.triggerInput({ event: e });\n          var oldElementValue = this.elementValue;\n          if (!this.element || !this.dateObject) {\n              return;\n          }\n          var switchedPartOnPreviousKeyAction = this.switchedPartOnPreviousKeyAction;\n          if (this.isPasteInProgress) {\n              if (this.options.allowCaretMode) {\n                  // pasting should leave the input with caret\n                  // thus allow direct input instead of selection mode\n                  this.resetSegmentValue = false;\n              }\n              this.updateOnPaste(e);\n              this.isPasteInProgress = false;\n              return;\n          }\n          var keyDownEvent = this.keyDownEvent || {};\n          var isBackspaceKey = keyDownEvent.keyCode === KeyCode.BACKSPACE || keyDownEvent.key === Key.BACKSPACE;\n          var isDeleteKey = keyDownEvent.keyCode === KeyCode.DELETE || keyDownEvent.key === Key.DELETE;\n          var originalInteractionMode = this.interactionMode;\n          if (this.options.allowCaretMode &&\n              originalInteractionMode !== DateInputInteractionMode.Caret &&\n              !isDeleteKey && !isBackspaceKey) {\n              this.resetSegmentValue = true;\n          }\n          if (this.options.allowCaretMode) {\n              this.interactionMode = DateInputInteractionMode.Caret;\n          }\n          else {\n              this.interactionMode = DateInputInteractionMode.Selection;\n          }\n          var hasCaret = this.isInCaretMode();\n          if (hasCaret && this.keyDownEvent.key === Key.SPACE) {\n              // do not allow custom \"holes\" in the date segments\n              this.restorePreviousInputEventState();\n              return;\n          }\n          var oldExistingDateValue = this.dateObject && this.dateObject.getValue();\n          var oldDateValue = this.dateObject ? this.dateObject.value : null;\n          var _a = this.dateObject.getTextAndFormat(), currentText = _a.text, currentFormat = _a.format;\n          this.currentFormat = currentFormat;\n          var oldText = \"\";\n          if (hasCaret) {\n              if (isBackspaceKey || isDeleteKey) {\n                  oldText = this.previousElementValue;\n              }\n              else if (originalInteractionMode === DateInputInteractionMode.Caret) {\n                  oldText = this.previousElementValue;\n              }\n              else {\n                  oldText = currentText;\n              }\n          }\n          else {\n              oldText = currentText;\n          }\n          var newText = this.elementValue;\n          var diff = approximateStringMatching({\n              oldText: oldText,\n              newText: newText,\n              formatPattern: this.currentFormat,\n              selectionStart: this.selection.start,\n              isInCaretMode: hasCaret,\n              keyEvent: this.keyDownEvent\n          });\n          if (diff && diff.length && diff[0] && diff[0][1] !== Constants.formatSeparator) {\n              this.switchedPartOnPreviousKeyAction = false;\n          }\n          if (hasCaret && (!diff || diff.length === 0)) {\n              this.restorePreviousInputEventState();\n              return;\n          }\n          else if (hasCaret && diff.length === 1) {\n              if (!diff[0] || !diff[0][0]) {\n                  this.restorePreviousInputEventState();\n                  return;\n              }\n              else if (hasCaret && diff[0] &&\n                  (diff[0][0] === Constants.formatSeparator || diff[0][1] === Constants.formatSeparator)) {\n                  this.restorePreviousInputEventState();\n                  return;\n              }\n          }\n          var navigationOnly = (diff.length === 1 && diff[0][1] === Constants.formatSeparator);\n          var parsePartsResults = [];\n          var switchPart = false;\n          var error = null;\n          if (!navigationOnly) {\n              for (var i = 0; i < diff.length; i++) {\n                  var parsePartResult = this.dateObject.parsePart({\n                      symbol: diff[i][0],\n                      currentChar: diff[i][1],\n                      resetSegmentValue: this.resetSegmentValue,\n                      cycleSegmentValue: !this.isInCaretMode(),\n                      rawTextValue: this.element.value,\n                      isDeleting: isBackspaceKey || isDeleteKey,\n                      originalFormat: this.currentFormat\n                  });\n                  parsePartsResults.push(parsePartResult);\n                  if (!parsePartResult.value) {\n                      error = { type: \"parse\" };\n                  }\n                  switchPart = parsePartResult.switchToNext;\n              }\n          }\n          if (!this.options.autoSwitchParts) {\n              switchPart = false;\n          }\n          this.resetSegmentValue = false;\n          var hasFixedFormat = this.options.format === this.currentFormat ||\n              // all not fixed formats are 1 symbol, e.g. \"d\"\n              (isPresent(this.options.format) && this.options.format.length > 1);\n          var lastParseResult = parsePartsResults[parsePartsResults.length - 1];\n          var lastParseResultHasNoValue = lastParseResult && !isPresent(lastParseResult.value);\n          var parsingFailedOnDelete = (hasCaret && (isBackspaceKey || isDeleteKey) && lastParseResultHasNoValue);\n          var resetPart = lastParseResult ? lastParseResult.resetPart : false;\n          var newExistingDateValue = this.dateObject.getValue();\n          var hasExistingDateValueChanged = !kendo_dateMath_cmn_chunk_js.i(oldExistingDateValue, newExistingDateValue);\n          var newDateValue = this.dateObject.value;\n          var symbolForSelection;\n          var currentSelection = this.selection;\n          if (hasCaret) {\n              var diffChar = diff && diff.length > 0 ? diff[0][0] : null;\n              var hasLeadingZero = this.dateObject.getLeadingZero()[diffChar];\n              if (diff.length && diff[0][0] !== Constants.formatSeparator) {\n                  if (switchPart) {\n                      this.forceUpdateWithSelection();\n                      this.switchDateSegment(1);\n                  }\n                  else if (resetPart) {\n                      symbolForSelection = this.currentFormat[currentSelection.start];\n                      if (symbolForSelection) {\n                          this.forceUpdate();\n                          this.setSelection(this.selectionBySymbol(symbolForSelection));\n                      }\n                      else {\n                          this.restorePreviousInputEventState();\n                      }\n                  }\n                  else if (parsingFailedOnDelete) {\n                      this.forceUpdate();\n                      if (diff.length && diff[0][0] !== Constants.formatSeparator) {\n                          this.setSelection(this.selectionBySymbol(diff[0][0]));\n                      }\n                  }\n                  else if (lastParseResultHasNoValue) {\n                      if (e.data === \"0\" && hasLeadingZero) {\n                          // do not reset element value on a leading zero\n                          // wait for consecutive input to determine the value\n                      }\n                      else if (isPresent(oldExistingDateValue) && !isPresent(newExistingDateValue)) {\n                          this.restorePreviousInputEventState();\n                      }\n                      else if (!isPresent(oldExistingDateValue) && isPresent(newExistingDateValue)) {\n                          this.forceUpdateWithSelection();\n                      }\n                      else if (isPresent(oldExistingDateValue) && isPresent(newExistingDateValue)) {\n                          if (hasExistingDateValueChanged) {\n                              this.forceUpdateWithSelection();\n                          }\n                          else {\n                              this.restorePreviousInputEventState();\n                          }\n                      }\n                      else if (!isPresent(oldExistingDateValue) && !isPresent(newExistingDateValue)) {\n                          this.forceUpdateWithSelection();\n                      }\n                      else if (oldDateValue !== newDateValue) {\n                          // this can happen on auto correct when no valid value is parsed\n                      }\n                      else {\n                          this.restorePreviousInputEventState();\n                      }\n                  }\n                  else if (!lastParseResultHasNoValue) {\n                      // the user types a valid but incomplete date (e.g. year \"123\" with format \"yyyy\")\n                      // let them continue typing, but refresh for not fixed formats\n                      if (!hasFixedFormat) {\n                          this.forceUpdateWithSelection();\n                      }\n                  }\n              }\n              else {\n                  if (!this.options.autoSwitchParts && diff[0][1] === Constants.formatSeparator) {\n                      // do not change the selection when a separator is pressed\n                      // this should happen only if autoSwitchKeys contains the separator explicitly\n                  }\n                  else {\n                      this.setSelection(this.selectionBySymbol(diff[0][0]));\n                  }\n              }\n          }\n          else if (!hasCaret) {\n              this.forceUpdate();\n              if (diff.length && diff[0][0] !== Constants.formatSeparator) {\n                  this.setSelection(this.selectionBySymbol(diff[0][0]));\n              }\n              if (this.options.autoSwitchParts) {\n                  if (navigationOnly) {\n                      this.resetSegmentValue = true;\n                      if (!switchedPartOnPreviousKeyAction) {\n                          this.switchDateSegment(1);\n                      }\n                      this.switchedPartOnPreviousKeyAction = true;\n                  }\n                  else if (switchPart) {\n                      this.switchDateSegment(1);\n                      this.switchedPartOnPreviousKeyAction = true;\n                  }\n              }\n              else {\n                  if (lastParseResult && lastParseResult.switchToNext) {\n                      // the value is complete and should be switched, but the \"autoSwitchParts\" option prevents this\n                      // ensure that the segment value can be reset on next input\n                      this.resetSegmentValue = true;\n                  }\n                  else if (navigationOnly) {\n                      this.resetSegmentValue = true;\n                      if (!switchedPartOnPreviousKeyAction) {\n                          this.switchDateSegment(1);\n                      }\n                      this.switchedPartOnPreviousKeyAction = true;\n                  }\n              }\n              if (isBackspaceKey && this.options.selectPreviousSegmentOnBackspace) {\n                  // kendo angular have this UX\n                  this.switchDateSegment(-1);\n              }\n          }\n          this.tryTriggerValueChange({\n              oldValue: oldExistingDateValue,\n              event: e\n          });\n          this.triggerInputEnd({ event: e, error: error, oldElementValue: oldElementValue, newElementValue: this.elementValue });\n          if (hasCaret) {\n              // a format like \"F\" can dynamically change the resolved format pattern based on the value, e.g.\n              // \"Tuesday, February 1, 2022 3:04:05 AM\" becomes\n              // \"Wednesday, February 2, 2022 3:04:05 AM\" giving a diff of 2 (\"Tuesday\".length - \"Wednesday\".length)\n              this.setTextAndFormat();\n          }\n      };\n      /**\n       * @hidden\n       */\n      DateInput.prototype.onElementFocus = function (e) {\n          if (this.triggerFocus({ event: e })) {\n              return;\n          }\n          this.isActive = true;\n          this.interactionMode = DateInputInteractionMode.None;\n          this.switchedPartOnPreviousKeyAction = false;\n          this.refreshElementValue();\n          if (!this.mouseDownStarted) {\n              this.caret(0, this.elementValue.length);\n          }\n          this.mouseDownStarted = false;\n          this.triggerFocusEnd({ event: e });\n      };\n      /**\n       * @hidden\n       */\n      DateInput.prototype.onElementBlur = function (e) {\n          this.resetSegmentValue = true;\n          this.isActive = false;\n          if (this.triggerBlur({ event: e })) {\n              return;\n          }\n          if (this.options.autoFill) {\n              this.autoFill();\n          }\n          this.interactionMode = DateInputInteractionMode.None;\n          this.switchedPartOnPreviousKeyAction = false;\n          this.refreshElementValue();\n          this.triggerBlurEnd({ event: e });\n      };\n      /**\n       * @hidden\n       */\n      DateInput.prototype.onElementChange = function (e) {\n          this.triggerChange({ event: e });\n      };\n      /**\n       * @hidden\n       */\n      DateInput.prototype.onElementKeyDown = function (e) {\n          if (this.triggerKeyDown({ event: e })) {\n              return;\n          }\n          var _a = this.selection, start = _a.start, end = _a.end;\n          var event = e;\n          this.keyDownEvent = e;\n          this.previousElementValue = this.element.value;\n          this.previousElementSelection = { start: start, end: end };\n          if (this.keyEventMatchesAutoSwitchKeys(e)) {\n              var isTabKey = e.keyCode === KeyCode.TAB;\n              if (isTabKey) {\n                  var _b = this.selection, selectionStart = _b.start, selectionEnd = _b.end;\n                  if (e.shiftKey && isTabKey) {\n                      this.switchDateSegment(-1);\n                  }\n                  else {\n                      this.switchDateSegment(1);\n                  }\n                  if (selectionStart !== this.selection.start || selectionEnd !== this.selection.end) {\n                      // when the selection changes, prevent the default Tab behavior\n                      e.preventDefault();\n                      return;\n                  }\n              }\n              else {\n                  // do not allow the \"input\" event to be triggered\n                  e.preventDefault();\n                  this.switchDateSegment(1);\n                  return;\n              }\n          }\n          var symbol = this.currentFormat[this.selection.start];\n          var step = this.getStepFromSymbol(symbol);\n          var shouldPreventDefault = false;\n          var oldElementValue = this.elementValue;\n          if (e.altKey || e.ctrlKey || e.metaKey || e.keyCode === KeyCode.TAB) {\n              return;\n          }\n          switch (e.keyCode) {\n              case KeyCode.ARROW_LEFT:\n                  this.switchDateSegment(-1);\n                  shouldPreventDefault = true;\n                  this.switchedPartOnPreviousKeyAction = false;\n                  break;\n              case KeyCode.ARROW_UP:\n                  this.modifyDateSegmentValue(step, symbol, event);\n                  if (oldElementValue !== this.elementValue) {\n                      this.triggerInputEnd({ event: e, error: null, newElementValue: this.elementValue, oldElementValue: oldElementValue });\n                  }\n                  shouldPreventDefault = true;\n                  this.switchedPartOnPreviousKeyAction = false;\n                  break;\n              case KeyCode.ARROW_RIGHT:\n                  this.switchDateSegment(1);\n                  shouldPreventDefault = true;\n                  this.switchedPartOnPreviousKeyAction = false;\n                  break;\n              case KeyCode.ARROW_DOWN:\n                  this.modifyDateSegmentValue(-step, symbol, event);\n                  if (oldElementValue !== this.elementValue) {\n                      this.triggerInputEnd({ event: e, error: null, newElementValue: this.elementValue, oldElementValue: oldElementValue });\n                  }\n                  shouldPreventDefault = true;\n                  this.switchedPartOnPreviousKeyAction = false;\n                  break;\n              case KeyCode.ENTER:\n                  // todo: handle \"change\" event\n                  break;\n              case KeyCode.HOME:\n                  this.selectNearestSegment(0);\n                  shouldPreventDefault = true;\n                  this.switchedPartOnPreviousKeyAction = false;\n                  this.resetSegmentValue = true;\n                  break;\n              case KeyCode.END:\n                  this.selectNearestSegment(this.elementValue.length);\n                  shouldPreventDefault = true;\n                  this.switchedPartOnPreviousKeyAction = false;\n                  this.resetSegmentValue = true;\n                  break;\n              default:\n                  // allow the \"input\" event to handle the change\n                  return;\n          }\n          if (shouldPreventDefault) {\n              e.preventDefault();\n          }\n      };\n      /**\n       * @hidden\n       */\n      DateInput.prototype.onElementPaste = function () {\n          this.isPasteInProgress = true;\n      };\n      /**\n       * @hidden\n       */\n      DateInput.prototype.onElementMouseWheel = function (e) {\n          var oldElementValue = this.elementValue;\n          if (!this.options.enableMouseWheel || this.triggerMouseWheel({ event: e })) {\n              return;\n          }\n          if (!this.isActive) {\n              return;\n          }\n          var event = e;\n          if (event.shiftKey) {\n              this.switchDateSegment((event.wheelDelta || -event.detail) > 0 ? -1 : 1);\n          }\n          else {\n              this.modifyDateSegmentValue((event.wheelDelta || -event.detail) > 0 ? 1 : -1);\n          }\n          event.returnValue = false;\n          if (event.preventDefault) {\n              event.preventDefault();\n          }\n          if (event.stopPropagation) {\n              event.stopPropagation();\n          }\n          if (oldElementValue !== this.elementValue) {\n              this.triggerInputEnd({ event: e, error: null, newElementValue: this.elementValue, oldElementValue: oldElementValue });\n          }\n      };\n      DateInput.prototype.updateOnPaste = function (e) {\n          var value = this.intl.parseDate(this.elementValue, this.inputFormat) || this.value;\n          if (isPresent(value) && this.dateObject.shouldNormalizeCentury()) {\n              value = this.dateObject.normalizeCentury(value);\n          }\n          var oldDateObjectValue = this.dateObject && this.dateObject.getValue();\n          this.writeValue(value);\n          this.tryTriggerValueChange({\n              oldValue: oldDateObjectValue,\n              event: e\n          });\n      };\n      Object.defineProperty(DateInput.prototype, \"elementValue\", {\n          get: function () {\n              return (this.element || {}).value || '';\n          },\n          enumerable: true,\n          configurable: true\n      });\n      Object.defineProperty(DateInput.prototype, \"inputFormat\", {\n          get: function () {\n              if (!this.options.format) {\n                  return Constants.defaultDateFormat;\n              }\n              if (typeof this.options.format === 'string') {\n                  return this.options.format;\n              }\n              else {\n                  return this.options.format.inputFormat;\n              }\n          },\n          enumerable: true,\n          configurable: true\n      });\n      Object.defineProperty(DateInput.prototype, \"displayFormat\", {\n          get: function () {\n              if (!this.options.format) {\n                  return Constants.defaultDateFormat;\n              }\n              if (typeof this.options.format === 'string') {\n                  return this.options.format;\n              }\n              else {\n                  return this.options.format.displayFormat;\n              }\n          },\n          enumerable: true,\n          configurable: true\n      });\n      Object.defineProperty(DateInput.prototype, \"selection\", {\n          get: function () {\n              var returnValue = { start: 0, end: 0 };\n              if (this.element !== null && this.element.selectionStart !== undefined) {\n                  returnValue = {\n                      start: this.element.selectionStart,\n                      end: this.element.selectionEnd\n                  };\n              }\n              return returnValue;\n          },\n          enumerable: true,\n          configurable: true\n      });\n      DateInput.prototype.setSelection = function (selection) {\n          if (this.element && document.activeElement === this.element) {\n              this.element.setSelectionRange(selection.start, selection.end);\n              if (selection.start !== selection.end) {\n                  this.interactionMode = DateInputInteractionMode.Selection;\n              }\n          }\n      };\n      /**\n       * @hidden\n       */\n      DateInput.prototype.selectionBySymbol = function (symbol) {\n          var start = -1;\n          var end = 0;\n          for (var i = 0; i < this.currentFormat.length; i++) {\n              if (this.currentFormat[i] === symbol) {\n                  end = i + 1;\n                  if (start === -1) {\n                      start = i;\n                  }\n              }\n          }\n          if (start < 0) {\n              start = 0;\n          }\n          if (!this.options.autoCorrectParts && this.currentFormat.length !== this.currentText.length) {\n              if (this.currentFormat.length < this.currentText.length) {\n                  end += this.currentText.length - this.currentFormat.length;\n              }\n              else {\n                  end = Math.max(0, end - (this.currentFormat.length - this.currentText.length));\n              }\n          }\n          return { start: start, end: end };\n      };\n      /**\n       * @hidden\n       */\n      DateInput.prototype.selectionByIndex = function (index) {\n          var selection = { start: index, end: index };\n          for (var i = index, j = index - 1; i < this.currentFormat.length || j >= 0; i++, j--) {\n              if (i < this.currentFormat.length && this.currentFormat[i] !== Constants.formatSeparator) {\n                  selection = this.selectionBySymbol(this.currentFormat[i]);\n                  break;\n              }\n              if (j >= 0 && this.currentFormat[j] !== Constants.formatSeparator) {\n                  selection = this.selectionBySymbol(this.currentFormat[j]);\n                  break;\n              }\n          }\n          return selection;\n      };\n      DateInput.prototype.switchDateSegment = function (offset) {\n          var selection = this.selection;\n          if (this.isInCaretMode()) {\n              var start = selection.start;\n              var currentSymbol = this.currentFormat[start - 1];\n              var symbol = \"\";\n              var symbolCandidate = \"\";\n              if (offset < 0) {\n                  for (var i = start + offset; i >= 0; i--) {\n                      symbolCandidate = this.currentFormat[i];\n                      if (symbolCandidate !== Constants.formatSeparator &&\n                          symbolCandidate !== currentSymbol) {\n                          start = i;\n                          symbol = symbolCandidate;\n                          break;\n                      }\n                  }\n              }\n              else {\n                  for (var i = start + offset; i < this.currentFormat.length; i++) {\n                      symbolCandidate = this.currentFormat[i];\n                      if (symbolCandidate !== Constants.formatSeparator &&\n                          symbolCandidate !== currentSymbol) {\n                          start = i;\n                          symbol = symbolCandidate;\n                          break;\n                      }\n                  }\n              }\n              if (symbol) {\n                  this.forceUpdate();\n                  this.setSelection(this.selectionBySymbol(symbol));\n                  this.interactionMode = DateInputInteractionMode.Selection;\n                  return;\n              }\n          }\n          this.interactionMode = DateInputInteractionMode.None;\n          var _a = this.selection, selectionStart = _a.start, selectionEnd = _a.end;\n          if (selectionStart < selectionEnd &&\n              this.currentFormat[selectionStart] !== this.currentFormat[selectionEnd - 1]) {\n              this.setSelection(this.selectionByIndex(offset > 0 ? selectionStart : selectionEnd - 1));\n              this.resetSegmentValue = true;\n              this.interactionMode = DateInputInteractionMode.None;\n              return;\n          }\n          var previousFormatSymbol = this.currentFormat[selectionStart];\n          var a = selectionStart + offset;\n          while (a > 0 && a < this.currentFormat.length) {\n              if (this.currentFormat[a] !== previousFormatSymbol &&\n                  this.currentFormat[a] !== Constants.formatSeparator) {\n                  break;\n              }\n              a += offset;\n          }\n          if (this.currentFormat[a] === Constants.formatSeparator) {\n              // no known symbol is found\n              return;\n          }\n          var b = a;\n          while (b >= 0 && b < this.currentFormat.length) {\n              if (this.currentFormat[b] !== this.currentFormat[a]) {\n                  break;\n              }\n              b += offset;\n          }\n          if (a > b && (b + 1 !== selectionStart || a + 1 !== selectionEnd)) {\n              this.setSelection({ start: b + 1, end: a + 1 });\n              this.resetSegmentValue = true;\n          }\n          else if (a < b && (a !== selectionStart || b !== selectionEnd)) {\n              this.setSelection({ start: a, end: b });\n              this.resetSegmentValue = true;\n          }\n          this.interactionMode = DateInputInteractionMode.None;\n      };\n      DateInput.prototype.modifyDateSegmentValue = function (offset, symbol, event) {\n          if (symbol === void 0) { symbol = \"\"; }\n          if (event === void 0) { event = {}; }\n          if (!this.dateObject || this.options.readonly) {\n              return;\n          }\n          var oldValue = this.value;\n          var step = DEFAULT_SEGMENT_STEP;\n          var caret = this.caret();\n          symbol = symbol || this.currentFormat[caret[0]];\n          if (symbol === \"S\" && (!this.options.steps.millisecond || this.options.steps.millisecond === DEFAULT_SEGMENT_STEP)) {\n              var msDigits = millisecondDigitsInFormat(this.inputFormat);\n              step = millisecondStepFor(msDigits);\n          }\n          this.dateObject.modifyPart(symbol, step * offset);\n          this.tryTriggerValueChange({\n              oldValue: oldValue,\n              event: event\n          });\n          this.forceUpdate();\n          this.setSelection(this.selectionBySymbol(symbol));\n      };\n      /**\n       * @hidden\n       */\n      DateInput.prototype.tryTriggerValueChange = function (args) {\n          if (args === void 0) { args = { oldValue: null, event: {} }; }\n          if (!kendo_dateMath_cmn_chunk_js.i(this.value, args.oldValue)) {\n              return this.triggerValueChange(args);\n          }\n      };\n      /**\n       * @hidden\n       */\n      DateInput.prototype.triggerValueChange = function (args) {\n          if (args === void 0) { args = { oldValue: null, event: {} }; }\n          return this.trigger(VALUE_CHANGE, extend(args, {\n              value: this.value\n          }));\n      };\n      /**\n       * @hidden\n       */\n      DateInput.prototype.triggerInput = function (args) {\n          if (args === void 0) { args = { event: {} }; }\n          return this.trigger(INPUT, extend(args, {\n              value: this.value\n          }));\n      };\n      /**\n       * @hidden\n       */\n      DateInput.prototype.triggerInputEnd = function (args) {\n          if (args === void 0) { args = { event: {}, error: null, oldElementValue: '', newElementValue: '' }; }\n          return this.trigger(INPUT_END, extend(args, {\n              value: this.value\n          }));\n      };\n      /**\n       * @hidden\n       */\n      DateInput.prototype.triggerFocus = function (args) {\n          if (args === void 0) { args = { event: {} }; }\n          return this.trigger(FOCUS, extend({}, args));\n      };\n      /**\n       * @hidden\n       */\n      DateInput.prototype.triggerFocusEnd = function (args) {\n          if (args === void 0) { args = { event: {} }; }\n          return this.trigger(FOCUS_END, extend({}, args));\n      };\n      /**\n       * @hidden\n       */\n      DateInput.prototype.triggerBlur = function (args) {\n          if (args === void 0) { args = { event: {} }; }\n          return this.trigger(BLUR, extend({}, args));\n      };\n      /**\n       * @hidden\n       */\n      DateInput.prototype.triggerBlurEnd = function (args) {\n          if (args === void 0) { args = { event: {} }; }\n          return this.trigger(BLUR_END, extend({}, args));\n      };\n      /**\n       * @hidden\n       */\n      DateInput.prototype.triggerChange = function (args) {\n          if (args === void 0) { args = { event: {} }; }\n          return this.trigger(CHANGE, extend(args, {\n              value: this.value\n          }));\n      };\n      /**\n       * @hidden\n       */\n      DateInput.prototype.triggerKeyDown = function (args) {\n          if (args === void 0) { args = { event: {} }; }\n          return this.trigger(KEY_DOWN, extend({}, args));\n      };\n      /**\n       * @hidden\n       */\n      DateInput.prototype.triggerMouseWheel = function (args) {\n          if (args === void 0) { args = { event: {} }; }\n          return this.trigger(MOUSE_WHEEL, extend({}, args));\n      };\n      /**\n       * @hidden\n       */\n      DateInput.prototype.forceUpdate = function () {\n          this.setTextAndFormat();\n          this.refreshElementValue();\n      };\n      /**\n       * @hidden\n       */\n      DateInput.prototype.forceUpdateWithSelection = function () {\n          var _a = this.selection, start = _a.start, end = _a.end;\n          var elementValueLength = this.elementValue.length;\n          this.forceUpdate();\n          var selectionOffset = this.elementValue.length - elementValueLength;\n          this.setSelection({\n              start: start + selectionOffset,\n              end: end + selectionOffset\n          });\n      };\n      /**\n       * @hidden\n       */\n      DateInput.prototype.setTextAndFormat = function () {\n          var _a = this.dateObject.getTextAndFormat(), currentText = _a.text, currentFormat = _a.format;\n          this.currentFormat = currentFormat;\n          this.currentText = currentText;\n      };\n      /**\n       * @hidden\n       */\n      DateInput.prototype.setElementValue = function (value) {\n          this.element.value = value;\n      };\n      /**\n       * @hidden\n       */\n      DateInput.prototype.getStepFromSymbol = function (symbol) {\n          /* eslint-disable no-fallthrough */\n          switch (symbol) {\n              case \"S\":\n                  return Number(this.options.steps.millisecond);\n              case \"s\":\n                  return Number(this.options.steps.second);\n              case \"m\":\n                  return Number(this.options.steps.minute);\n              // represents hour as value from 01 through 12\n              case \"h\":\n              // represents hour as value from 01 through 23\n              case \"H\":\n                  return Number(this.options.steps.hour);\n              case \"M\":\n                  return Number(this.options.steps.month);\n              // there is no 'D' format specifier for day\n              case \"d\":\n              // used for formats such as \"EEEE, MMMM d, yyyy\",\n              // where \"EEEE\" stands for full name of the day e.g. Monday\n              case \"E\":\n                  return Number(this.options.steps.day);\n              // there is no 'Y' format specifier for year\n              case \"y\":\n                  return Number(this.options.steps.year);\n              default:\n                  return DEFAULT_SEGMENT_STEP;\n          }\n          /* eslint-enable no-fallthrough */\n      };\n      /**\n       * @hidden\n       */\n      DateInput.prototype.restorePreviousInputEventState = function () {\n          this.restorePreviousElementValue();\n          this.restorePreviousElementSelection();\n      };\n      /**\n       * @hidden\n       */\n      DateInput.prototype.restorePreviousElementValue = function () {\n          this.setElementValue(this.previousElementValue || '');\n      };\n      /**\n       * @hidden\n       */\n      DateInput.prototype.restorePreviousElementSelection = function () {\n          var _a = this.previousElementSelection, start = _a.start, end = _a.end;\n          this.setSelection({ start: start || 0, end: end || 0 });\n      };\n      DateInput.prototype.writeValue = function (value) {\n          this.verifyValue(value);\n          this.dateObject = this.getDateObject(value);\n          this.refreshElementValue();\n      };\n      DateInput.prototype.verifyValue = function (value) {\n          if (value && !isValidDate(value)) {\n              throw new Error(\"The 'value' should be a valid JavaScript Date instance.\");\n          }\n      };\n      DateInput.prototype.refreshElementValue = function () {\n          var element = this.element;\n          var format = this.isActive ? this.inputFormat : this.displayFormat;\n          var _a = this.dateObject.getTextAndFormat(format), currentText = _a.text, currentFormat = _a.format;\n          this.currentFormat = currentFormat;\n          this.currentText = currentText;\n          var hasPlaceholder = this.options.hasPlaceholder || isPresent(this.options.placeholder);\n          var showPlaceholder = !this.isActive &&\n              hasPlaceholder &&\n              !this.dateObject.hasValue();\n          if (hasPlaceholder && isPresent(this.options.placeholder)) {\n              element.placeholder = this.options.placeholder;\n          }\n          var newElementValue = showPlaceholder ? \"\" : currentText;\n          this.previousElementValue = this.elementValue;\n          this.setElementValue(newElementValue);\n      };\n      /**\n       * @hidden\n       */\n      DateInput.prototype.caret = function (start, end) {\n          if (end === void 0) { end = start; }\n          var isPosition = start !== undefined;\n          var returnValue = [start, start];\n          var element = this.element;\n          if (isPosition && (this.options.disabled || this.options.readonly)) {\n              return undefined;\n          }\n          try {\n              if (element.selectionStart !== undefined) {\n                  if (isPosition) {\n                      if (isDocumentAvailable() && document.activeElement !== element) {\n                          element.focus();\n                      }\n                      element.setSelectionRange(start, end);\n                  }\n                  returnValue = [element.selectionStart, element.selectionEnd];\n              }\n          }\n          catch (e) {\n              returnValue = [];\n          }\n          return returnValue;\n      };\n      DateInput.prototype.selectNearestSegment = function (index) {\n          // Finds the nearest (in both directions) known part.\n          for (var i = index, j = index - 1; i < this.currentFormat.length || j >= 0; i++, j--) {\n              if (i < this.currentFormat.length && this.currentFormat[i] !== \"_\") {\n                  this.selectDateSegment(this.currentFormat[i]);\n                  return;\n              }\n              if (j >= 0 && this.currentFormat[j] !== \"_\") {\n                  this.selectDateSegment(this.currentFormat[j]);\n                  return;\n              }\n          }\n      };\n      DateInput.prototype.selectDateSegment = function (symbol) {\n          var begin = -1;\n          var end = 0;\n          for (var i = 0; i < this.currentFormat.length; i++) {\n              if (this.currentFormat[i] === symbol) {\n                  end = i + 1;\n                  if (begin === -1) {\n                      begin = i;\n                  }\n              }\n          }\n          if (begin < 0) {\n              begin = 0;\n          }\n          this.caret(0, 0);\n          this.caret(begin, end);\n      };\n      /**\n       * @hidden\n       */\n      DateInput.prototype.getDateObject = function (value) {\n          var leadingZero = ((this.dateObject || {}) || null).leadingZero;\n          this.options.value = value;\n          var dateObject = this.createDateObject();\n          dateObject.setLeadingZero(this.isActive ? leadingZero : null);\n          return dateObject;\n      };\n      /* tslint:disable:align */\n      /**\n       * @hidden\n       */\n      DateInput.prototype.createDateObject = function () {\n          var defaultOptions = this.getDateObjectOptions();\n          var dateObject = new DateObject(extend({}, defaultOptions));\n          return dateObject;\n      };\n      /**\n       * @hidden\n       */\n      DateInput.prototype.getDateObjectOptions = function () {\n          var newOptions = {\n              intlService: this.options.intlService,\n              formatPlaceholder: this.options.formatPlaceholder ? this.options.formatPlaceholder : 'formatPattern',\n              format: this.inputFormat,\n              cycleTime: this.options.cycleTime,\n              twoDigitYearMax: this.options.twoDigitYearMax,\n              autoCorrectParts: this.options.autoCorrectParts,\n              value: this.options.value\n          };\n          return newOptions;\n      };\n      /* tslint:enable:align */\n      /**\n       * @hidden\n       */\n      DateInput.prototype.keyEventMatchesAutoSwitchKeys = function (keyObject) {\n          var autoSwitchKeys = (this.options.autoSwitchKeys || [])\n              .map(function (x) { return x.toString().toLowerCase().trim(); });\n          if (autoSwitchKeys.indexOf(keyObject.keyCode.toString()) >= 0 ||\n              autoSwitchKeys.indexOf(keyObject.keyCode) >= 0 ||\n              autoSwitchKeys.indexOf(keyObject.key.toLowerCase().trim()) >= 0) {\n              return true;\n          }\n          return false;\n      };\n      /**\n       * @hidden\n       */\n      DateInput.prototype.autoFill = function () {\n          var dateObject = this.dateObject, currentDate = new Date(), day, month, year, hours, minutes, seconds;\n          if (dateObject.date || dateObject.month || dateObject.year || dateObject.hours || dateObject.minutes || dateObject.seconds) {\n              year = dateObject.year ? dateObject.value.getFullYear() : currentDate.getFullYear(),\n                  month = dateObject.month ? dateObject.value.getMonth() : currentDate.getMonth(),\n                  day = dateObject.date ? dateObject.value.getDate() : currentDate.getDate(),\n                  hours = dateObject.hours ? dateObject.value.getHours() : currentDate.getHours(),\n                  minutes = dateObject.minutes ? dateObject.value.getMinutes() : currentDate.getMinutes(),\n                  seconds = dateObject.seconds ? dateObject.value.getSeconds() : currentDate.getSeconds();\n              dateObject.setValue(new Date(year, month, day, hours, minutes, seconds));\n              this.refreshElementValue();\n              this.triggerValueChange();\n          }\n      };\n      return DateInput;\n  }(Observable));\n\n  exports.D = DateInput;\n  exports._ = __classPrivateFieldSet;\n  exports.__meta__ = __meta__;\n  exports.a = __classPrivateFieldGet;\n  exports.b = __awaiter;\n\n}));\n"]}