{"version":3,"file":"kendo.buttongroup.min.js","names":["global","factory","exports","module","require","define","amd","globalThis","self","kendo","_globals","Buttongroup","this","$","window","ui","Widget","ToggleButton","Button","keys","NS","KBUTTON","SELECTED","DISABLED","SELECT","ARIA_DISABLED","DOT","NONE","SINGLE","MULTIPLE","FOCUS","ButtonGroup","extend","init","element","options","that","fn","call","wrapper","selectedIndices","_buttons","_renderItems","items","fillMode","addClass","EMPTY","attr","_enable","enable","enabled","forEach","b","selection","select","index","_attachEvents","events","name","preventKeyNav","size","rounded","themeColor","badge","item","value","badgeEl","button","isNaN","find","getKendoToggleButton","getKendoButton","validValue","_badge","text","htmlEncode","destroy","empty","remove","current","off","each","i","el","component","toggleClass","focused","hasClass","is","removeAttr","trigger","nodeType","length","idx","toggle","_toggleIndex","_resetIndexes","_addButton","command","togglable","selected","btn","bind","_select","on","_keyDown","e","buttonGroup","focusableItems","focusedElement","currentIndex","isRtl","support","keyCode","LEFT","RIGHT","eq","preventDefault","_decorateButtons","buttons","groupOptions","children","image","disabled","attrValue","icon","push","encoded","url","html","attributes","appendTo","indices","target","indexOf","splice","plugin","jQuery","kendo$1","__meta__","id","category","description","depends","default","Object","defineProperty"],"sources":["kendo.buttongroup.js"],"mappings":"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","ignoreList":[],"sourcesContent":["(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('kendo.core.js'), require('kendo.togglebutton.js'), require('kendo.button.js')) :\n    typeof define === 'function' && define.amd ? define(['exports', 'kendo.core', 'kendo.togglebutton', 'kendo.button'], factory) :\n    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory((global.kendo = global.kendo || {}, global.kendo._globals = global.kendo._globals || {}, global.kendo._globals.Buttongroup = {})));\n})(this, (function (exports) {\n    const __meta__ = {\n        id: \"buttongroup\",\n        name: \"ButtonGroup\",\n        category: \"web\",\n        description: \"The Kendo ButtonGroup widget is a linear set of grouped buttons.\",\n        depends: [ \"core\", \"togglebutton\", \"button\" ]\n    };\n\n    (function($, undefined$1) {\n        var kendo = window.kendo;\n        var ui = kendo.ui;\n        var Widget = ui.Widget;\n        var ToggleButton = ui.ToggleButton;\n        var Button = ui.Button;\n        var keys = kendo.keys;\n        var NS = \".kendoButtonGroup\";\n        var KBUTTONGROUP = \"k-button-group k-button-group-\";\n        var KBUTTON = \"k-button\";\n        var SELECTED = \"k-selected\";\n        var DISABLED = \"k-disabled\";\n        var KFOCUS = \"k-focus\";\n        var SELECT = \"select\";\n        var KEYDOWN = \"keydown\";\n        var ARIA_DISABLED = \"aria-disabled\";\n        var EMPTY = \" \";\n        var DOT = \".\";\n        var NONE = \"none\";\n        var SINGLE = \"single\";\n        var MULTIPLE = \"multiple\";\n        var TOGGLE = \"toggle\";\n        var FOCUS = \"focus\";\n\n        var ButtonGroup = Widget.extend({\n            init: function(element, options) {\n                var that = this;\n\n                Widget.fn.init.call(that, element, options);\n\n                that.wrapper = that.element;\n\n                that.selectedIndices = [];\n\n                that._buttons = that._renderItems(that.options.items);\n                const fillMode = options && options.fillMode ? options.fillMode : 'solid';\n                that.element\n                    .addClass(EMPTY + KBUTTONGROUP + fillMode)\n                    .attr(\"role\", \"group\");\n\n                that._enable = true;\n\n                if (!that.options.enable || !that.options.enabled) {\n                    that._enable = false;\n                    that.element\n                            .attr(ARIA_DISABLED, true)\n                            .addClass(DISABLED);\n\n                    that._buttons.forEach((b) => {\n                        b.enable(false);\n                    });\n                }\n\n                if (that.options.selection !== NONE) {\n                    that.select(that.options.index);\n                }\n\n                that._attachEvents();\n            },\n\n            events: [\n                SELECT\n            ],\n\n            options: {\n                name: \"ButtonGroup\",\n                selection: SINGLE,\n                index: -1,\n                enable: true,\n                enabled: true,\n                preventKeyNav: false,\n                size: \"medium\",\n                rounded: \"medium\",\n                fillMode: \"solid\",\n                themeColor: \"base\"\n            },\n\n            badge: function(item, value) {\n                var that = this,\n                    element = that.element,\n                    button = !isNaN(item) ? that._buttons[item] : element.find(item).getKendoToggleButton() || element.find(item).getKendoButton(),\n                    validValue = value || value === 0,\n                    badge, badgeEl;\n\n                if (!button) {\n                    return;\n                }\n\n                badge = button.badge;\n\n                if (!badge && validValue) {\n                    button._badge({ text: kendo.htmlEncode(value) });\n                    return kendo.htmlEncode(value);\n                }\n\n                if (validValue) {\n                    badge.text(kendo.htmlEncode(value));\n                } else if (value === false) {\n                    button.badge = null;\n                    badgeEl = badge.element;\n                    badge.destroy();\n                    badgeEl.empty().remove();\n                    return;\n                }\n\n                return badge ? badge.text() : null;\n            },\n\n            current: function() {\n                return this.element.find(DOT + SELECTED);\n            },\n\n            destroy: function() {\n                var that = this;\n\n                that.element.off(NS);\n\n                that.element.find(DOT + KBUTTON).each(function(i, el) {\n                    var component = $(el).getKendoToggleButton() || $(el).getKendoButton();\n\n                    if (component) {\n                        component.destroy();\n                    }\n                });\n\n                Widget.fn.destroy.call(that);\n            },\n\n            enable: function(enable) {\n                if (typeof enable == \"undefined\") {\n                    enable = true;\n                }\n\n                this.element\n                        .attr(ARIA_DISABLED, !enable)\n                        .toggleClass(DISABLED, !enable);\n\n                this._buttons.forEach((b) => {\n                    var focused = b.element.hasClass(KFOCUS) || b.element.is(\":focus\");\n\n                    b.enable(enable);\n\n                    if (focused) {\n                        b.element.removeAttr(\"disabled\").addClass(\"k-focus\").trigger(\"focus\");\n                    }\n                });\n\n                this._enable = this.options.enable = enable;\n            },\n\n            select: function(el) {\n                var that = this,\n                    button,\n                    index = -1;\n\n                if (this.options.selection === NONE || el === undefined$1 || el === -1) {\n                    return;\n                }\n\n                if (typeof el === \"number\") {\n                    index = el;\n                } else if (el.nodeType) {\n                    el = $(el);\n                    index = el.index();\n                } else {\n                    index = el.index();\n                }\n\n                button = that._buttons[index];\n\n                if (!button) {\n                    return;\n                }\n\n                if (that.options.selection === MULTIPLE) {\n                    if (el.length > 1) {\n                        el.each((i, element) => {\n                            var idx = $(element).index();\n\n                            that._buttons[idx].toggle();\n                            that._toggleIndex(idx);\n                        });\n                    } else {\n                        that._buttons[index].toggle();\n                        that._toggleIndex(index);\n                    }\n                } else {\n                    that._resetIndexes(index);\n                }\n            },\n\n            _addButton: function(el, options) {\n                if (this.options.selection === NONE || (options.command && !options.togglable)) {\n                    delete options.selected;\n\n                    return new Button(el, options);\n                } else {\n                    var btn = new ToggleButton(el, options);\n\n                    btn.bind(TOGGLE, this._select.bind(this, el));\n\n                    return btn;\n                }\n            },\n\n            _attachEvents: function() {\n                if (!this.options.preventKeyNav) {\n                    this.element.on(KEYDOWN + NS, this._keyDown.bind(this));\n                }\n            },\n\n            _keyDown: function(e) {\n                var that = this,\n                    buttonGroup = $(that.element),\n                    focusableItems = buttonGroup.find(DOT + KBUTTON),\n                    focusedElement = buttonGroup.find(\":focus\"),\n                    currentIndex = focusableItems.index(focusedElement),\n                    isRtl = kendo.support.isRtl(that.element),\n                    itemToFocus;\n\n                if ((e.keyCode === keys.LEFT && !isRtl) || (e.keyCode === keys.RIGHT && isRtl)) {\n                    itemToFocus = currentIndex === 0 ? focusableItems.eq(focusableItems.length - 1) : $(focusableItems[currentIndex - 1]);\n                    itemToFocus.trigger(FOCUS);\n                    e.preventDefault();\n                } else if ((e.keyCode === keys.LEFT && isRtl) || (e.keyCode === keys.RIGHT && !isRtl)) {\n                    itemToFocus = currentIndex + 1 === focusableItems.length ? focusableItems.eq(0) : $(focusableItems[currentIndex + 1]);\n                    itemToFocus.trigger(FOCUS);\n                    e.preventDefault();\n                }\n            },\n\n            _decorateButtons: function(buttons) {\n                if (buttons.length) {\n                    $(buttons[0].element).addClass(\"k-group-start\");\n                    $(buttons[buttons.length - 1].element).addClass(\"k-group-end\");\n                }\n            },\n\n            _renderItems: function(items) {\n                var that = this,\n                    groupOptions = that.options,\n                    children = that.element.children(),\n                    buttons = [];\n\n                if (children.length > 0) {\n                    children.each(function(index) {\n                        var el = $(this),\n                            image = el.find(\"img\").addClass(\"k-image\"),\n                            disabled = el.is(\"[disabled]\") || el.hasClass(DISABLED),\n                            options = {\n                                badge: kendo.attrValue(el, \"badge\"),\n                                icon: !image[0] ? kendo.attrValue(el, \"icon\") : null,\n                                disabled: disabled,\n                                selected: !disabled ? el.is(DOT + SELECTED) : false,\n                                size: groupOptions.size,\n                                rounded: groupOptions.rounded,\n                                fillMode: groupOptions.fillMode,\n                                themeColor: groupOptions.themeColor\n                            };\n\n                        buttons.push(that._addButton(el, options));\n\n                        if (options.selected) {\n                            that.selectedIndices.push(index);\n                        }\n                    });\n                }\n\n                if (!items) {\n                    that._decorateButtons(buttons);\n                    return buttons;\n                }\n\n                items.forEach(function(item, index) {\n                    var text = item.text ? item.encoded === false ? item.text : kendo.htmlEncode(item.text) : \"\",\n                        el = item.url ? $(\"<a href=\" + item.url + \">\") : $(\"<button>\");\n\n                    el.html(text);\n\n                    if (item.attributes) {\n                        el.attr(item.attributes);\n                    }\n\n                    item = $.extend({}, item, {\n                        size: groupOptions.size,\n                        rounded: groupOptions.rounded,\n                        fillMode: groupOptions.fillMode,\n                        themeColor: groupOptions.themeColor\n                    });\n\n                    el.appendTo(that.element);\n                    buttons.push(that._addButton(el, item));\n\n                    if (item.selected) {\n                        that.selectedIndices.push(index);\n                    }\n                });\n\n                that._decorateButtons(buttons);\n\n                return buttons;\n            },\n\n            _resetIndexes: function(index) {\n                this.selectedIndices = [];\n                this._buttons.forEach((b) => {\n                    b.toggle(false);\n                });\n\n                this._buttons[index].toggle(true);\n                this.selectedIndices.push(index);\n            },\n\n            _select: function(button) {\n                var selection = this.options.selection,\n                    index = button.index();\n\n                if (!this._enable || button.is(DOT + DISABLED)) {\n                    return;\n                }\n\n                if (selection === MULTIPLE) {\n                    this._toggleIndex(index);\n                } else if (selection === SINGLE) {\n                    this._resetIndexes(index);\n                }\n\n                this.trigger(SELECT, { indices: this.selectedIndices, target: button });\n            },\n\n            _toggleIndex: function(index) {\n                if (this.selectedIndices.indexOf(index) === -1) {\n                    this.selectedIndices.push(index);\n                } else {\n                    this.selectedIndices.splice(this.selectedIndices.indexOf(index), 1);\n                }\n            }\n        });\n\n        ui.plugin(ButtonGroup);\n    })(window.kendo.jQuery);\n    var kendo$1 = kendo;\n\n    exports.__meta__ = __meta__;\n    exports.default = kendo$1;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n\n}));\n"]}