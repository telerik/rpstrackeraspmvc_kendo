{"version":3,"file":"kendo.dockmanager.min.js","names":["global","factory","exports","module","require","define","amd","globalThis","self","kendo","_globals","Dockmanager","this","$","undefined$1","window","Widget","ui","NS","extend","percentageUnitsRegex","DOCK_MANAGER_TOOLBAR","TOOLBAR_TEMPLATE","KSTATIC_PANE","KKPINNED_PANE","KKUNPINNED_PANE","KPANE_TABBED","SPLITTER","KSPLITBAR","HORIZONTAL","VERTICAL","KHIDDEN","KBUTTON","KPANE","KPANES_CONTAINER","KPANE_ACTIONS","KDOCK_INDICATOR","KDOCK_NAVIGATOR","KDOCK_PREVIEW","KSELECTED","KACTIVE","KTABSTRIP","SPLIT","TAB","HEIGHT","WIDTH","TOP","BOTTOM","LEFT","RIGHT","MIDDLE","CLICK","PIN","UNPIN","UNSHIFT","PANE","paneSelector","uid","attr","UID_ATTR","INDICATOR_ATTR","ACTION_ATTR","INDICATOR_TEMPLATE","NAVIGATOR_TEMPLATE","CLOSE","DOCK","INNER_DOCK","RESIZE","DRAG","DRAGSTART","DRAGEND","DockManager","init","element","options","that","fn","call","addClass","panesContainer","appendTo","_processPanes","rootPane","_refreshToolbar","_createPane","_bindEvents","_initNavigator","_initUnpinnedResizable","notify","events","name","type","orientation","panes","paneDefaults","visible","closeable","collapsed","size","actions","icon","shouldAdd","pane","unpinnable","unpinned","minimizable","maximizable","indicators","top","left","transform","previewTop","previewLeft","rotate","hoveredPaneHeight","draggedPaneHeight","hoveredPaneWidth","draggedPaneWidth","togglePane","id","_getPaneById","_togglePane","removePane","_removePane","getOptions","setOptions","currentOptions","deepExtend","destroy","empty","_unpinnedResizable","Resizable","unpinnedContainer","handle","resize","e","delta","x","containerWidth","width","on","_toolbarButtonClick","bind","_hideUnpinnedPanes","_pinPaneClick","_closePane","_displayDockPreview","_hideDockPreview","currentlyOpened","find","filter","unpinnedContainerVisible","is","_toolbar","removeClass","itemUid","currentTarget","preventDefault","_showUnpinnedPane","paneUid","toolbarWidth","outerWidth","_findPaneByUid","hasUnpinnedSize","unpinnedSize","css","button","isTabbed","parent","action","paneElement","closest","isUnpinned","parentPane","parentUid","eventData","remove","_refreshRootPane","toggleClass","trigger","paneIndex","indexOf","event","splice","_shouldHideParent","length","some","_refreshPane","parentElement","guid","_extendPane","forEach","childPane","j","subItem","scrollable","unpinnedPanes","_unpinnedPanes","unpinnedPannesContainer","append","insertBefore","prepend","i","html","renderButton","fillMode","_paneHeader","off","wrapper","refresh","rootPaneElement","_createSplitPane","splitterElement","splitterOptions","childPanesToInit","paneOptions","_createUnpinnedPane","push","splitter","Splitter","_updatePaneSize","leftPane","rightPane","ev","_createTabPane","tabStripElement","tabContainer","selectedPane","selected","tab","title","contentElement","_addActions","children","kendoTabStrip","animation","_createContentPane","content","template","data","isUnnpinned","actionsContainer","themeColor","string","charAt","toUpperCase","slice","result","concat","header","tabHeader","found","prop","value","params","navigatorDraggable","Draggable","autoScroll","hint","actionsHtml","_getActionButtons","hintTemplate","height","updateHint","coordinates","location","y","zIndex","dragstart","_dragStart","dragend","_dragEnd","drag","_drag","target","draggedPane","_displayGlobalIndicators","draggableEvent","hoveredIndicator","hide","_updateLayout","_showHiddenPanes","hoveredPane","currentPane","elementUnderCursor","navigator","currentPaneUid","prevPaneUid","dragTargetUid","position","dockable","innerDock","_showTab","_showPane","tabstrip","show","activateTab","splitbar","siblings","_hideDraggedPane","draggedElement","_hideTab","_hidePane","prevElement","prev","nextElement","next","isActive","buttons","container","each","_","clone","indicator","isGlobalIndicator","indicatorName","indicatorUid","indicatorData","previewElement","containerHeight","outerHeight","existingPreview","preview","draggedPaneParent","draggedPaneIndex","_tabDock","_splitDock","_adjustSiblingSizes","targetPane","isGlobalDock","targetPaneParent","targetPaneIndex","dimension","newParentPane","unshift","_getSiblings","parentSize","draggedPaneSize","newParentSize","noSizePanes","freeSpace","_calculateNewSize","noSizePane","newSize","paneSize","proportion","noUnitSize","unit","test","replace","p","plugin","jQuery","kendo$1","__meta__","category","description","depends","default","Object","defineProperty"],"sources":["kendo.dockmanager.js"],"mappings":"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","ignoreList":[],"sourcesContent":["(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('kendo.core.js'), require('kendo.splitter.js'), require('kendo.tabstrip.js'), require('kendo.window.js'), require('kendo.html.button.js'), require('kendo.resizable.js'), require('kendo.draganddrop.js')) :\n    typeof define === 'function' && define.amd ? define(['exports', 'kendo.core', 'kendo.splitter', 'kendo.tabstrip', 'kendo.window', 'kendo.html.button', 'kendo.resizable', 'kendo.draganddrop'], factory) :\n    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory((global.kendo = global.kendo || {}, global.kendo._globals = global.kendo._globals || {}, global.kendo._globals.Dockmanager = {})));\n})(this, (function (exports) {\n    const __meta__ = {\n        id: \"dockManager\",\n        name: \"DockManager\",\n        category: \"web\",\n        description: \"The DockManager widget represents a layout component that allows users to achieve custom layouts by docking panes.\",\n        depends: [\"core\", \"splitter\", \"tabstrip\", \"window\", \"html.button\"]\n    };\n\n    (function($, undefined$1) {\n        const kendo = window.kendo,\n            Widget = kendo.ui.Widget,\n            NS = \".kendoDockManager\",\n            ui = kendo.ui,\n            extend = $.extend,\n            percentageUnitsRegex = /^\\d+(\\.\\d+)?%$/i,\n            DOCK_MANAGER = \"k-dock-manager\",\n            DOCK_MANAGER_TOOLBAR = \"k-dock-manager-toolbar\",\n            TOOLBAR_TEMPLATE = `<div class=\"${DOCK_MANAGER_TOOLBAR} k-toolbar-left k-toolbar k-toolbar-md k-toolbar-solid\"></div>`,\n            TOOLBAR_BUTTON = \"k-toolbar-button\",\n            SEPARATOR = `<div class=\"k-separator k-separator-horizontal\"></div>`,\n            KSTATIC_PANE = \"k-pane-static\",\n            KKPINNED_PANE = \"k-pane-pinned\",\n            KKUNPINNED_PANE = \"k-pane-unpinned\",\n            KPANE_TABBED = \"k-pane-tabbed\",\n            SPLITTER = \"k-splitter\",\n            KSPLITBAR = \"k-splitbar\",\n            DOCK_SPLITTER = \"k-dock-manager-splitter\",\n            KUNPINNED_CONTAINER = \"k-dock-manager-unpinned-container\",\n            HORIZONTAL = \"horizontal\",\n            VERTICAL = \"vertical\",\n            KHIDDEN = \"k-hidden\",\n            KBUTTON = \"k-button\",\n            KPANE = \"k-pane\",\n            KPANE_FLEX = \"k-pane-flex\",\n            KPANES_CONTAINER = \"k-dock-manager-pane-container\",\n            KPANE_SCROLLABLE = \"k-pane-scrollable\",\n            KPANE_ACTIONS = \"k-pane-actions\",\n            KDOCK_INDICATOR = \"k-dock-indicator\",\n            KDOCK_NAVIGATOR = \"k-dock-navigator\",\n            KDOCK_PREVIEW = \"k-docking-preview\",\n            KSELECTED = \"k-selected\",\n            KACTIVE = \"k-active\",\n            KTABSTRIP = \"k-tabstrip\",\n            KSPLITBAR_DRAGGABLE = \"k-splitbar-draggable\",\n            SPLIT = \"split\",\n            TAB = \"tab\",\n            CONTENT = \"content\",\n            HEIGHT = \"height\",\n            WIDTH = \"width\",\n            TOP = \"top\",\n            BOTTOM = \"bottom\",\n            LEFT = \"left\",\n            RIGHT = \"right\",\n            MIDDLE = \"middle\",\n            CLICK = \"click\",\n            PIN = \"pin\",\n            UNPIN = \"unpin\",\n            UNSHIFT = \"unshift\",\n            PUSH = \"push\",\n            PANE = `<div class=\"${KPANE} ${KPANE_FLEX} ${KSTATIC_PANE}\"></div>`,\n            paneSelector = uid => `.${KPANE}[${kendo.attr(\"uid\")}=\"${uid}\"]`,\n            buttonTextTemplate = text => `<span class=\"k-button-text\">${text}</span>`,\n            contentPaneTemplate = data => `<div class=\"${KPANE_SCROLLABLE}\">\n                                            <div class=\"k-pane-header\">\n                                                <span class=\"k-pane-title\">${data.title}</span>\n                                                <div class=\"${KPANE_ACTIONS}\"></div>\n                                            </div>\n                                            <div class=\"k-pane-content\">${data.content}</div>\n                                        </div>`,\n            tabTemplate = title => `<li><span class=\"k-link\"><span class=\"k-link-text\">${title}</span></span></li>`,\n            unpinnedResizeSplitbar = `<div class=\"k-splitbar k-splitbar-horizontal ${KSPLITBAR_DRAGGABLE}-horizontal\">\n                                    <div class=\"k-resize-handle\"></div>\n                                </div>`,\n            UID_ATTR = kendo.attr(\"uid\"),\n            INDICATOR_ATTR = kendo.attr(\"indicator\"),\n            ACTION_ATTR = kendo.attr(\"action\"),\n            hintTemplate = pane => `<div class=\"k-tooltip k-tooltip-primary\">\n                                    <div class=\"k-tooltip-content\">${pane.title}</div>\n                                </div>`,\n            INDICATOR_TEMPLATE = `<div class=\"${KDOCK_INDICATOR}\">\n                        <span class=\"k-svg-icon k-icon-xl k-svg-i-position-top\">\n                        <svg aria-hidden=\"true\" focusable=\"false\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\">\n                            <path d=\"M480 448V32H32v448h448v-32zm-416 0V64h384v384H64zM96 96h320v96H96z\"></path>\n                        </svg>\n                        </span>\n                    </div>`,\n            NAVIGATOR_TEMPLATE = `<div class=\"${KDOCK_NAVIGATOR}\" style=\"position: relative;\">\n                                <div class=\"k-dock-indicator k-dock-indicator-top\" ${INDICATOR_ATTR}=\"top\">\n                                <span class=\"k-svg-icon k-icon-xl k-svg-i-position-top\">\n                                    <svg aria-hidden=\"true\" focusable=\"false\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\">\n                                        <path d=\"M480 448V32H32v448h448v-32zm-416 0V64h384v384H64zM96 96h320v96H96z\"></path>\n                                    </svg>\n                                </span>\n                                </div>\n                                <div class=\"k-dock-indicator k-dock-indicator-right\" ${INDICATOR_ATTR}=\"right\">\n                                <span class=\"k-svg-icon k-icon-xl k-svg-i-position-right\">\n                                    <svg aria-hidden=\"true\" focusable=\"false\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\">\n                                        <path d=\"M64 480h416V32H32v448h32zm0-416h384v384H64V64zm256 32h96v320h-96z\"></path>\n                                    </svg>\n                                </span>\n                                </div>\n                                <div class=\"k-dock-indicator k-dock-indicator-bottom\" ${INDICATOR_ATTR}=\"bottom\">\n                                <span class=\"k-svg-icon k-icon-xl k-svg-i-position-bottom\">\n                                    <svg aria-hidden=\"true\" focusable=\"false\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\">\n                                        <path d=\"M32 64v416h448V32H32v32zm416 0v384H64V64h384zM96 320h320v96H96z\"></path>\n                                    </svg>\n                                </span>\n                                </div>\n                                <div class=\"k-dock-indicator k-dock-indicator-left\" ${INDICATOR_ATTR}=\"left\">\n                                <span class=\"k-svg-icon k-icon-xl k-svg-i-position-left\">\n                                    <svg aria-hidden=\"true\" focusable=\"false\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\">\n                                        <path d=\"M448 32H32v448h448V32h-32zm0 416H64V64h384v384zM96 96h96v320H96z\"></path>\n                                    </svg>\n                                </span>\n                                </div>\n                                <div class=\"k-dock-indicator k-dock-indicator-middle\" ${INDICATOR_ATTR}=\"middle\">\n                                <span class=\"k-svg-icon k-icon-xl k-svg-i-window\">\n                                    <svg aria-hidden=\"true\" focusable=\"false\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\">\n                                        <path d=\"M96 96v320h320V96H96zm288 288H128V192h256v192z\"></path>\n                                    </svg>\n                                </span>\n                                </div>\n                            </div>`,\n            CLOSE = \"close\",\n            DOCK = \"dock\",\n            INNER_DOCK = \"innerDock\",\n            RESIZE = \"resize\",\n            DRAG = \"drag\",\n            DRAGSTART = \"dragStart\",\n            DRAGEND = \"dragEnd\",\n            CHANGE = \"change\";\n\n        function capitalizeFirstLetter(string) {\n            return string.charAt(0).toUpperCase() + string.slice(1);\n        }\n\n        function isPercentageSize(size) {\n            return percentageUnitsRegex.test(size);\n        }\n\n        const DockManager = Widget.extend({\n            init: function(element, options) {\n                const that = this;\n\n                Widget.fn.init.call(that, element, options);\n                options = $.extend(true, {}, options);\n                that.element.addClass(DOCK_MANAGER);\n\n                that.panesContainer = $(`<div class=\"${KPANES_CONTAINER}\" />`).appendTo(that.element);\n                that._processPanes(that.options.rootPane);\n                that._refreshToolbar();\n                that._createPane(that.panesContainer, that.options.rootPane);\n                that._bindEvents();\n                that._initNavigator();\n                that._initUnpinnedResizable();\n\n                kendo.notify(that);\n            },\n\n            events: [\n                CLOSE,\n                PIN,\n                UNPIN,\n                DOCK,\n                INNER_DOCK,\n                RESIZE,\n                DRAG,\n                DRAGSTART,\n                DRAGEND\n            ],\n\n            options: {\n                name: 'DockManager',\n                rootPane: {\n                    type: SPLIT,\n                    orientation: HORIZONTAL,\n                    panes: []\n                }\n            },\n\n            paneDefaults: {\n                visible: true,\n                closeable: true,\n                collapsed: false,\n                size: ''\n            },\n\n            actions: [\n                {\n                    name: \"pin\",\n                    icon: \"unpin\",\n                    shouldAdd: pane => pane.unpinnable && pane.unpinnable.unpinned\n                },{\n                    name: \"unpin\",\n                    icon: \"pin\",\n                    shouldAdd: pane => pane.unpinnable && !pane.unpinnable.unpinned\n                },{\n                    name: \"minimize\",\n                    icon: \"minimize\",\n                    shouldAdd: pane => pane.minimizable\n                },{\n                    name: \"maximize\",\n                    icon: \"maximize\",\n                    shouldAdd: pane => pane.maximizable\n                },{\n                    name: \"close\",\n                    icon: \"x\",\n                    shouldAdd: pane => pane.closeable != false\n                },{\n                    name: \"more\",\n                    icon: \"more-vertical\",\n                    shouldAdd: pane => false //not needed for v1 as currently only 2 actions are available\n                }\n            ],\n\n            indicators: [\n                {\n                    name: TOP,\n                    top: 0,\n                    left: \"50%\",\n                    transform: \"translate(-50%, 0)\",\n                    previewTop: () => 0,\n                    previewLeft: () => 0,\n                    rotate: \"0deg\"\n                },{\n                    name: BOTTOM,\n                    top: \"100%\",\n                    left: \"50%\",\n                    transform: \"translate(-50%, -100%)\",\n                    previewTop: (hoveredPaneHeight, draggedPaneHeight) => hoveredPaneHeight - draggedPaneHeight,\n                    previewLeft: () => 0,\n                    rotate: \"180deg\"\n                },{\n                    name: LEFT,\n                    top: \"50%\",\n                    left: 0,\n                    transform: \"translate(0, -50%)\",\n                    previewTop: () => 0,\n                    previewLeft: () => 0,\n                    rotate: \"270deg\"\n                },{\n                    name: RIGHT,\n                    top: \"50%\",\n                    left: \"100%\",\n                    transform: \"translate(-100%, -50%)\",\n                    previewTop: () => 0,\n                    previewLeft: (hoveredPaneWidth, draggedPaneWidth) => hoveredPaneWidth - draggedPaneWidth,\n                    rotate: \"90deg\"\n                },{\n                    name: MIDDLE,\n                    previewTop: () => 0,\n                    previewLeft: () => 0,\n                }\n            ],\n\n            togglePane: function(id) {\n                const that = this,\n                pane = that._getPaneById(that.options.rootPane, \"id\", id);\n\n                if (pane != undefined$1) {\n                    that._togglePane(pane);\n                }\n            },\n\n            removePane: function(id) {\n                const that = this;\n                const pane = that._getPaneById(that.options.rootPane, \"id\", id);\n\n                if (pane != undefined$1) {\n                    that._removePane(pane);\n                }\n            },\n\n            getOptions: function() {\n                const that = this;\n                return that.options;\n            },\n\n            setOptions: function(options) {\n                const that = this;\n                let currentOptions = that.getOptions();\n                kendo.deepExtend(currentOptions, options);\n\n                that.destroy();\n                that.element.empty();\n\n                that.init(that.element, currentOptions);\n\n            },\n\n            _initUnpinnedResizable: function() {\n                const that = this;\n\n                that._unpinnedResizable = new kendo.ui.Resizable(that.unpinnedContainer, {\n                    orientation: HORIZONTAL,\n                    handle: \".k-splitbar-horizontal.k-splitbar-draggable-horizontal\",\n                    resize: function(e) {\n                        const delta = e.x.delta;\n                        const containerWidth = that.unpinnedContainer.width();\n\n                        that.unpinnedContainer.width(containerWidth + delta);\n                    }\n                });\n            },\n\n            _bindEvents: function() {\n                const that = this;\n\n                that.element.on(CLICK + NS, `.k-dock-manager-toolbar .${KBUTTON}`, that._toolbarButtonClick.bind(that));\n                that.element.on(CLICK + NS, `.${KPANES_CONTAINER}`, that._hideUnpinnedPanes.bind(that));\n                that.element.on(CLICK + NS, `.${KBUTTON}[${ACTION_ATTR}=\"pin\"], .${KBUTTON}[${ACTION_ATTR}=\"unpin\"]`, that._pinPaneClick.bind(that));\n                that.element.on(CLICK + NS, `.${KBUTTON}[${ACTION_ATTR}=\"close\"]`, that._closePane.bind(that));\n                that.element.on(\"mouseenter\" + NS, `.${KDOCK_INDICATOR}`, that._displayDockPreview.bind(that));\n                that.element.on(\"mouseleave\" + NS, `.${KDOCK_INDICATOR}`, that._hideDockPreview.bind(that));\n            },\n\n            _hideUnpinnedPanes: function(e) {\n                const that = this;\n                const unpinnedPanes = that.unpinnedContainer.find(`.${KPANE}`);\n                const currentlyOpened = unpinnedPanes.filter(\":visible\");\n                const unpinnedContainerVisible = that.unpinnedContainer.is(\":visible\");\n\n                if (currentlyOpened && unpinnedContainerVisible) {\n                    that._toolbar.find(`.${KSELECTED}`).removeClass(KSELECTED);\n                    that.unpinnedContainer.addClass(KHIDDEN);\n                    return;\n                }\n            },\n\n            _toolbarButtonClick: function(e) {\n                const that = this;\n                const itemUid = $(e.currentTarget).attr(UID_ATTR);\n                const unpinnedPanes = that.unpinnedContainer.find(`.${KPANE}`);\n                const currentlyOpened = unpinnedPanes.filter(\":visible\");\n                const unpinnedContainerVisible = that.unpinnedContainer.is(\":visible\");\n\n                e.preventDefault();\n                that._toolbar.find(`.${KBUTTON}`).removeClass(KSELECTED);\n\n                if (currentlyOpened.attr(UID_ATTR) === itemUid && unpinnedContainerVisible) {\n                    that.unpinnedContainer.addClass(KHIDDEN);\n                    return;\n                }\n\n                that._showUnpinnedPane(itemUid);\n            },\n\n            _showUnpinnedPane: function(paneUid) {\n                const that = this;\n                const toolbarWidth = that._toolbar.outerWidth();\n                const pane = that._findPaneByUid(paneUid);\n                const hasUnpinnedSize = pane.unpinnable.unpinnedSize;\n\n                that.unpinnedContainer.removeClass(KHIDDEN).css({ left: `${toolbarWidth}px` });\n                that.unpinnedContainer.find(`.${KPANE}`).addClass(KHIDDEN);\n                that.unpinnedContainer.find(paneSelector(paneUid)).removeClass(KHIDDEN);\n\n                if (hasUnpinnedSize) {\n                    that.unpinnedContainer.css({ width: `${pane.unpinnable.unpinnedSize}` });\n                }\n\n                that._toolbar.find(`.${KBUTTON}[${UID_ATTR}=\"${paneUid}\"]`).addClass(KSELECTED);\n            },\n\n            _pinPaneClick: function(e) {\n                const that = this;\n                const button = $(e.currentTarget);\n                const isTabbed = button.parent().is(\"li\");\n                const action = button.attr(ACTION_ATTR);\n                const paneElement = isTabbed ? button.parent() : $(e.currentTarget).closest(`.${KPANE}`);\n                const pane = that._findPaneByUid(paneElement.attr(UID_ATTR));\n                const isUnpinned = pane.unpinnable.unpinned;\n                const parentPane = that._findPaneByUid(pane.parentUid);\n                const parentPaneElement = that.panesContainer.find(`.${KPANE}[${UID_ATTR}=\"${parentPane.uid}\"], .${SPLITTER}[${UID_ATTR}=\"${parentPane.uid}\"]`);\n                const eventData = { pane: pane, paneElement: paneElement };\n\n                if (isUnpinned) {\n                    kendo.destroy(paneElement);\n                    paneElement.remove();\n                }\n\n                pane.unpinnable.unpinned = action === PIN ? false : true;\n                that._refreshRootPane();\n                that.unpinnedContainer.toggleClass(KHIDDEN, action === PIN);\n                that.unpinnedContainer.find(`.${KPANE}`).removeClass(KKPINNED_PANE).addClass(KKUNPINNED_PANE);\n\n                if (action === \"pin\") {\n                    that.trigger(PIN, eventData);\n                    return;\n                }\n\n                that.trigger(UNPIN, eventData);\n                that._showUnpinnedPane(pane.uid);\n            },\n\n            _closePane: function(e) {\n                const that = this;\n                const button = $(e.currentTarget);\n                const isTabbed = button.parent().is(\"li\");\n                const paneElement = isTabbed ? button.parent() : $(e.currentTarget).closest(`.${KPANE}`);\n                const pane = that._findPaneByUid(paneElement.attr(UID_ATTR));\n                const parentPane = that._findPaneByUid(pane.parentUid);\n                const parentPaneElement = that.panesContainer.find(`.${KPANE}[${UID_ATTR}=\"${parentPane.uid}\"], .${SPLITTER}[${UID_ATTR}=\"${parentPane.uid}\"]`);\n                const paneIndex = parentPane.panes.indexOf(pane);\n                const eventData = { pane: pane, paneElement: paneElement, event: e };\n\n                if (that.trigger(CLOSE, eventData)) {\n                    e.preventDefault();\n                }\n\n                if (pane.unpinnable && pane.unpinnable.unpinned) {\n                    that.unpinnedContainer.addClass(KHIDDEN);\n                }\n\n                parentPane.panes.splice(paneIndex, 1);\n\n                if (that._shouldHideParent(parentPane)) {\n                    parentPane.visible = false;\n                }\n\n                that._refreshRootPane();\n            },\n\n            _shouldHideParent: function(pane) {\n                const that = this,\n                parent = that._findPaneByUid(pane.parentUid);\n\n                if (pane.panes.length == 0) {\n                    if (pane.type == TAB && parent.panes.length == 1) {\n                        parent.panes.splice(0,1);\n                        parent.visible = false;\n                    }\n                    return true;\n                }\n\n                if (pane.panes.length == 1 &&\n                    pane.panes[0].type == TAB &&\n                    !pane.panes.some(x => x.visible)) {\n                    return true;\n                }\n\n                return false;\n            },\n\n            _refreshPane: function(paneElement, pane) {\n                const that = this;\n                const parentElement = paneElement.parent();\n                const isTabbed = paneElement.is(`.${KPANE_TABBED}`);\n\n                kendo.destroy(paneElement);\n                isTabbed ? paneElement.empty() : paneElement.remove();\n                that._refreshToolbar();\n                that._createPane(isTabbed ? paneElement : parentElement, pane);\n            },\n\n            _processPanes: function(pane) {\n                const that = this;\n                pane.uid = pane.uid || kendo.guid();\n                that._extendPane(pane);\n\n                if (pane.type === SPLIT && !pane.orientation) {\n                    pane.orientation = HORIZONTAL;\n                }\n\n                pane.panes.forEach((childPane) => {\n                    childPane.parentUid = pane.uid;\n\n                    if (childPane.type == CONTENT) {\n                        if (childPane.unpinnable === undefined$1 || childPane.unpinnable === true) {\n                            childPane.unpinnable = {\n                                unpinned: false\n                            };\n                        }\n                        childPane.uid = childPane.uid || kendo.guid();\n                    }\n\n                    if (childPane.panes && childPane.panes.length) {\n                        that._processPanes(childPane);\n                    }\n                });\n            },\n\n            _extendPane: function(pane) {\n                const that = this;\n\n                if (pane.panes) {\n                    for (var j = 0; j < pane.panes.length; j++) {\n                        pane.panes.forEach(subItem => {\n                            that._extendPane(subItem);\n                        });\n                    }\n                }\n\n                extend(pane, {\n                    visible: pane.visible === undefined$1 ? that.paneDefaults.visible : pane.visible,\n                    closeable: pane.closeable === undefined$1 ? that.paneDefaults.closeable : pane.closeable,\n                    collapsed: pane.collapsed === undefined$1 ? that.paneDefaults.collapsed : pane.collapsed,\n                    size: pane.size === undefined$1 ? that.paneDefaults.size : pane.size,\n                    scrollable: false,\n                });\n            },\n\n            _togglePane: function(pane) {\n                const that = this;\n\n                pane.visible = !pane.visible;\n                that._refreshRootPane();\n            },\n\n            _removePane: function(pane) {\n                const that = this;\n                const parentPane = that._findPaneByUid(pane.parentUid);\n                const paneIndex = parentPane.panes.indexOf(pane);\n                const parentPaneElement = that.panesContainer.find(`[${UID_ATTR}=\"${pane.uid}\"]`).parent();\n\n                parentPane.panes.splice(paneIndex, 1);\n                that._refreshRootPane();\n            },\n\n            _refreshToolbar: function() {\n                const that = this;\n                const unpinnedPanes = that._unpinnedPanes();\n                const unpinnedPannesContainer = $(`<div class=\"${KHIDDEN}\"/>`).addClass(KUNPINNED_CONTAINER);\n\n                if (!that.unpinnedContainer) {\n                    that.unpinnedContainer = unpinnedPannesContainer;\n                    unpinnedPannesContainer.append(unpinnedResizeSplitbar);\n                    unpinnedPannesContainer.insertBefore(that.panesContainer);\n                }\n\n                if (!unpinnedPanes.length) {\n                    that._toolbar && that._toolbar.remove();\n                    that._toolbar = null;\n                    return;\n                }\n\n                if (!that._toolbar) {\n                    that._toolbar = that.element.prepend(TOOLBAR_TEMPLATE).find(`.${DOCK_MANAGER_TOOLBAR}`);\n                }\n\n                that._toolbar.empty();\n\n                for (let i = 0; i < unpinnedPanes.length; i++) {\n                    const pane = unpinnedPanes[i];\n\n                    const button = $(kendo.html.renderButton({ fillMode: \"flat\", size: \"small\" }))\n                                    .addClass(TOOLBAR_BUTTON)\n                                    .append(buttonTextTemplate(that._paneHeader(pane)));\n\n                    button.attr(UID_ATTR, pane.uid);\n                    that._toolbar.append(button);\n\n                    if (i < unpinnedPanes.length - 1) {\n                        that._toolbar.append(SEPARATOR);\n                    }\n                }\n            },\n\n            destroy: function() {\n                const that = this;\n\n                Widget.fn.destroy.call(that);\n\n                that.element.off(NS);\n                that.element.empty();\n\n                kendo.destroy(that.wrapper);\n            },\n\n            refresh: function() {\n                const that = this;\n                kendo.destroy(that.unpinnedContainer);\n                that.unpinnedContainer.empty();\n                that._refreshRootPane();\n            },\n\n            _refreshRootPane: function() {\n                const that = this;\n                const rootPaneElement = that.element.find(`[${UID_ATTR}=\"${that.options.rootPane.uid}\"]`);\n\n                that._refreshPane(rootPaneElement, that.options.rootPane);\n            },\n\n            _createSplitPane: function(parentElement, pane) {\n                const that = this;\n                const splitterElement = $(\"<div ref-dock-splitter/>\").attr(UID_ATTR, pane.uid);\n                const splitterOptions = {\n                    orientation: pane.orientation || HORIZONTAL,\n                    panes: []\n                };\n\n                if (!pane.panes.some(x=>x.visible)) {\n                    return;\n                }\n\n                parentElement.append(splitterElement);\n\n                const childPanesToInit = [];\n\n                pane.panes.forEach((childPane) => {\n                    const paneOptions = {\n                        uid: childPane.uid,\n                        scrollable: false\n                    };\n                    const paneElement = $(PANE).removeClass(KSTATIC_PANE);\n\n                    if (childPane.unpinnable && childPane.unpinnable.unpinned) {\n                        that._createUnpinnedPane(childPane);\n                        return;\n                    }\n\n                    if (childPane.size) {\n                        paneOptions.size = childPane.size;\n                    }\n\n                    if (childPane.visible != undefined$1) {\n                        paneOptions.visible = childPane.visible;\n                    }\n\n                    if (childPane.visible) {\n                        splitterElement.append(paneElement);\n                        childPanesToInit.push(\n                            () => that._createPane(paneElement, childPane)\n                        );\n                        splitterOptions.panes.push(paneOptions);\n                    }\n                });\n\n                pane.splitter = new kendo.ui.Splitter(splitterElement, splitterOptions); // eslint-disable-line no-new\n                pane.splitter.element.addClass(DOCK_SPLITTER);\n                childPanesToInit.forEach(x => x());\n                pane.splitter.bind(RESIZE, that._updatePaneSize.bind(that));\n            },\n\n            _updatePaneSize: function(e) {\n                const that = this;\n                if (!e.leftPane && !e.rightPane) {\n                    return;\n                }\n\n                const leftPane = that._findPaneByUid(e.leftPane.uid),\n                rightPane = that._findPaneByUid(e.rightPane.uid);\n\n                leftPane.size = e.leftPane.size;\n                rightPane.size = e.rightPane.size;\n                that.trigger(RESIZE, { ev: e, leftPane: leftPane, rightPane: rightPane });\n            },\n\n            _createTabPane: function(parentElement, pane) {\n                const that = this;\n                const tabStripElement = $(\"<div class='k-header'/>\");\n                const tabContainer = $(\"<ul/>\");\n                const tabStripOptions = {\n                    animation: false,\n                };\n                const selectedPane = (pane.selected === undefined$1 || pane.panes.indexOf(pane.panes[pane.selected]) == -1 || pane.panes[pane.selected].unpinnable.unpinned) ? 0 : pane.selected;\n\n                if (!pane.panes.some(x=>x.visible)) {\n                    return;\n                }\n\n                tabStripElement.append(tabContainer);\n                parentElement.append(tabStripElement);\n                parentElement.attr(UID_ATTR, pane.uid);\n                parentElement.addClass(KPANE_TABBED);\n\n                pane.panes.forEach((childPane) => {\n                    const tab = $(tabTemplate(that._paneHeader(childPane))).attr(UID_ATTR, childPane.uid);\n                    const contentElement = $(\"<div/>\");\n\n                    if (childPane.unpinnable && childPane.unpinnable.unpinned) {\n                        that._createUnpinnedPane(childPane);\n                        return;\n                    }\n\n                    if (childPane.visible) {\n                        that._addActions(tab, childPane);\n                        tabContainer.append(tab);\n                        tabStripElement.append(contentElement);\n                        that._createPane(contentElement, childPane);\n                    }\n                });\n\n                $(tabContainer.children()[selectedPane]).addClass(KACTIVE);\n                tabStripElement.kendoTabStrip(tabStripOptions);\n            },\n\n            _createContentPane: function(parentElement, pane) {\n                const that = this;\n                const content = typeof pane.content === \"function\" ? kendo.template(pane.content)({}) : pane.content;\n                const element = $(contentPaneTemplate(extend({}, pane, { title: that._paneHeader(pane), content: content })));\n                const parentPane = that._findPaneByUid(pane.parentUid);\n                const isUnnpinned = pane.unpinnable && pane.unpinnable.unpinned;\n\n\n                if (parentPane && parentPane.type === TAB && !isUnnpinned) {\n                    parentElement.append(content);\n                    return;\n                }\n\n                parentElement.addClass(isUnnpinned ? KKUNPINNED_PANE : KKPINNED_PANE)\n                             .removeClass(KSTATIC_PANE)\n                             .attr(UID_ATTR, pane.uid);\n                that._addActions(element.find(`.${KPANE_ACTIONS}`), pane);\n                parentElement.append(element);\n            },\n\n            _createUnpinnedPane: function(pane) {\n                const that = this;\n                const paneElement = $(PANE).removeClass(KSTATIC_PANE);\n\n                if (that.unpinnedContainer.find(paneSelector(pane.uid)).length) {\n                    return;\n                }\n\n                that.unpinnedContainer.prepend(paneElement);\n                that._createContentPane(paneElement, pane);\n            },\n\n            _addActions: function(actionsContainer, pane) {\n                const that = this;\n\n                that.actions.forEach((action) => {\n                    if (action.shouldAdd(pane)) {\n                        actionsContainer.append($(kendo.html.renderButton({ fillMode: \"flat\", icon: action.icon, themeColor: 'base' })).attr(ACTION_ATTR, action.name));\n                    }\n                });\n\n            },\n\n            _createPane: function(parentElement, pane) {\n                const that = this;\n\n                if (pane.id) {\n                    parentElement.attr(\"id\", pane.id);\n                }\n\n                return that[\"_create\" + capitalizeFirstLetter(pane.type) + \"Pane\"](parentElement, pane);\n            },\n\n            _unpinnedPanes: function(panes) {\n                const that = this;\n                const options = that.options;\n                let result = [];\n\n                if (!panes) {\n                    panes = options.rootPane.panes;\n                }\n\n                panes.forEach((pane) => {\n                    if (pane.unpinnable && pane.unpinnable.unpinned) {\n                        result.push(pane);\n                    }\n\n                    if (pane.panes && pane.panes.length) {\n                        result = result.concat(that._unpinnedPanes(pane.panes));\n                    }\n                });\n\n                return result;\n            },\n\n            _paneHeader: function(pane) {\n                const that = this;\n                const parentPane = that._findPaneByUid(pane.parentUid);\n                const isTabbed = parentPane && parentPane.type === \"tab\";\n                let header = pane.header;\n\n                if (isTabbed && pane.tabHeader) {\n                    header = pane.tabHeader;\n                }\n\n                if (!header) {\n                    return pane.title || \"\";\n                }\n\n                return kendo.template(header)(pane);\n            },\n\n            _findPaneByUid: function(uid, parent) {\n                const that = this;\n                let found;\n\n                parent = parent || that.options.rootPane;\n\n                if (parent.uid === uid) {\n                    return parent;\n                }\n\n                parent.panes.forEach((pane) => {\n                    if (pane.uid === uid) {\n                        found = pane;\n                        return;\n                    }\n\n                    if (pane.panes && pane.panes.length) {\n                        const result = that._findPaneByUid(uid, pane);\n\n                        if (result) {\n                            found = result;\n                            return;\n                        }\n                    }\n                });\n                return found;\n            },\n\n            _getPaneById: function(pane, prop, value) {\n                const that = this;\n                let found;\n\n                if (pane[prop] == value) {\n                    return pane;\n                }\n\n                if (pane.panes) {\n                    pane.panes.forEach((childPane) => {\n                        let result = that._getPaneById(childPane, prop, value);\n                        if (result) {\n                            found = result;\n                        }\n                    });\n                }\n                return found;\n            },\n\n            _initNavigator: function(params) {\n                const that = this;\n\n                that.navigatorDraggable = new kendo.ui.Draggable(that.element, {\n                    autoScroll: true,\n                    filter: \".k-pane-header, .k-pane-tabbed .k-tabstrip-item\",\n                    hint: function(element) {\n                        const isTabbed = element.is(\"li\");\n                        const paneElement = element.closest(`.${KPANE}`);\n                        const pane = that._findPaneByUid((isTabbed ? element : paneElement).attr(UID_ATTR));\n                        const actionsHtml = isTabbed ? that._getActionButtons(element) : paneElement.find(`.${KPANE_ACTIONS}`).html();\n\n                        return hintTemplate({\n                            width: paneElement.width(),\n                            height: paneElement.height(),\n                            content: pane.content,\n                            title: that._paneHeader(pane),\n                            actions: actionsHtml,\n                        });\n                    },\n                    updateHint: function(hint, event) {\n                        const coordinates = {\n                            left: event.x.location + 1,\n                            top: event.y.location + 1,\n                        };\n\n                        const additionStyles = {\n                            zIndex: 100010,\n                        };\n\n                        hint.css($.extend({}, coordinates, additionStyles));\n\n                    },\n                    dragstart: that._dragStart.bind(that),\n                    dragend: that._dragEnd.bind(that),\n                    drag: that._drag.bind(that)\n                });\n            },\n\n            _dragStart: function(e) {\n                const that = this;\n                const target = $(e.currentTarget);\n                const pane = target.closest(`.${KPANE}`);\n\n                that.draggedPane = {\n                    width: pane.width(),\n                    height: pane.height(),\n                    pane,\n                    target\n                };\n\n                that._displayGlobalIndicators();\n\n                that.trigger(DRAGSTART, { pane: that.draggedPane.pane, draggableEvent: e });\n            },\n\n            _dragEnd: function(e) {\n                const that = this;\n                const hoveredIndicator = that.element.find(`.${KDOCK_INDICATOR}:hover`);\n                const eventData = { pane: that.draggedPane.pane, draggableEvent: e };\n\n                if (hoveredIndicator.length) {\n                    that.navigatorDraggable.hint.hide();\n                    that._updateLayout(hoveredIndicator);\n                }\n\n                that.element.find(`.${KDOCK_INDICATOR}`).remove();\n                that.element.find(`.${KDOCK_PREVIEW}`).remove();\n\n                if (!hoveredIndicator.length) {\n                    that._showHiddenPanes();\n                }\n                that.trigger(DRAGEND, eventData);\n                that.hoveredPane = null;\n                that.draggedPane = null;\n            },\n\n            _drag: function(e) {\n                const that = this;\n                const currentPane = $(e.elementUnderCursor).closest(`.${KPANE}[${UID_ATTR}]`);\n                const pane = that._findPaneByUid(currentPane.attr(UID_ATTR));\n                const navigator = $(NAVIGATOR_TEMPLATE);\n                const currentPaneUid = currentPane.attr(UID_ATTR);\n                const prevPaneUid = that.hoveredPane && that.hoveredPane.attr(UID_ATTR);\n                const eventData = { pane: that.draggedPane.pane, draggableEvent: e };\n                const dragTargetUid = e.currentTarget.closest(`.${KPANE}`).attr(UID_ATTR);\n\n                if (that.trigger(DRAG, eventData)) {\n                    e.preventDefault();\n                    return;\n                }\n\n                if (currentPaneUid === prevPaneUid) {\n                    return;\n                }\n\n                that.hoveredPane = currentPane;\n                that.element.find(`.${KDOCK_NAVIGATOR}`).remove();\n                navigator.css({\n                    position: \"absolute\",\n                    top: \"50%\",\n                    left: \"50%\",\n                    transform: \"translate(-50%,-50%)\",\n                    \"z-index\": 100008\n                });\n\n                if (pane && pane.dockable && !pane.dockable.innerDock) {\n                    navigator.css(\"display\", \"none\");\n                }\n                if (currentPaneUid !== dragTargetUid) {\n                    currentPane.append(navigator);\n                }\n            },\n\n            _showHiddenPanes: function() {\n                const that = this;\n                const isTabbed = that.draggedPane.pane.is(`.${KPANE_TABBED}`);\n\n                if (isTabbed) {\n                    return that._showTab();\n                }\n\n                that._showPane(that.draggedPane.pane);\n            },\n\n            _showTab: function(tab) {\n                if (tab === undefined$1) {\n                    return;\n                }\n\n                const that = this;\n                const tabstrip = tab.closest(`.${KTABSTRIP}`).data(\"kendoTabStrip\");\n\n                tab.show();\n                tabstrip.activateTab(tab);\n            },\n\n            _showPane: function(paneElement) {\n                const that = this;\n                const splitbar = paneElement.siblings(`.${KSPLITBAR}:hidden`);\n                paneElement.show();\n                splitbar.show();\n            },\n\n            _hideDraggedPane: function(draggedElement) {\n                const that = this;\n                const isTabbed = draggedElement.is(\"li\");\n\n                if (isTabbed) {\n                    return that._hideTab(draggedElement);\n                }\n\n                that._hidePane(draggedElement);\n            },\n\n            _hidePane: function(draggedElement) {\n                const that = this;\n                const paneElement = draggedElement.closest(`.${KPANE}`);\n                const prevElement = paneElement.prev();\n                const nextElement = paneElement.next();\n\n                paneElement.hide();\n\n                if (prevElement.is(`.${KSPLITBAR}`)) {\n                    return prevElement.hide();\n                }\n\n                nextElement.hide();\n            },\n\n            _hideTab: function(tab) {\n                const that = this;\n                const isActive = tab.is(`.${KACTIVE}`);\n                const tabstrip = tab.closest(`.${KTABSTRIP}`).data(\"kendoTabStrip\");\n\n                tab.hide();\n\n                if (isActive) {\n                    tabstrip.activateTab(\"li:visible:first\");\n                }\n            },\n\n            _getActionButtons: function(paneElement) {\n                const buttons = paneElement.find(\"button\");\n                const container = $(\"<div/>\");\n\n                buttons.each((_, button) => container.append($(button).clone()));\n\n                return container.html();\n            },\n\n            _displayGlobalIndicators: function() {\n                const that = this;\n\n                that.indicators.forEach((indicator) => {\n                    const element = $(INDICATOR_TEMPLATE);\n\n                    if (indicator.name === \"middle\") {\n                        return;\n                    }\n\n                    that.element.append(element);\n                    element.css({\n                        position: \"absolute\",\n                        \"z-index\": \"100002\",\n                        top: indicator.top,\n                        left: indicator.left,\n                        transform: `${indicator.transform} rotate(${indicator.rotate})`\n                    });\n                    element.attr(INDICATOR_ATTR, indicator.name);\n                });\n            },\n\n            _displayDockPreview: function(e) {\n                const that = this;\n                const indicator = $(e.currentTarget);\n                const isGlobalIndicator = !indicator.parent().is(`.${KDOCK_NAVIGATOR}`);\n                const indicatorName = indicator.attr(INDICATOR_ATTR);\n                const indicatorUid = indicator.attr(UID_ATTR);\n                const indicatorData = that.indicators.filter(i => i.name === indicatorName)[0];\n                const previewElement = $(`<div class=\"${KDOCK_PREVIEW}\"/>`);\n                const container = isGlobalIndicator ? that.panesContainer : that.hoveredPane;\n                const toolbarWidth = that._toolbar ? that._toolbar.outerWidth() : 0;\n                const containerWidth = container.outerWidth();\n                const containerHeight = container.outerHeight();\n                const existingPreview = indicatorUid && container.find(`.${KDOCK_PREVIEW}[${UID_ATTR}=\"${indicatorUid}\"]`);\n                const uid = kendo.guid();\n                let width = that.draggedPane.width;\n                let height = that.draggedPane.height;\n\n                if (existingPreview && existingPreview.length) {\n                    return existingPreview.show();\n                }\n\n                if (indicatorName === MIDDLE) {\n                    width = containerWidth;\n                    height = containerHeight;\n                }\n\n                if (indicatorName === TOP || indicatorName === BOTTOM) {\n                    if (height > containerHeight / 2) {\n                        height = containerHeight / 2;\n                    }\n\n                    width = containerWidth;\n                }\n\n                if (indicatorName === LEFT || indicatorName === RIGHT) {\n                    if (width > containerWidth / 2) {\n                        width = containerWidth / 2;\n                    }\n\n                    height = containerHeight;\n                }\n\n                const css = {\n                    position: \"absolute\",\n                    \"z-index\": 100000,\n                    top: indicatorData.previewTop(containerHeight, height),\n                    left: indicatorData.previewLeft(containerWidth, width) + (isGlobalIndicator ? toolbarWidth : 0),\n                    width: width,\n                    height\n                };\n\n                previewElement.css(css);\n                previewElement.attr(INDICATOR_ATTR, indicatorData.name)\n                              .attr(UID_ATTR, uid);\n                indicator.attr(UID_ATTR, uid);\n                container.append(previewElement);\n                that.draggedPane.preview = {\n                    width,\n                    height\n                };\n                that.draggedPane.container = {\n                    width: containerWidth,\n                    height: containerHeight\n                };\n            },\n\n            _hideDockPreview: function() {\n                const that = this;\n\n                that.element.find(`.${KDOCK_PREVIEW}`).hide();\n            },\n\n            _updateLayout: function(indicator) {\n                const that = this;\n                const isTabbed = that.draggedPane.target.is(\"li\");\n                const isGlobalIndicator = !indicator.parent().is(`.${KDOCK_NAVIGATOR}`);\n                const paneElement = isTabbed ? that.draggedPane.target : that.draggedPane.pane;\n                const hoveredPane = that._findPaneByUid(that.hoveredPane.attr(UID_ATTR));\n                const draggedPane = that._findPaneByUid(paneElement.attr(UID_ATTR));\n                const location = indicator.attr(INDICATOR_ATTR);\n                const draggedPaneParent = that._findPaneByUid(draggedPane.parentUid);\n                const draggedPaneIndex = draggedPaneParent.panes.indexOf(draggedPane);\n                const rootPaneElement = that.element.find(`[${UID_ATTR}=\"${that.options.rootPane.uid}\"]`);\n\n                draggedPaneParent.panes.splice(draggedPaneIndex, 1);\n                location == MIDDLE ? that._tabDock(hoveredPane, draggedPane) : that._splitDock(hoveredPane, draggedPane, location, isGlobalIndicator);\n                that._processPanes(that.options.rootPane);\n                that._adjustSiblingSizes(draggedPane, location, isGlobalIndicator);\n                that._refreshPane(rootPaneElement, that.options.rootPane);\n                location == MIDDLE ?\n                    that.trigger(INNER_DOCK, { pane: draggedPane, paneElement: paneElement }) :\n                    that.trigger(DOCK, { pane: draggedPane, paneElement: paneElement });\n            },\n\n            _splitDock: function(targetPane, pane, location, isGlobalDock) {\n                const that = this;\n                const targetPaneParent = isGlobalDock ? that.options.rootPane : that._findPaneByUid(targetPane.parentUid);\n                const targetPaneIndex = targetPaneParent.panes.indexOf(targetPane);\n                const action = location === TOP || location === LEFT ? UNSHIFT : PUSH;\n                const paneIndex = targetPaneIndex + (action === UNSHIFT ? 0 : 1);\n                const orientation = location === TOP || location === BOTTOM ? VERTICAL : HORIZONTAL;\n                const dimension = location === TOP || location === BOTTOM ? HEIGHT : WIDTH;\n                const newParentPane = {\n                    type: SPLIT,\n                    orientation,\n                    panes: [],\n                };\n                const previewSize = that.draggedPane.preview[dimension];\n                const size = `${previewSize}px`;\n\n                pane.size = size;\n\n                if (isGlobalDock) {\n                    newParentPane.panes.push(targetPaneParent);\n                    (location === TOP || location === LEFT) ? newParentPane.panes.unshift(pane) : newParentPane.panes.push(pane);\n                    that.options.rootPane = newParentPane;\n                    return;\n                }\n\n                if (((location === TOP || location === BOTTOM) && targetPaneParent.orientation === VERTICAL) ||\n                    ((location === LEFT || location === RIGHT) && targetPaneParent.orientation === HORIZONTAL)) {\n                    return targetPaneParent.panes.splice(paneIndex, 0, pane);\n                }\n\n                if (targetPane) {\n                    newParentPane.size = targetPane.size;\n                    targetPane.size = null;\n                }\n\n                targetPaneParent.panes.splice(targetPaneIndex, 1);\n                newParentPane.panes.push(targetPane);\n                newParentPane.panes[action](pane);\n                targetPaneParent.panes.splice(targetPaneIndex, 0, newParentPane);\n            },\n\n            _tabDock: function name(targetPane, pane) {\n                const that = this;\n                const targetPaneParent = that._findPaneByUid(targetPane.parentUid);\n                const targetPaneIndex = targetPaneParent.panes.indexOf(targetPane);\n                const newParentPane = {\n                    type: TAB,\n                    panes: [\n                        targetPane,\n                        pane\n                    ]\n                };\n\n                if (targetPane.type === TAB) {\n                    targetPane.panes.push(pane);\n                    return;\n                }\n\n                targetPaneParent.panes.splice(targetPaneIndex, 1);\n                targetPaneParent.panes.splice(targetPaneIndex, 0, newParentPane);\n\n            },\n\n            _adjustSiblingSizes: function(pane, location, isGlobalDock) {\n                const that = this;\n                const siblings = that._getSiblings(pane);\n                const dimension = location === TOP || location === BOTTOM ? HEIGHT : WIDTH;\n                const parentSize = that.draggedPane.container[dimension];\n                const draggedPaneSize = that.draggedPane[dimension];\n                const newParentSize = parentSize - draggedPaneSize;\n                const noSizePanes = [];\n                let freeSpace = newParentSize;\n\n                if (location === MIDDLE) {\n                    return;\n                }\n\n                if (siblings.length === 2) {\n                    siblings[0].size = null;\n                    return;\n                }\n\n                siblings.forEach((childPane) => {\n                    if (childPane.uid === pane.uid) {\n                        return;\n                    }\n\n                    if (!childPane.size) {\n                        noSizePanes.push(childPane);\n                        return;\n                    }\n\n                    childPane.size = that._calculateNewSize(parentSize, newParentSize, childPane.size);\n                    freeSpace -= childPane.size;\n                });\n\n                noSizePanes.forEach((noSizePane) => {\n                    const newSize = freeSpace / noSizePanes.length;\n\n                    noSizePane.size = newSize;\n                });\n\n            },\n\n            _calculateNewSize: function(parentSize, newParentSize, paneSize) {\n                const proportion = newParentSize / parentSize;\n                let unit = \"px\";\n                let noUnitSize;\n\n                if (isPercentageSize(paneSize)) {\n                    unit = \"%\";\n                }\n                if (typeof paneSize === \"string\") {\n                    noUnitSize = +paneSize.replace(unit, \"\");\n                }\n\n                return `${noUnitSize * proportion}${unit}`;\n            },\n\n            _getSiblings: function(pane) {\n                const that = this;\n                const parent = that._findPaneByUid(pane.parentUid);\n\n                return parent.panes.filter(p => p.visible !== false &&\n                                                p.uid !== pane.uid &&\n                                                (p.unpinnable && p.unpinnable.unpinned !== true));\n            }\n        });\n\n        ui.plugin(DockManager);\n    })(window.kendo.jQuery);\n    var kendo$1 = kendo;\n\n    exports.__meta__ = __meta__;\n    exports.default = kendo$1;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n\n}));\n"]}