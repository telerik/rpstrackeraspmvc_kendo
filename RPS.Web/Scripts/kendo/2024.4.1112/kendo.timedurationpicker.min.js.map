{"version":3,"file":"kendo.timedurationpicker.min.js","names":["global","factory","exports","module","require","define","amd","globalThis","self","kendo","_globals","Timedurationpicker","this","$","undefined$1","window","ui","Widget","html","map","extend","mediaQuery","OPEN","CLOSE","CHANGE","FOCUSED","ARIA_EXPANDED","HOVEREVENTS","NS","STATEDISABLED","ARIA_HIDDEN","ARIA_DISABLED","ARIA_READONLY","DISABLED","READONLY","STATEINVALID","MASKCHAR","caret","keys","defaultColumns","hours","name","format","divider","min","max","step","minutes","seconds","milliseconds","days","TimeDurationPicker","init","element","options","columns","that","fn","call","_columns","column","extended","selectorFormat","repeat","match","length","readonly","Boolean","attr","enable","is","parents","bigScreenMQL","adaptiveMode","onChange","_timeSelector","destroy","_popupView","_wrapper","_button","_applyCssClasses","_input","_buildMask","_validation","_editable","disable","_ariaLabel","_listsContainer","value","_old","_maskedInput","val","_canUpdateLast","notify","separator","shortcuts","size","fillMode","rounded","messages","set","cancel","events","wrapper","off","_value","parseInt","_updateValueFromTimeSelector","_toggleHover","e","currentTarget","toggleClass","type","add","addClass","removeClass","on","removeAttr","_attachHandlers","TimeSelector","id","anchor","mediaQueryList","matches","focus","trigger","_selectNearestSection","_lastCaret","close","preventDefault","open","change","_removeInvalidState","button","next","renderButton","icon","shape","insertAfter","role","part","toAdd","currentPartLength","_emtpyMask","_maskParts","i","replace","end","mask","symbolsLength","start","indexOf","numberEnd","lastIndexOf","numberStart","push","autocomplete","insertBefore","hide","wrap","parent","_keydown","bind","_inputHandler","_focus","_focusout","_paste","_mouseDown","_mouseUp","_click","_mouseOnInput","selection","_triggerChange","_lastValue","_updateValueFromInput","setTimeout","index","_getPartValue","startSeparator","lastSeparator","substring","_getEmptyPart","_fillParts","clipNumber","symbols","parts","split","join","_clearParts","endBoundary","_updatePart","oldValue","entered","emrtyPart","current","search","_replacePart","newPart","toggle","_switchPart","future","past","key","keyCode","_backward","BACKSPACE","LEFT","RIGHT","popup","visible","_scrollerKeyDownHandler","UP","DOWN","altKey","ENTER","partValue","masksToAdd","valueParts","rest","Math","floor","getTimeParts","_validationIcon","iconClass","_addInvalidState","colValue","values","valid","emptyPart","_isPasted","_pasted","clipboardData","originalEvent","getData","_replaceEntire","_activeElement","validEntry","updatedPart","endSubstring","startSubstring","deletedPart","canUpdate","restored","oldpartValue","nextSeparator","old","lengthDiff","test","cssProperties","registerPrefix","registerValues","prop","roundedValues","concat","plugin","jQuery","kendo$1","__meta__","category","description","docsCategory","depends","default","Object","defineProperty"],"sources":["kendo.timedurationpicker.js"],"mappings":"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","ignoreList":[],"sourcesContent":["(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('kendo.timeselector.js'), require('kendo.icons.js')) :\n    typeof define === 'function' && define.amd ? define(['exports', 'kendo.timeselector', 'kendo.icons'], factory) :\n    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory((global.kendo = global.kendo || {}, global.kendo._globals = global.kendo._globals || {}, global.kendo._globals.Timedurationpicker = {})));\n})(this, (function (exports) {\n    const __meta__ = {\n        id: \"timedurationpicker\",\n        name: \"TimeDurationPicker\",\n        category: \"web\",\n        description: \"The TimeDurationPicker widget allows the end user to select a time range stored in milliseconds.\",\n        docsCategory: \"editors\",\n        depends: [ \"timeselector\" ]\n    };\n\n    (function($, undefined$1) {\n        var kendo = window.kendo,\n            ui = kendo.ui,\n            Widget = ui.Widget,\n            html = kendo.html,\n            map = $.map,\n            extend = $.extend,\n            mediaQuery = kendo.mediaQuery,\n            OPEN = \"open\",\n            FOCUS = \"focus\",\n            CLOSE = \"close\",\n            CHANGE = \"change\",\n            CLICK = \"click\",\n            SPAN = \"<span></span>\",\n            KEYDOWN = \"keydown\",\n            FOCUSOUT = \"focusout\",\n            FOCUSED = \"k-focus\",\n            MOUSEUP = \"mouseup\",\n            MOUSEDOWN = \"mousedown\",\n            PASTE = \"paste\",\n            NS = \".kendoTimeDurationPicker\",\n            ARIA_EXPANDED = \"aria-expanded\",\n            HOVEREVENTS = \"mouseenter\" + NS + \" mouseleave\" + NS,\n            STRING = \"string\",\n            INPUT = \"input\",\n            HOVER = \"k-hover\",\n            STATEDISABLED = \"k-disabled\",\n            ARIA_HIDDEN = \"aria-hidden\",\n            ARIA_DISABLED = \"aria-disabled\",\n            ARIA_READONLY = \"aria-readonly\",\n            ARIA_READONLY = \"aria-readonly\",\n            DISABLED = \"disabled\",\n            READONLY = \"readonly\",\n            STATEINVALID = \"k-invalid\",\n            MASKCHAR = \"_\",\n            caret = kendo.caret,\n            keys = kendo.keys,\n            NS = \".kendoTimeDurationPicker\";\n            html = kendo.html;\n\n        var defaultColumns = {\n            \"hours\": {\n                name: \"hours\",\n                format: \"## hours\",\n                divider: 3600000,\n                min: 0,\n                max: 23,\n                step: 1\n            },\n            \"minutes\": {\n                name: \"minutes\",\n                format: \"## mins\",\n                divider: 60000,\n                min: 0,\n                max: 59,\n                step: 1\n            },\n            \"seconds\": {\n                name: \"seconds\",\n                format: \"## sec\",\n                divider: 1000,\n                min: 0,\n                max: 59,\n                step: 1\n            },\n            \"milliseconds\": {\n                name: \"milliseconds\",\n                format: \"### msec\",\n                min: 0,\n                max: 999,\n                step: 1\n            },\n            \"days\": {\n                format: \"### days\",\n                name: \"days\",\n                divider: 86400000,\n                min: 0,\n                max: 365,\n                step: 1\n            }\n        };\n\n        function convertToMsec(value) {\n            return ((value.days || 0) * 86400000) + ((value.hours || 0) * 3600000) + ((value.minutes || 0) * 60000) + ((value.seconds || 0) * 1000) + (value.milliseconds || 0);\n        }\n\n        function getTimeParts(value) {\n            var rest;\n            var days = Math.floor(value / 86400000);\n            rest = value % 86400000;\n            var hours = Math.floor(rest / 3600000);\n            rest = value % 3600000;\n            var minutes = Math.floor(rest / 60000);\n            rest = value % 60000;\n            var seconds = Math.floor(rest / 1000);\n            rest = value % 1000;\n\n            return {\n                days: days,\n                hours: hours,\n                minutes: minutes,\n                seconds: seconds,\n                milliseconds: rest\n            };\n        }\n\n        function normalizeColumns(columns) {\n            return map(columns, function(column) {\n                column = typeof column === STRING ? { name: column } : column;\n                var extended = extend(true, {}, defaultColumns[column.name], column);\n                extended.selectorFormat = \"{0:\" + \"0\".repeat(extended.format.match(/#/g).length) + \"}\";\n                return extended;\n            });\n        }\n\n        var TimeDurationPicker = Widget.extend({\n            init: function(element, options) {\n                var that = this;\n\n                options = options || {};\n\n                Widget.fn.init.call(that, element, options);\n\n                that._columns = normalizeColumns(options.columns);\n                that.options.columns = that._columns;\n                that.options.readonly = options.readonly !== undefined$1 ? options.readonly : Boolean(that.element.attr(\"readonly\"));\n                that.options.enable = options.enable !== undefined$1 ? options.enable : !(Boolean(that.element.is(\"[disabled]\") || $(element).parents(\"fieldset\").is(':disabled')));\n\n                that.bigScreenMQL = mediaQuery(\"large\");\n                if (that.options.adaptiveMode == \"auto\") {\n                    that.bigScreenMQL.onChange(()=> {\n                        if (that._timeSelector) {\n                            that._timeSelector.destroy();\n                            that._timeSelector = null;\n                        }\n\n                        that._popupView();\n                    });\n                }\n\n                that._wrapper();\n                that._button();\n                that._applyCssClasses();\n                that._input();\n                that._popupView();\n\n                that._buildMask();\n                that._validation();\n                that._editable({\n                    readonly: that.options.readonly,\n                    disable: !that.options.enable\n                });\n                that._ariaLabel(that._timeSelector._listsContainer);\n                if (that.options.value) {\n                    that.value(options.value);\n                    that._old = that._maskedInput.val();\n                }\n                that._canUpdateLast = true;\n\n                kendo.notify(that);\n            },\n\n            options: {\n                name: \"TimeDurationPicker\",\n                columns: [],\n                separator: \",\",\n                shortcuts: [],\n                value: null,\n                adaptiveMode: \"none\",\n                size: \"medium\",\n                fillMode: \"solid\",\n                rounded: \"medium\",\n                messages: {\n                    set: \"Set\",\n                    cancel: \"Cancel\",\n                    days: \"Days\",\n                    hours: \"Hours\",\n                    minutes: \"Minutes\",\n                    milliseconds: \"Milliseconds\",\n                    seconds: \"Seconds\"\n                }\n            },\n\n            events: [\n                OPEN,\n                CLOSE,\n                CHANGE\n            ],\n\n            destroy: function() {\n                var that = this;\n\n                that.wrapper.off(NS);\n                that._maskedInput.off(NS);\n                if (that._timeSelector) {\n                    that._timeSelector.destroy();\n                    that._timeSelector = null;\n                }\n\n\n                if (that.bigScreenMQL) {\n                    that.bigScreenMQL.destroy();\n                }\n            },\n\n            value: function(value) {\n                var that = this;\n\n                if (value === undefined$1) {\n                    return that._value;\n                }\n\n                if (typeof value === \"number\") {\n                    value = parseInt(value);\n                } else {\n                    value = null;\n                }\n\n                that._value = value;\n                that.element.val(that._value);\n                that._timeSelector._value = that._value;\n                that._updateValueFromTimeSelector();\n            },\n\n            _toggleHover: function(e) {\n                $(e.currentTarget).toggleClass(HOVER, e.type === \"mouseenter\");\n            },\n\n            _editable: function(options) {\n                var that = this,\n                    disable = options.disable,\n                    readonly = options.readonly,\n                    element = that._maskedInput.add(that.element).off(NS),\n                    wrapper = that.wrapper.off(NS);\n\n                if (!readonly && !disable) {\n                    wrapper\n                        .removeClass(STATEDISABLED)\n                        .on(HOVEREVENTS, that._toggleHover);\n\n                    if (element && element.length) {\n                        element.removeAttr(DISABLED);\n                        element.removeAttr(READONLY);\n                    }\n                    element.attr(ARIA_DISABLED, false)\n                           .attr(ARIA_READONLY, false);\n\n                    that._attachHandlers();\n                } else {\n                    wrapper\n                        .addClass(disable ? STATEDISABLED : \"\")\n                        .removeClass(disable ? \"\" : STATEDISABLED);\n\n                    element.attr(DISABLED, disable)\n                           .attr(READONLY, readonly)\n                           .attr(ARIA_DISABLED, disable)\n                           .attr(ARIA_READONLY, readonly);\n                }\n            },\n\n            readonly: function(readonly) {\n                this._editable({\n                    readonly: readonly === undefined$1 ? true : readonly,\n                    disable: false\n                });\n            },\n\n            enable: function(enable) {\n                this._editable({\n                    readonly: false,\n                    disable: !(enable = enable === undefined$1 ? true : enable)\n                });\n            },\n\n            _popupView: function() {\n                var that = this;\n                var options = that.options;\n\n                if (!that._timeSelector) {\n                    that._timeSelector = new kendo.ui.TimeSelector(that._maskedInput, {\n                        id: that.element.attr(\"id\") + \"_timeSelector\",\n                        anchor: that.wrapper,\n                        adaptiveMode: options.adaptiveMode,\n                        columns: options.columns,\n                        shortcuts: options.shortcuts,\n                        value: options.value,\n                        size: options.adaptiveMode != \"auto\" || that.bigScreenMQL.mediaQueryList.matches ? options.size : \"large\",\n                        fillMode: options.fillMode,\n                        rounded: options.rounded,\n                        messages: options.messages,\n                        focus: function() {\n                            that._maskedInput.trigger(\"focus\");\n                            that._selectNearestSection(that._lastCaret || 0);\n                        },\n                        close: function(e) {\n                            if (that.trigger(CLOSE)) {\n                                e.preventDefault();\n                            } else {\n                                that._maskedInput.attr(ARIA_EXPANDED, false);\n                                that._timeSelector._listsContainer.attr(ARIA_HIDDEN, true);\n                            }\n                        },\n                        open: function(e) {\n                            if (that.trigger(OPEN)) {\n                                e.preventDefault();\n                            } else {\n                                that._maskedInput.attr(ARIA_EXPANDED, true);\n                                that._timeSelector._listsContainer.attr(ARIA_HIDDEN, false);\n                                that._lastCaret = caret(that._maskedInput)[0];\n                                if (that._lastCaret === that._maskedInput.val().length) {\n                                    that._lastCaret = 0;\n                                }\n                            }\n                        },\n                        change: function(value) {\n                            that._value = value;\n                            that._updateValueFromTimeSelector();\n                            that._removeInvalidState();\n                            that.trigger(CHANGE);\n                        }\n                    });\n                }\n            },\n\n            _button: function() {\n                var that = this,\n                    element = that.element,\n                    options = that.options,\n                    button;\n\n                button = element.next(\"button.k-input-button\");\n\n                if (!button[0]) {\n                    button = $(html.renderButton('<button unselectable=\"on\" tabindex=\"-1\" class=\"k-input-button\" aria-label=\"select\"></button>', {\n                        icon: \"clock-arrow-rotate\",\n                        size: options.size,\n                        fillMode: options.fillMode,\n                        shape: \"none\",\n                        rounded: \"none\"\n                    })).insertAfter(element);\n                }\n\n                that._button = button.attr({\n                    \"role\": \"button\"\n                });\n            },\n\n            _buildMask: function() {\n                var columns = this.options.columns;\n                var format;\n                var toAdd = \"\";\n                var part;\n                var currentPartLength = 0;\n\n                this._emtpyMask = \"\";\n                this._maskParts = [];\n\n                for (var i = 0; i < columns.length; i++) {\n                    part = {};\n                    format = columns[i].format;\n\n                    if (i) {\n                        toAdd = this.options.separator;\n                    }\n\n                    toAdd += format.replace(/#/g, '_');\n                    this._emtpyMask += toAdd;\n                    part.end = this._emtpyMask.length - 1;\n                    part.mask = format.replace(/#/g, '_');\n                    part.symbolsLength = part.mask.match(/_/g).length;\n                    part.start = this._emtpyMask.indexOf(part.mask, currentPartLength);\n                    part.numberEnd = this._emtpyMask.lastIndexOf(MASKCHAR) + 1;\n                    part.numberStart = this._emtpyMask.indexOf(MASKCHAR, part.start);\n\n                    currentPartLength += part.mask.length;\n                    this._maskParts.push(part);\n                }\n\n                this._old = this._emtpyMask;\n                this._maskedInput.val(this._emtpyMask);\n            },\n\n            _input: function() {\n                var that = this;\n\n                that._maskedInput = $(\"<input />\")\n                            .attr(kendo.attr(\"validate\"), \"false\")\n                            .attr({\n                                \"role\": \"combobox\",\n                                \"aria-expanded\": false,\n                                \"aria-controls\": that.element.attr(\"id\") + \"_timeSelector\",\n                                \"autocomplete\": \"off\"\n                            })\n                            .addClass(\"k-input-inner\")\n                            .insertBefore(that.element);\n\n                that.element.hide();\n            },\n\n            _wrapper: function() {\n                var that = this,\n                    element = that.element,\n                    wrapper;\n\n                wrapper = element.parents(\".k-timedurationpicker\");\n\n                if (!wrapper[0]) {\n                    wrapper = element.wrap(SPAN).parent();\n                }\n\n                that.wrapper = wrapper.addClass(\"k-timedurationpicker k-input\");\n            },\n\n            _attachHandlers: function() {\n                var that = this;\n\n                that._maskedInput\n                        .on(KEYDOWN + NS, that._keydown.bind(that))\n                        .on(INPUT + NS, that._inputHandler.bind(that))\n                        .on(FOCUS + NS, that._focus.bind(that))\n                        .on(FOCUSOUT + NS, that._focusout.bind(that))\n                        .on(PASTE + NS, that._paste.bind(that))\n                        .on(MOUSEDOWN + NS, that._mouseDown.bind(that))\n                        .on(MOUSEUP + NS, that._mouseUp.bind(that));\n\n                that.wrapper.on(CLICK + NS, \".k-input-button\", that._click.bind(that));\n            },\n\n            _mouseDown: function() {\n                this._mouseOnInput = true;\n            },\n\n            _mouseUp: function() {\n                var selection = caret(this._maskedInput[0]);\n                var value = this._maskedInput[0].value;\n                if (selection[0] === selection[1]) {\n                    this._selectNearestSection(selection[1] == value.length ? value.length - 1 : selection[1]);\n                }\n            },\n\n            _triggerChange: function() {\n                if ((this._lastValue == undefined$1 && this._value) || this._lastValue != this._value) {\n                    this._lastValue = this._value;\n                    this.trigger(CHANGE);\n                }\n            },\n\n            _focusout: function() {\n                this._updateValueFromInput();\n                this._triggerChange();\n\n                this._canUpdateLast = true;\n                this.wrapper.removeClass(FOCUSED);\n            },\n\n            _focus: function() {\n                var that = this;\n                if (!that._mouseOnInput) {\n                    setTimeout(function() {\n                        that._selectNearestSection(0);\n                    }, 10);\n                }\n                that._mouseOnInput = false;\n                that.wrapper.addClass(FOCUSED);\n            },\n\n            _selectNearestSection: function(index) {\n                var part;\n\n                for (var i = 0; i < this._maskParts.length; i++ ) {\n                    part = this._maskParts[i];\n                    if (index >= part.start && index <= part.end) {\n                        caret(this._maskedInput[0], part.numberStart, part.numberEnd);\n                    }\n                }\n            },\n\n            _getPartValue: function(value, index) {\n                var that = this;\n                var separator = that.options.separator;\n                var startSeparator = value.indexOf(separator,index);\n                var lastSeparator = value.lastIndexOf(separator,index);\n                return value.substring(lastSeparator < 0 ? 0 : lastSeparator + 1 , startSeparator < 0 ? value.length : startSeparator );\n            },\n\n            _getEmptyPart: function(index) {\n                return this._getPartValue(this._emtpyMask, index);\n            },\n\n            _fillParts: function(clipNumber) {\n                var parts = this._emtpyMask.split(this.options.separator);\n                var symbols;\n                clipNumber = clipNumber + \"\";\n\n                for (var i = 0; i < parts.length; i++) {\n                    symbols = parts[i].match(/_/g).length;\n                    if (symbols > clipNumber.length) {\n                        parts[i] = parts[i].replace(MASKCHAR.repeat(symbols), \"0\".repeat(symbols - clipNumber.length) + clipNumber);\n                    } else {\n                        parts[i] = parts[i].replace(MASKCHAR.repeat(symbols), clipNumber.substring(0, symbols));\n                        clipNumber = clipNumber.substring(symbols, symbols.length);\n                    }\n                }\n                return parts.join(this.options.separator);\n            },\n\n            _clearParts: function(value, start, end) {\n                var parts = value.split(this.options.separator);\n                var index = 0;\n                var endBoundary;\n\n                for (var i = 0; i < parts.length; i++) {\n                    endBoundary = index + parts[i].length;\n                    if ((index <= start && endBoundary >= start) || (index <= end && endBoundary >= end)) {\n                        parts[i] = this._getEmptyPart(index);\n                    }\n                    index += (parts[i].length + 1);\n                }\n                return parts.join(this.options.separator);\n            },\n\n            _updatePart: function(oldValue, entered) {\n                var emrtyPart = this._getEmptyPart(this._old.indexOf(oldValue));\n                var current = oldValue.substring(emrtyPart.indexOf(MASKCHAR), emrtyPart.lastIndexOf(MASKCHAR) + 1);\n                var format = \"{0:\" + \"0\".repeat(current.length) + \"}\";\n\n                if (current.indexOf(MASKCHAR) >= 0 || !(oldValue[oldValue.search(/[0-9]/)] === \"0\") || entered.length > 1) {\n                    return oldValue.replace(current, kendo.format(format, parseInt(entered)));\n                } else {\n                    return oldValue.replace(current, kendo.format(format, parseInt(current + entered)));\n                }\n            },\n\n            _replacePart: function(oldValue, newPart, index) {\n                return oldValue.replace(this._getPartValue(oldValue, index), newPart);\n            },\n\n            _click: function() {\n                var that = this;\n\n                if (!that._timeSelector) {\n                    return;\n                }\n\n                that._timeSelector.toggle();\n            },\n\n            _switchPart: function(options) {\n                var separator = this.options.separator;\n                var selection = options.caret != undefined$1 ? options.caret : caret(this._maskedInput[0])[0];\n                var value = this._maskedInput.val();\n                var index;\n\n                if (options.next) {\n                    index = value.indexOf(separator, selection);\n                    if (index < 0) {\n                        index = value.length - 1;\n                    } else {\n                        index++;\n                    }\n                } else {\n                    index = value.lastIndexOf(separator, selection);\n                    if (index < 0 ) {\n                        index = 0;\n                    } else {\n                        index--;\n                    }\n                }\n                this._selectNearestSection(index);\n            },\n\n            _keydown: function(e) {\n                var key = e.keyCode;\n                var separator = this.options.separator;\n                var selection;\n                var value;\n                var index;\n                var future;\n                var past;\n\n                this._backward = key === keys.BACKSPACE;\n                if (key == keys.LEFT || key == keys.RIGHT) {\n                    e.preventDefault();\n                    selection = caret(this._maskedInput[0])[0];\n                    value = this._maskedInput.val();\n                    future = value.indexOf(separator, selection);\n                    past = value.lastIndexOf(separator, selection);\n\n                    if ((future < 0 && key == keys.RIGHT) || (past < 0 && key == keys.LEFT)) {\n                        return;\n                    }\n\n                    index = (key == keys.LEFT) ? (past - 1) : (future + 1);\n                    this._selectNearestSection(index);\n                    if (key == keys.LEFT) {\n                        this._canUpdateLast = true;\n                    }\n                } else if (this._timeSelector.popup.visible()) {\n                    this._timeSelector._scrollerKeyDownHandler(e);\n                } else if (key == keys.UP || key == keys.DOWN) {\n                    e.preventDefault();\n                    if (e.altKey) {\n                        this._timeSelector.toggle();\n                    }\n                } else if (key == keys.ENTER) {\n                    this._updateValueFromInput();\n                    this._triggerChange();\n                }\n            },\n\n            _updateValueFromTimeSelector: function() {\n                var that = this;\n                var valueParts = getTimeParts(that._value);\n                var value = \"\";\n                var column = this._columns[i];\n                var part;\n                var partValue;\n                var masksToAdd;\n\n                for (var i = 0; i < this._columns.length; i++) {\n                    column = this._columns[i];\n                    partValue = valueParts[column.name] + '';\n                    part = this._maskParts[i];\n\n                    if (i) {\n                        value += that.options.separator;\n                    }\n\n                    if (!valueParts[column.name]) {\n                        value += part.mask;\n                        continue;\n                    }\n\n                    masksToAdd = part.symbolsLength - partValue.length;\n                    value += part.mask.replace(MASKCHAR.repeat(part.symbolsLength), \"0\".repeat(masksToAdd < 0 ? 0 : masksToAdd) + partValue);\n                }\n\n                that._maskedInput.val(value);\n                that._old = value;\n            },\n\n            _validation: function() {\n                var that = this;\n                var element = that.element;\n\n                that._validationIcon = $(kendo.ui.icon({ icon: \"exclamation-circle\", iconClass: \"k-input-validation-icon k-hidden\" })).insertAfter(element);\n            },\n\n            _addInvalidState: function() {\n                this.wrapper.addClass(STATEINVALID);\n                this._validationIcon.removeClass('k-hidden');\n            },\n\n            _removeInvalidState: function() {\n                this.wrapper.removeClass(STATEINVALID);\n                this._validationIcon.addClass('k-hidden');\n            },\n\n            _updateValueFromInput: function() {\n                var val = this._maskedInput.val();\n                var values = {};\n                var valid = true;\n                var column;\n                var part;\n                var colValue;\n\n                for (var i = 0; i < this._columns.length; i++) {\n                    column = this._columns[i];\n                    part = this._maskParts[i];\n                    colValue = val.substring(part.numberStart, part.numberEnd).replace(/_/g, \"\");\n                    colValue = kendo.parseInt(colValue || 0);\n\n                    if (colValue >= column.min && colValue <= column.max) {\n                        values[column.name] = colValue;\n                    } else {\n                        valid = false;\n                        break;\n                    }\n                }\n\n                if (valid) {\n                    this._value = convertToMsec(values);\n                    this.element.val(this._value || \"\");\n                    this._timeSelector._value = this._value;\n                    this._removeInvalidState();\n                } else {\n                    this._addInvalidState();\n                }\n            },\n\n            _paste: function(e) {\n                this._isPasted = true;\n                this._pasted = (e.clipboardData || e.originalEvent.clipboardData).getData('Text');\n                var emptyPart;\n\n                var selection = caret(this._maskedInput);\n\n                if (this._maskedInput.val().length == selection[1] && !selection[0]) {\n                    this._replaceEntire = true;\n                } else {\n                    emptyPart = this._getEmptyPart(selection[0]);\n                    this._pasted = this._pasted.substring(0, emptyPart.match(/_/g).length);\n                }\n            },\n\n            _inputHandler: function() {\n                if (kendo._activeElement() !== this._maskedInput[0]) {\n                    return;\n                }\n\n                var that = this;\n                var old = that._old;\n                var separator = that.options.separator;\n                var value = that._maskedInput[0].value;\n                var selection = caret(that._maskedInput)[0];\n                var lengthDiff = old.length - value.length;\n                var entered;\n                var validEntry;\n                var updatedPart;\n                var endSubstring;\n                var startSubstring;\n                var deletedPart;\n                var emptyPart;\n                var canUpdate;\n                var restored;\n                var oldpartValue;\n                var nextSeparator;\n\n                entered = that._isPasted ? that._pasted : value.substring(selection - 1, selection);\n                validEntry = /\\d/.test(entered);\n\n                if (that._isPasted && that._replaceEntire && validEntry) {\n                    that._old = that._fillParts(parseInt(entered));\n                    that._maskedInput.val(that._old);\n                    that._selectNearestSection(0);\n                    that._isPasted = that._replaceEntire = false;\n                    return;\n                }\n\n                if (that._isPasted) {\n                    lengthDiff = 0;\n                }\n\n                that._isPasted = false;\n\n                if ((entered === separator && !that._backward)) {\n                    that._maskedInput.val(that._old);\n                    that._switchPart({ caret: selection, next: true });\n                    return;\n                }\n\n                if (!value && that._backward) {\n                    that._old = that._emtpyMask;\n                    that._maskedInput.val(that._old);\n                    that._selectNearestSection(selection);\n                    return;\n                }\n\n                if ((!validEntry && !that._backward)) {\n                    that._maskedInput.val(that._old);\n                    that._selectNearestSection(selection);\n                    return;\n                }\n\n                if (!lengthDiff || lengthDiff > 0) {\n                    endSubstring = value.substring(selection, value.length);\n                    startSubstring = value.substring(0, selection);\n                    deletedPart = that._emtpyMask.substring(startSubstring.length, old.indexOf(endSubstring));\n\n                    restored = startSubstring + deletedPart + endSubstring;\n                    oldpartValue = that._getPartValue(that._old, selection);\n                    nextSeparator = that._old.indexOf(separator, that._old.indexOf(oldpartValue) + 1);\n\n                    if (that._backward) {\n                        // if multiple parts\n                        if (deletedPart.split(separator).length > 1) {\n                            that._old = this._clearParts(restored, selection, selection + deletedPart.length);\n                        } else {\n                            emptyPart = this._getEmptyPart(selection);\n                            if (emptyPart == oldpartValue) {\n                                that._maskedInput.val(that._old);\n                                that._switchPart({ caret: selection });\n                                return;\n                            }\n                            that._old = that._replacePart(restored, emptyPart, selection);\n                        }\n                        that._maskedInput.val(that._old);\n                        that._selectNearestSection(selection);\n                        return;\n                    }\n\n                    if (nextSeparator < 0 && oldpartValue.indexOf(MASKCHAR) === -1 && !that._canUpdateLast) {\n                        that._maskedInput.val(that._old);\n                        that._selectNearestSection(selection);\n                        return;\n                    }\n\n                    if (validEntry) {\n                        updatedPart = that._updatePart(oldpartValue, entered);\n                        canUpdate = updatedPart[updatedPart.search(/[0-9]/)] === \"0\";\n                        restored = that._replacePart(restored, updatedPart, selection);\n                        that._maskedInput.val(restored);\n                        if (nextSeparator > 0 && !canUpdate) {\n                            that._selectNearestSection(nextSeparator + 1, true);\n                        } else {\n                            that._selectNearestSection(selection);\n                        }\n\n                        that._canUpdateLast = !(nextSeparator < 0 && !canUpdate);\n                    }\n                    that._old = restored;\n                } else if (lengthDiff < 0) {\n                    that._maskedInput.val(that._old);\n                    that._selectNearestSection(that._old.length - 1);\n                }\n            },\n\n        });\n\n        kendo.cssProperties.registerPrefix(\"TimeDurationPicker\", \"k-input-\");\n\n        kendo.cssProperties.registerValues(\"TimeDurationPicker\", [{\n            prop: \"rounded\",\n            values: kendo.cssProperties.roundedValues.concat([['full', 'full']])\n        }]);\n\n        ui.plugin(TimeDurationPicker);\n\n    })(window.kendo.jQuery);\n    var kendo$1 = kendo;\n\n    exports.__meta__ = __meta__;\n    exports.default = kendo$1;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n\n}));\n"]}