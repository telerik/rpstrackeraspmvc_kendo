{"version":3,"file":"kendo.html.base.min.js","names":["global","factory","exports","module","require","define","amd","globalThis","self","kendo","_globals","HtmlBase","this","$","window","Class","html","HTMLBase","extend","init","element","options","name","_initOptions","stylingOptions","_addClasses","that","previouslyAddedClasses","wrapper","data","map","option","validFill","cssProperties","getValidClass","widget","propName","value","fillMode","length","fill","removeClass","join","addClass","outerHTML","jQuery","kendo$1","__meta__","id","category","description","depends","features","default","Object","defineProperty"],"sources":["kendo.html.base.js"],"mappings":"CAAA,SAAWA,EAAQC,GACI,iBAAZC,SAA0C,oBAAXC,OAAyBF,EAAQC,QAASE,QAAQ,kBACtE,mBAAXC,QAAyBA,OAAOC,IAAMD,OAAO,CAAC,UAAW,kBAAmBJ,GACRA,IAA1ED,EAA+B,oBAAfO,WAA6BA,WAAaP,GAAUQ,MAAsBC,MAAQT,EAAOS,OAAS,CAAC,EAAGT,EAAOS,MAAMC,SAAWV,EAAOS,MAAMC,UAAY,CAAC,EAAGV,EAAOS,MAAMC,SAASC,SAAW,CAAC,GACjN,CAJD,CAIGC,MAAM,SAAWV,IAUhB,SAAUW,GACN,IAAIJ,EAAQK,OAAOL,MACfM,EAAQN,EAAMM,MAElBN,EAAMO,KAAOP,EAAMO,MAAQ,CAAC,EAE5B,IAAIC,EAAWF,EAAMG,OAAO,CACxBC,KAAM,SAASC,EAASC,GACTT,KACNQ,QAAUP,EAAEO,UACjBC,EAAUA,GAAW,CAAC,GACPC,KAHJV,KAINW,aAAaF,EACtB,EACAA,QAAS,CACLG,eAAgB,IAEpBC,YAAa,WACT,IAAIC,EAAOd,KACPS,EAAUK,EAAKL,QACfG,EAAiBH,EAAQG,eACzBG,EAAyBD,EAAKE,QAAQC,KAAK,iBAE/CL,EAAiBA,EAAeM,KAAI,SAASC,GACzC,IAAIC,EAEJ,MAAe,eAAXD,IACAC,EAAYvB,EAAMwB,cAAcC,cAAc,CAC1CC,OAAQd,EAAQC,KAChBc,SAAU,WACVC,MAAOhB,EAAQiB,aAGoB,IAArBN,EAAUO,OAKzB9B,EAAMwB,cAAcC,cAAc,CACrCC,OAAQd,EAAQC,KAChBc,SAAUL,EACVM,MAAOhB,EAAQU,GACfS,KAAMnB,EAAQiB,WARH,EAUnB,IAEIX,GACAD,EAAKE,QAAQa,YAAYd,EAAuBe,KAAK,MAGzDhB,EAAKE,QAAQC,KAAK,gBAAiBL,GACnCE,EAAKE,QAAQe,SAASnB,EAAekB,KAAK,KAC9C,EACA1B,KAAM,WAGF,OAFWJ,KAECgB,QAAQ,GAAGgB,SAC3B,IAGJ/B,EAAEK,OAAOT,EAAMO,KAAM,CACjBC,SAAUA,GAGjB,CAhED,CAgEGH,OAAOL,MAAMoC,QAChB,IAAIC,EAAUrC,MAEdP,EAAQ6C,SA5ES,CACbC,GAAI,YACJ1B,KAAM,YACN2B,SAAU,MACVC,YAAa,GACbC,QAAS,CAAC,QACVC,SAAU,IAuEdlD,EAAQmD,QAAUP,EAElBQ,OAAOC,eAAerD,EAAS,aAAc,CAAEmC,OAAO,GAEzD","ignoreList":[],"sourcesContent":["(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('kendo.core.js')) :\n    typeof define === 'function' && define.amd ? define(['exports', 'kendo.core'], factory) :\n    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory((global.kendo = global.kendo || {}, global.kendo._globals = global.kendo._globals || {}, global.kendo._globals.HtmlBase = {})));\n})(this, (function (exports) {\n    const __meta__ = {\n        id: \"html.base\",\n        name: \"Html.Base\",\n        category: \"web\",\n        description: \"\",\n        depends: [\"core\"],\n        features: []\n    };\n\n    (function($, undefined$1) {\n        var kendo = window.kendo,\n            Class = kendo.Class;\n\n        kendo.html = kendo.html || {};\n\n        var HTMLBase = Class.extend({\n            init: function(element, options) {\n                var that = this;\n                that.element = $(element);\n                options = options || {};\n                delete options.name;\n                that._initOptions(options);\n            },\n            options: {\n                stylingOptions: []\n            },\n            _addClasses: function() {\n                var that = this,\n                    options = that.options,\n                    stylingOptions = options.stylingOptions,\n                    previouslyAddedClasses = that.wrapper.data(\"added-classes\");\n\n                stylingOptions = stylingOptions.map(function(option) {\n                    var validFill;\n\n                    if (option === \"themeColor\") {\n                        validFill = kendo.cssProperties.getValidClass({\n                            widget: options.name,\n                            propName: \"fillMode\",\n                            value: options.fillMode\n                        });\n\n                        if (!validFill || validFill.length === 0) {\n                            return \"\";\n                        }\n                    }\n\n                    return kendo.cssProperties.getValidClass({\n                        widget: options.name,\n                        propName: option,\n                        value: options[option],\n                        fill: options.fillMode\n                    });\n                });\n\n                if (previouslyAddedClasses) {\n                    that.wrapper.removeClass(previouslyAddedClasses.join(\" \"));\n                }\n\n                that.wrapper.data(\"added-classes\", stylingOptions);\n                that.wrapper.addClass(stylingOptions.join(\" \"));\n            },\n            html: function() {\n                var that = this;\n\n                return that.wrapper[0].outerHTML;\n            }\n        });\n\n        $.extend(kendo.html, {\n            HTMLBase: HTMLBase\n        });\n\n    })(window.kendo.jQuery);\n    var kendo$1 = kendo;\n\n    exports.__meta__ = __meta__;\n    exports.default = kendo$1;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n\n}));\n"]}