{"version":3,"file":"kendo.pivot.configurator.min.js","names":["global","factory","exports","module","require","define","amd","globalThis","self","kendo","_globals","PivotConfigurator","Dom","HtmlChip","HtmlChiplist","Treeview","TreeviewDraganddrop","Icons","PivotgridCommonCmnChunk","this","kendo_dom_js","kendo_html_chip_js","kendo_html_chiplist_js","kendo_treeview_js","kendo_treeview_draganddrop_js","kendo_icons_js","kendo_pivotgridCommon_cmn_chunk_js","$","window","ui","encode","htmlEncode","Widget","ns","HOVER_EVENTS","SETTING_CONTAINER_TEMPLATE","name","addKPI","data","found","idx","length","type","splice","caption","defaultHierarchy","uniqueName","kpiNode","node","normalizeKPIs","settingTargetFromNode","target","closest","PivotConfiguratorV2","extend","init","element","options","fn","call","_ariaId","attr","guid","addClass","role","_dataSource","navigatable","_initPivotGridConfiguratorNavigation","_layout","refresh","height","notify","events","orientation","filterable","sortable","messages","title","cancelButtonText","applyButtonText","measures","columns","rows","setDataSource","dataSource","that","configuratorNavigation","H","tabIndex","start","firstCell","first","setAttribute","_refreshHandler","unbind","_errorHandler","_progressHandler","_error","bind","_requestStart","PivotDataSourceV2","create","horizontal","panel","append","headerTextId","SETTINGS_TEMPLATE","appendTo","formClass","ariaId","CONTENT_TEMPLATE","find","each","index","elm","html","renderChipList","_fields","cancelText","applyText","ACTIONS_TEMPLATE","_targets","on","_actions","e","preventDefault","currentTarget","_applyState","read","_cancelChanges","treeView","last","targetItemTemplate","menuenabled","chip","renderChip","TARGET_ITEM_TEMPLATE","fillMode","themeColor","rounded","removable","removeIcon","actions","icon","_createTarget","template","connectWith","empty","fieldMenu","setting","forEach","x","PivotSettingTargetV2","hint","clone","remove","item","wrapper","id","dataItem","getByUid","checked","container","kendoTreeView","checkboxes","checkChildren","result","hasChildren","aggregator","local","uid","dataTextField","autoBind","check","sender","action","I","toggleSelection","payload","state","columnAxes","_state","rowAxes","measureAxes","u","cubeSchema","restoreMeasure","items","_checkMembers","trigger","_redraw","_treeViewDataSource","off","_clickHandler","HierarchicalDataSource","schema","model","transport","fields","dsMeasures","fetchOpts","catalog","cube","fetchOptions","url","members","concat","isEmptyObject","dimensions","success","connection","restrictions","catalogName","cubeName","command","h","then","newFields","get","_getKPIOptions","buildKPImeasures","_loadFieldsCommand","newData","hash","field","dimensionUniqueName","hierarchyUniqueName","_progress","toggle","progress","destroy","fetch","plugin","outerHeight","measuresLabel","columnsLabel","rowsLabel","fieldsLabel","PivotDataSource","kpi","schemaDimensions","done","cubeBuilder","fail","error","schemaKPIs","schemaMeasures","schemaLevels","schemaHierarchies","form","dragAndDrop","dragstart","sourceNode","measure","drag","status","dropTarget","validate","setStatusClass","drop","push","add","sortIcon","getIcons","PivotSettingTarget","emptyTemplate","columnsContainer","rowsContainer","measuresContainer","_toggleHover","toggleClass","_resize","_cube","_catalog","kpiMeasure","value","goal","trend","cssProperties","registerPrefix","registerValues","prop","values","roundedValues","jQuery","kendo$1","__meta__","category","depends","hidden","default","Object","defineProperty"],"sources":["kendo.pivot.configurator.js"],"mappings":"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","ignoreList":[],"sourcesContent":["(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('kendo.dom.js'), require('kendo.html.chip.js'), require('kendo.html.chiplist.js'), require('kendo.treeview.js'), require('kendo.treeview.draganddrop.js'), require('kendo.icons.js'), require('kendo.pivotgrid-common.cmn.chunk.js')) :\n    typeof define === 'function' && define.amd ? define(['exports', 'kendo.dom', 'kendo.html.chip', 'kendo.html.chiplist', 'kendo.treeview', 'kendo.treeview.draganddrop', 'kendo.icons', 'kendo.pivotgrid-common.cmn.chunk'], factory) :\n    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory((global.kendo = global.kendo || {}, global.kendo._globals = global.kendo._globals || {}, global.kendo._globals.PivotConfigurator = {}), global.kendo._globals.Dom, global.kendo._globals.HtmlChip, global.kendo._globals.HtmlChiplist, global.kendo._globals.Treeview, global.kendo._globals.TreeviewDraganddrop, global.kendo._globals.Icons, global.kendo._globals.PivotgridCommonCmnChunk));\n})(this, (function (exports, kendo_dom_js, kendo_html_chip_js, kendo_html_chiplist_js, kendo_treeview_js, kendo_treeview_draganddrop_js, kendo_icons_js, kendo_pivotgridCommon_cmn_chunk_js) {\n    const __meta__ = {\n        id: \"pivot.configurator\",\n        name: \"PivotConfigurator\",\n        category: \"web\",\n        depends: [\"dropdownlist\", \"treeview\", \"treeview.draganddrop\", \"pivot.fieldmenu\", \"html.chip\", \"html.chiplist\", \"icons\", \"pivotgrid-common.cmn.chunk\"],\n        hidden: true\n    };\n\n\n    (function($, undefined$1) {\n        var kendo = window.kendo,\n            ui = kendo.ui,\n            encode = kendo.htmlEncode,\n            Widget = ui.Widget,\n            ns = \".kendoPivotConfigurator\",\n            HOVER_EVENTS = \"mouseenter\" + ns + \" mouseleave\" + ns,\n            SETTINGS_TEMPLATE = ({ title, headerTextId }) => '<div class=\"k-pivotgrid-configurator-header\">' +\n                                                `<div class=\"k-pivotgrid-configurator-header-text\" id=\"${headerTextId}\">${encode(title)}</div>` +\n                                              '</div>',\n            CONTENT_TEMPLATE = ({ formClass, horizontal, ariaId }) => '<div class=\"k-pivotgrid-configurator-content\">' +\n                `<form class=\"${encode(formClass)}\">` +\n                    `${horizontal ? '<div class=\"k-form-field-wrapper\">' : ''}` +\n                    '<div class=\"k-form-field\">' +\n                        `<label class=\"k-label\" id=\"${ariaId}-configurator-fields\">Fields</label>` +\n                    '</div>' +\n                    '<div class=\"k-form-field\">' +\n                      '<div class=\"k-fields-list-wrapper\"></div>' +\n                    '</div>' +\n                    `${horizontal ? '</div><div class=\"k-form-field-wrapper\">' : ''}` +\n                    '<div class=\"k-form-field\">' +\n                        `<label class=\"k-label\" id=\"${ariaId}-configurator-columns\">Columns</label>` +\n                    '</div>' +\n                    '<div class=\"k-chip-list k-column-fields\"></div>' +\n                    '<div class=\"k-form-field\">' +\n                        `<label class=\"k-label\" id=\"${ariaId}-configurator-rows\">Rows</label>` +\n                    '</div>' +\n                    '<div class=\"k-chip-list k-row-fields\"></div>' +\n                    `${horizontal ? '</div><div class=\"k-form-field-wrapper\">' : ''}` +\n                    '<div class=\"k-form-field\">' +\n                        `<label class=\"k-label\" id=\"${ariaId}-configurator-values\">Values</label>` +\n                    '</div>' +\n                    '<div class=\"k-chip-list k-column-fields\"></div>' +\n                    `${horizontal ? '</div>' : ''}` +\n                '</form>' +\n            '</div>',\n            TARGET_ITEM_TEMPLATE = ({ name }) => '<span>' +\n                    `<span class=\"k-chip-label\">${encode(name)}</span>` +\n                '</span>',\n            ACTIONS_TEMPLATE = ({ cancelText, applyText }) =>\n                    '<div class=\"k-pivotgrid-configurator-actions k-actions k-hstack k-justify-content-end\">' +\n                      '<button class=\"k-button k-button-md k-rounded-md k-button-solid k-button-solid-base\" aria-disabled=\"false\">' +\n                        `<span class=\"k-button-text\">${encode(cancelText)}</span>` +\n                      '</button>' +\n                      '<button class=\"k-button k-button-md k-rounded-md k-button-solid k-button-solid-primary\" aria-disabled=\"false\">' +\n                        `<span class=\"k-button-text\">${encode(applyText)}</span>` +\n                      '</button>' +\n                    '</div>',\n            SETTING_CONTAINER_TEMPLATE = ({ name }) => `<div class=\"k-pivotgrid-target k-pivotgrid-configurator-section\"><strong>${encode(name)}</strong><div class=\"k-pivotgrid-target-wrap\"></div>`;\n\n        function addKPI(data) {\n            var found;\n            var idx = 0;\n            var length = data.length;\n\n            for (; idx < length; idx++) {\n                if (data[idx].type == 2) {\n                    found = true;\n                    break;\n                }\n            }\n\n            if (found) {\n                data.splice(idx + 1, 0, {\n                    caption: \"KPIs\",\n                    defaultHierarchy: \"[KPIs]\",\n                    name: \"KPIs\",\n                    uniqueName: \"[KPIs]\"\n                });\n            }\n        }\n\n        function kpiNode(node) {\n            return {\n                name: node.uniqueName,\n                type: node.type\n            };\n        }\n\n        function normalizeKPIs(data) {\n            for (var idx = 0, length = data.length; idx < length; idx++) {\n                data[idx].uniqueName = data[idx].name;\n                data[idx].type = \"kpi\";\n            }\n\n            return data;\n        }\n\n        function settingTargetFromNode(node) {\n            var target = $(node).closest(\".k-pivot-setting\");\n\n            if (target.length) {\n                return target.data(\"kendoPivotSettingTarget\");\n            }\n            return null;\n        }\n\n        function getIcons(sortIcon, options) {\n            var sortable = options.sortable;\n            var result = '';\n\n            if (sortable) {\n                result += sortIcon ? `<span class=\"k-chip-action k-chip-more-action\">${kendo.ui.icon(sortIcon + \"-sm\")}</span>` : '';\n            }\n\n            if (options.filterable || sortable) {\n                result += `<span class=\"k-setting-fieldmenu k-chip-action\">${kendo.ui.icon(\"more-vertical\")}</span>`;\n            }\n\n            result += `<span class=\"k-setting-delete k-chip-action\">${kendo.ui.icon(\"x\")}</span>`;\n\n            return result;\n        }\n\n        var PivotConfiguratorV2 = Widget.extend({\n            init: function(element, options) {\n                Widget.fn.init.call(this, element, options);\n\n                this._ariaId = this.element.attr(\"id\") || kendo.guid();\n                this.element.addClass(\"k-pivotgrid-configurator\");\n                this.element.attr({\n                    \"role\": \"dialog\",\n                    \"aria-hidden\": true,\n                    \"aria-labelledby\": `${this._ariaId}-configurator-header`\n                });\n\n                this._dataSource();\n\n                if (this.options.navigatable) {\n                    this._initPivotGridConfiguratorNavigation();\n                }\n\n                this._layout();\n\n                this.refresh();\n\n                if (options.height) {\n                    this.element.height(options.height);\n                }\n\n                kendo.notify(this);\n            },\n\n            events: [],\n\n            options: {\n                name: \"PivotConfiguratorV2\",\n                orientation: \"vertical\",\n                filterable: false,\n                sortable: false,\n                messages: {\n                    title: \"Settings\",\n                    cancelButtonText: \"Cancel\",\n                    applyButtonText: \"Apply\",\n                    measures: \"Select some fields to begin setup\",\n                    columns: \"Select some fields to begin setup\",\n                    rows: \"Select some fields to begin setup\"\n                }\n            },\n\n            setDataSource: function(dataSource) {\n                this.options.dataSource = dataSource;\n\n                this._dataSource();\n\n                if (this.measures) {\n                    this.measures.setDataSource(dataSource);\n                }\n\n                if (this.rows) {\n                    this.rows.setDataSource(dataSource);\n                }\n\n                if (this.columns) {\n                    this.columns.setDataSource(dataSource);\n                }\n\n                this.refresh();\n            },\n\n            _initPivotGridConfiguratorNavigation: function() {\n                var that = this;\n                that.configuratorNavigation = new kendo_pivotgridCommon_cmn_chunk_js.H({ tabIndex: 0 });\n                that.configuratorNavigation.start(that.element[0]);\n\n                const firstCell = that.configuratorNavigation.first;\n\n                if (firstCell) {\n                    firstCell.setAttribute('tabindex', '0');\n                }\n            },\n\n            _dataSource: function() {\n                var that = this;\n\n                if (that.dataSource && that._refreshHandler) {\n                    that.dataSource.unbind(\"change\", that._refreshHandler)\n                                   .unbind(\"error\", that._errorHandler)\n                                   .unbind(\"progress\", that._progressHandler);\n                } else {\n                    that._errorHandler = that._error.bind(that);\n                    that._refreshHandler = that.refresh.bind(that);\n                    that._progressHandler = that._requestStart.bind(that);\n                }\n\n                that.dataSource = kendo.data.PivotDataSourceV2.create(that.options.dataSource);\n                that.dataSource.bind(\"change\", that._refreshHandler)\n                               .bind(\"error\", that._errorHandler)\n                               .bind(\"progress\", that._progressHandler);\n            },\n\n            _layout: function() {\n\n                var that = this;\n                var options = that.options;\n                var messages = options.messages;\n                var horizontal = options.orientation == \"horizontal\";\n\n                var panel = $(\"<div class='k-pivotgrid-configurator-panel k-pivotgrid-configurator-push'></div>\");\n\n                panel.addClass(horizontal ? \"k-pivotgrid-configurator-horizontal\" : \"k-pivotgrid-configurator-vertical\");\n\n                that.element.append(panel);\n\n                that.panel = panel;\n\n                $(SETTINGS_TEMPLATE({ title: this.options.messages.title, headerTextId: `${that._ariaId}-configurator-header` })).appendTo(that.panel);\n\n                $(CONTENT_TEMPLATE({ formClass: horizontal ? \"k-form k-form-md k-form-horizontal\" : \"k-form k-form-md\", filterable: options.filterable, horizontal: horizontal, ariaId: that._ariaId }))\n                    .appendTo(that.panel).find(\".k-chip-list\")\n                    .each(function(index, elm) {\n                        kendo.html.renderChipList(elm, $.extend({}, options));\n                        $(elm).attr({\n                            \"role\": \"listbox\",\n                            \"aria-orientation\": \"horizontal\",\n                        });\n                    });\n\n                that._fields();\n                $(ACTIONS_TEMPLATE({ cancelText: messages.cancelButtonText, applyText: messages.applyButtonText })).appendTo(that.panel);\n                that._targets();\n\n                that.element.on(\"click\" + ns, \".k-pivotgrid-configurator-actions > button\", that._actions.bind(that));\n            },\n\n            _actions: function(e) {\n                e.preventDefault();\n\n                var target = $(e.currentTarget).closest(\":not(path,svg)\");\n                if (target.index()) {\n                    this.columns._applyState();\n                    this.rows._applyState();\n                    this.measures._applyState();\n                    this.dataSource.read();\n                } else {\n                    this.columns._cancelChanges();\n                    this.rows._cancelChanges();\n                    this.measures._cancelChanges();\n                    this.treeView.dataSource.read();\n                }\n            },\n\n            _targets: function() {\n                var that = this;\n                var columns = that.panel.find(\".k-column-fields\").first();\n                var rows = that.panel.find(\".k-row-fields\");\n                var measures = that.panel.find(\".k-chip-list\").last();\n                var options = this.options;\n\n                var targetItemTemplate = ({ name, menuenabled }) => {\n                        var chip = kendo.html.renderChip(TARGET_ITEM_TEMPLATE({ name, menuenabled }), $.extend({}, options, {\n                            fillMode: \"solid\",\n                            themeColor: \"base\",\n                            rounded: \"md\",\n                            removable: true,\n                            removeIcon: \"x-circle\",\n                            actions: menuenabled ? [\n                                { icon: \"more-vertical\" }\n                            ] : null\n                        }));\n\n                        return chip;\n                    };\n\n                this.columns = this._createTarget(columns, {\n                    navigatable: options.navigatable,\n                    filterable: options.filterable,\n                    sortable: options.sortable,\n                    template: targetItemTemplate,\n                    connectWith: rows,\n                    messages: {\n                        empty: options.messages.columns,\n                        fieldMenu: this.options.messages.fieldMenu\n                    },\n                    configuratorNavigation: that.configuratorNavigation\n                });\n                this.columns.element.attr(\"aria-labelledby\", `${this._ariaId}-configurator-header ${this._ariaId}-configurator-columns`);\n\n                this.rows = this._createTarget(rows, {\n                    navigatable: options.navigatable,\n                    filterable: options.filterable,\n                    sortable: options.sortable,\n                    template: targetItemTemplate,\n                    setting: \"rows\",\n                    connectWith: columns,\n                    messages: {\n                        empty: this.options.messages.rows,\n                        fieldMenu: this.options.messages.fieldMenu\n                    },\n                    configuratorNavigation: that.configuratorNavigation\n                });\n                this.rows.element.attr(\"aria-labelledby\", `${this._ariaId}-configurator-header ${this._ariaId}-configurator-rows`);\n\n                this.measures = this._createTarget(measures, {\n                    navigatable: options.navigatable,\n                    filterable: false,\n                    sortable: false,\n                    setting: \"measures\",\n                    template: targetItemTemplate,\n                    messages: {\n                        empty: options.messages.measures,\n                        fieldMenu: this.options.messages.fieldMenu\n                    },\n                    configuratorNavigation: that.configuratorNavigation\n                });\n\n                this.measures.element.attr(\"aria-labelledby\", `${this._ariaId}-configurator-header ${this._ariaId}-configurator-values`);\n\n                [this.columns, this.rows, this.measures].forEach(x=> x.element.find(\".k-chip\").attr(\"role\", \"option\"));\n            },\n\n            _createTarget: function(element, options) {\n                var that = this;\n                return new kendo.ui.PivotSettingTargetV2(element, $.extend({\n                    dataSource: this.dataSource,\n                    hint: function(element) {\n                        return element.clone();\n                    },\n                    remove: function(e) {\n                        var item = that.treeView.wrapper\n                            .find(\"[data-name='\" + e.name + \"']\")\n                            .closest(\"li\");\n                        var id = item.attr(kendo.attr(\"uid\"));\n                        var dataItem = that.treeView.dataSource.getByUid(id);\n\n                        if (dataItem) {\n                            dataItem.checked = false;\n                            item.find(\"input\").attr(\"checked\", false);\n                        }\n                    },\n                    template: options.template\n                }, options));\n            },\n\n            _fields: function() {\n                var that = this;\n                var container = that.element.find(\".k-fields-list-wrapper\");\n\n                this.treeView = $(`<div aria-labelledby=\"${this._ariaId}-configurator-header ${this._ariaId}-configurator-fields\" />`).appendTo(container)\n                    .kendoTreeView({\n                        checkboxes: {\n                            checkChildren: true,\n                            template: ({ item }) => {\n                                var result = '';\n\n                                if ((item.hasChildren || item.aggregator || item.local) && item.uniqueName !== \"[KPIs]\" && item.uniqueName !== \"[Measures]\" && item.uniqueName !== \"Measures\") {\n                                    result += `<input type=\"checkbox\" data-name=\"${encode(item.uniqueName)}\" ${item.checked ? \"checked\" : \"\"} class=\"k-checkbox k-checkbox-md k-rounded-md\" id=\"${encode(item.uid)}\" tabindex=\"-1\">`;\n                                }\n\n                                return result;\n                            }\n                        },\n                        dataTextField: \"caption\",\n                        autoBind: false,\n                        check: function(e) {\n                          var dataItem = e.sender.dataItem(e.node);\n                          var action = {\n                            type: kendo_pivotgridCommon_cmn_chunk_js.I.toggleSelection,\n                            payload: dataItem\n                          };\n                          var state = {\n                            columnAxes: that.columns._state(),\n                            rowAxes: that.rows._state(),\n                            measureAxes: that.measures._state()\n                          };\n                          var result = kendo_pivotgridCommon_cmn_chunk_js.u(state, action);\n\n                          if (that.dataSource.cubeSchema && result.measureAxes && result.measureAxes.length &&\n                            result.measureAxes.length > state.measureAxes.length) {\n                              that.dataSource.cubeSchema.restoreMeasure(result.measureAxes, dataItem);\n                          }\n\n                          if (dataItem.defaultHierarchy && dataItem.items && dataItem.items.length) {\n                              that._checkMembers([{ name: dataItem.defaultHierarchy }], dataItem.items);\n                              dataItem.items.trigger(\"change\");\n                          }\n\n                          if (result.columnAxes) {\n                              that.columns._state(result.columnAxes);\n                              that.columns._redraw();\n                          }\n                          if (result.rowAxes) {\n                              that.rows._state(result.rowAxes);\n                              that.rows._redraw();\n                          }\n                          if (result.measureAxes) {\n                              that.measures._state(result.measureAxes);\n                              that.measures._redraw();\n                          }\n                        },\n                        dataSource: this._treeViewDataSource()\n                     })\n                    .data(\"kendoTreeView\");\n\n                this.treeView.wrapper.off(\"click\", this.treeView._clickHandler);\n            },\n\n            _treeViewDataSource: function() {\n                var that = this;\n\n                return kendo.data.HierarchicalDataSource.create({\n                    schema: {\n                        model: {\n                            id: \"uniqueName\",\n                            hasChildren: function(item) {\n                                if (that.dataSource.cubeSchema && item.uniqueName !== \"Measures\") {\n                                    item.local = true;\n                                    return false;\n                                }\n                                return !(\"hierarchyUniqueName\" in item) && !(\"aggregator\" in item);\n                            }\n                        }\n                    },\n                    transport: {\n                        read: function(options) {\n                            var node;\n                            var transport = that.dataSource.transport;\n                            var catalog = transport.catalog();\n                            var cube = transport.cube();\n                            var fetchOptions = {\n                                url: transport.options.read\n                            };\n                            var columns = that.columns._state();\n                            var rows = that.rows._state();\n                            var measures = that.measures._state();\n                            var members = columns.concat(rows).concat(measures);\n                            var fields;\n                            var dsMeasures;\n                            var fetchOpts;\n\n                            if ($.isEmptyObject(options.data)) {\n                                if (that.dataSource.cubeSchema) {\n                                    fields = that.dataSource.cubeSchema.dimensions();\n                                    that._checkMembers(members, fields);\n                                    options.success(fields);\n                                } else {\n                                    fetchOpts = {\n                                        connection: {\n                                            catalog: catalog,\n                                            cube: cube\n                                        },\n                                        restrictions: {\n                                            catalogName: catalog,\n                                            cubeName: cube\n                                        },\n                                        command: 'schemaDimensions'\n                                    };\n\n                                    kendo_pivotgridCommon_cmn_chunk_js.h(fetchOptions, fetchOpts)\n                                        .then(function(newFields) {\n                                            that._checkMembers(members, newFields);\n                                            addKPI(newFields);\n                                            options.success(newFields);\n                                         });\n                                }\n                            } else {\n                                //Hack to get the actual node as the HierarchicalDataSource does not support passing it\n                                node = that.treeView.dataSource.get(options.data.uniqueName);\n\n                                if (that.dataSource.cubeSchema) {\n                                    dsMeasures = that.dataSource.measures();\n                                    that._checkMembers(members, dsMeasures);\n                                    options.success(dsMeasures);\n                                } else {\n                                    if (node.uniqueName === \"[KPIs]\") {\n                                        kendo_pivotgridCommon_cmn_chunk_js.h(fetchOptions, that._getKPIOptions(catalog, cube))\n                                        .then(function(newFields) {\n                                            options.success(normalizeKPIs(newFields));\n                                        });\n                                    } else if (node.type == \"kpi\") {\n                                        options.success(buildKPImeasures(node));\n                                    } else {\n                                        kendo_pivotgridCommon_cmn_chunk_js.h(fetchOptions ,that._loadFieldsCommand(node, catalog, cube))\n                                        .then(function(newFields) {\n                                            that._checkMembers(members, newFields);\n                                            options.success(newFields);\n                                        });\n                                    }\n                                }\n                            }\n                        }\n                    }\n                });\n            },\n\n            _checkMembers: function(members, newData) {\n                var hash = {};\n                var index = 0;\n\n                for (index = 0; index < members.length; index++) {\n                    hash[members[index].name] = true;\n                }\n\n                for (index = 0; index < newData.length; index++) {\n                    if (hash[newData[index].uniqueName]) {\n                        newData[index].checked = true;\n                    }\n                }\n            },\n\n            _getKPIOptions: function(catalog, cube) {\n                return {\n                    connection: {\n                        catalog: catalog,\n                        cube: cube\n                    },\n                    restrictions: {\n                        catalogName: catalog,\n                        cubeName: cube\n                    },\n                    command: 'schemaKPIs'\n                };\n            },\n\n            _loadFieldsCommand: function(field, catalog, cube) {\n                var command;\n                var dimensionUniqueName;\n                var hierarchyUniqueName;\n\n                if (field.type === 2) {\n                    command = 'schemaMeasures';\n                } else if (field.dimensionUniqueName) {\n                    command = 'schemaLevels';\n                    hierarchyUniqueName = field.uniqueName;\n                } else {\n                    command = 'schemaHierarchies';\n                    dimensionUniqueName = field.uniqueName;\n                }\n\n                var options = {\n                    connection: {\n                        catalog: catalog,\n                        cube: cube\n                    },\n                    restrictions: {\n                        catalogName: catalog,\n                        cubeName: cube,\n                        hierarchyUniqueName: hierarchyUniqueName,\n                        dimensionUniqueName: dimensionUniqueName\n                    },\n                    command: command\n                };\n\n                return options;\n            },\n\n            _progress: function(toggle) {\n                kendo.ui.progress(this.element, toggle);\n            },\n\n            _error: function() {\n                this._progress(false);\n            },\n\n            _requestStart: function() {\n                this._progress(true);\n            },\n\n            destroy: function() {\n                Widget.fn.destroy.call(this);\n\n                this.dataSource.unbind(\"change\", this._refreshHandler);\n\n                this.element.off(ns);\n\n                this.rows.destroy();\n                this.columns.destroy();\n                this.measures.destroy();\n                this.treeView.destroy();\n\n                this.element = null;\n                this._refreshHandler = null;\n            },\n\n            refresh: function() {\n                if (this.treeView) {\n                    this.treeView.dataSource.fetch();\n                }\n\n                this._progress(false);\n            }\n\n        });\n\n        ui.plugin(PivotConfiguratorV2);\n\n        var PivotConfigurator = Widget.extend({\n            init: function(element, options) {\n                Widget.fn.init.call(this, element, options);\n\n                this.element.addClass(\"k-pivotgrid-configurator-panel kendo-jquery\");\n\n                if (this.options.height) {\n                    this.element.outerHeight(this.options.height);\n                }\n\n                this._dataSource();\n\n                this._layout();\n\n                this.refresh();\n\n                kendo.notify(this);\n            },\n\n            events: [],\n\n            options: {\n                name: \"PivotConfigurator\",\n                filterable: false,\n                sortable: false,\n                messages: {\n                    measures: \"Drop Data Fields Here\",\n                    columns: \"Drop Column Fields Here\",\n                    rows: \"Drop Rows Fields Here\",\n                    measuresLabel: \"Measures\",\n                    columnsLabel: \"Columns\",\n                    rowsLabel: \"Rows\",\n                    fieldsLabel: \"Fields\"\n                }\n            },\n\n            _dataSource: function() {\n                var that = this;\n\n                if (that.dataSource && that._refreshHandler) {\n                    that.dataSource.unbind(\"change\", that._refreshHandler)\n                                   .unbind(\"error\", that._errorHandler)\n                                   .unbind(\"progress\", that._progressHandler);\n                } else {\n                    that._errorHandler = that._error.bind(that);\n                    that._refreshHandler = that.refresh.bind(that);\n                    that._progressHandler = that._requestStart.bind(that);\n                }\n\n                that.dataSource = kendo.data.PivotDataSource.create(that.options.dataSource);\n                that.dataSource.bind(\"change\", that._refreshHandler)\n                               .bind(\"error\", that._errorHandler)\n                               .bind(\"progress\", that._progressHandler);\n            },\n\n            setDataSource: function(dataSource) {\n                this.options.dataSource = dataSource;\n\n                this._dataSource();\n\n                if (this.measures) {\n                    this.measures.setDataSource(dataSource);\n                }\n\n                if (this.rows) {\n                    this.rows.setDataSource(dataSource);\n                }\n\n                if (this.columns) {\n                    this.columns.setDataSource(dataSource);\n                }\n\n                this.refresh();\n            },\n\n            _treeViewDataSource: function() {\n                var that = this;\n\n                return kendo.data.HierarchicalDataSource.create({\n                    schema: {\n                        model: {\n                            id: \"uniqueName\",\n                            hasChildren: function(item) {\n                                return !(\"hierarchyUniqueName\" in item) && !(\"aggregator\" in item);\n                            }\n                        }\n                    },\n                    transport: {\n                        read: function(options) {\n                            var promise;\n                            var node;\n                            var kpi;\n\n                            if ($.isEmptyObject(options.data)) {\n                                promise = that.dataSource.schemaDimensions();\n\n                                promise.done(function(data) {\n                                            if (!that.dataSource.cubeBuilder) {\n                                                addKPI(data);\n                                            }\n                                            options.success(data);\n                                        })\n                                        .fail(options.error);\n                            } else {\n                                //Hack to get the actual node as the HierarchicalDataSource does not support passing it\n                                node = that.treeView.dataSource.get(options.data.uniqueName);\n\n                                if (node.uniqueName === \"[KPIs]\") {\n                                    kpi = true;\n                                    promise = that.dataSource.schemaKPIs();\n                                    promise.done(function(data) {\n                                                options.success(normalizeKPIs(data));\n                                           })\n                                           .fail(options.error);\n                                } else if (node.type == \"kpi\") {\n                                    kpi = true;\n                                    options.success(buildKPImeasures(node));\n                                }\n\n                                if (!kpi) {\n                                    if (node.type == 2) { //measure\n                                        promise = that.dataSource.schemaMeasures();\n                                    } else if (node.dimensionUniqueName) { // hierarchy\n                                        promise = that.dataSource.schemaLevels(options.data.uniqueName);\n                                    } else { // dimension\n                                        promise = that.dataSource.schemaHierarchies(options.data.uniqueName);\n                                    }\n\n                                    promise.done(options.success)\n                                            .fail(options.error);\n                                }\n                            }\n                        }\n                    }\n                });\n            },\n\n            _progress: function(toggle) {\n                kendo.ui.progress(this.element, toggle);\n            },\n\n            _error: function() {\n                this._progress(false);\n            },\n\n            _requestStart: function() {\n                this._progress(true);\n            },\n\n            _layout: function() {\n                $('<div class=\"k-pivotgrid-configurator\"><div class=\"k-pivotgrid-configurator-content\"></div></div>').appendTo(this.element);\n                this.form = this.element.find('.k-pivotgrid-configurator-content');\n\n                this._fields();\n                this._targets();\n            },\n\n            _fields: function() {\n                var container = $('<div class=\"k-pivotgrid-fields k-pivotgrid-configurator-section\"><strong>' + encode(this.options.messages.fieldsLabel) + '</strong><div class=\"k-fields-list-wrapper\"></div></div>').appendTo(this.form);\n\n                var template = ({ item }) => {\n                    var result = '';\n\n                    if (item.type == 2 || item.uniqueName == \"[KPIs]\") {\n                        result += kendo.ui.icon(item.type == 2 ? \"sum\" : \"caret-alt-expand\"/* \"kpi\" */);\n                    } else if (item.type && item.type !== \"kpi\") {\n                        result += kendo.ui.icon(\"arrows-axes\");\n                    }\n\n                    result += `${encode(item.caption || item.name)}`;\n\n                    return result;\n                };\n\n                this.treeView = $(\"<div/>\").appendTo(container.find('.k-fields-list-wrapper'))\n                    .kendoTreeView({\n                        template: template,\n                        dataTextField: \"caption\",\n                        dragAndDrop: true,\n                        autoBind: false,\n                        dataSource: this._treeViewDataSource(),\n                        dragstart: function(e) {\n                            var dataItem = this.dataItem(e.sourceNode);\n\n                            if ((!dataItem.hasChildren && !dataItem.aggregator && !dataItem.measure) || (dataItem.type == 2) || dataItem.uniqueName === \"[KPIs]\") {\n                                e.preventDefault();\n                            }\n                        },\n                        drag: function(e) {\n                            var status = \"cancel\";\n                            var setting = settingTargetFromNode(e.dropTarget);\n\n                            if (setting && setting.validate(this.dataItem(e.sourceNode))) {\n                                status = \"plus\";\n                            }\n\n                            e.setStatusClass(status);\n                        },\n                        drop: function(e) {\n                            e.preventDefault();\n\n                            var setting = settingTargetFromNode(e.dropTarget);\n                            var node = this.dataItem(e.sourceNode);\n                            var idx, length, measures;\n                            var name;\n\n                            if (setting && setting.validate(node)) {\n                                name = node.defaultHierarchy || node.uniqueName;\n\n                                if (node.type === \"kpi\") {\n                                    measures = buildKPImeasures(node);\n                                    length = measures.length;\n                                    name = [];\n\n                                    for (idx = 0; idx < length; idx++) {\n                                        name.push(kpiNode(measures[idx]));\n                                    }\n                                } else if (node.kpi) {\n                                    name = [kpiNode(node)];\n                                }\n\n                                setting.add(name);\n                            }\n                        }\n                     })\n                    .data(\"kendoTreeView\");\n            },\n\n            _createTarget: function(element, options) {\n                var template;\n\n                template = ({ name, sortIcon }) => ''\n                    + `<div class=\"k-chip k-chip-md k-rounded-md k-chip-solid k-chip-solid-base\" data-${kendo.ns}name=\"${name}\">`\n                        + '<span class=\"k-chip-content\">'\n                            + `<span class=\"k-chip-label\">${name}</span>`\n                        + '</span>'\n                        + '<span class=\"k-chip-actions k-field-actions\">'\n                        + getIcons(sortIcon, options)\n                        + '</span>'\n                    + '</div>';\n\n                return new kendo.ui.PivotSettingTarget(element, $.extend({\n                    dataSource: this.dataSource,\n                    template: template,\n                    emptyTemplate: (data) => `<span class=\"k-empty\">${data}</span>`\n                }, options));\n            },\n\n            _targets: function() {\n                var container = $('<div class=\"k-pivotgrid-targets\"/>').appendTo(this.form);\n\n                var columnsContainer = $(SETTING_CONTAINER_TEMPLATE({ name: this.options.messages.columnsLabel, icon: \"columns\" })).appendTo(container);\n                var columns = $('<div class=\"k-column-fields k-chip-list\" />').appendTo(columnsContainer.find('.k-pivotgrid-target-wrap'));\n\n                var rowsContainer = $(SETTING_CONTAINER_TEMPLATE({ name: this.options.messages.rowsLabel, icon: \"rows\" })).appendTo(container);\n                var rows = $('<div class=\"k-column-fields k-chip-list\" />').appendTo(rowsContainer.find('.k-pivotgrid-target-wrap'));\n\n                var measuresContainer = $(SETTING_CONTAINER_TEMPLATE({ name: this.options.messages.measuresLabel, icon: \"sum\" })).appendTo(container);\n                var measures = $('<div class=\"k-column-fields k-chip-list\" />').appendTo(measuresContainer.find('.k-pivotgrid-target-wrap'));\n\n                var options = this.options;\n\n                this.columns = this._createTarget(columns, {\n                    filterable: options.filterable,\n                    sortable: options.sortable,\n                    connectWith: rows,\n                    messages: {\n                        empty: options.messages.columns,\n                        fieldMenu: options.messages.fieldMenu\n                    }\n                });\n\n                this.rows = this._createTarget(rows, {\n                    filterable: options.filterable,\n                    sortable: options.sortable,\n                    setting: \"rows\",\n                    connectWith: columns,\n                    messages: {\n                        empty: this.options.messages.rows,\n                        fieldMenu: this.options.messages.fieldMenu\n                    }\n                });\n\n                this.measures = this._createTarget(measures, {\n                    setting: \"measures\",\n                    messages: {\n                        empty: options.messages.measures\n                    }\n                });\n\n                columns\n                    .add(rows)\n                    .add(measures)\n                    .on(HOVER_EVENTS, \".k-item:not(.k-empty)\", this._toggleHover);\n            },\n\n            _toggleHover: function(e) {\n                $(e.currentTarget).closest(\":not(path,svg)\").toggleClass(\"k-hover\", e.type === \"mouseenter\");\n            },\n\n            _resize: function() {\n                var element = this.element;\n                var height = this.options.height;\n\n                if (!height) {\n                    return;\n                }\n\n                element.outerHeight(height);\n            },\n\n            refresh: function() {\n                var dataSource = this.dataSource;\n\n                if (dataSource.cubeBuilder || this._cube !== dataSource.cube() || this._catalog !== dataSource.catalog()) {\n                    this.treeView.dataSource.fetch();\n                }\n\n                this._catalog = this.dataSource.catalog();\n                this._cube = this.dataSource.cube();\n\n                this._resize();\n\n                this._progress(false);\n            },\n\n            destroy: function() {\n                Widget.fn.destroy.call(this);\n\n                this.dataSource.unbind(\"change\", this._refreshHandler);\n\n                this.form.find(\".k-pivot-setting\").off(ns);\n\n                this.rows.destroy();\n                this.columns.destroy();\n                this.measures.destroy();\n                this.treeView.destroy();\n\n                this.element = null;\n                this._refreshHandler = null;\n            }\n        });\n\n        function kpiMeasure(name, measure, type) {\n            return {\n                hierarchyUniqueName: name,\n                uniqueName: measure,\n                caption: measure,\n                measure: measure,\n                name: measure,\n                type: type,\n                kpi: true\n            };\n        }\n\n        function buildKPImeasures(node) {\n            var name = node.name;\n            return [\n                kpiMeasure(name, node.value, \"value\"),\n                kpiMeasure(name, node.goal, \"goal\"),\n                kpiMeasure(name, node.status, \"status\"),\n                kpiMeasure(name, node.trend, \"trend\")\n            ];\n        }\n\n        kendo.cssProperties.registerPrefix(\"HTMLChip\", \"k-chip-\");\n\n        kendo.cssProperties.registerValues(\"HTMLChip\", [{\n            prop: \"rounded\",\n            values: kendo.cssProperties.roundedValues.concat([['md', 'md']])\n        }]);\n\n        ui.plugin(PivotConfigurator);\n\n    })(window.kendo.jQuery);\n    var kendo$1 = kendo;\n\n    exports.__meta__ = __meta__;\n    exports.default = kendo$1;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n\n}));\n"]}