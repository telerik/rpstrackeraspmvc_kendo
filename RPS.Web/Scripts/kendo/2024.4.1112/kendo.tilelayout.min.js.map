{"version":3,"file":"kendo.tilelayout.min.js","names":["global","factory","exports","module","require","define","amd","globalThis","self","kendo","_globals","Tilelayout","this","$","window","ui","Widget","Draggable","keys","selector","selectorFromClasses","RESIZE","REORDER","NS","GRABCURSOR","TileLayout","extend","init","element","options","that","fn","call","addClass","styles","wrapper","attr","role","_setWrapperStyles","_initContainers","_resizable","_navigatable","_reorderable","_showWatermarkOverlay","events","name","columns","gap","rows","containers","resizable","reorderable","navigatable","columnsWidth","rowsHeight","height","width","destroy","_draggableInstance","find","each","item","data","resizeHandle","off","remove","setOptions","deepExtend","empty","getOptions","result","items","id","container","header","headerSettings","body","containerSettings","headerContent","containerElements","children","hasElements","length","itemsMap","i","guid","current","_addContainer","template","text","itemHeader","itemHeaderTitle","append","appendTo","itemBody","bodyTemplate","Error","index","order","_setContainerCoordinates","push","css","format","padding","settings","colSpan","rowSpan","_updateContainers","_createResizeHandle","side","down","_isresizing","_positionResizeHandle","cursorClass","leftBorderWidth","parseFloat","bottomBorderWidth","containerHeight","containerWidth","top","left","support","isRtl","removeClass","show","_createResizeHint","hint","resizeHint","insertAfter","_removeResizeHint","_positionHint","_removeAbsoluteStyles","_positionAbsolutely","position","outerWidth","outerHeight","on","_keyDown","bind","e","target","canHandle","is","ctrlKey","keyCode","LEFT","_resizeItem","RIGHT","UP","DOWN","shiftKey","_reorderItem","preventDefault","dir","delta","newSpan","parseInt","replace","split","trigger","newOrder","oldOrder","maxOrder","_updateDOM","newIndex","oldIndex","_sortContainers","indexAttr","sort","a","b","indexA","indexB","undefined","fractionWidth","fractionHeight","currentContainer","rowsCount","lastXLocation","lastYLocation","initialWidth","initialHeight","startColSpan","startRowSpan","itemsMaxSpace","rightPosition","downPosition","rectPosition","getBoundingClientRect","Math","abs","right","clientX","bottom","clientY","Resizable","handle","start","currentTarget","_calculateFractionWidth","_calculateRightEndSide","x","location","scrollHeight","y","resize","overflowsLayout","isBeyondMinimum","hintColumns","hintRows","mouseDeltaX","mouseDeltaY","deltaFromStart","resizeRowsCount","resizeColumnsCount","clientRect","style","scrollX","floor","max","scrollY","resizeend","first","columnGap","_createDropHint","dropHint","reorderHint","columnEnd","rowEnd","direction","_insertDropHint","insertBefore","_removeDropHint","originalElement","itemSelector","headerSelector","group","filter","autoScroll","ignore","clickMoveClick","closest","clone","dragstart","document","cursor","drag","dropContainer","containerBoundaries","elementUnderCursor","sender","draggedItem","containsOrEqualTo","hide","hasClass","next","prev","dragend","end","itemId","min","dragcancel","kendoDropTarget","dragenter","dropContainerBoundaries","dropTarget","parent","child","contains","plugin","jQuery","kendo$1","__meta__","category","depends","features","description","default","Object","defineProperty","value"],"sources":["kendo.tilelayout.js"],"mappings":"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","ignoreList":[],"sourcesContent":["(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('kendo.core.js'), require('kendo.draganddrop.js'), require('kendo.resizable.js')) :\n    typeof define === 'function' && define.amd ? define(['exports', 'kendo.core', 'kendo.draganddrop', 'kendo.resizable'], factory) :\n    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory((global.kendo = global.kendo || {}, global.kendo._globals = global.kendo._globals || {}, global.kendo._globals.Tilelayout = {})));\n})(this, (function (exports) {\n    const __meta__ = {\n            id: \"tilelayout\",\n            name: \"TileLayout\",\n            category: \"web\",\n            depends: [\"core\"],\n            features: [\n                {\n                    id: \"tilelayout-resizable\",\n                    name: \"Resizable\",\n                    description: \"Support for resizing\",\n                    depends: [\"resizable\"]\n                },\n                {\n                    id: \"tilelayout-reorderable\",\n                    name: \"Reorderable\",\n                    description: \"Support for reordering\",\n                    depends: [\"draganddrop\"]\n                }\n            ]\n        };\n\n        (function($) {\n            var kendo = window.kendo,\n                ui = kendo.ui,\n                Widget = ui.Widget,\n                Draggable = ui.Draggable,\n                keys = kendo.keys,\n                selector = kendo.selectorFromClasses,\n                RESIZE = \"resize\",\n                REORDER = \"reorder\",\n                NS = \".kendoTileLayout\",\n                DOWNCURSOR = \"k-cursor-ns-resize\",\n                RIGHTCURSOR = \"k-cursor-ew-resize\",\n                DIAGONALCURSOR = \"k-cursor-nwse-resize\",\n                RTLDIAGONALCURSOR = \"k-cursor-nesw-resize\",\n                GRABCURSOR = \"k-cursor-move\",\n                GRABBINGCURSOR = \"k-cursor-grabbing\",\n                MINIMALSPAN = 1,\n                CURSORCLASSES = \"k-cursor-nesw-resize k-cursor-nwse-resize k-cursor-ew-resize k-cursor-ns-resize\";\n\n            var tileLayoutStyles = {\n                wrapper: \"k-tilelayout k-pos-relative\",\n                item: \"k-tilelayout-item k-card\",\n                itemHeader: \"k-tilelayout-item-header k-card-header\",\n                itemHeaderTitle: \"k-card-title\",\n                itemBody: \"k-tilelayout-item-body k-card-body\",\n                reorderHint: \"k-layout-item-hint k-layout-item-hint-reorder\",\n                resizeHint: \"k-layout-item-hint k-layout-item-hint-resize\"\n            };\n\n            var TileLayout = Widget.extend({\n                init: function(element, options) {\n                    var that = this;\n\n                    Widget.fn.init.call(that, element, options);\n\n                    that.element = $(element)\n                        .addClass(TileLayout.styles.wrapper)\n                        .attr({\n                            role: \"list\"\n                        });\n\n                    that._setWrapperStyles();\n                    that._initContainers();\n                    that._resizable();\n                    that._navigatable();\n                    that._reorderable();\n\n                    if (that._showWatermarkOverlay) {\n                        that._showWatermarkOverlay(that.element[0]);\n                    }\n                },\n\n                events: [\n                    RESIZE,\n                    REORDER\n                ],\n\n                options: {\n                    name: \"TileLayout\",\n                    columns: null,\n                    gap: {\n                        columns: 16,\n                        rows: 16\n                    },\n                    containers: [],\n                    resizable: false,\n                    reorderable: false,\n                    navigatable: false,\n                    columnsWidth: \"1fr\",\n                    rowsHeight: \"1fr\",\n                    height: \"\",\n                    width: \"\"\n                },\n\n                destroy: function() {\n                    Widget.fn.destroy.call(this);\n\n                    if (this._draggableInstance) {\n\n                        this.element.find(\".k-tilelayout-item\").each(function() {\n                            var item = $(this);\n                            if (item.data(\"kendoDropTarget\")) {\n                                item.data(\"kendoDropTarget\").destroy();\n                            }\n                        });\n\n                        this._draggableInstance.destroy();\n                        this._draggableInstance = null;\n                    }\n\n                    if (this.resizable) {\n                        this.resizable.destroy();\n                        this.resizable = null;\n                    }\n\n                    if (this.resizeHandle) {\n                        this.resizeHandle.off(NS).remove();\n                        this.resizeHandle = null;\n                    }\n\n                    this.element.off(NS);\n                },\n\n                setOptions: function(options) {\n                    this.destroy();\n                    kendo.deepExtend(this.options, options);\n                    this.element.empty();\n                    this.init(this.element, this.options);\n                },\n\n                getOptions: function() {\n                    var result = $.extend(true, {}, this.options);\n                    result.containers = kendo.deepExtend([], this.items);\n\n                    return result;\n                },\n\n                _initContainers: function() {\n                    var that = this;\n                    var containers = that.options.containers;\n                    var containerElements = that.element.children();\n                    var hasElements = !!containerElements.length;\n                    var id;\n                    var container;\n                    var header;\n                    var headerSettings;\n                    var body;\n                    var containerSettings;\n                    var headerContent;\n\n                    that.items = [];\n                    that.itemsMap = {};\n\n                    if (hasElements) {\n                        containerElements.each(function(i, element) {\n                            id = kendo.guid();\n                            var current = $(element)\n                                .addClass(TileLayout.styles.item)\n                                .attr({\n                                    id: id,\n                                    role: \"listitem\",\n                                    \"aria-keyshortcuts\": \"Enter\"\n                                });\n\n                            that._addContainer(current, containers[i], i, id);\n                        });\n                    } else {\n                        for (var i = 0; i < containers.length; i++) {\n                            id = kendo.guid();\n                            containerSettings = containers[i];\n                            container = $(\"<div></div>\")\n                                .addClass(TileLayout.styles.item)\n                                .attr({\n                                    id: id,\n                                    role: \"listitem\",\n                                    \"aria-keyshortcuts\": \"Enter\"\n                                });\n\n                            headerSettings = containerSettings.header;\n                            if (headerSettings && (headerSettings.template || headerSettings.text)) {\n                                header = $(\"<div></div>\").addClass(TileLayout.styles.itemHeader);\n                                if (that.options.reorderable) {\n                                    header.addClass(GRABCURSOR);\n                                }\n\n                                headerContent = headerSettings.text ? \"<div class='\" + TileLayout.styles.itemHeaderTitle + \"'>\" + headerSettings.text + \"</div>\" : null;\n                                header.append(headerContent || kendo.template(headerSettings.template)({}));\n                                header.appendTo(container);\n                            }\n                            body = $(\"<div></div>\").addClass(TileLayout.styles.itemBody);\n                            if (!containerSettings.bodyTemplate) {\n                                throw new Error(\"Having a bodyTemplate for the container is mandatory\");\n                            }\n                            body.append(kendo.template(containerSettings.bodyTemplate)({}));\n                            body.appendTo(container);\n                            container.appendTo(that.element);\n\n                            that._addContainer(container, containerSettings, i, id);\n                        }\n                    }\n                },\n\n                _addContainer: function(element, item, index, id) {\n                    var that = this;\n                    item.order = typeof item.order == 'number' ? item.order : index;\n                    element.attr(kendo.attr(\"index\"), item.order);\n                    item.id = id;\n                    that._setContainerCoordinates(element, item);\n                    that.itemsMap[id] = item;\n                    that.items.push(that.itemsMap[id]);\n                },\n\n                _setWrapperStyles: function() {\n                    var that = this;\n                    var options = that.options;\n                    that.element.css({\n                        \"grid-template-columns\": kendo.format(\"repeat({0}, minmax(0, {1}))\", options.columns, typeof options.columnsWidth === \"string\" ? options.columnsWidth : options.columnsWidth + \"px\"),\n                        \"grid-auto-rows\": kendo.format(\"minmax(0, {0})\", typeof options.rowsHeight === \"string\" ? options.rowsHeight : options.rowsHeight + \"px\"),\n                        \"column-gap\": options.gap.columns + \"px\",\n                        \"width\": typeof options.width === \"string\" ? options.width : options.width + \"px\",\n                        \"height\": typeof options.height === \"string\" ? options.height : options.height + \"px\",\n                        \"padding\": options.gap.rows + \"px \" + options.gap.columns + \"px \",\n                        \"row-gap\": options.gap.rows + \"px\"\n                    });\n                },\n\n                _setContainerCoordinates: function(element, settings) {\n                    if (!settings) {\n                        return;\n                    }\n                    element.css({\n                        \"order\": settings.order,\n                        \"grid-column-end\": kendo.format(\"span {0}\", settings.colSpan),\n                        \"grid-row-end\": kendo.format(\"span {0}\", settings.rowSpan)\n                    })\n                        .attr(kendo.attr(\"index\"), settings.order);\n                },\n\n                _updateContainers: function() {\n                    var that = this;\n\n                    for (var i = 0; i < that.items.length; i++) {\n                        that._setContainerCoordinates(that.element.find(\"#\" + that.items[i].id), that.items[i]);\n                    }\n                },\n\n                _createResizeHandle: function(container, side, down) {\n                    var that = this;\n\n                    if (that._isresizing) {\n                        return;\n                    }\n\n                    if (that.resizeHandle && that.resizeHandle.data(\"div\")[0] !== container[0]) {\n                        that.resizeHandle.off(NS).remove();\n                        that.resizeHandle = null;\n                    }\n\n                    if (!that.resizeHandle) {\n                        that.resizeHandle = $(\n                            '<div class=\"k-resize-handle\"></div>'\n                        );\n                        that.resizeHandle.appendTo(container);\n                    }\n\n                    that._positionResizeHandle(container, side, down);\n                },\n\n                _positionResizeHandle: function(container, side, down) {\n                    var that = this;\n                    var leftBorderWidth = parseFloat(container.css(\"borderRightWidth\"));\n                    var bottomBorderWidth = parseFloat(container.css(\"borderBottomWidth\"));\n                    var containerHeight = container.height();\n                    var containerWidth = container.width();\n                    var top = down ? containerHeight - 6.5 - bottomBorderWidth : 0;\n                    var left = side ? containerWidth - 4.5 - leftBorderWidth : 0;\n                    var width = 9;\n                    var height = 9;\n                    var cursorClass;\n\n                    if (side && down) {\n                        height = width = 25;\n                        top -= 12.5;\n                        left -= 12.5;\n                        cursorClass = kendo.support.isRtl(that.element) ? RTLDIAGONALCURSOR : DIAGONALCURSOR;\n                    } else if (side && !down) {\n                        height = containerHeight;\n                        cursorClass = RIGHTCURSOR;\n                    } else if (!side && down) {\n                        width = containerWidth;\n                        cursorClass = DOWNCURSOR;\n                    }\n\n                    that.resizeHandle\n                        .css({\n                            top: top,\n                            left: left,\n                            height: height,\n                            width: width\n                        })\n                        .attr(\"side\", side)\n                        .attr(\"down\", down)\n                        .removeClass(CURSORCLASSES)\n                        .addClass(cursorClass)\n                        .data(\"div\", container)\n                        .show();\n                },\n\n                _createResizeHint: function(container) {\n                    var that = this;\n\n                    if (that.hint) {\n                        return;\n                    }\n\n                    var colSpan = container.css(\"grid-column-end\");\n                    var rowSpan = container.css(\"grid-row-end\");\n                    var order = container.css(\"order\");\n\n                    that.hint = $(\"<div class='\" + TileLayout.styles.resizeHint + \"'></div>\")\n                        .css({\n                            \"order\": order,\n                            \"grid-column-end\": colSpan,\n                            \"grid-row-end\": rowSpan\n                        })\n                        .insertAfter(container);\n                },\n\n                _removeResizeHint: function() {\n                    if (this._isresizing) {\n                        return;\n                    }\n\n                    if (this.hint) {\n                        this.hint.remove();\n                        this.hint = null;\n                    }\n                },\n\n                _positionHint: function(colSpan, rowSpan) {\n                    var that = this;\n\n                    if (colSpan) {\n                        that.hint.css(\"grid-column-end\", kendo.format(\"span {0}\", colSpan));\n                    }\n\n                    if (rowSpan) {\n                        that.hint.css(\"grid-row-end\", kendo.format(\"span {0}\", rowSpan));\n                    }\n                },\n\n                _removeAbsoluteStyles: function(container) {\n                    container.css(\"position\", \"\");\n                    container.css(\"left\", \"\");\n                    container.css(\"top\", \"\");\n                    container.css(\"width\", \"\");\n                    container.css(\"height\", \"\");\n                    container.css(\"z-index\", \"\");\n                },\n\n                _positionAbsolutely: function(container) {\n                    if (container.css(\"position\") == \"absolute\") {\n                        return;\n                    }\n                    var position = container.position();\n                    var width = container.outerWidth();\n                    var height = container.outerHeight();\n\n                    container.css(\"position\", \"absolute\");\n                    container.css(\"left\", position.left);\n                    container.css(\"top\", position.top);\n                    container.css(\"width\", width);\n                    container.css(\"height\", height);\n                    container.css(\"z-index\", 2);\n                },\n\n                _navigatable: function() {\n\n                    if (!this.options.navigatable) {\n                        return;\n                    }\n\n                    var that = this;\n\n                    that.element.children().attr(\"tabindex\", 0);\n                    that.element.on(\"keydown\" + NS, that, that._keyDown.bind(that));\n                },\n\n                _keyDown: function(e) {\n                    var target = $(e.target);\n                    var canHandle = false;\n\n                    if (!target.is(\".k-tilelayout-item.k-card\")) {\n                        return;\n                    }\n\n\n                    if (e.ctrlKey && e.keyCode == keys.LEFT) {\n                        canHandle = true;\n                        this._resizeItem(target, \"horizontal\", -1);\n                    }\n\n                    if (e.ctrlKey && e.keyCode == keys.RIGHT) {\n                        canHandle = true;\n                        this._resizeItem(target, \"horizontal\", 1);\n                    }\n\n                    if (e.ctrlKey && e.keyCode == keys.UP) {\n                        canHandle = true;\n                        this._resizeItem(target, \"vertical\", -1);\n                    }\n\n                    if (e.ctrlKey && e.keyCode == keys.DOWN) {\n                        canHandle = true;\n                        this._resizeItem(target, \"vertical\", 1);\n                    }\n\n                    if (e.shiftKey && e.keyCode == keys.LEFT) {\n                        canHandle = true;\n                        this._reorderItem(target, -1);\n                    }\n\n                    if (e.shiftKey && e.keyCode == keys.RIGHT) {\n                        canHandle = true;\n                        this._reorderItem(target, 1);\n                    }\n\n                    if (canHandle) {\n                        e.preventDefault();\n                    }\n                },\n\n                _resizeItem: function(item, dir, delta) {\n                    var that = this;\n                    var id = item.attr(\"id\");\n                    var newSpan;\n                    var maxSpan;\n\n                    if (!that.options.resizable) {\n                        return;\n                    }\n\n                    if (dir === \"horizontal\") {\n                        newSpan = parseInt(item.css(\"grid-column-end\").replace('span', ''), 10) + delta;\n                        maxSpan = that.element.css(\"grid-template-columns\").split(\" \").length;\n\n                        if (maxSpan >= newSpan && newSpan > 0) {\n                            that.itemsMap[id].colSpan = newSpan;\n                            item.css({\n                                \"grid-column-end\": kendo.format(\"span {0}\", newSpan)\n                            });\n                            that.trigger(RESIZE, {\n                                container: item\n                            });\n                        }\n                    } else {\n                        newSpan = parseInt(item.css(\"grid-row-end\").replace('span', ''), 10) + delta;\n                        maxSpan = that.element.css(\"grid-template-rows\").split(\" \").length;\n\n                        if (maxSpan >= newSpan && newSpan > 0) {\n                            that.itemsMap[id].rowSpan = newSpan;\n                            item.css({\n                                \"grid-row-end\": kendo.format(\"span {0}\", newSpan)\n                            });\n                            that.trigger(RESIZE, {\n                                container: item\n                            });\n                        }\n                    }\n                },\n\n                _reorderItem: function(item, newOrder) {\n                    if (!this.options.reorderable) {\n                        return;\n                    }\n\n                    var oldOrder = parseInt(item.css(\"order\"), 10);\n                    var maxOrder = this.element.children().length;\n                    newOrder = oldOrder + newOrder;\n\n                    if (newOrder >= 0 && newOrder < maxOrder) {\n                        var target = this.element.find(\"> [\" + kendo.attr(\"index\") + \"='\" + newOrder + \"']\");\n\n                        this.itemsMap[item.attr(\"id\")].order = newOrder;\n                        this.itemsMap[target.attr(\"id\")].order = oldOrder;\n\n                        this._updateContainers();\n                        this._updateDOM();\n                        item.trigger(\"focus\");// need to restore focus after DOM gets reordered\n\n                        this.trigger(REORDER, {\n                            newIndex: newOrder,\n                            oldIndex: oldOrder,\n                            container: item\n                        });\n                    }\n                },\n\n                _sortContainers: function(containers) {\n                    var indexAttr = kendo.attr(\"index\");\n\n                    return [].sort.call(containers, function(a, b) {\n                        a = $(a);\n                        b = $(b);\n\n                        var indexA = a.attr(indexAttr);\n                        var indexB = b.attr(indexAttr);\n\n                        if (indexA === undefined) {\n                            indexA = $(a).index();\n                        }\n                        if (indexB === undefined) {\n                            indexB = $(b).index();\n                        }\n\n                        indexA = parseInt(indexA, 10);\n                        indexB = parseInt(indexB, 10);\n                        return indexA > indexB ? 1 : (indexA < indexB ? -1 : 0);\n                    });\n                },\n                _updateDOM: function() {\n                    var that = this;\n                    var containers = that.element.children(\":visible\");\n\n                    containers = that._sortContainers(containers);\n\n                    containers.each(function() {\n                        $(this).appendTo(that.element);\n                    });\n                },\n\n                _resizable: function() {\n                    var that = this;\n                    var side;\n                    var down;\n                    var id;\n                    var fractionWidth;\n                    var fractionHeight;\n                    var currentContainer;\n                    var lastXLocation = 0;\n                    var lastYLocation = 0;\n                    var initialWidth = 0;\n                    var initialHeight = 0;\n                    var startColSpan = 0;\n                    var startRowSpan = 0;\n                    var itemsMaxSpace = 0;\n                    var rowsCount;\n\n                    if (that.options.resizable) {\n                        that.element.on(\"mousemove\" + NS, selector(TileLayout.styles.item), function(e) {\n                            var rightPosition;\n                            var downPosition;\n                            var container = $(this);\n                            var rectPosition = container[0].getBoundingClientRect();\n\n                            rightPosition = Math.abs(rectPosition.right - e.clientX) < 16;\n                            downPosition = Math.abs(rectPosition.bottom - e.clientY) < 16;\n\n                            if (rightPosition && downPosition) {\n                                that._createResizeHandle(container, true, true);\n                            } else if (rightPosition) {\n                                that._createResizeHandle(container, true, false);\n                            } else if (downPosition) {\n                                that._createResizeHandle(container, false, true);\n                            }\n                        });\n\n                        that.resizable = new ui.Resizable(that.element, {\n                            handle: \"div.k-tilelayout-item > .k-resize-handle\",\n                            start: function(e) {\n                                var resizeHandle = $(e.currentTarget);\n                                currentContainer = resizeHandle.data(\"div\");\n                                id = currentContainer.attr(\"id\");\n                                side = resizeHandle.attr(\"side\");\n                                down = resizeHandle.attr(\"down\");\n                                rowsCount = that.element.css(\"grid-template-rows\").split(\" \").length;\n\n                                if (side) {\n                                    fractionWidth = that._calculateFractionWidth();\n                                    itemsMaxSpace = that._calculateRightEndSide(fractionWidth);\n                                    lastXLocation = e.x.location;\n                                    initialWidth = currentContainer.width();\n                                    startColSpan = parseInt(currentContainer.css(\"grid-column-end\").replace('span', ''), 10);\n                                }\n\n                                if (down) {\n                                    fractionHeight = (that.element[0].scrollHeight - (rowsCount + 1) * that.options.gap.rows) / rowsCount;\n                                    lastYLocation = e.y.location;\n                                    initialHeight = currentContainer.height();\n                                    startRowSpan = parseInt(currentContainer.css(\"grid-row-end\").replace('span', ''), 10);\n                                }\n\n                                that._isresizing = true;\n                            },\n                            resize: function(e) {\n                                var hintColumns = 0;\n                                var hintRows = 0;\n                                var mouseDeltaX = 0;\n                                var mouseDeltaY = 0;\n                                var overflowsLayout;\n                                var isBeyondMinimum;\n                                var deltaFromStart = 0;\n                                var resizeRowsCount = 0;\n                                var resizeColumnsCount = 0;\n                                var clientRect = that.element[0].getBoundingClientRect();\n                                var height = that.element[0].style.height ? true : false;\n\n                                that._positionAbsolutely(currentContainer);\n                                that._createResizeHint(currentContainer);\n\n                                if (side == \"true\") {\n                                    mouseDeltaX = e.x.location - lastXLocation;\n                                    overflowsLayout = (clientRect.left + itemsMaxSpace - window.scrollX - e.x.location) < that.options.gap.columns;\n                                    isBeyondMinimum = (initialWidth + mouseDeltaX) < fractionWidth;\n\n                                    if (!overflowsLayout && !isBeyondMinimum) {\n                                        resizeColumnsCount = (mouseDeltaX) / (fractionWidth + that.options.gap.columns);\n                                        deltaFromStart = mouseDeltaX - (Math.floor(resizeColumnsCount) * (fractionWidth + that.options.gap.columns));\n                                        hintColumns = startColSpan + Math.floor(resizeColumnsCount) + ((deltaFromStart >= (fractionWidth / 2)) ? 1 : 0);\n                                        that.itemsMap[id].colSpan = Math.max(hintColumns, MINIMALSPAN);\n                                    } else {\n                                        mouseDeltaX = 0;\n                                    }\n                                }\n\n                                if (down == \"true\") {\n                                    mouseDeltaY = e.y.location - lastYLocation;\n                                    overflowsLayout = (clientRect.bottom + window.scrollY - e.y.location) < that.options.gap.rows;\n                                    isBeyondMinimum = (initialHeight + mouseDeltaY) <= fractionHeight;\n\n                                    if (!isBeyondMinimum && (!overflowsLayout || !height)) {\n                                        resizeRowsCount = (mouseDeltaY) / (fractionHeight + that.options.gap.rows);\n                                        deltaFromStart = mouseDeltaY - (Math.floor(resizeRowsCount) * (fractionHeight + that.options.gap.rows));\n                                        hintRows = startRowSpan + Math.floor(resizeRowsCount) + ((deltaFromStart >= (fractionHeight / 2)) ? 1 : 0);\n                                        that.itemsMap[id].rowSpan = Math.max(hintRows, MINIMALSPAN);\n                                    } else {\n                                        mouseDeltaY = 0;\n                                    }\n                                }\n\n                                that._positionHint(hintColumns, hintRows);\n                                that._positionResizeHandle(currentContainer, side == \"true\", down == \"true\");\n                                if (mouseDeltaY) {\n                                    currentContainer.css(\"height\", initialHeight + mouseDeltaY);\n                                }\n                                if (mouseDeltaX) {\n                                    currentContainer.css(\"width\", initialWidth + mouseDeltaX);\n                                }\n                            },\n                            resizeend: function() {\n                                that._isresizing = false;\n                                that._setContainerCoordinates(currentContainer, that.itemsMap[id]);\n                                that._removeAbsoluteStyles(currentContainer);\n                                that._removeResizeHint();\n                                that.trigger(RESIZE, {\n                                    container: currentContainer\n                                });\n                            }\n                        });\n                    }\n                },\n\n                _calculateFractionWidth: function() {\n                    var that = this;\n                    var container = that.element.children().first();\n                    var colSpan = that.itemsMap[container.attr(\"id\")].colSpan;\n                    var totalWidth = container.outerWidth();\n\n                    return (totalWidth - (colSpan - 1) * (that.options.gap.columns)) / colSpan;\n                },\n\n                _calculateRightEndSide: function(fractionWidth) {\n                    var that = this;\n                    var columns = that.options.columns;\n                    var columnGap = that.options.gap.columns;\n\n                    return columns * (fractionWidth + columnGap) + columnGap;\n                },\n\n                _createDropHint: function(settings) {\n                    this.dropHint = $(\"<div class='\" + TileLayout.styles.reorderHint + \"'></div>\")\n                        .css({\n                            \"order\": settings.order,\n                            \"grid-column-end\": settings.columnEnd,\n                            \"grid-row-end\": settings.rowEnd\n                        })\n                        .attr(kendo.attr(\"index\"), settings.order)\n                        .attr(\"direction\", settings.direction);\n                },\n\n                _insertDropHint: function(container, direction) {\n                    if (direction == \"right\") {\n                        this.dropHint.insertAfter(container);\n                    } else {\n                        this.dropHint.insertBefore(container);\n                    }\n                },\n\n                _removeDropHint: function() {\n                    if (this.dropHint) {\n                        this.dropHint.remove();\n                        this.dropHint = null;\n                    }\n                },\n\n                _reorderable: function() {\n                    if (!this.options.reorderable) {\n                        return;\n                    }\n\n                    var that = this;\n                    var element = that.element;\n                    var originalElement;\n                    var itemSelector = selector(TileLayout.styles.item);\n                    var headerSelector = selector(TileLayout.styles.itemHeader);\n                    var group = kendo.guid();\n\n                    this._draggableInstance = new Draggable(this.element, {\n                        filter: headerSelector + \",.k-layout-item-hint-reorder\",\n                        autoScroll: true,\n                        ignore: \":input\",\n                        group: group,\n                        clickMoveClick: this.options.reorderable.clickMoveClick === false ? false : true,\n                        hint: function(target) {\n                            var item = target.closest(itemSelector);\n                            var width = item.width();\n                            var height = item.height();\n                            var clone = item.clone();\n                            clone.find(headerSelector)\n                                .removeClass(GRABCURSOR)\n                                .addClass(GRABBINGCURSOR);\n                            return clone.width(width).height(height);\n                        },\n                        dragstart: function(e) {\n                            originalElement = $(e.currentTarget).closest(itemSelector);\n                            document.body.style.cursor = \"move\";\n                        },\n                        drag: function(e) {\n                            var elementUnderCursor = kendo.elementUnderCursor(e);\n                            var hint = e.sender.hint;\n                            var dropContainer;\n                            var containerBoundaries;\n                            var pixelsToLeftBorder;\n                            var pixelsToRightBorder;\n                            var direction;\n\n                            var draggedItem = that._draggableInstance.currentTarget.closest(itemSelector);\n                            var newOrder;\n\n                            if (containsOrEqualTo(hint[0], elementUnderCursor)) {\n                                hint.hide();\n\n                                elementUnderCursor = kendo.elementUnderCursor(e);\n\n                                if (!containsOrEqualTo(originalElement[0], elementUnderCursor)) {\n\n                                    if (that.dropHint && that.dropHint[0] == elementUnderCursor[0]) {\n                                        hint.show();\n                                        return;\n                                    }\n\n                                    dropContainer = $(elementUnderCursor);\n                                    dropContainer = dropContainer.hasClass(TileLayout.styles.item) ? dropContainer : dropContainer.closest(itemSelector);\n\n                                    if (dropContainer.hasClass(TileLayout.styles.item)) {\n                                        containerBoundaries = dropContainer[0].getBoundingClientRect();\n                                        pixelsToLeftBorder = e.clientX - containerBoundaries.left;\n                                        pixelsToRightBorder = containerBoundaries.right - e.clientX;\n                                        direction = pixelsToLeftBorder > pixelsToRightBorder ? \"right\" : \"left\";\n                                        newOrder = dropContainer.css(\"order\");\n\n                                        if (that.dropHint && that.dropHint.attr(\"direction\") !== direction) {\n                                            var clone = that.dropHint.clone();\n                                            clone.css(\"order\", newOrder);\n                                            that.dropHint.remove();\n                                            that.dropHint = clone;\n\n                                            that._insertDropHint(dropContainer, direction);\n\n                                            that.dropHint\n                                                .attr(\"direction\", direction)\n                                                .attr(kendo.attr(\"index\"), newOrder);\n                                        } else if (!that.dropHint) {\n\n                                            var futureContainer = direction == \"right\" ? dropContainer.next() : dropContainer.prev();\n\n                                            if (futureContainer[0] != originalElement[0]) {\n                                                that._createDropHint({ order: newOrder, columnEnd: draggedItem.css(\"grid-column-end\"), rowEnd: draggedItem.css(\"grid-row-end\"), direction: direction });\n                                                originalElement.hide();\n                                                that._insertDropHint(dropContainer, direction);\n                                            }\n                                        }\n                                    }\n                                }\n                                hint.show();\n                            }\n                        },\n                        dragend: function(e) {\n                            document.body.style.cursor = \"auto\";\n\n                            if (!that.dropHint) {\n                                e.sender.hint.remove();\n                                that._removeDropHint();\n                                return;\n                            }\n\n                            var newOrder = parseInt(that.dropHint.css(\"order\"), 10);\n                            var container = e.currentTarget.closest(itemSelector);\n                            var items = that.element.find(itemSelector);\n                            var oldOrder = parseInt(container.css(\"order\"), 10);\n                            var itemId = container.attr(\"id\");\n                            var containers = that.element.children(\":visible\");\n                            var start;\n                            var end;\n                            var item;\n                            var direction;\n\n                            containers = that._sortContainers(containers);\n\n                            newOrder = containers.index(that.dropHint[0]);\n                            end = Math.max(newOrder, oldOrder);\n                            start = Math.min(newOrder, oldOrder);\n\n                            that.itemsMap[itemId].order = newOrder;\n\n                            direction = newOrder > oldOrder ? \"right\" : \"left\"; //this is direction of movement\n\n                            if (direction == \"left\") {\n                                end--;\n                            } else {\n                                start++;\n                            }\n\n                            for (var i = start; i <= end; i++) {\n                                item = items.filter(\"[\" + kendo.attr(\"index\") + \"='\" + i + \"']\");\n                                that.itemsMap[item.attr(\"id\")].order += direction == \"left\" ? 1 : -1;\n                            }\n\n                            container.show();\n\n                            that._updateContainers();\n\n                            e.sender.hint.remove();\n                            that._removeDropHint();\n\n                            if (that.options.navigatable) {\n                                that._updateDOM();\n                            }\n\n                            that.trigger(REORDER, {\n                                newIndex: newOrder,\n                                oldIndex: oldOrder,\n                                container: container\n                            });\n                        },\n                        dragcancel: function() {\n                            document.body.style.cursor = \"auto\";\n\n                            that._removeDropHint();\n\n                            if (originalElement) {\n                                originalElement.show();\n                            }\n                        }\n                    });\n\n                    element.find(itemSelector).kendoDropTarget({\n                        group: group,\n                        dragenter: function(e) {\n                            if (that._isresizing) {\n                                return;\n                            }\n                            var dropContainer = $(e.dropTarget);\n                            var target = that._draggableInstance.currentTarget.closest(itemSelector);\n                            var dropContainerBoundaries;\n                            var pixelsToLeftBorder;\n                            var pixelsToRightBorder;\n                            var futureContainer;\n                            var direction;\n\n                            if (originalElement[0] != dropContainer[0]) {\n\n                                dropContainerBoundaries = dropContainer[0].getBoundingClientRect();\n                                pixelsToLeftBorder = e.clientX - dropContainerBoundaries.left;\n                                pixelsToRightBorder = dropContainerBoundaries.right - e.clientX;\n                                direction = pixelsToLeftBorder > pixelsToRightBorder ? \"right\" : \"left\";\n\n                                futureContainer = direction == \"right\" ? dropContainer.next() : dropContainer.prev();\n\n                                //handle the case when the container will be shown over the original one\n                                if (futureContainer[0] == originalElement[0]) {\n                                    return;\n                                }\n\n                                that._removeDropHint();\n\n                                originalElement.hide();\n\n                                that._createDropHint({ order: dropContainer.css(\"order\"), columnEnd: target.css(\"grid-column-end\"), rowEnd: target.css(\"grid-row-end\"), direction: direction });\n\n                                originalElement.hide();\n                                that._insertDropHint(dropContainer, direction);\n                            }\n                        }\n                    });\n                }\n            });\n\n            function containsOrEqualTo(parent, child) {\n                try {\n                    return $.contains(parent, child) || parent == child;\n                } catch (e) {\n                    return false;\n                }\n            }\n\n            ui.plugin(TileLayout);\n\n            $.extend(true, TileLayout, { styles: tileLayoutStyles });\n        })(window.kendo.jQuery);\n    var kendo$1 = kendo;\n\n    exports.__meta__ = __meta__;\n    exports.default = kendo$1;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n\n}));\n"]}