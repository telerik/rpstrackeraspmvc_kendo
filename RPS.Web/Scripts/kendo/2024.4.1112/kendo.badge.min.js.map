{"version":3,"file":"kendo.badge.min.js","names":["global","factory","exports","module","require","define","amd","globalThis","self","kendo","_globals","Badge","this","$","undefined$1","window","Widget","ui","iconTemplate","icon","svgIconTemplate","extend","init","element","options","that","fn","call","_content","_appearance","notify","destroy","name","cutoutBorder","data","fillMode","max","Infinity","position","align","rounded","roundings","small","medium","large","full","sizes","size","template","text","themeColor","visible","_classNames","_text","_template","bind","html","_themeColor","_shape","shape","_sizes","_size","_fillMode","_rounded","_roundings","_cutoutBorder","_align","_position","_visible","_updateClassNames","classNames","keepClassNames","sizeAbbr","roundedAbbr","removeClass","index","className","indexOf","push","split","length","replace","addClass","join","setOptions","arguments","toString","iconTemplateFunction","_icon","color","hide","show","plugin","jQuery","kendo$1","__meta__","id","category","description","depends","default","Object","defineProperty","value"],"sources":["kendo.badge.js"],"mappings":"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","ignoreList":[],"sourcesContent":["(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('kendo.core.js'), require('kendo.icons.js')) :\n    typeof define === 'function' && define.amd ? define(['exports', 'kendo.core', 'kendo.icons'], factory) :\n    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory((global.kendo = global.kendo || {}, global.kendo._globals = global.kendo._globals || {}, global.kendo._globals.Badge = {})));\n})(this, (function (exports) {\n    const __meta__ = {\n        id: \"badge\",\n        name: \"Badge\",\n        category: \"web\", // suite\n        description: \"The Badge decorates avatars, navigation menus, or other components in the application when visual notification is needed\",\n        depends: [\"core\", \"icons\"] // dependencies\n    };\n\n    (function($, undefined$1) {\n        var kendo = window.kendo;\n        var Widget = kendo.ui.Widget;\n        var ui = kendo.ui;\n        var HIDDEN = 'k-hidden';\n\n        var iconTemplate = ({ icon }) => kendo.ui.icon($(`<span class='k-badge-icon'></span>`), { icon: icon });\n        var svgIconTemplate = ({ icon }) => `<span class='k-badge-icon k-svg-icon k-icon'>${icon}</span>`;\n\n        var Badge = Widget.extend({\n            init: function(element, options) {\n                var that = this;\n\n                Widget.fn.init.call(that, element, options);\n\n                that._content();\n\n                that._appearance();\n\n                kendo.notify(that);\n            },\n\n            destroy: function() {\n                var that = this;\n\n                Widget.fn.destroy.call(that);\n            },\n\n            options: {\n                name: 'Badge',\n                cutoutBorder: false,\n                data: {},\n                fillMode: 'solid',\n                icon: '',\n                max: Infinity,\n                position: 'inline',\n                align: '',\n                rounded: 'medium',\n                roundings: {\n                    'small': 'sm',\n                    'medium': 'md',\n                    'large': 'lg',\n                    'full': 'full'\n                },\n                sizes: {\n                    'small': 'sm',\n                    'medium': 'md',\n                    'large': 'lg'\n                },\n                size: 'medium',\n                template: null,\n                text: '',\n                themeColor: 'secondary',\n                visible: true,\n                _classNames: []\n            },\n\n            _content: function() {\n                var that = this;\n                var text = that.options.text;\n                var template = that.options.template;\n                var data = that.options.data;\n                var icon = that.options.icon;\n\n                // Order of precedence\n                // 1) template\n                // 2) icon\n                // 3) text\n                // 4) content\n\n                if (template !== null) {\n                    that._text = text;\n                    that._template = kendo.template(template).bind(that);\n                    that.element.html( that._template(data) );\n\n                    return;\n                }\n\n                if (icon !== '') {\n                    that.icon(icon);\n\n                    return;\n                }\n\n                if (text !== '') {\n                    that.text(text);\n\n                    return;\n                }\n\n                that.text(that.element.html());\n            },\n\n            _appearance: function() {\n                var that = this;\n                that._themeColor = that.options.themeColor;\n                that._shape = that.options.shape;\n                that._sizes = that.options.sizes;\n                that._size = that.options.size;\n                that._fillMode = that.options.fillMode;\n                that._rounded = that.options.rounded;\n                that._roundings = that.options.roundings;\n                that._cutoutBorder = that.options.cutoutBorder;\n                that._align = that.options.align;\n                that._position = that.options.position;\n                that._visible = that.options.visible;\n\n                that._updateClassNames();\n            },\n\n            _updateClassNames: function() {\n                var that = this;\n                var classNames = ['k-badge'];\n                var keepClassNames = that.options._classNames;\n                var themeColor = that._themeColor;\n                var shape = that._shape;\n                var sizes = that._sizes;\n                var size = that._size;\n                var sizeAbbr = sizes[size] === undefined$1 ? size : sizes[size];\n                var fillMode = that._fillMode;\n                var rounded = that._rounded;\n                var roundings = that._roundings;\n                var roundedAbbr = roundings[rounded] === undefined$1 ? rounded : roundings[rounded];\n                var cutoutBorder = that._cutoutBorder;\n                var align = that._align;\n                var position = that._position;\n                var visible = that._visible;\n\n                // Remove all class names\n                that.element.removeClass(function(index, className) {\n                    if (className.indexOf('k-') === 0 && keepClassNames.indexOf(className) === -1) {\n                        that.element.removeClass(className);\n                    }\n                });\n\n                // Fill\n                if (typeof fillMode === 'string' && fillMode !== '') {\n                    classNames.push('k-badge-' + fillMode);\n                }\n\n                // Color\n                if (typeof themeColor === 'string' && themeColor !== '') {\n                    classNames.push('k-badge-' + fillMode + '-' + themeColor);\n                }\n\n                // Size\n                if (typeof size === 'string' && size !== '') {\n                    classNames.push('k-badge-' + sizeAbbr);\n                }\n\n                // Rounded\n                if (typeof rounded === 'string' && rounded !== '') {\n                    classNames.push('k-rounded-' + roundedAbbr);\n                }\n\n                // Shape\n                if (typeof shape === 'string' && shape !== '') {\n                    classNames.push('k-badge-' + shape);\n                }\n\n                // Cutout border\n                if (typeof cutoutBorder === 'boolean' && cutoutBorder === true) {\n                    classNames.push('k-badge-border-cutout');\n                }\n\n                // Position\n                if (typeof position === 'string' && position !== '') {\n                    classNames.push('k-badge-' + position);\n                }\n\n                // Align\n                if (typeof position === 'string' && position !== '' && position !== 'inline' && typeof align === 'string' && align.split(' ').length == 2) {\n                    classNames.push('k-' + align.replace(' ', '-'));\n                }\n\n                // Visibility\n                if (visible === false) {\n                    classNames.push(HIDDEN);\n                }\n\n                // Apply classnames\n                that.element.addClass(classNames.join(' '));\n            },\n\n            setOptions: function(options) {\n                var that = this;\n\n                that.element.removeClass(function(index, className) {\n                    if (className.indexOf('k-') >= 0) {\n                        that.element.removeClass(className);\n                    }\n                });\n\n                Widget.fn.setOptions.call(that, options);\n\n                that._content();\n\n                that._appearance();\n            },\n\n            text: function(text) {\n                var that = this;\n                var max = that.options.max;\n\n                // handle badge.text()\n                if (arguments.length === 0 || text === undefined$1) {\n                    return that._text;\n                }\n\n                that._text = text;\n\n                // handle badge.text(true|false|null)\n                if (text === true || text === false || text === null) {\n                    that.element.html('');\n\n                    return;\n                }\n\n                // handle badge.text('string')\n                if (typeof text === 'string') {\n                    that.element.html(text);\n\n                    return;\n                }\n\n                // handle badge.text(1)\n                if (typeof text === 'number') {\n                    if (text > max) {\n                        that.element.html(max + '+');\n                    } else {\n                        that.element.html(text);\n                    }\n\n                    return;\n                }\n\n                // handle other objects\n                if (typeof text === 'object' && 'toString' in text) {\n                    that.element.html(text.toString());\n\n                    return;\n                }\n\n            },\n\n            icon: function(icon) {\n                var that = this;\n                var iconTemplateFunction;\n\n                // handle badge.icon()\n                if (arguments.length === 0 || icon === undefined$1) {\n                    return that._icon;\n                }\n\n                that._icon = icon;\n\n                // Handle badge.icon(<SVG />)\n                if (icon.indexOf('<svg') === 0) {\n                    iconTemplateFunction = kendo.template(svgIconTemplate);\n                    that.element.html(iconTemplateFunction({ icon: icon }));\n\n                    return;\n                }\n\n                // Handle badge.icon(ICON_NAME)\n                iconTemplateFunction = kendo.template(iconTemplate);\n                that.element.html(iconTemplateFunction({ icon: icon }));\n            },\n\n            themeColor: function(color) {\n                var that = this;\n\n                // handle badge.color()\n                if (arguments.length === 0 || color === undefined$1) {\n                    return that._themeColor;\n                }\n\n                that._themeColor = color;\n                that._updateClassNames();\n            },\n\n            rounded: function(rounded) {\n                var that = this;\n\n                // handle badge.shape()\n                if (arguments.length === 0 || rounded === undefined$1) {\n                    return that._rounded;\n                }\n\n                that._rounded = rounded;\n                that._updateClassNames();\n            },\n\n            hide: function() {\n                var that = this;\n                that._visible = false;\n\n                that._updateClassNames();\n            },\n\n            show: function() {\n                var that = this;\n                that._visible = true;\n\n                that._updateClassNames();\n            }\n        });\n\n        ui.plugin(Badge);\n\n    })(window.kendo.jQuery);\n    var kendo$1 = kendo;\n\n    exports.__meta__ = __meta__;\n    exports.default = kendo$1;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n\n}));\n"]}