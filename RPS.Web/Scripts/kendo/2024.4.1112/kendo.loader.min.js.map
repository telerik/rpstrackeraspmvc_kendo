{"version":3,"file":"kendo.loader.min.js","names":["global","factory","exports","module","require","define","amd","globalThis","self","kendo","_globals","Loader","this","$","undefined$1","window","Widget","ui","loaderClasses","loaderTypes","pulsing","className","segments","extend","init","element","options","that","fn","call","_render","_appearance","notify","destroy","name","themeColor","sizes","small","medium","large","size","type","visible","messages","loading","_classNames","wrapper","typeData","empty","attr","i","push","addClass","append","appendTo","_themeColor","_sizes","_size","_type","_visible","_updateClassNames","classNames","keepClassNames","sizeAbbr","removeClass","index","indexOf","isPlainObject","join","setOptions","color","arguments","length","hide","show","plugin","jQuery","kendo$1","__meta__","id","category","description","depends","default","Object","defineProperty","value"],"sources":["kendo.loader.js"],"mappings":"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","ignoreList":[],"sourcesContent":["(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('kendo.core.js')) :\n    typeof define === 'function' && define.amd ? define(['exports', 'kendo.core'], factory) :\n    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory((global.kendo = global.kendo || {}, global.kendo._globals = global.kendo._globals || {}, global.kendo._globals.Loader = {})));\n})(this, (function (exports) {\n    const __meta__ = {\n        id: \"loader\",\n        name: \"Loader\",\n        category: \"web\",\n        description: \"The Loader is a visual indicator of loading data across different parts of the page.\",\n        depends: [\"core\"]\n    };\n\n    (function($, undefined$1) {\n        var kendo = window.kendo,\n            Widget = kendo.ui.Widget,\n            ui = kendo.ui,\n\n            HIDDEN = 'k-hidden',\n            ROLE = 'role',\n            ARIA_LABEL = 'aria-label',\n            ARIA_HIDDEN = 'aria-hidden',\n            ARIA_LIVE = 'aria-live';\n\n        var loaderClasses = {\n            loader: \"k-loader\",\n            canvas: \"k-loader-canvas\",\n            segment: \"k-loader-segment\"\n        };\n\n        var loaderTypes = {\n            'pulsing': { className: 'pulsing-2', segments: 2 },\n            'infinite-spinner': { className: 'spinner-3', segments: 3 },\n            'converging-spinner': { className: 'spinner-4', segments: 4 }\n        };\n\n        var Loader = Widget.extend({\n            init: function(element, options) {\n                var that = this;\n\n                Widget.fn.init.call(that, element, options);\n\n                that._render();\n\n                that._appearance();\n\n                kendo.notify(that);\n            },\n\n            destroy: function() {\n                var that = this;\n\n                Widget.fn.destroy.call(that);\n            },\n\n            options: {\n                name: 'Loader',\n                themeColor: \"primary\",\n                sizes: {\n                    'small': 'sm',\n                    'medium': 'md',\n                    'large': 'lg'\n                },\n                size: 'medium',\n                type: \"pulsing\",\n                visible: true,\n                messages: {\n                    \"loading\": \"Loading\"\n                },\n                _classNames: []\n            },\n\n            _render: function() {\n                var that = this,\n                    wrapper = that.element,\n                    type = that.options.type,\n                    typeData = loaderTypes[type] === undefined$1 ? type : loaderTypes[type],\n                    segments = [];\n\n                wrapper\n                    .empty()\n                    .attr(ARIA_LABEL, that.options.messages.loading)\n                    .attr(ROLE, \"alert\")\n                    .attr(ARIA_LIVE, \"polite\");\n\n                if (typeData.segments) {\n                    for (var i = 0; i < typeData.segments; i += 1) {\n                        segments.push($('<span/>').addClass(loaderClasses.segment));\n                    }\n                }\n\n                $(\"<div>\").addClass(loaderClasses.canvas)\n                    .append(segments)\n                    .appendTo(wrapper);\n            },\n\n            _appearance: function() {\n                var that = this;\n\n                that._themeColor = that.options.themeColor;\n                that._sizes = that.options.sizes;\n                that._size = that.options.size;\n                that._type = that.options.type;\n                that._visible = that.options.visible;\n\n                that._updateClassNames();\n            },\n\n            _updateClassNames: function() {\n                var that = this,\n                    classNames = [loaderClasses.loader],\n                    keepClassNames = that.options._classNames,\n                    themeColor = that._themeColor,\n                    sizes = that._sizes,\n                    size = that._size,\n                    type = that._type,\n                    typeData = loaderTypes[type] === undefined$1 ? type : loaderTypes[type],\n                    sizeAbbr = sizes[size] === undefined$1 ? size : sizes[size],\n                    visible = that._visible;\n\n                // Remove all class names\n                that.element.removeClass(function(index, className) {\n                    if (className.indexOf('k-') === 0 && keepClassNames.indexOf(className) === -1) {\n                        that.element.removeClass(className);\n                    }\n                });\n\n                // Color\n                if (typeof themeColor === 'string' && themeColor !== '' && themeColor !== 'inherit') {\n                    classNames.push('k-loader-' + themeColor);\n                }\n\n                // Size\n                if (typeof size === 'string' && size !== '' && sizeAbbr !== '') {\n                    classNames.push('k-loader-' + sizeAbbr);\n                }\n\n                // Type\n                if (typeof type === 'string' && type !== '') {\n                    classNames.push('k-loader-' + ($.isPlainObject(typeData) ? typeData.className : type));\n                }\n\n                // Visibility\n                if (visible === false) {\n                    classNames.push(HIDDEN);\n                }\n\n                that.element.attr(ARIA_HIDDEN, !visible);\n\n                // Apply classnames\n                that.element.addClass(classNames.join(' '));\n            },\n\n            setOptions: function(options) {\n                var that = this;\n\n                Widget.fn.setOptions.call(that, options);\n\n                that._render();\n\n                that._appearance();\n            },\n\n            themeColor: function(color) {\n                var that = this;\n\n                if (arguments.length === 0 || color === undefined$1) {\n                    return that._themeColor;\n                }\n\n                that._themeColor = color;\n\n                that._updateClassNames();\n            },\n\n            hide: function() {\n                var that = this;\n\n                that._visible = false;\n\n                that._updateClassNames();\n            },\n\n            show: function() {\n                var that = this;\n\n                that._visible = true;\n\n                that._updateClassNames();\n            }\n        });\n\n        ui.plugin(Loader);\n\n    })(window.kendo.jQuery);\n    var kendo$1 = kendo;\n\n    exports.__meta__ = __meta__;\n    exports.default = kendo$1;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n\n}));\n"]}