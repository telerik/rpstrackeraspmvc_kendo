{"version":3,"file":"kendo.dateinput.min.js","names":["global","factory","exports","module","require","define","amd","globalThis","self","kendo","_globals","Dateinput","Core","Label","Icons","DateinputsCommonCmnChunk","this","kendo_core_js","kendo_label_js","kendo_icons_js","kendo_dateinputsCommon_cmn_chunk_js","$","undefined$1","window","ui","Widget","ns","objectToString","toString","isPlainObject","FOCUSED","STATEDISABLED","STATEINVALID","DISABLED","READONLY","CHANGE","IntlService","Class","extend","init","options","info","culture","getCulture","messages","cldr","name","calendar","numbers","numberFormat","parseDate","value","format","formatDate","date","splitDateFormat","dateFormatNames","locale","dateFieldName","type","buildKeys","cultureInfo","keys","push","calendars","standard","getCultureFormat","patterns","DateInput$1","element","that","fn","call","_extractFormat","d","min","attr","max","wrapperClass","parent","skipStyling","indexOf","initialValue","val","wrapper","wrap","addClass","className","removeClass","style","cssText","css","height","_validationIcon","icon","iconClass","insertAfter","_form","dateInputInstance","D","autoCorrectParts","autoSwitchKeys","length","enableMouseWheel","twoDigitYearMax","steps","formatPlaceholder","events","inputEnd","e","error","_blinkInvalidState","keydown","event","keyCode","UP","DOWN","setTimeout","trigger","preventDefault","blur","_change","intlService","autoSwitchParts","autoFill","_emptyMask","on","setAttribute","is","parents","enable","readonly","_applyCssClasses","label","_label","removeAttr","notify","autoAdjust","Date","year","month","day","weekday","hour","minute","second","milliseconds","dayperiod","size","millisecond","fillMode","rounded","setOptions","destroy","off","_formElement","_resetHandler","remove","getTime","writeValue","_oldValue","floatingLabel","refresh","_hasDateInput","_editable","disable","labelOptions","content","widget","floatCheck","document","activeElement","_inputLabel","_bindInput","bindEvents","_unbindInput","unbindEvents","removeAttribute","oldValue","_addInvalidState","clearTimeout","_invalidStateTimeout","_removeInvalidState","bind","formId","form","closest","_paste","cssProperties","registerPrefix","registerValues","prop","values","roundedValues","concat","plugin","jQuery","kendo$1","__meta__","id","category","description","depends","default","Object","defineProperty"],"sources":["kendo.dateinput.js"],"mappings":"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","ignoreList":[],"sourcesContent":["(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('kendo.core.js'), require('kendo.label.js'), require('kendo.icons.js'), require('kendo.dateinputs-common.cmn.chunk.js')) :\n    typeof define === 'function' && define.amd ? define(['exports', 'kendo.core', 'kendo.label', 'kendo.icons', 'kendo.dateinputs-common.cmn.chunk'], factory) :\n    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory((global.kendo = global.kendo || {}, global.kendo._globals = global.kendo._globals || {}, global.kendo._globals.Dateinput = {}), global.kendo._globals.Core, global.kendo._globals.Label, global.kendo._globals.Icons, global.kendo._globals.DateinputsCommonCmnChunk));\n})(this, (function (exports, kendo_core_js, kendo_label_js, kendo_icons_js, kendo_dateinputsCommon_cmn_chunk_js) {\n    const __meta__ = {\n        id: \"dateinput\",\n        name: \"DateInput\",\n        category: \"web\",\n        description: \"The DateInput widget allows to edit date by typing.\",\n        depends: [\"core\", \"label\", \"dateinputs-common.cmn.chunk\"]\n    };\n\n    (function($, undefined$1) {\n        var global = window;\n        var kendo = global.kendo;\n        var ui = kendo.ui;\n        var Widget = ui.Widget;\n        var ns = \".kendoDateInput\";\n        var objectToString = {}.toString;\n        var isPlainObject = $.isPlainObject;\n\n\n        var FOCUSED = \"k-focus\";\n        var STATEDISABLED = \"k-disabled\";\n        var STATEINVALID = \"k-invalid\";\n\n        var DISABLED = \"disabled\";\n        var READONLY = \"readonly\";\n        var CHANGE = \"change\";\n\n        var IntlService = kendo.Class.extend({\n            init: function(options) {\n                const info = options.culture ? kendo.getCulture(options.culture) : kendo.culture();\n                this.messages = options.messages;\n                this.cldr = { };\n                this.cldr[info.name] = {\n                    name: info.name,\n                    calendar: info.calendar || {},\n                    numbers: info.numberFormat\n                };\n            },\n\n            parseDate: function(value, format, culture) {\n                return kendo.parseDate(value, format, culture, true);\n            },\n\n            formatDate: function(date, format, culture) {\n                return kendo.toString(date, format, culture);\n            },\n\n            splitDateFormat: function(format) {\n                return kendo.date.splitDateFormat(format);\n            },\n\n            dateFormatNames: function(locale, options) {\n                return kendo.date.dateFormatNames(options);\n            },\n\n            dateFieldName: function(options) {\n                return this.messages[options.type] || {};\n            }\n        });\n\n        function buildKeys() {\n            const cultureInfo = kendo.culture();\n            let keys = [];\n\n            keys.push(cultureInfo.calendars.standard[\"/\"]);\n            keys.push(cultureInfo.calendars.standard[\":\"]);\n\n            return keys;\n        }\n\n        function getCultureFormat(culture, format) {\n            if (!culture) {\n                return format;\n            }\n            const cultureInfo = kendo.getCulture(culture);\n            return cultureInfo.calendars.standard.patterns[format] || format;\n        }\n\n        var DateInput$1 = Widget.extend({\n            init: function(element, options) {\n                var that = this;\n\n                Widget.fn.init.call(that, element, options);\n                element = that.element;\n\n                options = that.options;\n                options.format = kendo._extractFormat(options.format || kendo.getCulture(options.culture).calendars.standard.patterns.d);\n                options.min = kendo.parseDate(element.attr(\"min\")) || kendo.parseDate(options.min);\n                options.max = kendo.parseDate(element.attr(\"max\")) || kendo.parseDate(options.max);\n\n                var wrapperClass = (element.parent().attr(\"class\") || \"\");\n                var skipStyling = wrapperClass.indexOf(\"picker\") >= 0 && wrapperClass.indexOf(\"rangepicker\") < 0;\n                var initialValue = that.options.value || element.val();\n\n                if (skipStyling) {\n                    that.wrapper = that.element.parent();\n                } else {\n                    that.wrapper = element.wrap(\"<span class='k-dateinput k-input'></span>\").parent();\n                    that.wrapper.addClass(element[0].className).removeClass('input-validation-error');\n                }\n                that.wrapper[0].style.cssText = element[0].style.cssText;\n                element.css({\n                    height: element[0].style.height\n                });\n\n\n                that._validationIcon = $(kendo.ui.icon({ icon: \"exclamation-circle\", iconClass: \"k-input-validation-icon k-hidden\" })).insertAfter(element);\n\n                that._form();\n\n                that.dateInputInstance = new kendo_dateinputsCommon_cmn_chunk_js.D(element[0], {\n                    format: getCultureFormat(options.culture, options.format),\n                    autoCorrectParts: options.autoCorrectParts,\n                    autoSwitchKeys: options.autoSwitchKeys.length ? options.autoSwitchKeys : buildKeys(),\n                    enableMouseWheel: options.enableMouseWheel,\n                    twoDigitYearMax: options.twoDigitYearMax,\n                    steps: options.steps,\n                    formatPlaceholder: options.messages,\n                    events: {\n                        inputEnd: function(e) {\n                            if (e.error) {\n                                that._blinkInvalidState();\n                            }\n                        },\n                        keydown: function(e) {\n                            if (!e.event.keyCode) {\n                                e.preventDefault();\n                                return;\n                            }\n                            if (e.event.keyCode == kendo.keys.UP || e.event.keyCode == kendo.keys.DOWN) {\n                                setTimeout(function() {\n                                    that.element.trigger(CHANGE);\n                                });\n                            }\n                        },\n                        blur: function(e) {\n                            that._change();\n                            e.preventDefault();\n                        },\n                    },\n                    intlService: new IntlService({\n                        culture: options.culture,\n                        messages: that.options.messages\n                    }),\n                    autoSwitchParts: options.autoSwitchParts,\n                    autoFill: options.autoFill\n                });\n\n                that._emptyMask = this.element.val();\n                if (options.value) {\n                    that.value(options.value);\n                }\n\n                that.element\n                    .addClass(\"k-input-inner\")\n                    .attr(\"autocomplete\", \"off\")\n                    .on(\"focus\" + ns, function() {\n                        that.wrapper.addClass(FOCUSED);\n                    })\n                    .on(\"focusout\" + ns, function() {\n                        that.wrapper.removeClass(FOCUSED);\n                    });\n\n                try {\n                    element[0].setAttribute(\"type\", \"text\");\n                } catch (e) {\n                    element[0].type = \"text\";\n                }\n\n                var disabled = element.is(\"[disabled]\") || $(that.element).parents(\"fieldset\").is(':disabled');\n\n                if (disabled) {\n                    that.enable(false);\n                } else {\n                    that.readonly(element.is(\"[readonly]\"));\n                }\n                that.value(initialValue);\n                if (!skipStyling) {\n                    that._applyCssClasses();\n                }\n\n                if (options.label) {\n                    that._label();\n                }\n                that.element.removeAttr(\"style\");\n                kendo.notify(that);\n            },\n\n            options: {\n                name: \"DateInput\",\n                autoAdjust: true,\n                autoCorrectParts: true,\n                autoSwitchKeys: [],\n                autoSwitchParts: false,\n                enableMouseWheel: true,\n                culture: \"\",\n                value: \"\",\n                format: \"\",\n                min: new Date(1900, 0, 1),\n                max: new Date(2099, 11, 31),\n                messages: {\n                    \"year\": \"year\",\n                    \"month\": \"month\",\n                    \"day\": \"day\",\n                    \"weekday\": \"day of the week\",\n                    \"hour\": \"hours\",\n                    \"minute\": \"minutes\",\n                    \"second\": \"seconds\",\n                    \"milliseconds\": \"milliseconds\",\n                    \"dayperiod\": \"AM/PM\"\n                },\n                size: \"medium\",\n                steps: {\n                    year: 1,\n                    month: 1,\n                    day: 1,\n                    hour: 1,\n                    minute: 1,\n                    second: 1,\n                    millisecond: 1,\n                },\n                fillMode: \"solid\",\n                rounded: \"medium\",\n                label: null,\n                autoFill: false\n            },\n\n            events: [\n                CHANGE\n            ],\n\n            min: function(value) {\n                if (value !== undefined$1) {\n                    this.options.min = value;\n                } else {\n                    return this.options.min;\n                }\n            },\n\n            max: function(value) {\n                if (value !== undefined$1) {\n                    this.options.max = value;\n                } else {\n                    return this.options.max;\n                }\n            },\n\n            setOptions: function(options) {\n                var that = this;\n                Widget.fn.setOptions.call(that, options);\n                that.dateInputInstance.destroy();\n                that.dateInputInstance = null;\n\n                that.dateInputInstance = new kendo_dateinputsCommon_cmn_chunk_js.D(this.element[0], {\n                    format: getCultureFormat(that.options.culture, that.options.format),\n                    autoSwitchKeys: that.options.autoSwitchKeys.length ? that.options.autoSwitchKeys : buildKeys(),\n                    autoCorrectParts: that.options.autoCorrectParts,\n                    enableMouseWheel: that.options.enableMouseWheel,\n                    steps: that.options.steps,\n                    twoDigitYearMax: that.options.twoDigitYearMax,\n                    formatPlaceholder: that.options.messages,\n                    events: {\n                        inputEnd: function(e) {\n                            if (e.error) {\n                                that._blinkInvalidState();\n                            }\n                        },\n                        keydown: function(e) {\n                            if (e.event.keyCode == kendo.keys.UP || e.event.keyCode == kendo.keys.DOWN) {\n                                setTimeout(function() {\n                                    that.element.trigger(CHANGE);\n                                });\n                            }\n                        },\n                        blur: function(e) {\n                            that._change();\n                            e.preventDefault();\n                        },\n                    },\n                    intlService: new IntlService({\n                        culture: that.options.culture,\n                        messages: that.options.messages\n                    }),\n                    autoSwitchParts: that.options.autoSwitchParts,\n                    autoFill: that.options.autoFill\n                });\n            },\n\n            destroy: function() {\n                var that = this;\n                that.element.off(ns);\n                that.dateInputInstance.destroy();\n\n                if (that._formElement) {\n                    that._formElement.off(\"reset\", that._resetHandler);\n                }\n\n                if (that.label) {\n                    that.label.destroy();\n                }\n\n                if (that._validationIcon) {\n                    that._validationIcon.remove();\n                }\n\n                Widget.fn.destroy.call(that);\n            },\n\n            value: function(value) {\n                if (value === undefined$1) {\n                    return this.dateInputInstance.value;\n                }\n\n                if (value === null) {\n                    value = \"\";\n                }\n\n                if (objectToString.call(value) !== \"[object Date]\") {\n                    value = kendo.parseDate(value, this.options.format, this.options.culture);\n                }\n\n                if (value && !value.getTime()) {\n                    value = null;\n                }\n\n                this.dateInputInstance.writeValue(value);\n\n                this._oldValue = value;\n\n                if (this.label && this.label.floatingLabel) {\n                    this.label.floatingLabel.refresh();\n                }\n            },\n\n            _hasDateInput: function() {\n\n                return this._emptyMask !== this.element.val();\n            },\n\n            readonly: function(readonly) {\n                this._editable({\n                    readonly: readonly === undefined$1 ? true : readonly,\n                    disable: false\n                });\n\n                if (this.label && this.label.floatingLabel) {\n                    this.label.floatingLabel.readonly(readonly === undefined$1 ? true : readonly);\n                }\n            },\n\n            enable: function(enable) {\n                this._editable({\n                    readonly: false,\n                    disable: !(enable = enable === undefined$1 ? true : enable)\n                });\n\n                if (this.label && this.label.floatingLabel) {\n                    this.label.floatingLabel.enable(enable = enable === undefined$1 ? true : enable);\n                }\n            },\n\n            _label: function() {\n                var that = this;\n                var options = that.options;\n                var labelOptions = isPlainObject(options.label) ? options.label : {\n                    content: options.label\n                };\n\n                that.label = new kendo.ui.Label(null, $.extend({}, labelOptions, {\n                    widget: that,\n                    floatCheck: () => {\n                        if (!that.value() && (!that._hasDateInput() || that.element.val() === \"\") && document.activeElement !== that.element[0]) {\n                            this.element.val(\"\");\n                            return true;\n                        }\n\n                        return false;\n                    }\n                }));\n\n                that._inputLabel = that.label.element;\n            },\n\n            _bindInput: function() {\n                var that = this;\n                that.element\n                    .on(\"focus\" + ns, function() {\n                        that.wrapper.addClass(FOCUSED);\n                    })\n                    .on(\"focusout\" + ns, function() {\n                        that.wrapper.removeClass(FOCUSED);\n                    });\n\n                if (this.dateInputInstance) {\n                    this.dateInputInstance.bindEvents();\n                }\n            },\n\n            _unbindInput: function() {\n                this.element\n                    .off(\"focus\" + ns)\n                    .off(\"focusout\" + ns);\n\n                if (this.dateInputInstance) {\n                    this.dateInputInstance.unbindEvents();\n                }\n            },\n\n            _editable: function(options) {\n                var that = this;\n                var element = that.element;\n                var disable = options.disable;\n                var readonly = options.readonly;\n                var wrapper = that.wrapper;\n\n                that._unbindInput();\n\n                if (!readonly && !disable) {\n                    wrapper.removeClass(STATEDISABLED);\n                    if (element && element.length) {\n                        element[0].removeAttribute(DISABLED);\n                        element[0].removeAttribute(READONLY);\n                    }\n\n                    that._bindInput();\n                } else {\n                    if (disable) {\n                        wrapper.addClass(STATEDISABLED);\n                        element.attr(DISABLED, disable);\n                        if (element && element.length) {\n                            element[0].removeAttribute(READONLY);\n                        }\n                    }\n                    if (readonly) {\n                        element.attr(READONLY, readonly);\n                    }\n                }\n            },\n\n            _change: function() {\n                let that = this,\n                    oldValue = that._oldValue,\n                    value = that.value(),\n                    autoAdjust = that.options.autoAdjust;\n\n                if (autoAdjust && value && that.min() && value < that.min()) {\n                    that.value(that.min());\n                    value = that.value();\n                }\n                if (autoAdjust && value && that.max() && value > that.max()) {\n                    that.value(that.max());\n                    value = that.value();\n                }\n\n                if (oldValue && value && value.getTime() !== oldValue.getTime() ||\n                    oldValue && !value ||\n                    !oldValue && value\n                ) {\n                    that._oldValue = value;\n                    that.trigger(CHANGE, { blur: true });\n                    that.element.trigger(CHANGE);\n                }\n            },\n\n\n            _blinkInvalidState: function() {\n                var that = this;\n\n                that._addInvalidState();\n                clearTimeout(that._invalidStateTimeout);\n                that._invalidStateTimeout = setTimeout(that._removeInvalidState.bind(that), 100);\n            },\n\n            _addInvalidState: function() {\n                var that = this;\n\n                that.wrapper.addClass(STATEINVALID);\n                that._validationIcon.removeClass(\"k-hidden\");\n            },\n\n            _removeInvalidState: function() {\n                var that = this;\n\n                that.wrapper.removeClass(STATEINVALID);\n                that._validationIcon.addClass(\"k-hidden\");\n                that._invalidStateTimeout = null;\n            },\n\n\n            _form: function() {\n                var that = this;\n                var element = that.element;\n                var formId = element.attr(\"form\");\n                var form = formId ? $(\"#\" + formId) : element.closest(\"form\");\n                var initialValue = element[0].value;\n\n                if (!initialValue && that.options.value) {\n                    initialValue = that.options.value;\n                }\n\n                if (form[0]) {\n                    that._resetHandler = function() {\n                        setTimeout(function() {\n                            that.value(initialValue);\n                        });\n                    };\n\n                    that._formElement = form.on(\"reset\", that._resetHandler);\n                }\n            },\n\n            _paste: function(e) {\n                e.preventDefault();\n            },\n\n\n        });\n\n        kendo.cssProperties.registerPrefix(\"DateInput\", \"k-input-\");\n\n        kendo.cssProperties.registerValues(\"DateInput\", [{\n            prop: \"rounded\",\n            values: kendo.cssProperties.roundedValues.concat([['full', 'full']])\n        }]);\n\n        ui.plugin(DateInput$1);\n\n    })(window.kendo.jQuery);\n    var kendo$1 = kendo;\n\n    exports.__meta__ = __meta__;\n    exports.default = kendo$1;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n\n}));\n"]}