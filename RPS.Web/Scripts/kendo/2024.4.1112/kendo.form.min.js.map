{"version":3,"file":"kendo.form.min.js","names":["global","factory","exports","module","require","define","amd","globalThis","self","kendo","_globals","Form","this","$","window","ui","NS","Widget","extend","encode","htmlEncode","VALIDATE","VALIDATEFIELD","CHANGE","CLICK","SUBMIT","CLEAR","EQUAL_SET","GROUP","ARIA_DESCRIBEDBY","DATA_STOP","DATA_ROLE","DOT","formStyles","form","horizontal","vertical","field","fieldsContainer","fieldWrap","fieldError","fieldHint","fieldset","layout","legend","label","emptyLabel","optional","buttonsContainer","buttonsEnd","submit","clear","invalid","hidden","formOrientation","init","element","options","that","fn","call","deepExtend","formData","_wrapper","_setFields","_setModel","_renderContainers","renderButtons","_renderButtons","_editable","_renderBoolLabels","_renderFieldsHints","_setEvents","_applyCssClasses","events","name","orientation","validatable","validateOnBlur","validationSummary","errorTemplate","buttonsTemplate","messages","grid","items","formatLabel","focusFirst","size","_noLabelfieldTemplate","styles","colSpan","_fieldTemplate","id","encoded","text","_boolLabelTemplate","_groupTemplate","_errorTemplate","message","_hintTemplate","width","height","wrapper","addClass","css","layoutWrapper","_setupLayoutContainer","_flattenFields","fields","concat","item","shift","result","push","apply","_defaultLabel","fieldName","customFormat","length","isFunction","split","join","trim","_formatLabel","isPlainObject","_defaultFields","formDataFields","Object","keys","itemFields","defaultFormDataFields","i","fieldInfo","fieldValue","type","editor","attributes","defaultFields","_fields","parseDate","toString","Editable","editors","_isHidden","optionalText","isHidden","_isAntiForgeryToken","data","ObservableObject","_model","MyModel","Model","validatorOptions","_addEditableMvvmAttributes","editable","kendoEditable","model","clearContainer","skipFocus","target","getKendoEditable","validator","_removeEditableMvvmAttributes","attr","_getItemTemplate","antiForgeryTokenName","_renderField","fieldTemplate","isHorizontal","fieldType","isBoolField","template","_toggleFieldErrorState","state","closest","toggleClass","fieldElement","find","parent","after","fieldWidgetInstance","nextLabelElement","hint","_associateHintContainer","widgetInstance","next","_errorsByName","removeAttribute","insertAfter","input","hintId","nextFocusable","getWidgetFocusableElement","toggleAttribute","_toggleHint","_renderGroup","child","renderedGroup","append","container","targetContainer","_buttonsTemplate","buttons","kendoButton","themeColor","add","appendTarget","layoutContainer","layoutClassNames","appendTo","cols","bind","_validateField","_validate","on","_submit","_clear","_changeHandler","_change","ev","toJSON","valid","error","trigger","preventDefault","errors","value","jsonModel","validate","reset","unbind","isHiddenInput","is","val","hasClass","Upload","clearAllFiles","set","removeClass","_validateProxy","setOptions","newOptions","destroy","removeAttr","empty","off","cssProperties","registerPrefix","plugin","jQuery","kendo$1","__meta__","category","description","depends","features","default","defineProperty"],"sources":["kendo.form.js"],"mappings":"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","ignoreList":[],"sourcesContent":["(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('kendo.editable.js'), require('kendo.button.js')) :\n  typeof define === 'function' && define.amd ? define(['exports', 'kendo.editable', 'kendo.button'], factory) :\n  (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory((global.kendo = global.kendo || {}, global.kendo._globals = global.kendo._globals || {}, global.kendo._globals.Form = {})));\n})(this, (function (exports) {\n  const __meta__ = {\n          id: \"form\",\n          name: \"Form\",\n          category: \"web\",\n          description: \"The Form widget.\",\n          depends: [ \"editable\", \"button\" ],\n          features: [{\n              id: \"form-dropdowns\",\n              name: \"DropDowns\",\n              description: \"Support for DropDown editors\",\n              depends: [ \"autocomplete\", \"combobox\", \"multiselect\", \"dropdowntree\", \"multicolumncombobox\" ]\n          }, {\n              id: \"form-datepickers\",\n              name: \"DatePickers\",\n              description: \"Support for DatePicker editors\",\n              depends: [ \"dateinput\", \"datepicker\", \"datetimepicker\", \"timepicker\" ]\n          }, {\n              id: \"form-inputs\",\n              name: \"Inputs\",\n              description: \"Support for Input editors\",\n              depends: [ \"numerictextbox\", \"maskedtextbox\", \"switch\", \"rating\", \"slider\", \"colorpicker\", \"radiogroup\", \"checkboxgroup\", \"textbox\", \"textarea\", \"checkbox\" ]\n          }, {\n              id: \"form-editor\",\n              name: \"Editor\",\n              description: \"Support for Editor editor\",\n              depends: [ \"editor\" ]\n          }]\n      };\n\n      (function($, undefined$1) {\n          var kendo = window.kendo,\n              ui = kendo.ui,\n              NS = \".kendoForm\",\n              Widget = ui.Widget,\n              extend = $.extend,\n              encode = kendo.htmlEncode,\n              VALIDATE = \"validate\",\n              VALIDATEFIELD = \"validateField\",\n              VALIDATEINPUT = \"validateInput\",\n              CHANGE = \"change\",\n              CLICK = \"click\" + NS,\n              SUBMIT = \"submit\",\n              CLEAR = \"clear\",\n              MAX_WIDTH = \"max-width\",\n              SET = \"set\",\n              EQUAL_SET = \"equalSet\",\n              GROUP = \"group\",\n              ARIA_DESCRIBEDBY = \"aria-describedby\",\n              DATA_STOP = \"data-stop\",\n              DATA_ROLE = \"data-role\",\n              EDITABLE = \"editable\",\n              FORM = \"form\",\n              DOT = \".\",\n              DATA_ROLE_RADIO_GROUP = \"[data-role='radiogroup']\",\n              DATA_ROLE_CHECKBOX_GROUP = \"[data-role='checkboxgroup']\";\n\n          var formStyles = {\n              form: \"k-form\",\n              horizontal: \"k-form-horizontal\",\n              vertical: \"\",\n              field: \"k-form-field\",\n              fieldsContainer: \"k-form-fields-container\",\n              fieldWrap: \"k-form-field-wrap\",\n              fieldError: \"k-form-field-error\",\n              fieldHint: \"k-form-hint\",\n              fieldset: \"k-form-fieldset\",\n              layout: \"k-form-layout\",\n              legend: \"k-form-legend\",\n              label: \"k-label k-form-label\",\n              emptyLabel: \"k-label-empty\",\n              optional: \"k-label-optional\",\n              buttonsContainer: \"k-form-buttons\",\n              buttonsEnd: \"k-buttons-end\",\n              submit: \"k-form-submit\",\n              clear: \"k-form-clear\",\n              invalid: \"k-invalid\",\n              hidden: \"k-hidden\"\n          };\n\n          var formOrientation = {\n              horizontal: \"horizontal\",\n              vertical: \"vertical\"\n          };\n\n          var Form = Widget.extend({\n              init: function(element, options) {\n                  var that = this;\n\n                  Widget.fn.init.call(that, element, options);\n\n                  that.options = kendo.deepExtend({}, that.options, options);\n\n                  if (options && options.formData) {\n                      that.options.formData = options.formData;\n                  }\n\n                  that._wrapper();\n\n                  that._setFields();\n\n                  that._setModel();\n\n                  that._renderContainers();\n\n                  if (that.options.renderButtons) {\n                      that._renderButtons();\n                  }\n\n                  that._editable();\n\n                  that._renderBoolLabels();\n\n                  that._renderFieldsHints();\n\n                  that._setEvents();\n\n                  that._applyCssClasses();\n              },\n\n              events: [\n                  VALIDATEFIELD,\n                  VALIDATE,\n                  CHANGE,\n                  SUBMIT,\n                  CLEAR\n              ],\n\n              options: {\n                  name: \"Form\",\n                  orientation: formOrientation.vertical,\n                  validatable: {\n                      validateOnBlur: true,\n                      validationSummary: false,\n                      errorTemplate: null\n                  },\n                  buttonsTemplate: null,\n                  messages: {\n                      submit: \"Submit\",\n                      clear: \"Clear\",\n                      optional: \"(Optional)\"\n                  },\n                  layout: \"\",\n                  grid: {},\n                  formData: {},\n                  items: [],\n                  formatLabel: null,\n                  focusFirst: false,\n                  renderButtons: true,\n                  size: \"medium\"\n              },\n\n              _noLabelfieldTemplate: ({ styles, colSpan, hidden, field })=>\n                                      `<div class='${encode(styles.field)} ${colSpan ? `k-col-span-${encode(colSpan)}` : '' } ${hidden ? encode(styles.hidden) : '' }'>` +\n                                          `<span class='${encode(styles.label)} ${encode(styles.emptyLabel)}'></span>` +\n                                          `<div class='k-form-field-wrap' data-container-for='${encode(field)}'></div>` +\n                                      \"</div>\",\n\n              _fieldTemplate: ({ styles, colSpan, hidden, field, label, id, optional }) =>\n                              `<div class='${encode(styles.field)} ${colSpan ? `k-col-span-${encode(colSpan)}` : ''} ${hidden ? `${encode(styles.hidden)}` : ''}'>` +\n                                  ((label && !hidden) ?\n                                  `<label class='${encode(styles.label)}' for='${encode(id)}' id='${encode(id)}-form-label'>` +\n                                      ((typeof label.encoded != 'undefined' && label.encoded === false) ?\n                                      label.text || label\n                                      : encode(label.text || label)) +\n                                      (label.optional ? `<span class='${encode(styles.optional)}'>${encode(optional)}</span>` : '') +\n                                  \"</label>\"\n                                  : '' ) +\n                                  `<div class='k-form-field-wrap' data-container-for='${encode(field)}'></div>` +\n                              \"</div>\",\n\n              _boolLabelTemplate: ({ styles, colSpan, hidden, field, label, id, optional }) =>\n                              `<label class='k-checkbox-label' for='${encode(id)}' id='${encode(id)}-form-label'>` +\n                                  ((typeof label.encoded != 'undefined' && label.encoded === false) ?\n                                  label.text || label\n                                  : encode(label.text || label)) +\n                                  (label.optional ? `<span class='${encode(styles.optional)}'>${encode(optional)}</span>` : '') +\n                              \"</label>\",\n\n              _groupTemplate: ({ styles, colSpan, label }) =>\n                              `<fieldset class='${encode(styles.fieldset)} ${colSpan ? `k-col-span-${encode(colSpan)}` : ''}'>` +\n                                  `<legend class='${encode(styles.legend)}'>${encode(label.text || label)}</legend>` +\n                              \"</fieldset>\",\n\n              _errorTemplate: ({ field, message }) => `<span class='k-form-error' id='${field}-form-error'><div>${message}</div></span>`,\n\n              _hintTemplate: ({ id, message }) => `<div class='k-form-hint' id='${id}-form-hint'><span>${message}</span></div>`,\n\n              _wrapper: function() {\n                  var that = this,\n                      options = that.options,\n                      formStyles = Form.styles,\n                      width = options.width,\n                      height = options.height;\n\n                  that.wrapper = that.element\n                      .addClass(formStyles.form)\n                      .addClass(formStyles[options.orientation]);\n\n                  if (height) {\n                      that.wrapper.height(height);\n                  }\n\n                  if (width) {\n                      that.wrapper.css(MAX_WIDTH, width);\n                  }\n\n                  that.layoutWrapper = that._setupLayoutContainer(that.wrapper, {\n                      grid: options.grid,\n                      layout: options.layout\n                  });\n              },\n\n              _flattenFields: function(fields) {\n                  var items = [].concat(fields),\n                      item = items.shift(),\n                      result = [],\n                      push = [].push;\n\n                  while (item) {\n                      if (item.items) {\n                          push.apply(items, item.items);\n                      } else {\n                          push.call(result, item);\n                      }\n\n                      item = items.shift();\n                  }\n\n                  return result;\n              },\n\n              _defaultLabel: function(fieldName) {\n                  var that = this,\n                      customFormat = that.options.formatLabel;\n\n                  if (!fieldName.length) {\n                      return;\n                  }\n\n                  if (kendo.isFunction(customFormat)) {\n                      return customFormat(fieldName);\n                  }\n\n                  return fieldName.split(/(.*[a-z])(?=[A-Z])/).join(\" \").trim() + \":\";\n              },\n\n              _formatLabel: function(field, label) {\n                  var that = this,\n                      text = $.isPlainObject(label) ? label.text : label;\n\n                  if (text !== undefined$1) {\n                      return label;\n                  }\n\n                  return that._defaultLabel(field);\n              },\n\n              _defaultFields: function() {\n                  var that = this,\n                      options = that.options,\n                      formDataFields = Object.keys(options.formData || {}),\n                      itemFields = options.items || {},\n                      defaultFormDataFields = [],\n                      field;\n\n                  if (itemFields.length) {\n                      return itemFields;\n                  }\n\n                  for (var i = 0; i < formDataFields.length; i += 1) {\n                      field = formDataFields[i];\n\n                      defaultFormDataFields.push({\n                          field: field,\n                          id: field\n                      });\n                  }\n\n                  return defaultFormDataFields;\n              },\n\n              _setFields: function() {\n                  var that = this,\n                      defaultFields = that._flattenFields(that._defaultFields()),\n                      formData = that.options.formData || {},\n                      fieldInfo, fieldValue, type, editor, attributes;\n\n                  that._fields = [];\n\n                  for (var field in defaultFields) {\n                      fieldInfo = defaultFields[field];\n                      fieldValue = formData[fieldInfo.field];\n\n                      type = typeof fieldInfo.editor === \"string\" ? fieldInfo.editor :\n                          kendo.type(fieldValue ? kendo.parseDate(fieldValue.toString()) || fieldValue : fieldValue);\n\n                      editor = kendo.isFunction(fieldInfo.editor) ? fieldInfo.editor :\n                           ui.Editable.fn.options.editors[type] ? \"\" : fieldInfo.editor;\n\n                      if (!that._isHidden(fieldInfo.editor)) {\n                          if (fieldInfo.label) {\n                              attributes = {\n                                  \"aria-labelledby\": fieldInfo.id || fieldInfo.field + \"-form-label\"\n                              };\n                          } else if (!fieldInfo.attributes || !fieldInfo.attributes[\"aria-label\"]) {\n                              attributes = {\n                                  \"aria-label\": fieldInfo.name || fieldInfo.field\n                              };\n                          }\n                      }\n\n                      fieldInfo = extend(true, {\n                          label: fieldInfo.label || fieldInfo.name || fieldInfo.field,\n                          optionalText: that.options.messages.optional\n                      }, fieldInfo, {\n                          id: fieldInfo.id || fieldInfo.field,\n                          name: fieldInfo.name || fieldInfo.field,\n                          type: type,\n                          editor: editor,\n                          attributes: attributes,\n                          isHidden: that._isHidden(fieldInfo.editor) || that._isAntiForgeryToken(fieldInfo.name || fieldInfo.field)\n                      });\n\n                      that._fields[field] = fieldInfo;\n                  }\n              },\n\n              _setModel: function() {\n                  var that = this,\n                      options = that.options,\n                      formData = options.formData || {};\n\n                  if (options.formData instanceof kendo.data.ObservableObject) {\n                      that._model = formData;\n                      return;\n                  }\n\n                  var MyModel = kendo.data.Model.define({ fields: that._fields });\n\n                  that._model = new MyModel(formData);\n              },\n\n              _editable: function() {\n                  var that = this,\n                      options = that.options,\n                      validatorOptions = that.options.validatable;\n\n                  that._addEditableMvvmAttributes();\n\n                  that.editable = that.wrapper.kendoEditable({\n                      model: that._model,\n                      fields: that._fields || [],\n                      validateOnBlur: validatorOptions.validateOnBlur,\n                      validationSummary: validatorOptions.validationSummary,\n                      errorTemplate: validatorOptions.errorTemplate || that._errorTemplate,\n                      clearContainer: false,\n                      skipFocus: !options.focusFirst,\n                      target: that,\n                      size: options.size\n                  }).getKendoEditable();\n\n                  that.validator = that.editable.validatable;\n\n                  that._removeEditableMvvmAttributes();\n              },\n\n              _addEditableMvvmAttributes: function() {\n                  // required for two mvvm bindable widgets on one element\n                  this.wrapper.attr(DATA_ROLE, EDITABLE);\n              },\n\n              _removeEditableMvvmAttributes: function() {\n                  // required for two mvvm bindable widgets on one element\n                  this.wrapper\n                      .attr(DATA_STOP, true)\n                      .attr(DATA_ROLE, FORM);\n              },\n\n              _getItemTemplate: function(type) {\n                  var that = this,\n                      template;\n\n                  if (type === GROUP) {\n                      template = that._groupTemplate;\n                  } else {\n                      template = that._fieldTemplate;\n                  }\n\n                  return template;\n              },\n\n              _isHidden: function(editor) {\n                  return typeof editor === \"string\" && editor === \"hidden\";\n              },\n\n              _isAntiForgeryToken: function(field) {\n                  return field === ui.Editable.antiForgeryTokenName;\n\n              },\n\n              _renderField: function(item) {\n                  var that = this,\n                      formStyles = Form.styles,\n                      isHorizontal = that.options.orientation === formOrientation.horizontal,\n                      fieldType = that._model.fields && that._model.fields[item.field] && that._model.fields[item.field].type,\n                      isBoolField = fieldType && fieldType === \"boolean\",\n                      fieldTemplate, renderedField;\n\n                  if (isBoolField && isHorizontal && !item.editor) {\n                      fieldTemplate = that._noLabelfieldTemplate;\n                  } else {\n                      fieldTemplate = that._fieldTemplate;\n                  }\n\n                  renderedField = (kendo.template(fieldTemplate)({\n                      styles: formStyles,\n                      id: item.id || item.field || \"\",\n                      field: item.field || \"\",\n                      label: isBoolField && !item.editor ? null : that._formatLabel(item.field, item.label),\n                      colSpan: item.colSpan || \"\",\n                      optional: that.options.messages.optional,\n                      hidden: that._isHidden(item.editor) || that._isAntiForgeryToken(item.field)\n                  }));\n\n                  return renderedField;\n              },\n\n              _toggleFieldErrorState: function(element, state) {\n                  var field = element.closest(DOT + formStyles.field);\n\n                  if (field.length) {\n                      field.toggleClass(formStyles.fieldError, state);\n                  }\n              },\n\n              _renderBoolLabels: function() {\n                  var that = this,\n                      formStyles = Form.styles,\n                      fields = that._fields,\n                      field, fieldElement;\n\n                  for (var i = 0; i < fields.length; i += 1) {\n                      field = fields[i];\n                      fieldElement = that.wrapper.find(\"[name='\" + field.name + \"']:not([type='hidden'])\");\n\n                      if (!fieldElement || !field.label || field.isHidden || field.type !== \"boolean\" || field.editor) {\n                          continue;\n                      }\n\n                      fieldElement.parent().after(kendo.template(that._boolLabelTemplate)({\n                          styles: formStyles,\n                          id: field.id || field.field || \"\",\n                          optional: that.options.messages.optional,\n                          label: that._formatLabel(field.field, field.label)\n                      }));\n                  }\n              },\n\n              _renderFieldsHints: function() {\n                  var that = this,\n                      fields = that._fields,\n                      field, fieldWidgetInstance, fieldElement, nextLabelElement, hint;\n\n                  for (var i = 0; i < fields.length; i += 1) {\n                      field = fields[i];\n                      fieldElement = that.wrapper.find(`[name='${field.name}'],[id='${field.name}']`);\n\n                      if (!fieldElement || !field.hint || field.isHidden) {\n                          continue;\n                      }\n\n                      hint = $(kendo.template(that._hintTemplate)({ message: field.hint || \"\", id: field.id }));\n\n                      that._associateHintContainer(fieldElement, hint.attr(\"id\"));\n\n                      fieldWidgetInstance = kendo.widgetInstance(fieldElement);\n\n                      if (fieldWidgetInstance) {\n                          nextLabelElement = fieldWidgetInstance.element.next(\"label[for='\" + fieldWidgetInstance.element.attr(\"id\") + \"']\");\n                          fieldElement = nextLabelElement.length ? nextLabelElement : fieldWidgetInstance.wrapper;\n                      }\n\n                      if (that.validator._errorsByName(field.name).length) {\n                          hint.toggleClass(formStyles.hidden);\n                          kendo.removeAttribute(fieldElement, ARIA_DESCRIBEDBY, hint.attr(\"id\"));\n                      }\n\n                      hint.insertAfter(fieldElement);\n                  }\n              },\n\n              _associateHintContainer: function(input, hintId) {\n                  var nextFocusable = kendo.getWidgetFocusableElement(input);\n\n                  if (!nextFocusable || !hintId) {\n                      return;\n                  }\n\n                  kendo.toggleAttribute(nextFocusable, ARIA_DESCRIBEDBY, hintId);\n              },\n\n              _toggleHint: function(element, state) {\n                  var that = this,\n                      field = element.closest(DOT + formStyles.field),\n                      hint;\n\n                  if (field.length) {\n                      hint = field.find(DOT + formStyles.fieldHint);\n\n                      if (hint.length) {\n                          hint.toggleClass(formStyles.hidden, state);\n                          that._associateHintContainer(element, hint.attr(\"id\"));\n                      }\n                  }\n              },\n\n              _renderGroup: function(item) {\n                  var that = this,\n                      type = item.type,\n                      child, renderedGroup, fieldsContainer;\n\n                  fieldsContainer = renderedGroup = $(kendo.template(that._getItemTemplate(type))({\n                      styles: formStyles,\n                      label: item.label || \"\",\n                      colSpan: item.colSpan\n                  }));\n\n                  fieldsContainer = that._setupLayoutContainer(renderedGroup, {\n                      grid: item.grid,\n                      layout: item.layout\n                  }) || renderedGroup;\n\n                  for (var i = 0; i < item.items.length; i += 1) {\n                      child = item.items[i];\n                      fieldsContainer.append(that._renderField(child));\n                  }\n\n                  return renderedGroup;\n              },\n\n              _renderContainers: function() {\n                  var that = this,\n                      defaultFields = that._defaultFields(),\n                      columnsLayout = that.options.layout === \"grid\",\n                      targetContainer = columnsLayout ? that.layoutWrapper : that.wrapper,\n                      item, type, container;\n\n                  for (var i = 0; i < defaultFields.length; i += 1) {\n                      item = defaultFields[i];\n                      type = item.type;\n\n                      if (type === GROUP) {\n                          container = that._renderGroup(item);\n                      } else {\n                          container = that._renderField(item);\n                      }\n\n                      targetContainer.append(container);\n                  }\n              },\n\n              _buttonsTemplate: function() {\n                  var options = this.options,\n                      messages = options.messages,\n                      formStyles = Form.styles,\n                      buttons, submit, clear;\n\n                  if (options.buttonsTemplate !== null) {\n                      buttons = kendo.template(options.buttonsTemplate)({\n                          styles: formStyles,\n                          messages: messages\n                      });\n                  } else {\n                      submit = $(\"<button class='\" + formStyles.submit + \"'>\" + encode(messages.submit) + \"</button>\").kendoButton({\n                          type: \"submit\",\n                          themeColor: \"primary\",\n                          size: options.size\n                      });\n                      clear = $(\"<button class='\" + formStyles.clear + \"'>\" + encode(messages.clear) + \"</button>\").kendoButton({\n                          size: options.size\n                      });\n\n                      buttons = submit.add(clear);\n                  }\n\n                  return buttons;\n              },\n\n              _renderButtons: function() {\n                  var that = this,\n                      wrapper = that.wrapper,\n                      options = that.options,\n                      formStyles = Form.styles,\n                      isHorizontal = options.orientation === formOrientation.horizontal,\n                      buttonsContainer = wrapper.find(DOT + formStyles.buttonsContainer),\n                      buttons;\n\n                  if (!buttonsContainer.length) {\n                      buttonsContainer = $(\"<div />\")\n                          .addClass(formStyles.buttonsContainer)\n                          .addClass(isHorizontal ? formStyles.buttonsEnd : \"\");\n                  }\n\n                  buttons = that._buttonsTemplate();\n\n                  buttonsContainer.append(buttons);\n\n                  that.element.append(buttonsContainer);\n              },\n\n              _setupLayoutContainer: function(appendTarget, options) {\n                  var layout = options.layout,\n                      grid = options.grid,\n                      layoutClassNames = [],\n                      layoutContainer, rowsGap, colsGap;\n\n                  if (typeof layout === \"string\" && layout !== \"\") {\n                      layoutContainer = $(\"<div></div>\")\n                          .appendTo(appendTarget)\n                          .addClass(formStyles.layout);\n\n                      layoutClassNames.push(\"k-d-\" + layout);\n                  }\n\n                  if (layout === \"grid\" && typeof grid === \"object\") {\n                      if (typeof grid.cols === \"number\") {\n                          layoutClassNames.push(\"k-grid-cols-\" + grid.cols);\n                      } else if (typeof grid.cols === \"string\") {\n                          layoutContainer.css(\"grid-template-columns\", grid.cols);\n                      }\n\n                      layoutClassNames.push(\"k-gap-x-\" + grid.cols);\n                  }\n\n                  if (layoutContainer) {\n                      layoutContainer.addClass(layoutClassNames.join(\" \"));\n                  }\n\n                  return layoutContainer;\n              },\n\n              _setEvents: function() {\n                  var that = this,\n                      validator = that.validator;\n\n                  validator\n                      .bind(VALIDATEINPUT, that._validateField.bind(that))\n                      .bind(VALIDATE, that._validate.bind(that));\n\n                  that.wrapper\n                      .on(SUBMIT + NS, that._submit.bind(that))\n                      .on(CLEAR + NS, that._clear.bind(that))\n                      .on(CLICK + NS, DOT + formStyles.clear, that._clear.bind(that));\n\n                  if (!that._changeHandler) {\n                      that._changeHandler = that._change.bind(that);\n                  }\n\n                  that._model.bind(CHANGE, that._changeHandler);\n              },\n\n              _validateField: function(ev) {\n                  var that = this,\n                      data = {\n                          model: that._model.toJSON(),\n                          valid: ev.valid,\n                          field: ev.field,\n                          error: ev.error,\n                          input: ev.input\n                      };\n\n                  that._toggleFieldErrorState(data.input, !data.valid);\n\n                  that._toggleHint(data.input, !data.valid);\n\n                  if (that.trigger(VALIDATEFIELD, data)) {\n                      ev.preventDefault();\n                  }\n              },\n\n              _validate: function(ev) {\n                  var that = this,\n                      data = {\n                          model: that._model.toJSON(),\n                          valid: ev.valid,\n                          errors: ev.errors\n                      };\n\n                  that.trigger(VALIDATE, data);\n              },\n\n              _change: function(ev) {\n                  var that = this,\n                      field = ev.field,\n                      data = {\n                          field: field,\n                          value: that._model[field]\n                      };\n\n                  that.trigger(CHANGE, data);\n              },\n\n              _submit: function(ev) {\n                  var that = this,\n                      jsonModel = that._model.toJSON();\n\n                  if (that.trigger(SUBMIT, { model: jsonModel })) {\n                      ev.preventDefault();\n                  }\n              },\n\n              _clear: function(ev) {\n                  var that = this;\n\n                  ev.preventDefault();\n\n                  that.clear();\n\n                  that.trigger(CLEAR);\n              },\n\n              validate: function() {\n                  var that = this,\n                      validator = that.validator;\n\n                  if (!validator) {\n                      return;\n                  }\n\n                  return validator.validate();\n              },\n\n              clear: function() {\n                  var that = this,\n                      fields = that._fields,\n                      model = that._model,\n                      editable = that.editable,\n                      validateOnBlur = that.validator.options.validateOnBlur;\n\n                  that.validator.reset();\n\n                  if (validateOnBlur) {\n                      model\n                          .unbind(SET)\n                          .unbind(EQUAL_SET);\n                  }\n\n                  for (var i = 0; i < fields.length; i += 1) {\n                      var field = fields[i].field;\n                      var element = that.wrapper.find(\"[name='\" + field + \"']\");\n                      var widgetInstance = kendo.widgetInstance(element);\n                      var isHiddenInput = element.is(\"input[type=hidden]\");\n\n                      if (!element.is(DATA_ROLE_CHECKBOX_GROUP) && !element.is(DATA_ROLE_RADIO_GROUP) && !isHiddenInput) {\n                          element.val(\"\");\n                      }\n\n                      if (!widgetInstance && element.hasClass(\"k-hidden\")) {\n                          widgetInstance = kendo.widgetInstance(element.closest(\".k-signature\"));\n                      }\n\n                      if (widgetInstance) {\n                          if (kendo.ui.Upload && widgetInstance instanceof kendo.ui.Upload) {\n                              widgetInstance.clearAllFiles();\n                          } else {\n                              widgetInstance.value(null);\n                          }\n                      }\n\n                      that._toggleHint(element, false);\n\n                      if (typeof model[field] === \"boolean\") {\n                          element.val(\"false\");\n                          model.set(field, false);\n                      } else if (!isHiddenInput) {\n                          model.set(field, null);\n                      }\n                  }\n\n                  that.wrapper.find(DOT + formStyles.fieldError)\n                      .removeClass(formStyles.fieldError);\n\n                  if (validateOnBlur) {\n                      model\n                          .bind(SET, editable._validateProxy)\n                          .bind(EQUAL_SET, editable._validateProxy);\n                  }\n              },\n\n              setOptions: function(newOptions) {\n                  var that = this;\n\n                  that.destroy();\n\n                  that.wrapper\n                      .removeClass(formStyles.horizontal)\n                      .removeAttr(DATA_STOP)\n                      .empty();\n\n                  that.init(that.element, newOptions);\n              },\n\n              destroy: function() {\n                  var that = this;\n\n                  that.wrapper.off(NS);\n\n                  if (that._model) {\n                      that._model.unbind(CHANGE, that._changeHandler);\n                      that._changeHandler = null;\n                  }\n\n                  Widget.fn.destroy.call(that.editable);\n\n                  Widget.fn.destroy.call(that);\n\n                  if (that.editable) {\n                      that.editable.destroy();\n                      that.editable = null;\n                  }\n              }\n          });\n\n          kendo.cssProperties.registerPrefix(\"Form\", \"k-form-\");\n\n          ui.plugin(Form);\n\n          extend(true, Form, { styles: formStyles });\n\n    })(window.kendo.jQuery);\n  var kendo$1 = kendo;\n\n  exports.__meta__ = __meta__;\n  exports.default = kendo$1;\n\n  Object.defineProperty(exports, '__esModule', { value: true });\n\n}));\n"]}